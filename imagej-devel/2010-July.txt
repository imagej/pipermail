From eliceiri at facstaff.wisc.edu  Thu Jul  1 08:14:38 2010
From: eliceiri at facstaff.wisc.edu (Kevin W Eliceiri)
Date: Thu, 01 Jul 2010 08:14:38 -0500
Subject: [ImageJ-devel] Tomorrow's status report will be at 2pm
In-Reply-To: <AANLkTimRqt63rhKBqAzWH1HMOzERJYFGne4Tl9BSSdIG@mail.gmail.com>
References: <AANLkTimRqt63rhKBqAzWH1HMOzERJYFGne4Tl9BSSdIG@mail.gmail.com>
Message-ID: <7460867113a96.4c2c4e6e@wiscmail.wisc.edu>

We have reserved the penthouse of Bock Labs (take elevator to 8th floor and then stairs on left up to penthouse). We plan to start right at 2pm since have to be done by 3pm, so please get there a bit early. Curtis that room has large displays you can hook your laptop up to.

best,
k

On 06/30/10, Curtis Rueden  <ctrueden at wisc.edu> wrote:

> Hi everyone,
> 
> Due to scheduling issues, my status report tomorrow will take place at 2pm CDT (3pm EDT).
> 
> For those local, the room is still TBD, since all the usual conference rooms are booked all day.
> 
> -Curtis
> 
> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagejdev.org
> http://imagejdev.org/mailman/listinfo/imagej-devel
-- 
Kevin W. Eliceiri
Director
Laboratory for Optical and Computational Instrumentation
http://www.loci.wisc.edu
Room 271 Animal Sciences
1675 Observatory Drive
Madison, WI 53706
Phone: 608-263-6288
Fax: 608-262-4570



From ctrueden at wisc.edu  Wed Jul 14 17:23:29 2010
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 14 Jul 2010 17:23:29 -0500
Subject: [ImageJ-devel] Development session next Thursday
Message-ID: <AANLkTinqAc4DAJ-W3kENmlVQC73yE6U-yeGf9Wk16Mar@mail.gmail.com>

Hi everyone,

The ImageJDev team had spoken about having an all-day development session to
explore imglib integration with the current ImageJ codebase. As a start,
this would entail altering the ImageProcessor subclasses to use imglib as a
backing data store, but from there we would flesh out how to integrate the
library at a more fundamental level. This could include identifying key
areas of the code where references to ImageProcessor and/or ImagePlus would
be changed to mpicbg.imglib.image.Image, a class hierarchy which would
continue to support legacy code, and if time allows, beginning actual
development of such changes.

The original proposal was for this session to take place from 10am-4pm CDT
tomorrow (Thursday the 15th), with a break for lunch. However, due to a
number of scheduling conflicts, the current plan is to schedule for next
week, Thursday the 22nd. The session will include LOCI programmers as well
as Grant remotely. Later in the afternoon Kevin will join and we will
present our findings and accomplishments for the day.

In some ways the session is a sort of experiment to see if this kind of
collaborative design work is fruitful. If successful, we may schedule
additional sessions to tackle other aspects of the ImageJ refactoring, as
discussed in my recent presentation (which I will post on
imagejdev.orgwithin the next couple of days).

-Curtis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20100714/bd95748e/attachment.html>

From gharris at mbl.edu  Thu Jul 15 10:00:15 2010
From: gharris at mbl.edu (Grant B. Harris)
Date: Thu, 15 Jul 2010 11:00:15 -0400
Subject: [ImageJ-devel] API Extensibiliy
Message-ID: <4C3F227F.4030802@mbl.edu>

An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20100715/a9cabd43/attachment.html>

From Johannes.Schindelin at gmx.de  Thu Jul 15 10:59:55 2010
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 15 Jul 2010 17:59:55 +0200 (CEST)
Subject: [ImageJ-devel] API Extensibiliy
In-Reply-To: <4C3F227F.4030802@mbl.edu>
References: <4C3F227F.4030802@mbl.edu>
Message-ID: <alpine.DEB.1.00.1007151750390.2301@intel-tinevez-2-302>

Hi,

On Thu, 15 Jul 2010, Grant B. Harris wrote:

> I posted a page concerning the design of extensible APIs using the
> NetBeans Lookup API, if anyone is interested.

Just one word of caution: dependency hell is something very real, and it 
is very, very hard to get out of it. One project I used to participate in 
basically stalled because the only guy who knew all the technical details 
incurred by the many, many libraries (which had to be cutting edge, mind 
you, a current Ubuntu package would not do) went away.

Maybe it would be better to state what functionality you need, and in many 
cases I guarantee that you can provide a simple solution without depending 
on a 3rd party library.

Also do not underestimate the impact of starting to include libraries that 
are half the size of ij.jar itself. In no time you get an application that 
is huge, just like Fiji, and growing.

If you are in desperate need of some emails complaining about the size of 
your application, I can forward you some.

Just a word of caution (but a serious one),
Dscho




From gharris at mbl.edu  Wed Jul 21 22:44:48 2010
From: gharris at mbl.edu (Grant B. Harris)
Date: Wed, 21 Jul 2010 23:44:48 -0400
Subject: [ImageJ-devel] imglib - javadoc
Message-ID: <4C47BEB0.2050801@mbl.edu>

An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20100721/89061b05/attachment.html>

From Johannes.Schindelin at gmx.de  Thu Jul 22 03:32:41 2010
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 22 Jul 2010 10:32:41 +0200 (CEST)
Subject: [ImageJ-devel] imglib - javadoc
In-Reply-To: <4C47BEB0.2050801@mbl.edu>
References: <4C47BEB0.2050801@mbl.edu>
Message-ID: <alpine.DEB.1.00.1007221032070.2983@bonsai2>

Hi,

On Wed, 21 Jul 2010, Grant B. Harris wrote:

> I generated javadoc for the imglib for reference.? A link to it is on
> this page which I added to the Roadmap.

You can find the javadoc for all components we compile from source in Fiji 
at http://pacific.mpi-cbg.de/javadoc/

Ciao,
Dscho

From gharris at mbl.edu  Thu Jul 22 07:02:36 2010
From: gharris at mbl.edu (Grant B. Harris)
Date: Thu, 22 Jul 2010 08:02:36 -0400
Subject: [ImageJ-devel] imglib - javadoc
In-Reply-To: <alpine.DEB.1.00.1007221032070.2983@bonsai2>
References: <4C47BEB0.2050801@mbl.edu>
	<alpine.DEB.1.00.1007221032070.2983@bonsai2>
Message-ID: <4C48335C.5040200@mbl.edu>

  Thanks, Dscho,
I was not aware of it.  Do you know of a way to link directly to the 
imglib part of it (with Frames)?
- GBH

On 7/22/2010 4:32 AM, Johannes Schindelin wrote:
> Hi,
>
> On Wed, 21 Jul 2010, Grant B. Harris wrote:
>
>> I generated javadoc for the imglib for reference.  A link to it is on
>> this page which I added to the Roadmap.
> You can find the javadoc for all components we compile from source in Fiji
> at http://pacific.mpi-cbg.de/javadoc/
>
> Ciao,
> Dscho



From Johannes.Schindelin at gmx.de  Thu Jul 22 08:46:51 2010
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 22 Jul 2010 15:46:51 +0200 (CEST)
Subject: [ImageJ-devel] imglib - javadoc
In-Reply-To: <4C48335C.5040200@mbl.edu>
References: <4C47BEB0.2050801@mbl.edu>
	<alpine.DEB.1.00.1007221032070.2983@bonsai2>
	<4C48335C.5040200@mbl.edu>
Message-ID: <alpine.DEB.1.00.1007221545490.22064@intel-tinevez-2-302>

Hi,

On Thu, 22 Jul 2010, Grant B. Harris wrote:

> Do you know of a way to link directly to the imglib part of it (with 
> Frames)?

Unfortunately, no, I am not aware of a way to get a subset of the javadocs 
(except a single package).

Sorry!
Dscho



From ctrueden at wisc.edu  Fri Jul 23 15:25:43 2010
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 23 Jul 2010 15:25:43 -0500
Subject: [ImageJ-devel] Results from yesterday's imglib coding session
Message-ID: <AANLkTikw9ToCZi0Qhg7uxC=bp47RAWacJSfcGYx9iU_u@mail.gmail.com>

Hi everyone,

Yesterday the ImageJDev.org developers spent a few hours together,
attempting an initial integration of imglib with ImageJ.

We ended up (partially) implementing a new ImageProcessor subclass called
ImgLibProcessor that is backed by an mpicbg.imglib.image.Image<T extends
ComplexType<T>> object. This basic proof of concept is available from our
Git repository:

http://imagejdev.org/trac/imagej/changeset/3b073b3a34fae55c6e8aa0de9da210c54d558054

For those interested, the ij.process.ImgLibProcessor class has a main method
to test the functionality; the image used must be grayscale, and either a
single image or a Z-series, due to current limitations in imglib's LOCI
Bio-Formats image importer.

We also identified several next steps to take to further pursue this work:

1) Resolve the multichannel issue/limitations

2) Implement the many unimplemented imglib processor methods

3) Investigate the ImageStatistics subclasses?maybe create an analogous
ImgLibStatistics class?

4) Identify the places within ImageJ where type-specific case logic is used
  * Add a case for the new imglib backed structure at these locations

5) More generally, add getters/setters for all public fields throughout
ImageJ, to assist with delegation logic in the future

Overall, the coding session was a success?people felt like they learned
quite a bit?so we will probably do another one in 2-4 weeks, assuming we
have another appropriate topic.

-Curtis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20100723/4547ce8a/attachment.html>

From preibisch at mpi-cbg.de  Fri Jul 23 15:48:04 2010
From: preibisch at mpi-cbg.de (Stephan Preibisch)
Date: Fri, 23 Jul 2010 22:48:04 +0200
Subject: [ImageJ-devel] Results from yesterday's imglib coding session
In-Reply-To: <AANLkTikw9ToCZi0Qhg7uxC=bp47RAWacJSfcGYx9iU_u@mail.gmail.com>
References: <AANLkTikw9ToCZi0Qhg7uxC=bp47RAWacJSfcGYx9iU_u@mail.gmail.com>
Message-ID: <001901cb2aa8$58ed2540$0ac76fc0$@de>

Hi Curtis,

 

sorry, I somehow did not get that there was this session yesterday.

 

I had a look at the ImgLibProcessor and in general it looks good. I have
some comments what could be done more optimized. Should we go over it maybe
on Monday in a short Skype session? 

 

Nice greetings,

Steffi

 

From: imagej-devel-bounces at imagejdev.org
[mailto:imagej-devel-bounces at imagejdev.org] On Behalf Of Curtis Rueden
Sent: Friday, July 23, 2010 10:26 PM
To: Imagejdev.org Developers
Subject: [ImageJ-devel] Results from yesterday's imglib coding session

 

Hi everyone,

Yesterday the ImageJDev.org developers spent a few hours together,
attempting an initial integration of imglib with ImageJ.

We ended up (partially) implementing a new ImageProcessor subclass called
ImgLibProcessor that is backed by an mpicbg.imglib.image.Image<T extends
ComplexType<T>> object. This basic proof of concept is available from our
Git repository:

http://imagejdev.org/trac/imagej/changeset/3b073b3a34fae55c6e8aa0de9da210c54
d558054

For those interested, the ij.process.ImgLibProcessor class has a main method
to test the functionality; the image used must be grayscale, and either a
single image or a Z-series, due to current limitations in imglib's LOCI
Bio-Formats image importer.

We also identified several next steps to take to further pursue this work:

1) Resolve the multichannel issue/limitations

2) Implement the many unimplemented imglib processor methods

3) Investigate the ImageStatistics subclasses-maybe create an analogous
ImgLibStatistics class?

4) Identify the places within ImageJ where type-specific case logic is used
  * Add a case for the new imglib backed structure at these locations

5) More generally, add getters/setters for all public fields throughout
ImageJ, to assist with delegation logic in the future

Overall, the coding session was a success-people felt like they learned
quite a bit-so we will probably do another one in 2-4 weeks, assuming we
have another appropriate topic.

-Curtis

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20100723/b9a3512a/attachment.html>

From ctrueden at wisc.edu  Fri Jul 23 15:52:22 2010
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 23 Jul 2010 15:52:22 -0500
Subject: [ImageJ-devel] Results from yesterday's imglib coding session
In-Reply-To: <001901cb2aa8$58ed2540$0ac76fc0$@de>
References: <AANLkTikw9ToCZi0Qhg7uxC=bp47RAWacJSfcGYx9iU_u@mail.gmail.com> 
	<001901cb2aa8$58ed2540$0ac76fc0$@de>
Message-ID: <AANLkTi=Bg_XFRG5E0g0kfMkmjKo35hnfX4Uq94Oj+Ay2@mail.gmail.com>

Hi Stephan,

sorry, I somehow did not get that there was this session yesterday?
>

No worries; we weren't expecting you guys to attend. It went for several
hours, and a big part of it was for everybody here to learn about imglib, so
it probably would have been a bit boring for you. ;-)

I had a look at the ImgLibProcessor and in general it looks good. I have
> some comments what could be done more optimized. Should we go over it maybe
> on Monday in a short Skype session?
>

Great, discussing it briefly on Monday sounds good. We had some questions
for you as well (many noted as "TODO" in the code). How about 3pm Dresden
(8am Madison) time?

-Curtis

On Fri, Jul 23, 2010 at 3:48 PM, Stephan Preibisch <preibisch at mpi-cbg.de>wrote:

>  Hi Curtis,
>
>
>
> sorry, I somehow did not get that there was this session yesterday?
>
>
>
> I had a look at the ImgLibProcessor and in general it looks good. I have
> some comments what could be done more optimized. Should we go over it maybe
> on Monday in a short Skype session?
>
>
>
> Nice greetings,
>
> Steffi
>
>
>
> *From:* imagej-devel-bounces at imagejdev.org [mailto:
> imagej-devel-bounces at imagejdev.org] *On Behalf Of *Curtis Rueden
> *Sent:* Friday, July 23, 2010 10:26 PM
> *To:* Imagejdev.org Developers
> *Subject:* [ImageJ-devel] Results from yesterday's imglib coding session
>
>
>
> Hi everyone,
>
> Yesterday the ImageJDev.org developers spent a few hours together,
> attempting an initial integration of imglib with ImageJ.
>
> We ended up (partially) implementing a new ImageProcessor subclass called
> ImgLibProcessor that is backed by an mpicbg.imglib.image.Image<T extends
> ComplexType<T>> object. This basic proof of concept is available from our
> Git repository:
>
>
> http://imagejdev.org/trac/imagej/changeset/3b073b3a34fae55c6e8aa0de9da210c54d558054
>
> For those interested, the ij.process.ImgLibProcessor class has a main
> method to test the functionality; the image used must be grayscale, and
> either a single image or a Z-series, due to current limitations in imglib's
> LOCI Bio-Formats image importer.
>
> We also identified several next steps to take to further pursue this work:
>
> 1) Resolve the multichannel issue/limitations
>
> 2) Implement the many unimplemented imglib processor methods
>
> 3) Investigate the ImageStatistics subclasses?maybe create an analogous
> ImgLibStatistics class?
>
> 4) Identify the places within ImageJ where type-specific case logic is used
>   * Add a case for the new imglib backed structure at these locations
>
> 5) More generally, add getters/setters for all public fields throughout
> ImageJ, to assist with delegation logic in the future
>
> Overall, the coding session was a success?people felt like they learned
> quite a bit?so we will probably do another one in 2-4 weeks, assuming we
> have another appropriate topic.
>
> -Curtis
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20100723/31008bee/attachment.html>

From preibisch at mpi-cbg.de  Fri Jul 23 16:18:27 2010
From: preibisch at mpi-cbg.de (Stephan Preibisch)
Date: Fri, 23 Jul 2010 23:18:27 +0200
Subject: [ImageJ-devel] Results from yesterday's imglib coding session
In-Reply-To: <AANLkTi=Bg_XFRG5E0g0kfMkmjKo35hnfX4Uq94Oj+Ay2@mail.gmail.com>
References: <AANLkTikw9ToCZi0Qhg7uxC=bp47RAWacJSfcGYx9iU_u@mail.gmail.com>
	<001901cb2aa8$58ed2540$0ac76fc0$@de>
	<AANLkTi=Bg_XFRG5E0g0kfMkmjKo35hnfX4Uq94Oj+Ay2@mail.gmail.com>
Message-ID: <002801cb2aac$97e1cbd0$c7a56370$@de>

Sounds good to me! 

 

See you then,

Steffi

 

From: ctrueden.wisc at gmail.com [mailto:ctrueden.wisc at gmail.com] On Behalf Of
Curtis Rueden
Sent: Friday, July 23, 2010 10:52 PM
To: Stephan Preibisch
Cc: Imagejdev.org Developers
Subject: Re: [ImageJ-devel] Results from yesterday's imglib coding session

 

Hi Stephan,

sorry, I somehow did not get that there was this session yesterday.


No worries; we weren't expecting you guys to attend. It went for several
hours, and a big part of it was for everybody here to learn about imglib, so
it probably would have been a bit boring for you. ;-)

I had a look at the ImgLibProcessor and in general it looks good. I have
some comments what could be done more optimized. Should we go over it maybe
on Monday in a short Skype session?


Great, discussing it briefly on Monday sounds good. We had some questions
for you as well (many noted as "TODO" in the code). How about 3pm Dresden
(8am Madison) time?

-Curtis

On Fri, Jul 23, 2010 at 3:48 PM, Stephan Preibisch <preibisch at mpi-cbg.de>
wrote:

Hi Curtis,

 

sorry, I somehow did not get that there was this session yesterday.

 

I had a look at the ImgLibProcessor and in general it looks good. I have
some comments what could be done more optimized. Should we go over it maybe
on Monday in a short Skype session? 

 

Nice greetings,

Steffi

 

From: imagej-devel-bounces at imagejdev.org
[mailto:imagej-devel-bounces at imagejdev.org] On Behalf Of Curtis Rueden
Sent: Friday, July 23, 2010 10:26 PM
To: Imagejdev.org Developers
Subject: [ImageJ-devel] Results from yesterday's imglib coding session

 

Hi everyone,

Yesterday the ImageJDev.org developers spent a few hours together,
attempting an initial integration of imglib with ImageJ.

We ended up (partially) implementing a new ImageProcessor subclass called
ImgLibProcessor that is backed by an mpicbg.imglib.image.Image<T extends
ComplexType<T>> object. This basic proof of concept is available from our
Git repository:

http://imagejdev.org/trac/imagej/changeset/3b073b3a34fae55c6e8aa0de9da210c54
d558054

For those interested, the ij.process.ImgLibProcessor class has a main method
to test the functionality; the image used must be grayscale, and either a
single image or a Z-series, due to current limitations in imglib's LOCI
Bio-Formats image importer.

We also identified several next steps to take to further pursue this work:

1) Resolve the multichannel issue/limitations

2) Implement the many unimplemented imglib processor methods

3) Investigate the ImageStatistics subclasses-maybe create an analogous
ImgLibStatistics class?

4) Identify the places within ImageJ where type-specific case logic is used
  * Add a case for the new imglib backed structure at these locations

5) More generally, add getters/setters for all public fields throughout
ImageJ, to assist with delegation logic in the future

Overall, the coding session was a success-people felt like they learned
quite a bit-so we will probably do another one in 2-4 weeks, assuming we
have another appropriate topic.

-Curtis

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20100723/37f1e3a4/attachment.html>

