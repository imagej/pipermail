From gerrit.polder at wur.nl  Thu Jan  8 07:16:20 2015
From: gerrit.polder at wur.nl (Polder, Gerrit)
Date: Thu, 8 Jan 2015 13:16:20 +0000
Subject: [ImageJ-devel] plugin development for ImageJ2 or ImageJ1?
In-Reply-To: <B1FF25EC-7825-4FDF-A018-017E278DF693@nih.gov>
References: <IMAGEJ%201412200000287140.3746@LIST.NIH.GOV>
	<AD4E257A-38B0-46DB-ACE3-DBB97C22B41E@wur.nl>
	<B67F73EB-3C73-4E0B-90F0-A18677CD6F6F@wur.nl>
	<F2F92D58-D918-458B-BE30-2FC09A21CB95@nih.gov>
	<A1333F4B-328F-47FF-A21E-93A6B7BD9B9A@wur.nl>
	<B1FF25EC-7825-4FDF-A018-017E278DF693@nih.gov>
Message-ID: <02271277-BF89-481B-BD1F-EE62FD7019F9@wur.nl>

Dear Wayne,

I?m a little bit confused reading ImageJ2 is still in beta.

Im not a fulltime ImageJ user, but once and a while customers ask me to develop imaging software in ImageJ. Mainly I'm using Matlab and Halcon.
I?m spending about 4-8 weeks a year on ImageJ. My previous project was about a year ago.
Currently I need to update some features on one of my plugins, so given the fact that ImageJ2 reached the 2.0.0 stage in june last year, and also since it is the default ImageJ version in Fiji, as I already said I thought it would be worthwhile to convert it to the current ImageJ platform, in order to make it future proof.

So from your message I conclude that although my customer uses Fiji, I better stick to ImageJ1, in order not to provide him with a buggy plugin.

On the last two conferences I?v seen a lot of nice ImageJ2 and ImgLib features, and promises about availability.
Is there information available about ImageJ?s roadmap?

As you suggested I will send this message also to Imagej-devel, sorry for cross-posting.

best regards,
Gerrit.

On 8 Jan 2015, at 05:50, Rasband, Wayne (NIH/NIMH) [E] <rasbandw at mail.nih.gov> wrote:

> Dear Gerrit,
> 
>> On Jan 7, 2015, at 2:54 PM, Polder, Gerrit <gerrit.polder at wur.nl> wrote:
>> 
>> Dear Wayne,
>> 
>> thanks for the prompt reply, my question was indeed not clear stated.
>> Yes this is a ImageJ1 plugin, but since I need to add some functionality to it I thought it would be worthwhile to convert it to the current ImageJ platform, in order to make it future proof.
>> As ImageJ2 now is the production release I decided to give it a try.
> 
> ImageJ2 is not the production release. It is beta software. The two options in Fiji?s Edit>Option>ImageJ2 dialog (ImageJ2 data structures and SCIFIO) are disabled by default because they are buggy.
> 
>> Is it true that questions related to the development of user plugins should be addressed to imagej-devel?
> 
> Question related to development of ImageJ2 plugins, imglib2 and SCIFIO should be addressed to imagej-devel.
> 
>> I?m also curious about other plugin developers, how many still develop in ImageJ1, and how many switched already to ImageJ2?
> 
> Most developers are still writing ImageJ plugins.
> 
>> By the way I already found part of the problem. The Image I tested my plugin tryout on was an old ImageJ image, instead of a new dataset ?image?. After enabling the SCIFIO library I could input an image in my plugin.
>> But still I think need more documentation and examples, kind of ?guide for switchers?.
> 
> You should bring these issues up on the imagej-devel mailing list.
> 
> Best regards,
> 
> -wayne
> 
> 
>> On 7 jan. 2015, at 17:26, Rasband, Wayne (NIH/NIMH) [E] <rasbandw at mail.nih.gov<mailto:rasbandw at mail.nih.gov>> wrote:
>> 
>> Dear Polder,
>> 
>> Your plugin is not an ImageJ2 plugin. It is an ImageJ plugin that you can easily compile and run it using the Plugins>Compile and Run command. Questions about ImageJ2 and mavin should be sent to the image-dev mailing list.
>> 
>> http://imagej.net/mailman/listinfo/imagej-devel
>> 
>> Best regards,
>> 
>> -wayne
>> 
>> 
>> 
>> On Jan 7, 2015, at 10:40 AM, Polder, Gerrit <gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl>> wrote:
>> 
>> I succeeded in making a maven project, but I?m still struggling in finding demo code and the api for writing a simple plugin.
>> For instance how to code a pluginfiler in imagej2?
>> 
>> public class Get_blue_region implements PlugInFilter {
>> ImagePlus imp;
>> boolean DEBUG = false;
>> 
>> public int setup(String arg, ImagePlus imp) {
>>     this.imp = imp;
>>     if (arg.equals("about")) {
>>         showAbout();
>>         return DONE;
>>     }
>>     return DOES_RGB;
>> }
>> 
>> public void run(ImageProcessor ip) {
>>     ImagePlus calim = new ImagePlus("Blue Part", ip);
>>     ?????.
>> }
>> }
>> 
>> sorry if this is a silly question, but I got stuck in all wikis and github repositories.
>> 
>> Gerrit.
>> 
>> 
>> On 20 Dec 2014, at 19:11, Polder, Gerrit <gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl><mailto:gerrit.polder at wur.nl>> wrote:
>> 
>> thanks Mark, this is exactly where I was looking for.
>> 
>> Gerrit.
>> 
>> On 20 dec. 2014, at 06:00, IMAGEJ automatic digest system <LISTSERV at LIST.NIH.GOV<mailto:LISTSERV at LIST.NIH.GOV><mailto:LISTSERV at LIST.NIH.GOV>> wrote:
>> 
>> Hi Gerrit,
>> 
>> Now I like to switch to IJ2, I?m wondering whether there is an IJ2 example
>> project available.
>> 
>> The ImageJ-tutorials <https://github.com/imagej/imagej-tutorials> project
>> is the intended starting point for developers. There is also an accompanying
>> entry <http://imagej.net/Writing_ImageJ2_plugins> in the Development
>> <http://imagej.net/Development> section of the ImageJ wiki.
>> 
>> Thanks for the interest in ImageJ2 - let us know if you have any questions
>> or run into problems!
>> 
>> Best,
>> Mark
>> 
>> --
>> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
>> 
> 



From hiner at wisc.edu  Thu Jan  8 08:29:17 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 8 Jan 2015 08:29:17 -0600
Subject: [ImageJ-devel] plugin development for ImageJ2 or ImageJ1?
In-Reply-To: <02271277-BF89-481B-BD1F-EE62FD7019F9@wur.nl>
References: <IMAGEJ%201412200000287140.3746@LIST.NIH.GOV>
	<AD4E257A-38B0-46DB-ACE3-DBB97C22B41E@wur.nl>
	<B67F73EB-3C73-4E0B-90F0-A18677CD6F6F@wur.nl>
	<F2F92D58-D918-458B-BE30-2FC09A21CB95@nih.gov>
	<A1333F4B-328F-47FF-A21E-93A6B7BD9B9A@wur.nl>
	<B1FF25EC-7825-4FDF-A018-017E278DF693@nih.gov>
	<02271277-BF89-481B-BD1F-EE62FD7019F9@wur.nl>
Message-ID: <CA+B=mGrdmOKr4x7W_Vy-MLbvc9uKj--fSVibNn8diHSpN-J_sQ@mail.gmail.com>

Hi Gerrit,

>so given the fact that ImageJ2 reached the 2.0.0 stage in june last year,
and also since it is the default ImageJ version in Fiji

The ImageJ welcome page [1] describes each of Fiji, ImageJ 1.x and ImageJ2
in detail. But to clarify briefly, Fiji is a distribution of ImageJ - it
includes both ImageJ 1.x, and ImageJ2 (as well as a number of plugins).

>So from your message I conclude that although my customer uses Fiji, I
better stick to ImageJ1

Because Fiji ships both ImageJ 1.x and IJ2, it is capable of running
plugins for both. Since your client can use either, for production work
like it sounds you're doing, you should use the ImageJ 1.x API [2] due to
its stability. The ImageJ2 team is committed to backwards compatibility
with ImageJ 1.x [3], so your plugins should still work as ImageJ2 continues
to develop.

>Is there information available about ImageJ?s roadmap?

All our development happens on GitHub [4]. In particular, the base ImageJ
repository [5] provides a good view of issues and milestones.

>As you suggested I will send this message also to Imagej-devel, sorry for
cross-posting.

No worries at all. Per the mailing list descriptions [6], both of these
lists are perfectly appropriate for the scope of these discussions.

Hope this helps. Thanks for the questions - let us know if you have any
more!

Best,
Mark

[1] http://imagej.net/Welcome
[2] http://imagej.net/developer/api/index.html
[3]
http://imagej.net/Frequently_Asked_Questions#Will_ImageJ1_macros.2C_plugins_and_scripts_still_work_in_ImageJ2.3F
[4] http://imagej.net/Git
[5] https://github.com/imagej/imagej
[6] http://imagej.net/Mailing_lists

On Thu, Jan 8, 2015 at 7:16 AM, Polder, Gerrit <gerrit.polder at wur.nl> wrote:

> Dear Wayne,
>
> I?m a little bit confused reading ImageJ2 is still in beta.
>
> Im not a fulltime ImageJ user, but once and a while customers ask me to
> develop imaging software in ImageJ. Mainly I'm using Matlab and Halcon.
> I?m spending about 4-8 weeks a year on ImageJ. My previous project was
> about a year ago.
> Currently I need to update some features on one of my plugins, so given
> the fact that ImageJ2 reached the 2.0.0 stage in june last year, and also
> since it is the default ImageJ version in Fiji, as I already said I thought
> it would be worthwhile to convert it to the current ImageJ platform, in
> order to make it future proof.
>
> So from your message I conclude that although my customer uses Fiji, I
> better stick to ImageJ1, in order not to provide him with a buggy plugin.
>
> On the last two conferences I?v seen a lot of nice ImageJ2 and ImgLib
> features, and promises about availability.
> Is there information available about ImageJ?s roadmap?
>
> As you suggested I will send this message also to Imagej-devel, sorry for
> cross-posting.
>
> best regards,
> Gerrit.
>
> On 8 Jan 2015, at 05:50, Rasband, Wayne (NIH/NIMH) [E] <
> rasbandw at mail.nih.gov> wrote:
>
> > Dear Gerrit,
> >
> >> On Jan 7, 2015, at 2:54 PM, Polder, Gerrit <gerrit.polder at wur.nl>
> wrote:
> >>
> >> Dear Wayne,
> >>
> >> thanks for the prompt reply, my question was indeed not clear stated.
> >> Yes this is a ImageJ1 plugin, but since I need to add some
> functionality to it I thought it would be worthwhile to convert it to the
> current ImageJ platform, in order to make it future proof.
> >> As ImageJ2 now is the production release I decided to give it a try.
> >
> > ImageJ2 is not the production release. It is beta software. The two
> options in Fiji?s Edit>Option>ImageJ2 dialog (ImageJ2 data structures and
> SCIFIO) are disabled by default because they are buggy.
> >
> >> Is it true that questions related to the development of user plugins
> should be addressed to imagej-devel?
> >
> > Question related to development of ImageJ2 plugins, imglib2 and SCIFIO
> should be addressed to imagej-devel.
> >
> >> I?m also curious about other plugin developers, how many still develop
> in ImageJ1, and how many switched already to ImageJ2?
> >
> > Most developers are still writing ImageJ plugins.
> >
> >> By the way I already found part of the problem. The Image I tested my
> plugin tryout on was an old ImageJ image, instead of a new dataset ?image?.
> After enabling the SCIFIO library I could input an image in my plugin.
> >> But still I think need more documentation and examples, kind of ?guide
> for switchers?.
> >
> > You should bring these issues up on the imagej-devel mailing list.
> >
> > Best regards,
> >
> > -wayne
> >
> >
> >> On 7 jan. 2015, at 17:26, Rasband, Wayne (NIH/NIMH) [E] <
> rasbandw at mail.nih.gov<mailto:rasbandw at mail.nih.gov>> wrote:
> >>
> >> Dear Polder,
> >>
> >> Your plugin is not an ImageJ2 plugin. It is an ImageJ plugin that you
> can easily compile and run it using the Plugins>Compile and Run command.
> Questions about ImageJ2 and mavin should be sent to the image-dev mailing
> list.
> >>
> >> http://imagej.net/mailman/listinfo/imagej-devel
> >>
> >> Best regards,
> >>
> >> -wayne
> >>
> >>
> >>
> >> On Jan 7, 2015, at 10:40 AM, Polder, Gerrit <gerrit.polder at wur.nl
> <mailto:gerrit.polder at wur.nl>> wrote:
> >>
> >> I succeeded in making a maven project, but I?m still struggling in
> finding demo code and the api for writing a simple plugin.
> >> For instance how to code a pluginfiler in imagej2?
> >>
> >> public class Get_blue_region implements PlugInFilter {
> >> ImagePlus imp;
> >> boolean DEBUG = false;
> >>
> >> public int setup(String arg, ImagePlus imp) {
> >>     this.imp = imp;
> >>     if (arg.equals("about")) {
> >>         showAbout();
> >>         return DONE;
> >>     }
> >>     return DOES_RGB;
> >> }
> >>
> >> public void run(ImageProcessor ip) {
> >>     ImagePlus calim = new ImagePlus("Blue Part", ip);
> >>     ?????.
> >> }
> >> }
> >>
> >> sorry if this is a silly question, but I got stuck in all wikis and
> github repositories.
> >>
> >> Gerrit.
> >>
> >>
> >> On 20 Dec 2014, at 19:11, Polder, Gerrit <gerrit.polder at wur.nl<mailto:
> gerrit.polder at wur.nl><mailto:gerrit.polder at wur.nl>> wrote:
> >>
> >> thanks Mark, this is exactly where I was looking for.
> >>
> >> Gerrit.
> >>
> >> On 20 dec. 2014, at 06:00, IMAGEJ automatic digest system <
> LISTSERV at LIST.NIH.GOV<mailto:LISTSERV at LIST.NIH.GOV><mailto:
> LISTSERV at LIST.NIH.GOV>> wrote:
> >>
> >> Hi Gerrit,
> >>
> >> Now I like to switch to IJ2, I?m wondering whether there is an IJ2
> example
> >> project available.
> >>
> >> The ImageJ-tutorials <https://github.com/imagej/imagej-tutorials>
> project
> >> is the intended starting point for developers. There is also an
> accompanying
> >> entry <http://imagej.net/Writing_ImageJ2_plugins> in the Development
> >> <http://imagej.net/Development> section of the ImageJ wiki.
> >>
> >> Thanks for the interest in ImageJ2 - let us know if you have any
> questions
> >> or run into problems!
> >>
> >> Best,
> >> Mark
> >>
> >> --
> >> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
> >>
> >
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150108/791b806c/attachment-0001.html>

From ctrueden at wisc.edu  Thu Jan  8 13:57:19 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 8 Jan 2015 13:57:19 -0600
Subject: [ImageJ-devel] plugin development for ImageJ2 or ImageJ1?
In-Reply-To: <CA+B=mGrdmOKr4x7W_Vy-MLbvc9uKj--fSVibNn8diHSpN-J_sQ@mail.gmail.com>
References: <IMAGEJ%201412200000287140.3746@LIST.NIH.GOV>
	<AD4E257A-38B0-46DB-ACE3-DBB97C22B41E@wur.nl>
	<B67F73EB-3C73-4E0B-90F0-A18677CD6F6F@wur.nl>
	<F2F92D58-D918-458B-BE30-2FC09A21CB95@nih.gov>
	<A1333F4B-328F-47FF-A21E-93A6B7BD9B9A@wur.nl>
	<B1FF25EC-7825-4FDF-A018-017E278DF693@nih.gov>
	<02271277-BF89-481B-BD1F-EE62FD7019F9@wur.nl>
	<CA+B=mGrdmOKr4x7W_Vy-MLbvc9uKj--fSVibNn8diHSpN-J_sQ@mail.gmail.com>
Message-ID: <CADN69y=WTyYAG4vBvExoq8H3wXpDC7Gqz5TVR+HJCp7acgGxqQ@mail.gmail.com>

Hi Gerrit,

> I?m a little bit confused reading ImageJ2 is still in beta.

It is confusing because "ImageJ2" consists of more than one component --
some of which are still in beta, and some of which are not [1]. In each
case, the component's version number gives a hint [2].

In a nutshell: ImageJ2 is "in production" as an end-user application which
enhances ImageJ1, but ImageJ2's data model [3] and image I/O [4] libraries
are still under heavy development and not yet production quality.

> I thought it would be worthwhile to convert it to the current ImageJ
> platform, in order to make it future proof.

As Mark said, coding against ImageJ 1.x is the most future proof for now.
The ImageJ2 data model will be a good choice once it is more mature and has
reached version 1.0.0.

> I?v seen a lot of nice ImageJ2 and ImgLib features, and promises about
> availability.

If you want to start utilizing some of the new features sooner, two useful
components in particular are out of beta:

1. ImgLib2 [5] - powerful new N-dimensional data model

There are several Fiji plugins (e.g., [6]) that use ImgLib2 together with
the ImageJ1 data model; the imglib2-ij component [7] is useful for doing
this. (The difference between ImgLib2 and ImageJ2 is: ImgLib2 provides a
powerful underlying image data model, while ImageJ2 builds rich metadata
structures on top of it.)

2. SciJava Common [8] - powerful new plugin framework

There are several cool things you can do with SciJava Common -- e.g.,
define new plugin types, or write parameterized commands (e.g., [9],
[10]) usable from various applications such as ImageJ, KNIME, OMERO and
CellProfiler.

All the code is available on GitHub [11], and all the binaries are shipped
with Fiji [12].

Regards,
Curtis

[1] http://imagej.net/ImageJ2#ImageJ2_is_more_than_just_an_application
[2] http://imagej.net/Architecture#Versioning
[3] http://imagej.net/ImageJ_Common
[4] http://imagej.net/SCIFIO
[5] http://imagej.net/ImgLib2
[6] http://fiji.sc/Stitching
[7] https://github.com/imglib/imglib2-ij
[8] http://imagej.net/SciJava_Common
[9] http://git.io/zEx--w
[10] http://git.io/FapZcw
[11] http://imagej.net/Source_code
[12] http://fiji.sc/Downloads

On Thu, Jan 8, 2015 at 8:29 AM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Gerrit,
>
> >so given the fact that ImageJ2 reached the 2.0.0 stage in june last
> year, and also since it is the default ImageJ version in Fiji
>
> The ImageJ welcome page [1] describes each of Fiji, ImageJ 1.x and ImageJ2
> in detail. But to clarify briefly, Fiji is a distribution of ImageJ - it
> includes both ImageJ 1.x, and ImageJ2 (as well as a number of plugins).
>
> >So from your message I conclude that although my customer uses Fiji, I
> better stick to ImageJ1
>
> Because Fiji ships both ImageJ 1.x and IJ2, it is capable of running
> plugins for both. Since your client can use either, for production work
> like it sounds you're doing, you should use the ImageJ 1.x API [2] due to
> its stability. The ImageJ2 team is committed to backwards compatibility
> with ImageJ 1.x [3], so your plugins should still work as ImageJ2 continues
> to develop.
>
> >Is there information available about ImageJ?s roadmap?
>
> All our development happens on GitHub [4]. In particular, the base ImageJ
> repository [5] provides a good view of issues and milestones.
>
> >As you suggested I will send this message also to Imagej-devel, sorry
> for cross-posting.
>
> No worries at all. Per the mailing list descriptions [6], both of these
> lists are perfectly appropriate for the scope of these discussions.
>
> Hope this helps. Thanks for the questions - let us know if you have any
> more!
>
> Best,
> Mark
>
> [1] http://imagej.net/Welcome
> [2] http://imagej.net/developer/api/index.html
> [3]
> http://imagej.net/Frequently_Asked_Questions#Will_ImageJ1_macros.2C_plugins_and_scripts_still_work_in_ImageJ2.3F
> [4] http://imagej.net/Git
> [5] https://github.com/imagej/imagej
> [6] http://imagej.net/Mailing_lists
>
> On Thu, Jan 8, 2015 at 7:16 AM, Polder, Gerrit <gerrit.polder at wur.nl>
> wrote:
>
>> Dear Wayne,
>>
>> I?m a little bit confused reading ImageJ2 is still in beta.
>>
>> Im not a fulltime ImageJ user, but once and a while customers ask me to
>> develop imaging software in ImageJ. Mainly I'm using Matlab and Halcon.
>> I?m spending about 4-8 weeks a year on ImageJ. My previous project was
>> about a year ago.
>> Currently I need to update some features on one of my plugins, so given
>> the fact that ImageJ2 reached the 2.0.0 stage in june last year, and also
>> since it is the default ImageJ version in Fiji, as I already said I thought
>> it would be worthwhile to convert it to the current ImageJ platform, in
>> order to make it future proof.
>>
>> So from your message I conclude that although my customer uses Fiji, I
>> better stick to ImageJ1, in order not to provide him with a buggy plugin.
>>
>> On the last two conferences I?v seen a lot of nice ImageJ2 and ImgLib
>> features, and promises about availability.
>> Is there information available about ImageJ?s roadmap?
>>
>> As you suggested I will send this message also to Imagej-devel, sorry for
>> cross-posting.
>>
>> best regards,
>> Gerrit.
>>
>> On 8 Jan 2015, at 05:50, Rasband, Wayne (NIH/NIMH) [E] <
>> rasbandw at mail.nih.gov> wrote:
>>
>> > Dear Gerrit,
>> >
>> >> On Jan 7, 2015, at 2:54 PM, Polder, Gerrit <gerrit.polder at wur.nl>
>> wrote:
>> >>
>> >> Dear Wayne,
>> >>
>> >> thanks for the prompt reply, my question was indeed not clear stated.
>> >> Yes this is a ImageJ1 plugin, but since I need to add some
>> functionality to it I thought it would be worthwhile to convert it to the
>> current ImageJ platform, in order to make it future proof.
>> >> As ImageJ2 now is the production release I decided to give it a try.
>> >
>> > ImageJ2 is not the production release. It is beta software. The two
>> options in Fiji?s Edit>Option>ImageJ2 dialog (ImageJ2 data structures and
>> SCIFIO) are disabled by default because they are buggy.
>> >
>> >> Is it true that questions related to the development of user plugins
>> should be addressed to imagej-devel?
>> >
>> > Question related to development of ImageJ2 plugins, imglib2 and SCIFIO
>> should be addressed to imagej-devel.
>> >
>> >> I?m also curious about other plugin developers, how many still develop
>> in ImageJ1, and how many switched already to ImageJ2?
>> >
>> > Most developers are still writing ImageJ plugins.
>> >
>> >> By the way I already found part of the problem. The Image I tested my
>> plugin tryout on was an old ImageJ image, instead of a new dataset ?image?.
>> After enabling the SCIFIO library I could input an image in my plugin.
>> >> But still I think need more documentation and examples, kind of ?guide
>> for switchers?.
>> >
>> > You should bring these issues up on the imagej-devel mailing list.
>> >
>> > Best regards,
>> >
>> > -wayne
>> >
>> >
>> >> On 7 jan. 2015, at 17:26, Rasband, Wayne (NIH/NIMH) [E] <
>> rasbandw at mail.nih.gov<mailto:rasbandw at mail.nih.gov>> wrote:
>> >>
>> >> Dear Polder,
>> >>
>> >> Your plugin is not an ImageJ2 plugin. It is an ImageJ plugin that you
>> can easily compile and run it using the Plugins>Compile and Run command.
>> Questions about ImageJ2 and mavin should be sent to the image-dev mailing
>> list.
>> >>
>> >> http://imagej.net/mailman/listinfo/imagej-devel
>> >>
>> >> Best regards,
>> >>
>> >> -wayne
>> >>
>> >>
>> >>
>> >> On Jan 7, 2015, at 10:40 AM, Polder, Gerrit <gerrit.polder at wur.nl
>> <mailto:gerrit.polder at wur.nl>> wrote:
>> >>
>> >> I succeeded in making a maven project, but I?m still struggling in
>> finding demo code and the api for writing a simple plugin.
>> >> For instance how to code a pluginfiler in imagej2?
>> >>
>> >> public class Get_blue_region implements PlugInFilter {
>> >> ImagePlus imp;
>> >> boolean DEBUG = false;
>> >>
>> >> public int setup(String arg, ImagePlus imp) {
>> >>     this.imp = imp;
>> >>     if (arg.equals("about")) {
>> >>         showAbout();
>> >>         return DONE;
>> >>     }
>> >>     return DOES_RGB;
>> >> }
>> >>
>> >> public void run(ImageProcessor ip) {
>> >>     ImagePlus calim = new ImagePlus("Blue Part", ip);
>> >>     ?????.
>> >> }
>> >> }
>> >>
>> >> sorry if this is a silly question, but I got stuck in all wikis and
>> github repositories.
>> >>
>> >> Gerrit.
>> >>
>> >>
>> >> On 20 Dec 2014, at 19:11, Polder, Gerrit <gerrit.polder at wur.nl<mailto:
>> gerrit.polder at wur.nl><mailto:gerrit.polder at wur.nl>> wrote:
>> >>
>> >> thanks Mark, this is exactly where I was looking for.
>> >>
>> >> Gerrit.
>> >>
>> >> On 20 dec. 2014, at 06:00, IMAGEJ automatic digest system <
>> LISTSERV at LIST.NIH.GOV<mailto:LISTSERV at LIST.NIH.GOV><mailto:
>> LISTSERV at LIST.NIH.GOV>> wrote:
>> >>
>> >> Hi Gerrit,
>> >>
>> >> Now I like to switch to IJ2, I?m wondering whether there is an IJ2
>> example
>> >> project available.
>> >>
>> >> The ImageJ-tutorials <https://github.com/imagej/imagej-tutorials>
>> project
>> >> is the intended starting point for developers. There is also an
>> accompanying
>> >> entry <http://imagej.net/Writing_ImageJ2_plugins> in the Development
>> >> <http://imagej.net/Development> section of the ImageJ wiki.
>> >>
>> >> Thanks for the interest in ImageJ2 - let us know if you have any
>> questions
>> >> or run into problems!
>> >>
>> >> Best,
>> >> Mark
>> >>
>> >> --
>> >> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
>> >>
>> >
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150108/6d72f745/attachment.html>

From hadrien.mary at gmail.com  Thu Jan  8 14:18:48 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Thu, 8 Jan 2015 21:18:48 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
Message-ID: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>

Hi,

I am writing a python macro which iterate over all rois in ROI Manager
and then use setCropRegion function from bioformat plugin to open a
cropped region of an image.

I tried to use SCIFIO to write cropped image on disk but it doesn not work.

(I am using an updated version of Fiji.)

Here is my script:

from ij.plugin.frame import RoiManager
from ij import IJ
from io.scif.img import ImgSaver

from loci.plugins import BF
from loci.plugins.in import ImporterOptions
from loci.common import Region

import os

# Get current image filename
imp = IJ.getImage()
f = imp.getOriginalFileInfo()
fname = os.path.join(f.directory, f.fileName)

IJ.log('Image filename is %s' % fname)

# Iterate over all ROIs from ROI Manager
rois = RoiManager.getInstance().getRoisAsArray()
for i, roi in enumerate(rois):

    crop_id = i +1
    IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))

    bounds = roi.getBounds()

    x = bounds.x
    y = bounds.y
    w = bounds.width
    h = bounds.height

    # Import only cropped region of the image
    options = ImporterOptions()
    options.setCrop(True)
    options.setCropRegion(0, Region(x, y, w, h))
    options.setId(fname)
    imps = BF.openImagePlus(options)

    imp = imps[0]
    imp.show()

    crop_basename = "crop%i_%s" % (crop_id, f.fileName)
    crop_fname = os.path.join(f.directory, crop_basename)
    imp.setTitle(crop_basename)

    # Save image
    IJ.log("Saving crop to %s" % crop_fname)
    saver = ImgSaver()
    saver.saveImg(crop_basename, imp)

IJ.log('Done')

It fails with this error:

Traceback (most recent call last):
  File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
49, in <module>
    saver.saveImg(crop_basename, imp)
TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer, String

at org.python.core.Py.TypeError(Py.java:235)
at org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
at org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
at org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
at org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
at org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
at org.python.core.PyObject.__call__(PyObject.java:422)
at org.python.core.PyObject.__call__(PyObject.java:426)
at org.python.core.PyMethod.__call__(PyMethod.java:139)
at org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
at org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
at org.python.core.PyTableCode.call(PyTableCode.java:165)
at org.python.core.PyCode.call(PyCode.java:18)
at org.python.core.Py.runCode(Py.java:1275)
at org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
at org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
at java.util.concurrent.FutureTask.run(FutureTask.java:262)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at java.lang.Thread.run(Thread.java:745)

Three questions:

how can I write cropped image (I need to write them as OME Tiff so I
need BF or SCIFIO).
Is there is any ?easy? alternative to BF setCropRegion function in SCIFIO ?
I am currently using RoiManager.getInstance().getRoisAsArray() to
retrieve all rois. How can I directly get a ROIManager instance from
RoiSet.zip file ?

Any help would be very appreciated.

Thanks !

?
Hadrien Mary


From hadrien.mary at gmail.com  Thu Jan  8 14:22:40 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Thu, 8 Jan 2015 21:22:40 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
Message-ID: <CAEpSnnbkoP21aAWQtK-2aL-Fh-s+zVDw28-Y8Q84ncYPK9GUow@mail.gmail.com>

I currently use setCropRegion option from BF.openImagePlus but I take
any other option to crop image according to a roi instance. I didn't
find how to do that in python.

--
Hadrien Mary



On Thu, Jan 8, 2015 at 9:18 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> Hi,
>
> I am writing a python macro which iterate over all rois in ROI Manager
> and then use setCropRegion function from bioformat plugin to open a
> cropped region of an image.
>
> I tried to use SCIFIO to write cropped image on disk but it doesn not work.
>
> (I am using an updated version of Fiji.)
>
> Here is my script:
>
> from ij.plugin.frame import RoiManager
> from ij import IJ
> from io.scif.img import ImgSaver
>
> from loci.plugins import BF
> from loci.plugins.in import ImporterOptions
> from loci.common import Region
>
> import os
>
> # Get current image filename
> imp = IJ.getImage()
> f = imp.getOriginalFileInfo()
> fname = os.path.join(f.directory, f.fileName)
>
> IJ.log('Image filename is %s' % fname)
>
> # Iterate over all ROIs from ROI Manager
> rois = RoiManager.getInstance().getRoisAsArray()
> for i, roi in enumerate(rois):
>
>     crop_id = i +1
>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>
>     bounds = roi.getBounds()
>
>     x = bounds.x
>     y = bounds.y
>     w = bounds.width
>     h = bounds.height
>
>     # Import only cropped region of the image
>     options = ImporterOptions()
>     options.setCrop(True)
>     options.setCropRegion(0, Region(x, y, w, h))
>     options.setId(fname)
>     imps = BF.openImagePlus(options)
>
>     imp = imps[0]
>     imp.show()
>
>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>     crop_fname = os.path.join(f.directory, crop_basename)
>     imp.setTitle(crop_basename)
>
>     # Save image
>     IJ.log("Saving crop to %s" % crop_fname)
>     saver = ImgSaver()
>     saver.saveImg(crop_basename, imp)
>
> IJ.log('Done')
>
> It fails with this error:
>
> Traceback (most recent call last):
>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
> 49, in <module>
>     saver.saveImg(crop_basename, imp)
> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer, String
>
> at org.python.core.Py.TypeError(Py.java:235)
> at org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> at org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> at org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> at org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> at org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> at org.python.core.PyObject.__call__(PyObject.java:422)
> at org.python.core.PyObject.__call__(PyObject.java:426)
> at org.python.core.PyMethod.__call__(PyMethod.java:139)
> at org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> at org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> at org.python.core.PyCode.call(PyCode.java:18)
> at org.python.core.Py.runCode(Py.java:1275)
> at org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> at org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> at java.lang.Thread.run(Thread.java:745)
>
> Three questions:
>
> how can I write cropped image (I need to write them as OME Tiff so I
> need BF or SCIFIO).
> Is there is any ?easy? alternative to BF setCropRegion function in SCIFIO ?
> I am currently using RoiManager.getInstance().getRoisAsArray() to
> retrieve all rois. How can I directly get a ROIManager instance from
> RoiSet.zip file ?
>
> Any help would be very appreciated.
>
> Thanks !
>
> ?
> Hadrien Mary


From ctrueden at wisc.edu  Thu Jan  8 14:56:38 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 8 Jan 2015 14:56:38 -0600
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
Message-ID: <CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>

Hi Hadrien,

> I tried to use SCIFIO to write cropped image on disk but it doesn not
> work.

The error you see is because SCIFIO operates on ImgLib2 data structures,
not ImagePlus objects.

> Is there is any ?easy? alternative to BF setCropRegion function in
> SCIFIO ?

Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on it, then
pass it as an argument to the ImgOpener. You'll get back an ImgLib2 data
object which can then be fed to the SCIFIO ImgSaver.

I'm sorry that I don't have time to whip up an example for you right now.
It would be great to add more SCIFIO tutorials [2] that use the ImgOpener
and ImgSaver, since they are much higher level APIs akin to the Bio-Formats
"BF" functionality... please feel welcome to contribute some!

Regards,
Curtis

[1]
http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
[2] https://github.com/scifio/scifio-tutorials

On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:

> Hi,
>
> I am writing a python macro which iterate over all rois in ROI Manager
> and then use setCropRegion function from bioformat plugin to open a
> cropped region of an image.
>
> I tried to use SCIFIO to write cropped image on disk but it doesn not work.
>
> (I am using an updated version of Fiji.)
>
> Here is my script:
>
> from ij.plugin.frame import RoiManager
> from ij import IJ
> from io.scif.img import ImgSaver
>
> from loci.plugins import BF
> from loci.plugins.in import ImporterOptions
> from loci.common import Region
>
> import os
>
> # Get current image filename
> imp = IJ.getImage()
> f = imp.getOriginalFileInfo()
> fname = os.path.join(f.directory, f.fileName)
>
> IJ.log('Image filename is %s' % fname)
>
> # Iterate over all ROIs from ROI Manager
> rois = RoiManager.getInstance().getRoisAsArray()
> for i, roi in enumerate(rois):
>
>     crop_id = i +1
>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>
>     bounds = roi.getBounds()
>
>     x = bounds.x
>     y = bounds.y
>     w = bounds.width
>     h = bounds.height
>
>     # Import only cropped region of the image
>     options = ImporterOptions()
>     options.setCrop(True)
>     options.setCropRegion(0, Region(x, y, w, h))
>     options.setId(fname)
>     imps = BF.openImagePlus(options)
>
>     imp = imps[0]
>     imp.show()
>
>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>     crop_fname = os.path.join(f.directory, crop_basename)
>     imp.setTitle(crop_basename)
>
>     # Save image
>     IJ.log("Saving crop to %s" % crop_fname)
>     saver = ImgSaver()
>     saver.saveImg(crop_basename, imp)
>
> IJ.log('Done')
>
> It fails with this error:
>
> Traceback (most recent call last):
>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
> 49, in <module>
>     saver.saveImg(crop_basename, imp)
> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer, String
>
> at org.python.core.Py.TypeError(Py.java:235)
> at
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> at
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> at
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> at
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> at
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> at org.python.core.PyObject.__call__(PyObject.java:422)
> at org.python.core.PyObject.__call__(PyObject.java:426)
> at org.python.core.PyMethod.__call__(PyMethod.java:139)
> at
> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> at
> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> at org.python.core.PyCode.call(PyCode.java:18)
> at org.python.core.Py.runCode(Py.java:1275)
> at
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> at
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> at java.lang.Thread.run(Thread.java:745)
>
> Three questions:
>
> how can I write cropped image (I need to write them as OME Tiff so I
> need BF or SCIFIO).
> Is there is any ?easy? alternative to BF setCropRegion function in SCIFIO ?
> I am currently using RoiManager.getInstance().getRoisAsArray() to
> retrieve all rois. How can I directly get a ROIManager instance from
> RoiSet.zip file ?
>
> Any help would be very appreciated.
>
> Thanks !
>
> ?
> Hadrien Mary
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150108/996c57b8/attachment.html>

From ctrueden at wisc.edu  Thu Jan  8 15:19:51 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 8 Jan 2015 15:19:51 -0600
Subject: [ImageJ-devel] Blockmatching crashed
In-Reply-To: <F83CBA25-736D-41AB-8307-4DED2389412D@einstein.yu.edu>
References: <E92942F5-A762-4659-80AA-F6EDEBCBC056@einstein.yu.edu>
	<F83CBA25-736D-41AB-8307-4DED2389412D@einstein.yu.edu>
Message-ID: <CADN69ykXpMhGogG0c+8m0m-hssS7n0b0bT16ULtU=82XeoR1EQ@mail.gmail.com>

Hi Steffi,

> Something changed, it works now, the new version is there. I guess
> Curtis, you fixed it?

Nope, but I'm glad it is working now!

Regards,
Curtis

P.S. All the TrakEM2 components (https://github.com/trakem2) still need to
be reintegrated into the top-level Fiji repository (
https://github.com/fiji/fiji). After that, as discussed previously, we can
move away from needing to do manual uploads.


On Thu, Jan 8, 2015 at 8:36 AM, Stephan Preibisch <
stephan.preibisch at einstein.yu.edu> wrote:

>  Something changed, it works now, the new version is there. I guess
> Curtis, you fixed it? Thanks so much!!!
>
>  On Jan 8, 2015, at 12:26 , Stephan Preibisch <
> stephan.preibisch at einstein.yu.edu> wrote:
>
>  Hi Stephan, hi Curtis,
>
>  I was playing with Saalfeld?s block matching (Plugins > Feature
> Extraction > Extract Block Matching Correspondences) which was crashing
> because it was still compiled for the pre-release imglib2 thus not finding
> RealPointSampleList (2.0.0-SNAPSHOT version). I noticed that in the 2.0.2
> release (
> https://github.com/StephanPreibisch/blockmatching/commit/3408876467adf3d52f04d506e214ee9eba404348)
> everything was fixed already so I decided to upload it to the Fiji Uploader
> (sorry, maybe a bad decision ? but it seemed so easy to fix). Something
> went wrong during that upload. The updater said the upload succeeded but
> after a restart it still showed up as locally modified, the 2.0.0-SNAPSHOT
> version is still there. Now when I try to upload again this exception is
> thrown:
>
>  java.lang.RuntimeException: db.xml.gz was changed in the meantime (was
> 20150107160055 but now is 20150108113217)
> at net.imagej.updater.FilesUploader.verifyTimestamp(FilesUploader.java:403)
> at
> net.imagej.updater.FilesUploader$VerifyTimestamp.addItem(FilesUploader.java:338)
> at
> net.imagej.updater.util.AbstractProgressable.addItem(AbstractProgressable.java:75)
> at
> net.imagej.plugins.uploaders.webdav.WebDAVUploader.upload(WebDAVUploader.java:205)
> at net.imagej.updater.FilesUploader.upload(FilesUploader.java:260)
> at net.imagej.ui.swing.updater.UpdaterFrame.upload(UpdaterFrame.java:805)
> at net.imagej.ui.swing.updater.UpdaterFrame$5$1.run(UpdaterFrame.java:311)
>
>  I am really sorry for that, maybe simply my internet connection dropped
> during the upload?
>
>  Thanks for any help!
>
>  Cheers,
> Steffi
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150108/fe0a4f25/attachment-0001.html>

From hadrien.mary at gmail.com  Thu Jan  8 15:22:51 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Thu, 8 Jan 2015 22:22:51 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
Message-ID: <CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>

Thank you Curtis for the answer.

I tried to apply what you told me and the code now works without
error. However the saved cropped image is not cropped (same size as
original) and pixel values are modified).

Script:

from io.scif.config import SCIFIOConfig
from io.scif.img import ImageRegion
from io.scif.img import ImgOpener
from io.scif.img import ImgSaver

fname = "/home/hadim/original.ome.tif"
target = "/home/hadim/cropped.ome.tif"

config = SCIFIOConfig()
region = ImageRegion(dict(x=2, y=2, width=10, height=10))
config.imgOpenerSetRegion(region)

opener = ImgOpener()
imps = opener.openImgs(fname, config)
imp = imps[0]

print(imps)

saver = ImgSaver()
saver.saveImg(target, imp)

Thanks again for your time. Don't be sorry if you don't have time to
write an example.

I will be happy to provide some python/scifio examples scripts.


--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
> Hi Hadrien,
>
>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>> work.
>
> The error you see is because SCIFIO operates on ImgLib2 data structures, not
> ImagePlus objects.
>
>> Is there is any ?easy? alternative to BF setCropRegion function in
>> SCIFIO ?
>
> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on it, then
> pass it as an argument to the ImgOpener. You'll get back an ImgLib2 data
> object which can then be fed to the SCIFIO ImgSaver.
>
> I'm sorry that I don't have time to whip up an example for you right now. It
> would be great to add more SCIFIO tutorials [2] that use the ImgOpener and
> ImgSaver, since they are much higher level APIs akin to the Bio-Formats "BF"
> functionality... please feel welcome to contribute some!
>
> Regards,
> Curtis
>
> [1]
> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
> [2] https://github.com/scifio/scifio-tutorials
>
> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>>
>> Hi,
>>
>> I am writing a python macro which iterate over all rois in ROI Manager
>> and then use setCropRegion function from bioformat plugin to open a
>> cropped region of an image.
>>
>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>> work.
>>
>> (I am using an updated version of Fiji.)
>>
>> Here is my script:
>>
>> from ij.plugin.frame import RoiManager
>> from ij import IJ
>> from io.scif.img import ImgSaver
>>
>> from loci.plugins import BF
>> from loci.plugins.in import ImporterOptions
>> from loci.common import Region
>>
>> import os
>>
>> # Get current image filename
>> imp = IJ.getImage()
>> f = imp.getOriginalFileInfo()
>> fname = os.path.join(f.directory, f.fileName)
>>
>> IJ.log('Image filename is %s' % fname)
>>
>> # Iterate over all ROIs from ROI Manager
>> rois = RoiManager.getInstance().getRoisAsArray()
>> for i, roi in enumerate(rois):
>>
>>     crop_id = i +1
>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>
>>     bounds = roi.getBounds()
>>
>>     x = bounds.x
>>     y = bounds.y
>>     w = bounds.width
>>     h = bounds.height
>>
>>     # Import only cropped region of the image
>>     options = ImporterOptions()
>>     options.setCrop(True)
>>     options.setCropRegion(0, Region(x, y, w, h))
>>     options.setId(fname)
>>     imps = BF.openImagePlus(options)
>>
>>     imp = imps[0]
>>     imp.show()
>>
>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>     crop_fname = os.path.join(f.directory, crop_basename)
>>     imp.setTitle(crop_basename)
>>
>>     # Save image
>>     IJ.log("Saving crop to %s" % crop_fname)
>>     saver = ImgSaver()
>>     saver.saveImg(crop_basename, imp)
>>
>> IJ.log('Done')
>>
>> It fails with this error:
>>
>> Traceback (most recent call last):
>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
>> 49, in <module>
>>     saver.saveImg(crop_basename, imp)
>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer, String
>>
>> at org.python.core.Py.TypeError(Py.java:235)
>> at
>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> at
>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> at
>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> at
>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>> at
>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>> at org.python.core.PyObject.__call__(PyObject.java:422)
>> at org.python.core.PyObject.__call__(PyObject.java:426)
>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>> at
>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>> at
>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> at org.python.core.PyCode.call(PyCode.java:18)
>> at org.python.core.Py.runCode(Py.java:1275)
>> at
>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> at
>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> at java.lang.Thread.run(Thread.java:745)
>>
>> Three questions:
>>
>> how can I write cropped image (I need to write them as OME Tiff so I
>> need BF or SCIFIO).
>> Is there is any ?easy? alternative to BF setCropRegion function in SCIFIO
>> ?
>> I am currently using RoiManager.getInstance().getRoisAsArray() to
>> retrieve all rois. How can I directly get a ROIManager instance from
>> RoiSet.zip file ?
>>
>> Any help would be very appreciated.
>>
>> Thanks !
>>
>> ?
>> Hadrien Mary
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>
>


From ctrueden at wisc.edu  Thu Jan  8 15:45:33 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 8 Jan 2015 15:45:33 -0600
Subject: [ImageJ-devel] Materials from the ImageJ2 Scripting and Plug-In
	Workshop
In-Reply-To: <CABq4i1OCHt6-+vYLfST3Wcgzgr_F8O5ZCMDNZT=O0OFJb4HuUg@mail.gmail.com>
References: <CABq4i1OCHt6-+vYLfST3Wcgzgr_F8O5ZCMDNZT=O0OFJb4HuUg@mail.gmail.com>
Message-ID: <CADN69yn7S-kko=vXogKu0YK8vpL4XX0mG73__bkzUdLYBnu9+Q@mail.gmail.com>

Hi John,

[CCing imagej-devel list, as this discussion may interest others.]

> I was wondering if electronic copies of the presentation slides and
> support material were available. I learn best by example...

The best place to look for up-to-date ImageJ2 examples is:

    https://github.com/imagej/imagej-tutorials

Along with this wiki page:

    http://imagej.net/Writing_ImageJ2_plugins

The workshop materials are a couple of years old and would be potentially
misleading today.

> I have many of these working in ImageJ1 but would like to always have
> the option of fast, headless execution after prototype development. In
> ImageJ1, I end up having adapt a lot of the source code to make
> display optional. This  work is part of a larger plan to make my data
> analysis more reproducible.

Fantastic. The basic idea of ImageJ2 along those lines is to implement your
algorithms as parameterized commands, which declare their inputs and
outputs explicitly rather than relying on something like ImageJ1's
GenericDialog. Then they can be called from a variety of contexts.

That said, please understand that the ImageJ2 data model is still under
development. One relatively safe option would be to use the new
parameterized plugin and script framework, but stick to ImageJ1 data
structures (i.e., ij.* classes) for the time being. (E.g.: @Parameter
ImagePlus inputs)

Happy to assist if you have any further questions about it.

Regards,
Curtis

On Wed, Jan 7, 2015 at 8:33 PM, John Minter <jrminter at gmail.com> wrote:

> Hi Curtis,
>
> First let me thank you for your tireless work on Fiji/ImageJ. I noticed
> that you were the co-author with Johannes Schindelin (who I understand is
> on sabbatical) on the ImageJ2 Scripting and Plug-In Workshop. The link to
> the support material here:
> http://imagejconf.tudor.lu/program/workshops/johannes_schindelin1298323641
> does not work. I was wondering if electronic copies of the presentation
> slides and support material were available. I learn best by example...
>
> I have had some success in developing Jython scripts for ImageJ1 but would
> like to transition to ImageJ2. My goal is to process series of images for
> several applications (e.g. particle sizing and montaging images from X-ray
> EDS maps with custom hue lookup tables.) I have many of these working in
> ImageJ1 but would like to always have the option of fast, headless
> execution after prototype development. In ImageJ1, I end up having adapt a
> lot of the source code to make display optional. This  work is part of a
> larger plan to make my data analysis more reproducible. The basic idea
> would be to be able to reproduce an analysis from a make file.
>
> Thanks again,
> John Minter
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150108/1cb2bd24/attachment.html>

From hadrien.mary at gmail.com  Thu Jan  8 16:47:34 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Thu, 8 Jan 2015 23:47:34 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
Message-ID: <CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>

After some investigations, I'm pretty sure I don't instanciate
ImageRegion correctly. Doc and source code didn't help me... I would
like to be able to crop a region in X and Y while keeping any other
dimensions which could exist (C, Z, T).

--
Hadrien Mary



On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> Thank you Curtis for the answer.
>
> I tried to apply what you told me and the code now works without
> error. However the saved cropped image is not cropped (same size as
> original) and pixel values are modified).
>
> Script:
>
> from io.scif.config import SCIFIOConfig
> from io.scif.img import ImageRegion
> from io.scif.img import ImgOpener
> from io.scif.img import ImgSaver
>
> fname = "/home/hadim/original.ome.tif"
> target = "/home/hadim/cropped.ome.tif"
>
> config = SCIFIOConfig()
> region = ImageRegion(dict(x=2, y=2, width=10, height=10))
> config.imgOpenerSetRegion(region)
>
> opener = ImgOpener()
> imps = opener.openImgs(fname, config)
> imp = imps[0]
>
> print(imps)
>
> saver = ImgSaver()
> saver.saveImg(target, imp)
>
> Thanks again for your time. Don't be sorry if you don't have time to
> write an example.
>
> I will be happy to provide some python/scifio examples scripts.
>
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>> Hi Hadrien,
>>
>>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>>> work.
>>
>> The error you see is because SCIFIO operates on ImgLib2 data structures, not
>> ImagePlus objects.
>>
>>> Is there is any ?easy? alternative to BF setCropRegion function in
>>> SCIFIO ?
>>
>> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on it, then
>> pass it as an argument to the ImgOpener. You'll get back an ImgLib2 data
>> object which can then be fed to the SCIFIO ImgSaver.
>>
>> I'm sorry that I don't have time to whip up an example for you right now. It
>> would be great to add more SCIFIO tutorials [2] that use the ImgOpener and
>> ImgSaver, since they are much higher level APIs akin to the Bio-Formats "BF"
>> functionality... please feel welcome to contribute some!
>>
>> Regards,
>> Curtis
>>
>> [1]
>> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>> [2] https://github.com/scifio/scifio-tutorials
>>
>> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>>>
>>> Hi,
>>>
>>> I am writing a python macro which iterate over all rois in ROI Manager
>>> and then use setCropRegion function from bioformat plugin to open a
>>> cropped region of an image.
>>>
>>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>>> work.
>>>
>>> (I am using an updated version of Fiji.)
>>>
>>> Here is my script:
>>>
>>> from ij.plugin.frame import RoiManager
>>> from ij import IJ
>>> from io.scif.img import ImgSaver
>>>
>>> from loci.plugins import BF
>>> from loci.plugins.in import ImporterOptions
>>> from loci.common import Region
>>>
>>> import os
>>>
>>> # Get current image filename
>>> imp = IJ.getImage()
>>> f = imp.getOriginalFileInfo()
>>> fname = os.path.join(f.directory, f.fileName)
>>>
>>> IJ.log('Image filename is %s' % fname)
>>>
>>> # Iterate over all ROIs from ROI Manager
>>> rois = RoiManager.getInstance().getRoisAsArray()
>>> for i, roi in enumerate(rois):
>>>
>>>     crop_id = i +1
>>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>>
>>>     bounds = roi.getBounds()
>>>
>>>     x = bounds.x
>>>     y = bounds.y
>>>     w = bounds.width
>>>     h = bounds.height
>>>
>>>     # Import only cropped region of the image
>>>     options = ImporterOptions()
>>>     options.setCrop(True)
>>>     options.setCropRegion(0, Region(x, y, w, h))
>>>     options.setId(fname)
>>>     imps = BF.openImagePlus(options)
>>>
>>>     imp = imps[0]
>>>     imp.show()
>>>
>>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>>     crop_fname = os.path.join(f.directory, crop_basename)
>>>     imp.setTitle(crop_basename)
>>>
>>>     # Save image
>>>     IJ.log("Saving crop to %s" % crop_fname)
>>>     saver = ImgSaver()
>>>     saver.saveImg(crop_basename, imp)
>>>
>>> IJ.log('Done')
>>>
>>> It fails with this error:
>>>
>>> Traceback (most recent call last):
>>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
>>> 49, in <module>
>>>     saver.saveImg(crop_basename, imp)
>>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer, String
>>>
>>> at org.python.core.Py.TypeError(Py.java:235)
>>> at
>>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>> at
>>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>> at
>>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>> at
>>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>> at
>>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>> at org.python.core.PyObject.__call__(PyObject.java:422)
>>> at org.python.core.PyObject.__call__(PyObject.java:426)
>>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>>> at
>>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>> at
>>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>> at org.python.core.PyCode.call(PyCode.java:18)
>>> at org.python.core.Py.runCode(Py.java:1275)
>>> at
>>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>> at
>>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>> at
>>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>> at
>>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>> at java.lang.Thread.run(Thread.java:745)
>>>
>>> Three questions:
>>>
>>> how can I write cropped image (I need to write them as OME Tiff so I
>>> need BF or SCIFIO).
>>> Is there is any ?easy? alternative to BF setCropRegion function in SCIFIO
>>> ?
>>> I am currently using RoiManager.getInstance().getRoisAsArray() to
>>> retrieve all rois. How can I directly get a ROIManager instance from
>>> RoiSet.zip file ?
>>>
>>> Any help would be very appreciated.
>>>
>>> Thanks !
>>>
>>> ?
>>> Hadrien Mary
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>


From ctrueden at wisc.edu  Thu Jan  8 17:09:00 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 8 Jan 2015 17:09:00 -0600
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
Message-ID: <CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>

Hi Hadrien,

> I would like to be able to crop a region in X and Y while
> keeping any other dimensions which could exist (C, Z, T).

Here's some Java:

    int minX = 128, maxX = 255, minY = 128, minY = 255;
    AxisType[] axes = { Axes.X, Axes.Y };
    String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
    config.imgOpenerSetRegion(new ImageRegion(axes, ranges));

Adapted from here:
https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191

And untested.

HTH,
Curtis

On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:

> After some investigations, I'm pretty sure I don't instanciate
> ImageRegion correctly. Doc and source code didn't help me... I would
> like to be able to crop a region in X and Y while keeping any other
> dimensions which could exist (C, Z, T).
>
> --
> Hadrien Mary
>
>
>
> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> > Thank you Curtis for the answer.
> >
> > I tried to apply what you told me and the code now works without
> > error. However the saved cropped image is not cropped (same size as
> > original) and pixel values are modified).
> >
> > Script:
> >
> > from io.scif.config import SCIFIOConfig
> > from io.scif.img import ImageRegion
> > from io.scif.img import ImgOpener
> > from io.scif.img import ImgSaver
> >
> > fname = "/home/hadim/original.ome.tif"
> > target = "/home/hadim/cropped.ome.tif"
> >
> > config = SCIFIOConfig()
> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
> > config.imgOpenerSetRegion(region)
> >
> > opener = ImgOpener()
> > imps = opener.openImgs(fname, config)
> > imp = imps[0]
> >
> > print(imps)
> >
> > saver = ImgSaver()
> > saver.saveImg(target, imp)
> >
> > Thanks again for your time. Don't be sorry if you don't have time to
> > write an example.
> >
> > I will be happy to provide some python/scifio examples scripts.
> >
> >
> > --
> > Hadrien Mary
> >
> > Ph.D student in Biology
> > Tournier-Gachet Team
> > CNRS - LBCMCP - UMR 5088
> >
> > Universit? de Toulouse - B?t. 4R3B1
> > 118, route de Narbonne - 31062 Toulouse
> >
> >
> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
> >> Hi Hadrien,
> >>
> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
> >>> work.
> >>
> >> The error you see is because SCIFIO operates on ImgLib2 data
> structures, not
> >> ImagePlus objects.
> >>
> >>> Is there is any ?easy? alternative to BF setCropRegion function in
> >>> SCIFIO ?
> >>
> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on it,
> then
> >> pass it as an argument to the ImgOpener. You'll get back an ImgLib2 data
> >> object which can then be fed to the SCIFIO ImgSaver.
> >>
> >> I'm sorry that I don't have time to whip up an example for you right
> now. It
> >> would be great to add more SCIFIO tutorials [2] that use the ImgOpener
> and
> >> ImgSaver, since they are much higher level APIs akin to the Bio-Formats
> "BF"
> >> functionality... please feel welcome to contribute some!
> >>
> >> Regards,
> >> Curtis
> >>
> >> [1]
> >>
> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
> >> [2] https://github.com/scifio/scifio-tutorials
> >>
> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> >>>
> >>> Hi,
> >>>
> >>> I am writing a python macro which iterate over all rois in ROI Manager
> >>> and then use setCropRegion function from bioformat plugin to open a
> >>> cropped region of an image.
> >>>
> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
> >>> work.
> >>>
> >>> (I am using an updated version of Fiji.)
> >>>
> >>> Here is my script:
> >>>
> >>> from ij.plugin.frame import RoiManager
> >>> from ij import IJ
> >>> from io.scif.img import ImgSaver
> >>>
> >>> from loci.plugins import BF
> >>> from loci.plugins.in import ImporterOptions
> >>> from loci.common import Region
> >>>
> >>> import os
> >>>
> >>> # Get current image filename
> >>> imp = IJ.getImage()
> >>> f = imp.getOriginalFileInfo()
> >>> fname = os.path.join(f.directory, f.fileName)
> >>>
> >>> IJ.log('Image filename is %s' % fname)
> >>>
> >>> # Iterate over all ROIs from ROI Manager
> >>> rois = RoiManager.getInstance().getRoisAsArray()
> >>> for i, roi in enumerate(rois):
> >>>
> >>>     crop_id = i +1
> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
> >>>
> >>>     bounds = roi.getBounds()
> >>>
> >>>     x = bounds.x
> >>>     y = bounds.y
> >>>     w = bounds.width
> >>>     h = bounds.height
> >>>
> >>>     # Import only cropped region of the image
> >>>     options = ImporterOptions()
> >>>     options.setCrop(True)
> >>>     options.setCropRegion(0, Region(x, y, w, h))
> >>>     options.setId(fname)
> >>>     imps = BF.openImagePlus(options)
> >>>
> >>>     imp = imps[0]
> >>>     imp.show()
> >>>
> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
> >>>     crop_fname = os.path.join(f.directory, crop_basename)
> >>>     imp.setTitle(crop_basename)
> >>>
> >>>     # Save image
> >>>     IJ.log("Saving crop to %s" % crop_fname)
> >>>     saver = ImgSaver()
> >>>     saver.saveImg(crop_basename, imp)
> >>>
> >>> IJ.log('Done')
> >>>
> >>> It fails with this error:
> >>>
> >>> Traceback (most recent call last):
> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
> >>> 49, in <module>
> >>>     saver.saveImg(crop_basename, imp)
> >>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer,
> String
> >>>
> >>> at org.python.core.Py.TypeError(Py.java:235)
> >>> at
> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >>> at
> >>>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >>> at
> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >>> at
> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> >>> at
> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
> >>> at
> >>>
> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> >>> at
> >>>
> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> >>> at org.python.core.PyCode.call(PyCode.java:18)
> >>> at org.python.core.Py.runCode(Py.java:1275)
> >>> at
> >>>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >>> at
> >>>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >>> at
> >>>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >>> at
> >>>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >>> at java.lang.Thread.run(Thread.java:745)
> >>>
> >>> Three questions:
> >>>
> >>> how can I write cropped image (I need to write them as OME Tiff so I
> >>> need BF or SCIFIO).
> >>> Is there is any ?easy? alternative to BF setCropRegion function in
> SCIFIO
> >>> ?
> >>> I am currently using RoiManager.getInstance().getRoisAsArray() to
> >>> retrieve all rois. How can I directly get a ROIManager instance from
> >>> RoiSet.zip file ?
> >>>
> >>> Any help would be very appreciated.
> >>>
> >>> Thanks !
> >>>
> >>> ?
> >>> Hadrien Mary
> >>>
> >>> _______________________________________________
> >>> ImageJ-devel mailing list
> >>> ImageJ-devel at imagej.net
> >>> http://imagej.net/mailman/listinfo/imagej-devel
> >>
> >>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150108/bd3e5595/attachment-0001.html>

From hadrien.mary at gmail.com  Thu Jan  8 17:25:21 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Fri, 9 Jan 2015 00:25:21 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
Message-ID: <CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>

Thanks for the tip (reminder to me: always look for example in tests!).

Unfortunately crop does not work... I will try to do more tests
tomorrow or wait for you or someone else to have a look.

Updated code:

from ij import IJ
from ij import ImagePlus

from io.scif import SCIFIO
from io.scif.config import SCIFIOConfig
from io.scif.img import ImageRegion
from io.scif.img import ImgOpener
from io.scif.img import ImgSaver
from net.imglib2.meta import Axes

fname = "/home/hadim/original.ome.tif"
target = "/home/hadim/cropped.ome.tif"

axes = [Axes.X, Axes.Y]
ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
config = SCIFIOConfig()
config.imgOpenerSetRegion(ImageRegion(axes, ranges))

opener = ImgOpener()
imps = opener.openImgs(fname, config)
imp = imps[0]

saver = ImgSaver()
saver.saveImg(target, imp)

print('Done')

--
Hadrien Mary


On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:
> Hi Hadrien,
>
>> I would like to be able to crop a region in X and Y while
>> keeping any other dimensions which could exist (C, Z, T).
>
> Here's some Java:
>
>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>     AxisType[] axes = { Axes.X, Axes.Y };
>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>
> Adapted from here:
> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>
> And untested.
>
> HTH,
> Curtis
>
> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>>
>> After some investigations, I'm pretty sure I don't instanciate
>> ImageRegion correctly. Doc and source code didn't help me... I would
>> like to be able to crop a region in X and Y while keeping any other
>> dimensions which could exist (C, Z, T).
>>
>> --
>> Hadrien Mary
>>
>>
>>
>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> wrote:
>> > Thank you Curtis for the answer.
>> >
>> > I tried to apply what you told me and the code now works without
>> > error. However the saved cropped image is not cropped (same size as
>> > original) and pixel values are modified).
>> >
>> > Script:
>> >
>> > from io.scif.config import SCIFIOConfig
>> > from io.scif.img import ImageRegion
>> > from io.scif.img import ImgOpener
>> > from io.scif.img import ImgSaver
>> >
>> > fname = "/home/hadim/original.ome.tif"
>> > target = "/home/hadim/cropped.ome.tif"
>> >
>> > config = SCIFIOConfig()
>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>> > config.imgOpenerSetRegion(region)
>> >
>> > opener = ImgOpener()
>> > imps = opener.openImgs(fname, config)
>> > imp = imps[0]
>> >
>> > print(imps)
>> >
>> > saver = ImgSaver()
>> > saver.saveImg(target, imp)
>> >
>> > Thanks again for your time. Don't be sorry if you don't have time to
>> > write an example.
>> >
>> > I will be happy to provide some python/scifio examples scripts.
>> >
>> >
>> > --
>> > Hadrien Mary
>> >
>> > Ph.D student in Biology
>> > Tournier-Gachet Team
>> > CNRS - LBCMCP - UMR 5088
>> >
>> > Universit? de Toulouse - B?t. 4R3B1
>> > 118, route de Narbonne - 31062 Toulouse
>> >
>> >
>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>> >> Hi Hadrien,
>> >>
>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>> >>> work.
>> >>
>> >> The error you see is because SCIFIO operates on ImgLib2 data
>> >> structures, not
>> >> ImagePlus objects.
>> >>
>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
>> >>> SCIFIO ?
>> >>
>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on it,
>> >> then
>> >> pass it as an argument to the ImgOpener. You'll get back an ImgLib2
>> >> data
>> >> object which can then be fed to the SCIFIO ImgSaver.
>> >>
>> >> I'm sorry that I don't have time to whip up an example for you right
>> >> now. It
>> >> would be great to add more SCIFIO tutorials [2] that use the ImgOpener
>> >> and
>> >> ImgSaver, since they are much higher level APIs akin to the Bio-Formats
>> >> "BF"
>> >> functionality... please feel welcome to contribute some!
>> >>
>> >> Regards,
>> >> Curtis
>> >>
>> >> [1]
>> >>
>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>> >> [2] https://github.com/scifio/scifio-tutorials
>> >>
>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> >> wrote:
>> >>>
>> >>> Hi,
>> >>>
>> >>> I am writing a python macro which iterate over all rois in ROI Manager
>> >>> and then use setCropRegion function from bioformat plugin to open a
>> >>> cropped region of an image.
>> >>>
>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>> >>> work.
>> >>>
>> >>> (I am using an updated version of Fiji.)
>> >>>
>> >>> Here is my script:
>> >>>
>> >>> from ij.plugin.frame import RoiManager
>> >>> from ij import IJ
>> >>> from io.scif.img import ImgSaver
>> >>>
>> >>> from loci.plugins import BF
>> >>> from loci.plugins.in import ImporterOptions
>> >>> from loci.common import Region
>> >>>
>> >>> import os
>> >>>
>> >>> # Get current image filename
>> >>> imp = IJ.getImage()
>> >>> f = imp.getOriginalFileInfo()
>> >>> fname = os.path.join(f.directory, f.fileName)
>> >>>
>> >>> IJ.log('Image filename is %s' % fname)
>> >>>
>> >>> # Iterate over all ROIs from ROI Manager
>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>> >>> for i, roi in enumerate(rois):
>> >>>
>> >>>     crop_id = i +1
>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>> >>>
>> >>>     bounds = roi.getBounds()
>> >>>
>> >>>     x = bounds.x
>> >>>     y = bounds.y
>> >>>     w = bounds.width
>> >>>     h = bounds.height
>> >>>
>> >>>     # Import only cropped region of the image
>> >>>     options = ImporterOptions()
>> >>>     options.setCrop(True)
>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>> >>>     options.setId(fname)
>> >>>     imps = BF.openImagePlus(options)
>> >>>
>> >>>     imp = imps[0]
>> >>>     imp.show()
>> >>>
>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
>> >>>     imp.setTitle(crop_basename)
>> >>>
>> >>>     # Save image
>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>> >>>     saver = ImgSaver()
>> >>>     saver.saveImg(crop_basename, imp)
>> >>>
>> >>> IJ.log('Done')
>> >>>
>> >>> It fails with this error:
>> >>>
>> >>> Traceback (most recent call last):
>> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
>> >>> 49, in <module>
>> >>>     saver.saveImg(crop_basename, imp)
>> >>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer,
>> >>> String
>> >>>
>> >>> at org.python.core.Py.TypeError(Py.java:235)
>> >>> at
>> >>>
>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >>> at
>> >>>
>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >>> at
>> >>>
>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >>> at
>> >>>
>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>> >>> at
>> >>>
>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>> >>> at
>> >>>
>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>> >>> at
>> >>>
>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>> >>> at org.python.core.Py.runCode(Py.java:1275)
>> >>> at
>> >>>
>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >>> at
>> >>>
>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >>> at
>> >>>
>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >>> at
>> >>>
>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >>> at java.lang.Thread.run(Thread.java:745)
>> >>>
>> >>> Three questions:
>> >>>
>> >>> how can I write cropped image (I need to write them as OME Tiff so I
>> >>> need BF or SCIFIO).
>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
>> >>> SCIFIO
>> >>> ?
>> >>> I am currently using RoiManager.getInstance().getRoisAsArray() to
>> >>> retrieve all rois. How can I directly get a ROIManager instance from
>> >>> RoiSet.zip file ?
>> >>>
>> >>> Any help would be very appreciated.
>> >>>
>> >>> Thanks !
>> >>>
>> >>> ?
>> >>> Hadrien Mary
>> >>>
>> >>> _______________________________________________
>> >>> ImageJ-devel mailing list
>> >>> ImageJ-devel at imagej.net
>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>> >>
>> >>
>
>


From hadrien.mary at gmail.com  Fri Jan  9 11:46:21 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Fri, 9 Jan 2015 18:46:21 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
Message-ID: <CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>

After some investigations I think there is a bug with ImgSaver. In the
following script, X, Y crop is fine but axes informations (T and Z)
are lost and all frames appears on the same axes. Now if I replace
"target = "/home/hadim/cropped.tif" by "target =
"/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
image has the same dimensions than original however axes informations
(T and Z) are ok. Note that in cropped.ome.tif, pixel values are
totally incoherent which is not the case in cropped.tif.

Files can be found here :
https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0

Archive contains cropped.tif, cropped.ome.tif and original.ome.tif.

The script:

---------------------------------------------------
from io.scif import SCIFIO
from io.scif.config import SCIFIOConfig
from io.scif.img import ImageRegion
from io.scif.img import ImgOpener
from io.scif.img import ImgSaver
from net.imglib2.meta import Axes

fname = "/home/hadim/original.ome.tif"
target = "/home/hadim/cropped.tif"

axes = [Axes.X, Axes.Y]
ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
config = SCIFIOConfig()
config.imgOpenerSetRegion(ImageRegion(axes, ranges))

opener = ImgOpener()
imps = opener.openImgs(fname, config)
imp = imps[0]

saver = ImgSaver()
saver.saveImg(target, imp)

print('Done')
---------------------------------------------------


--
Hadrien Mary


On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> Thanks for the tip (reminder to me: always look for example in tests!).
>
> Unfortunately crop does not work... I will try to do more tests
> tomorrow or wait for you or someone else to have a look.
>
> Updated code:
>
> from ij import IJ
> from ij import ImagePlus
>
> from io.scif import SCIFIO
> from io.scif.config import SCIFIOConfig
> from io.scif.img import ImageRegion
> from io.scif.img import ImgOpener
> from io.scif.img import ImgSaver
> from net.imglib2.meta import Axes
>
> fname = "/home/hadim/original.ome.tif"
> target = "/home/hadim/cropped.ome.tif"
>
> axes = [Axes.X, Axes.Y]
> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
> config = SCIFIOConfig()
> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>
> opener = ImgOpener()
> imps = opener.openImgs(fname, config)
> imp = imps[0]
>
> saver = ImgSaver()
> saver.saveImg(target, imp)
>
> print('Done')
>
> --
> Hadrien Mary
>
>
> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>> Hi Hadrien,
>>
>>> I would like to be able to crop a region in X and Y while
>>> keeping any other dimensions which could exist (C, Z, T).
>>
>> Here's some Java:
>>
>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>>     AxisType[] axes = { Axes.X, Axes.Y };
>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>>
>> Adapted from here:
>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>>
>> And untested.
>>
>> HTH,
>> Curtis
>>
>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>>>
>>> After some investigations, I'm pretty sure I don't instanciate
>>> ImageRegion correctly. Doc and source code didn't help me... I would
>>> like to be able to crop a region in X and Y while keeping any other
>>> dimensions which could exist (C, Z, T).
>>>
>>> --
>>> Hadrien Mary
>>>
>>>
>>>
>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>> wrote:
>>> > Thank you Curtis for the answer.
>>> >
>>> > I tried to apply what you told me and the code now works without
>>> > error. However the saved cropped image is not cropped (same size as
>>> > original) and pixel values are modified).
>>> >
>>> > Script:
>>> >
>>> > from io.scif.config import SCIFIOConfig
>>> > from io.scif.img import ImageRegion
>>> > from io.scif.img import ImgOpener
>>> > from io.scif.img import ImgSaver
>>> >
>>> > fname = "/home/hadim/original.ome.tif"
>>> > target = "/home/hadim/cropped.ome.tif"
>>> >
>>> > config = SCIFIOConfig()
>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>>> > config.imgOpenerSetRegion(region)
>>> >
>>> > opener = ImgOpener()
>>> > imps = opener.openImgs(fname, config)
>>> > imp = imps[0]
>>> >
>>> > print(imps)
>>> >
>>> > saver = ImgSaver()
>>> > saver.saveImg(target, imp)
>>> >
>>> > Thanks again for your time. Don't be sorry if you don't have time to
>>> > write an example.
>>> >
>>> > I will be happy to provide some python/scifio examples scripts.
>>> >
>>> >
>>> > --
>>> > Hadrien Mary
>>> >
>>> > Ph.D student in Biology
>>> > Tournier-Gachet Team
>>> > CNRS - LBCMCP - UMR 5088
>>> >
>>> > Universit? de Toulouse - B?t. 4R3B1
>>> > 118, route de Narbonne - 31062 Toulouse
>>> >
>>> >
>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>> >> Hi Hadrien,
>>> >>
>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>>> >>> work.
>>> >>
>>> >> The error you see is because SCIFIO operates on ImgLib2 data
>>> >> structures, not
>>> >> ImagePlus objects.
>>> >>
>>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
>>> >>> SCIFIO ?
>>> >>
>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on it,
>>> >> then
>>> >> pass it as an argument to the ImgOpener. You'll get back an ImgLib2
>>> >> data
>>> >> object which can then be fed to the SCIFIO ImgSaver.
>>> >>
>>> >> I'm sorry that I don't have time to whip up an example for you right
>>> >> now. It
>>> >> would be great to add more SCIFIO tutorials [2] that use the ImgOpener
>>> >> and
>>> >> ImgSaver, since they are much higher level APIs akin to the Bio-Formats
>>> >> "BF"
>>> >> functionality... please feel welcome to contribute some!
>>> >>
>>> >> Regards,
>>> >> Curtis
>>> >>
>>> >> [1]
>>> >>
>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>>> >> [2] https://github.com/scifio/scifio-tutorials
>>> >>
>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>> >> wrote:
>>> >>>
>>> >>> Hi,
>>> >>>
>>> >>> I am writing a python macro which iterate over all rois in ROI Manager
>>> >>> and then use setCropRegion function from bioformat plugin to open a
>>> >>> cropped region of an image.
>>> >>>
>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>>> >>> work.
>>> >>>
>>> >>> (I am using an updated version of Fiji.)
>>> >>>
>>> >>> Here is my script:
>>> >>>
>>> >>> from ij.plugin.frame import RoiManager
>>> >>> from ij import IJ
>>> >>> from io.scif.img import ImgSaver
>>> >>>
>>> >>> from loci.plugins import BF
>>> >>> from loci.plugins.in import ImporterOptions
>>> >>> from loci.common import Region
>>> >>>
>>> >>> import os
>>> >>>
>>> >>> # Get current image filename
>>> >>> imp = IJ.getImage()
>>> >>> f = imp.getOriginalFileInfo()
>>> >>> fname = os.path.join(f.directory, f.fileName)
>>> >>>
>>> >>> IJ.log('Image filename is %s' % fname)
>>> >>>
>>> >>> # Iterate over all ROIs from ROI Manager
>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>>> >>> for i, roi in enumerate(rois):
>>> >>>
>>> >>>     crop_id = i +1
>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>> >>>
>>> >>>     bounds = roi.getBounds()
>>> >>>
>>> >>>     x = bounds.x
>>> >>>     y = bounds.y
>>> >>>     w = bounds.width
>>> >>>     h = bounds.height
>>> >>>
>>> >>>     # Import only cropped region of the image
>>> >>>     options = ImporterOptions()
>>> >>>     options.setCrop(True)
>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>>> >>>     options.setId(fname)
>>> >>>     imps = BF.openImagePlus(options)
>>> >>>
>>> >>>     imp = imps[0]
>>> >>>     imp.show()
>>> >>>
>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
>>> >>>     imp.setTitle(crop_basename)
>>> >>>
>>> >>>     # Save image
>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>>> >>>     saver = ImgSaver()
>>> >>>     saver.saveImg(crop_basename, imp)
>>> >>>
>>> >>> IJ.log('Done')
>>> >>>
>>> >>> It fails with this error:
>>> >>>
>>> >>> Traceback (most recent call last):
>>> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
>>> >>> 49, in <module>
>>> >>>     saver.saveImg(crop_basename, imp)
>>> >>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer,
>>> >>> String
>>> >>>
>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>>> >>> at
>>> >>>
>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>> >>> at
>>> >>>
>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>> >>> at
>>> >>>
>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>> >>> at
>>> >>>
>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>> >>> at
>>> >>>
>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>>> >>> at
>>> >>>
>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>> >>> at
>>> >>>
>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>>> >>> at
>>> >>>
>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>> >>> at
>>> >>>
>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>> >>> at
>>> >>>
>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>> >>> at
>>> >>>
>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>> >>> at java.lang.Thread.run(Thread.java:745)
>>> >>>
>>> >>> Three questions:
>>> >>>
>>> >>> how can I write cropped image (I need to write them as OME Tiff so I
>>> >>> need BF or SCIFIO).
>>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
>>> >>> SCIFIO
>>> >>> ?
>>> >>> I am currently using RoiManager.getInstance().getRoisAsArray() to
>>> >>> retrieve all rois. How can I directly get a ROIManager instance from
>>> >>> RoiSet.zip file ?
>>> >>>
>>> >>> Any help would be very appreciated.
>>> >>>
>>> >>> Thanks !
>>> >>>
>>> >>> ?
>>> >>> Hadrien Mary
>>> >>>
>>> >>> _______________________________________________
>>> >>> ImageJ-devel mailing list
>>> >>> ImageJ-devel at imagej.net
>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>>> >>
>>> >>
>>
>>


From hadrien.mary at gmail.com  Fri Jan  9 11:49:14 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Fri, 9 Jan 2015 18:49:14 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
Message-ID: <CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>

I also confirm the same behaviour when replacing original file by OME
sample data : http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> After some investigations I think there is a bug with ImgSaver. In the
> following script, X, Y crop is fine but axes informations (T and Z)
> are lost and all frames appears on the same axes. Now if I replace
> "target = "/home/hadim/cropped.tif" by "target =
> "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
> image has the same dimensions than original however axes informations
> (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
> totally incoherent which is not the case in cropped.tif.
>
> Files can be found here :
> https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>
> Archive contains cropped.tif, cropped.ome.tif and original.ome.tif.
>
> The script:
>
> ---------------------------------------------------
> from io.scif import SCIFIO
> from io.scif.config import SCIFIOConfig
> from io.scif.img import ImageRegion
> from io.scif.img import ImgOpener
> from io.scif.img import ImgSaver
> from net.imglib2.meta import Axes
>
> fname = "/home/hadim/original.ome.tif"
> target = "/home/hadim/cropped.tif"
>
> axes = [Axes.X, Axes.Y]
> ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
> config = SCIFIOConfig()
> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>
> opener = ImgOpener()
> imps = opener.openImgs(fname, config)
> imp = imps[0]
>
> saver = ImgSaver()
> saver.saveImg(target, imp)
>
> print('Done')
> ---------------------------------------------------
>
>
> --
> Hadrien Mary
>
>
> On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>> Thanks for the tip (reminder to me: always look for example in tests!).
>>
>> Unfortunately crop does not work... I will try to do more tests
>> tomorrow or wait for you or someone else to have a look.
>>
>> Updated code:
>>
>> from ij import IJ
>> from ij import ImagePlus
>>
>> from io.scif import SCIFIO
>> from io.scif.config import SCIFIOConfig
>> from io.scif.img import ImageRegion
>> from io.scif.img import ImgOpener
>> from io.scif.img import ImgSaver
>> from net.imglib2.meta import Axes
>>
>> fname = "/home/hadim/original.ome.tif"
>> target = "/home/hadim/cropped.ome.tif"
>>
>> axes = [Axes.X, Axes.Y]
>> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>> config = SCIFIOConfig()
>> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>
>> opener = ImgOpener()
>> imps = opener.openImgs(fname, config)
>> imp = imps[0]
>>
>> saver = ImgSaver()
>> saver.saveImg(target, imp)
>>
>> print('Done')
>>
>> --
>> Hadrien Mary
>>
>>
>> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>> Hi Hadrien,
>>>
>>>> I would like to be able to crop a region in X and Y while
>>>> keeping any other dimensions which could exist (C, Z, T).
>>>
>>> Here's some Java:
>>>
>>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>>>     AxisType[] axes = { Axes.X, Axes.Y };
>>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
>>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>>>
>>> Adapted from here:
>>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>>>
>>> And untested.
>>>
>>> HTH,
>>> Curtis
>>>
>>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>>>>
>>>> After some investigations, I'm pretty sure I don't instanciate
>>>> ImageRegion correctly. Doc and source code didn't help me... I would
>>>> like to be able to crop a region in X and Y while keeping any other
>>>> dimensions which could exist (C, Z, T).
>>>>
>>>> --
>>>> Hadrien Mary
>>>>
>>>>
>>>>
>>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>>> wrote:
>>>> > Thank you Curtis for the answer.
>>>> >
>>>> > I tried to apply what you told me and the code now works without
>>>> > error. However the saved cropped image is not cropped (same size as
>>>> > original) and pixel values are modified).
>>>> >
>>>> > Script:
>>>> >
>>>> > from io.scif.config import SCIFIOConfig
>>>> > from io.scif.img import ImageRegion
>>>> > from io.scif.img import ImgOpener
>>>> > from io.scif.img import ImgSaver
>>>> >
>>>> > fname = "/home/hadim/original.ome.tif"
>>>> > target = "/home/hadim/cropped.ome.tif"
>>>> >
>>>> > config = SCIFIOConfig()
>>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>>>> > config.imgOpenerSetRegion(region)
>>>> >
>>>> > opener = ImgOpener()
>>>> > imps = opener.openImgs(fname, config)
>>>> > imp = imps[0]
>>>> >
>>>> > print(imps)
>>>> >
>>>> > saver = ImgSaver()
>>>> > saver.saveImg(target, imp)
>>>> >
>>>> > Thanks again for your time. Don't be sorry if you don't have time to
>>>> > write an example.
>>>> >
>>>> > I will be happy to provide some python/scifio examples scripts.
>>>> >
>>>> >
>>>> > --
>>>> > Hadrien Mary
>>>> >
>>>> > Ph.D student in Biology
>>>> > Tournier-Gachet Team
>>>> > CNRS - LBCMCP - UMR 5088
>>>> >
>>>> > Universit? de Toulouse - B?t. 4R3B1
>>>> > 118, route de Narbonne - 31062 Toulouse
>>>> >
>>>> >
>>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>>> >> Hi Hadrien,
>>>> >>
>>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>>>> >>> work.
>>>> >>
>>>> >> The error you see is because SCIFIO operates on ImgLib2 data
>>>> >> structures, not
>>>> >> ImagePlus objects.
>>>> >>
>>>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
>>>> >>> SCIFIO ?
>>>> >>
>>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on it,
>>>> >> then
>>>> >> pass it as an argument to the ImgOpener. You'll get back an ImgLib2
>>>> >> data
>>>> >> object which can then be fed to the SCIFIO ImgSaver.
>>>> >>
>>>> >> I'm sorry that I don't have time to whip up an example for you right
>>>> >> now. It
>>>> >> would be great to add more SCIFIO tutorials [2] that use the ImgOpener
>>>> >> and
>>>> >> ImgSaver, since they are much higher level APIs akin to the Bio-Formats
>>>> >> "BF"
>>>> >> functionality... please feel welcome to contribute some!
>>>> >>
>>>> >> Regards,
>>>> >> Curtis
>>>> >>
>>>> >> [1]
>>>> >>
>>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>>>> >> [2] https://github.com/scifio/scifio-tutorials
>>>> >>
>>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>>> >> wrote:
>>>> >>>
>>>> >>> Hi,
>>>> >>>
>>>> >>> I am writing a python macro which iterate over all rois in ROI Manager
>>>> >>> and then use setCropRegion function from bioformat plugin to open a
>>>> >>> cropped region of an image.
>>>> >>>
>>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn not
>>>> >>> work.
>>>> >>>
>>>> >>> (I am using an updated version of Fiji.)
>>>> >>>
>>>> >>> Here is my script:
>>>> >>>
>>>> >>> from ij.plugin.frame import RoiManager
>>>> >>> from ij import IJ
>>>> >>> from io.scif.img import ImgSaver
>>>> >>>
>>>> >>> from loci.plugins import BF
>>>> >>> from loci.plugins.in import ImporterOptions
>>>> >>> from loci.common import Region
>>>> >>>
>>>> >>> import os
>>>> >>>
>>>> >>> # Get current image filename
>>>> >>> imp = IJ.getImage()
>>>> >>> f = imp.getOriginalFileInfo()
>>>> >>> fname = os.path.join(f.directory, f.fileName)
>>>> >>>
>>>> >>> IJ.log('Image filename is %s' % fname)
>>>> >>>
>>>> >>> # Iterate over all ROIs from ROI Manager
>>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>>>> >>> for i, roi in enumerate(rois):
>>>> >>>
>>>> >>>     crop_id = i +1
>>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>>> >>>
>>>> >>>     bounds = roi.getBounds()
>>>> >>>
>>>> >>>     x = bounds.x
>>>> >>>     y = bounds.y
>>>> >>>     w = bounds.width
>>>> >>>     h = bounds.height
>>>> >>>
>>>> >>>     # Import only cropped region of the image
>>>> >>>     options = ImporterOptions()
>>>> >>>     options.setCrop(True)
>>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>>>> >>>     options.setId(fname)
>>>> >>>     imps = BF.openImagePlus(options)
>>>> >>>
>>>> >>>     imp = imps[0]
>>>> >>>     imp.show()
>>>> >>>
>>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
>>>> >>>     imp.setTitle(crop_basename)
>>>> >>>
>>>> >>>     # Save image
>>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>>>> >>>     saver = ImgSaver()
>>>> >>>     saver.saveImg(crop_basename, imp)
>>>> >>>
>>>> >>> IJ.log('Done')
>>>> >>>
>>>> >>> It fails with this error:
>>>> >>>
>>>> >>> Traceback (most recent call last):
>>>> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py", line
>>>> >>> 49, in <module>
>>>> >>>     saver.saveImg(crop_basename, imp)
>>>> >>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer,
>>>> >>> String
>>>> >>>
>>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>>>> >>> at
>>>> >>>
>>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>>> >>> at
>>>> >>>
>>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>>> >>> at
>>>> >>>
>>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>>> >>> at
>>>> >>>
>>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>>> >>> at
>>>> >>>
>>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>>>> >>> at
>>>> >>>
>>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>>> >>> at
>>>> >>>
>>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>>>> >>> at
>>>> >>>
>>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>>> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>>> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>> >>> at
>>>> >>>
>>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>> >>> at
>>>> >>>
>>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>> >>> at
>>>> >>>
>>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>> >>> at java.lang.Thread.run(Thread.java:745)
>>>> >>>
>>>> >>> Three questions:
>>>> >>>
>>>> >>> how can I write cropped image (I need to write them as OME Tiff so I
>>>> >>> need BF or SCIFIO).
>>>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
>>>> >>> SCIFIO
>>>> >>> ?
>>>> >>> I am currently using RoiManager.getInstance().getRoisAsArray() to
>>>> >>> retrieve all rois. How can I directly get a ROIManager instance from
>>>> >>> RoiSet.zip file ?
>>>> >>>
>>>> >>> Any help would be very appreciated.
>>>> >>>
>>>> >>> Thanks !
>>>> >>>
>>>> >>> ?
>>>> >>> Hadrien Mary
>>>> >>>
>>>> >>> _______________________________________________
>>>> >>> ImageJ-devel mailing list
>>>> >>> ImageJ-devel at imagej.net
>>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>>>> >>
>>>> >>
>>>
>>>


From hiner at wisc.edu  Fri Jan  9 15:14:31 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Fri, 9 Jan 2015 15:14:31 -0600
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
Message-ID: <CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>

Hi Hadrien,

I've identified at least two bugs that could be affecting you here.

First of all, there was a bug in the OME-TIFF format writing out
multi-dimensional images. That's fixed on a branch but not uploaded to Fiji
yet [1].

Second, it seems like cropping is restricting pixel reads to the correct
region but then doesn't change the image size.

I'm hoping when I fix the second issue writing cropped regions will be
fixed.

Thanks for the great feedback!
- Mark

[1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing

On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> I also confirm the same behaviour when replacing original file by OME
> sample data :
> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip
> .
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> > After some investigations I think there is a bug with ImgSaver. In the
> > following script, X, Y crop is fine but axes informations (T and Z)
> > are lost and all frames appears on the same axes. Now if I replace
> > "target = "/home/hadim/cropped.tif" by "target =
> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
> > image has the same dimensions than original however axes informations
> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
> > totally incoherent which is not the case in cropped.tif.
> >
> > Files can be found here :
> >
> https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
> >
> > Archive contains cropped.tif, cropped.ome.tif and original.ome.tif.
> >
> > The script:
> >
> > ---------------------------------------------------
> > from io.scif import SCIFIO
> > from io.scif.config import SCIFIOConfig
> > from io.scif.img import ImageRegion
> > from io.scif.img import ImgOpener
> > from io.scif.img import ImgSaver
> > from net.imglib2.meta import Axes
> >
> > fname = "/home/hadim/original.ome.tif"
> > target = "/home/hadim/cropped.tif"
> >
> > axes = [Axes.X, Axes.Y]
> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
> > config = SCIFIOConfig()
> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >
> > opener = ImgOpener()
> > imps = opener.openImgs(fname, config)
> > imp = imps[0]
> >
> > saver = ImgSaver()
> > saver.saveImg(target, imp)
> >
> > print('Done')
> > ---------------------------------------------------
> >
> >
> > --
> > Hadrien Mary
> >
> >
> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> >> Thanks for the tip (reminder to me: always look for example in tests!).
> >>
> >> Unfortunately crop does not work... I will try to do more tests
> >> tomorrow or wait for you or someone else to have a look.
> >>
> >> Updated code:
> >>
> >> from ij import IJ
> >> from ij import ImagePlus
> >>
> >> from io.scif import SCIFIO
> >> from io.scif.config import SCIFIOConfig
> >> from io.scif.img import ImageRegion
> >> from io.scif.img import ImgOpener
> >> from io.scif.img import ImgSaver
> >> from net.imglib2.meta import Axes
> >>
> >> fname = "/home/hadim/original.ome.tif"
> >> target = "/home/hadim/cropped.ome.tif"
> >>
> >> axes = [Axes.X, Axes.Y]
> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
> >> config = SCIFIOConfig()
> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >>
> >> opener = ImgOpener()
> >> imps = opener.openImgs(fname, config)
> >> imp = imps[0]
> >>
> >> saver = ImgSaver()
> >> saver.saveImg(target, imp)
> >>
> >> print('Done')
> >>
> >> --
> >> Hadrien Mary
> >>
> >>
> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu>
> wrote:
> >>> Hi Hadrien,
> >>>
> >>>> I would like to be able to crop a region in X and Y while
> >>>> keeping any other dimensions which could exist (C, Z, T).
> >>>
> >>> Here's some Java:
> >>>
> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
> >>>     AxisType[] axes = { Axes.X, Axes.Y };
> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
> >>>
> >>> Adapted from here:
> >>>
> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
> >>>
> >>> And untested.
> >>>
> >>> HTH,
> >>> Curtis
> >>>
> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> >>>>
> >>>> After some investigations, I'm pretty sure I don't instanciate
> >>>> ImageRegion correctly. Doc and source code didn't help me... I would
> >>>> like to be able to crop a region in X and Y while keeping any other
> >>>> dimensions which could exist (C, Z, T).
> >>>>
> >>>> --
> >>>> Hadrien Mary
> >>>>
> >>>>
> >>>>
> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com
> >
> >>>> wrote:
> >>>> > Thank you Curtis for the answer.
> >>>> >
> >>>> > I tried to apply what you told me and the code now works without
> >>>> > error. However the saved cropped image is not cropped (same size as
> >>>> > original) and pixel values are modified).
> >>>> >
> >>>> > Script:
> >>>> >
> >>>> > from io.scif.config import SCIFIOConfig
> >>>> > from io.scif.img import ImageRegion
> >>>> > from io.scif.img import ImgOpener
> >>>> > from io.scif.img import ImgSaver
> >>>> >
> >>>> > fname = "/home/hadim/original.ome.tif"
> >>>> > target = "/home/hadim/cropped.ome.tif"
> >>>> >
> >>>> > config = SCIFIOConfig()
> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
> >>>> > config.imgOpenerSetRegion(region)
> >>>> >
> >>>> > opener = ImgOpener()
> >>>> > imps = opener.openImgs(fname, config)
> >>>> > imp = imps[0]
> >>>> >
> >>>> > print(imps)
> >>>> >
> >>>> > saver = ImgSaver()
> >>>> > saver.saveImg(target, imp)
> >>>> >
> >>>> > Thanks again for your time. Don't be sorry if you don't have time to
> >>>> > write an example.
> >>>> >
> >>>> > I will be happy to provide some python/scifio examples scripts.
> >>>> >
> >>>> >
> >>>> > --
> >>>> > Hadrien Mary
> >>>> >
> >>>> > Ph.D student in Biology
> >>>> > Tournier-Gachet Team
> >>>> > CNRS - LBCMCP - UMR 5088
> >>>> >
> >>>> > Universit? de Toulouse - B?t. 4R3B1
> >>>> > 118, route de Narbonne - 31062 Toulouse
> >>>> >
> >>>> >
> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu>
> wrote:
> >>>> >> Hi Hadrien,
> >>>> >>
> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn
> not
> >>>> >>> work.
> >>>> >>
> >>>> >> The error you see is because SCIFIO operates on ImgLib2 data
> >>>> >> structures, not
> >>>> >> ImagePlus objects.
> >>>> >>
> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
> >>>> >>> SCIFIO ?
> >>>> >>
> >>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on
> it,
> >>>> >> then
> >>>> >> pass it as an argument to the ImgOpener. You'll get back an ImgLib2
> >>>> >> data
> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
> >>>> >>
> >>>> >> I'm sorry that I don't have time to whip up an example for you
> right
> >>>> >> now. It
> >>>> >> would be great to add more SCIFIO tutorials [2] that use the
> ImgOpener
> >>>> >> and
> >>>> >> ImgSaver, since they are much higher level APIs akin to the
> Bio-Formats
> >>>> >> "BF"
> >>>> >> functionality... please feel welcome to contribute some!
> >>>> >>
> >>>> >> Regards,
> >>>> >> Curtis
> >>>> >>
> >>>> >> [1]
> >>>> >>
> >>>> >>
> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
> >>>> >> [2] https://github.com/scifio/scifio-tutorials
> >>>> >>
> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary <
> hadrien.mary at gmail.com>
> >>>> >> wrote:
> >>>> >>>
> >>>> >>> Hi,
> >>>> >>>
> >>>> >>> I am writing a python macro which iterate over all rois in ROI
> Manager
> >>>> >>> and then use setCropRegion function from bioformat plugin to open
> a
> >>>> >>> cropped region of an image.
> >>>> >>>
> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn
> not
> >>>> >>> work.
> >>>> >>>
> >>>> >>> (I am using an updated version of Fiji.)
> >>>> >>>
> >>>> >>> Here is my script:
> >>>> >>>
> >>>> >>> from ij.plugin.frame import RoiManager
> >>>> >>> from ij import IJ
> >>>> >>> from io.scif.img import ImgSaver
> >>>> >>>
> >>>> >>> from loci.plugins import BF
> >>>> >>> from loci.plugins.in import ImporterOptions
> >>>> >>> from loci.common import Region
> >>>> >>>
> >>>> >>> import os
> >>>> >>>
> >>>> >>> # Get current image filename
> >>>> >>> imp = IJ.getImage()
> >>>> >>> f = imp.getOriginalFileInfo()
> >>>> >>> fname = os.path.join(f.directory, f.fileName)
> >>>> >>>
> >>>> >>> IJ.log('Image filename is %s' % fname)
> >>>> >>>
> >>>> >>> # Iterate over all ROIs from ROI Manager
> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
> >>>> >>> for i, roi in enumerate(rois):
> >>>> >>>
> >>>> >>>     crop_id = i +1
> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
> >>>> >>>
> >>>> >>>     bounds = roi.getBounds()
> >>>> >>>
> >>>> >>>     x = bounds.x
> >>>> >>>     y = bounds.y
> >>>> >>>     w = bounds.width
> >>>> >>>     h = bounds.height
> >>>> >>>
> >>>> >>>     # Import only cropped region of the image
> >>>> >>>     options = ImporterOptions()
> >>>> >>>     options.setCrop(True)
> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
> >>>> >>>     options.setId(fname)
> >>>> >>>     imps = BF.openImagePlus(options)
> >>>> >>>
> >>>> >>>     imp = imps[0]
> >>>> >>>     imp.show()
> >>>> >>>
> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
> >>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
> >>>> >>>     imp.setTitle(crop_basename)
> >>>> >>>
> >>>> >>>     # Save image
> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
> >>>> >>>     saver = ImgSaver()
> >>>> >>>     saver.saveImg(crop_basename, imp)
> >>>> >>>
> >>>> >>> IJ.log('Done')
> >>>> >>>
> >>>> >>> It fails with this error:
> >>>> >>>
> >>>> >>> Traceback (most recent call last):
> >>>> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
> line
> >>>> >>> 49, in <module>
> >>>> >>>     saver.saveImg(crop_basename, imp)
> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer,
> >>>> >>> String
> >>>> >>>
> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> >>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >>>> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >>>> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >>>> >>> at
> >>>> >>>
> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >>>> >>> at java.lang.Thread.run(Thread.java:745)
> >>>> >>>
> >>>> >>> Three questions:
> >>>> >>>
> >>>> >>> how can I write cropped image (I need to write them as OME Tiff
> so I
> >>>> >>> need BF or SCIFIO).
> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion function in
> >>>> >>> SCIFIO
> >>>> >>> ?
> >>>> >>> I am currently using RoiManager.getInstance().getRoisAsArray() to
> >>>> >>> retrieve all rois. How can I directly get a ROIManager instance
> from
> >>>> >>> RoiSet.zip file ?
> >>>> >>>
> >>>> >>> Any help would be very appreciated.
> >>>> >>>
> >>>> >>> Thanks !
> >>>> >>>
> >>>> >>> ?
> >>>> >>> Hadrien Mary
> >>>> >>>
> >>>> >>> _______________________________________________
> >>>> >>> ImageJ-devel mailing list
> >>>> >>> ImageJ-devel at imagej.net
> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
> >>>> >>
> >>>> >>
> >>>
> >>>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150109/b708b136/attachment-0001.html>

From hadrien.mary at gmail.com  Sat Jan 10 05:13:26 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sat, 10 Jan 2015 12:13:26 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
Message-ID: <CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>

Ok. Let me know when you want me to test your changes. I also tested
fix-writing branch and I didn't notice any changes.

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
> Hi Hadrien,
>
> I've identified at least two bugs that could be affecting you here.
>
> First of all, there was a bug in the OME-TIFF format writing out
> multi-dimensional images. That's fixed on a branch but not uploaded to Fiji
> yet [1].
>
> Second, it seems like cropping is restricting pixel reads to the correct
> region but then doesn't change the image size.
>
> I'm hoping when I fix the second issue writing cropped regions will be
> fixed.
>
> Thanks for the great feedback!
> - Mark
>
> [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>
> On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>>
>> I also confirm the same behaviour when replacing original file by OME
>> sample data :
>> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> wrote:
>> > After some investigations I think there is a bug with ImgSaver. In the
>> > following script, X, Y crop is fine but axes informations (T and Z)
>> > are lost and all frames appears on the same axes. Now if I replace
>> > "target = "/home/hadim/cropped.tif" by "target =
>> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
>> > image has the same dimensions than original however axes informations
>> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
>> > totally incoherent which is not the case in cropped.tif.
>> >
>> > Files can be found here :
>> >
>> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>> >
>> > Archive contains cropped.tif, cropped.ome.tif and original.ome.tif.
>> >
>> > The script:
>> >
>> > ---------------------------------------------------
>> > from io.scif import SCIFIO
>> > from io.scif.config import SCIFIOConfig
>> > from io.scif.img import ImageRegion
>> > from io.scif.img import ImgOpener
>> > from io.scif.img import ImgSaver
>> > from net.imglib2.meta import Axes
>> >
>> > fname = "/home/hadim/original.ome.tif"
>> > target = "/home/hadim/cropped.tif"
>> >
>> > axes = [Axes.X, Axes.Y]
>> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>> > config = SCIFIOConfig()
>> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >
>> > opener = ImgOpener()
>> > imps = opener.openImgs(fname, config)
>> > imp = imps[0]
>> >
>> > saver = ImgSaver()
>> > saver.saveImg(target, imp)
>> >
>> > print('Done')
>> > ---------------------------------------------------
>> >
>> >
>> > --
>> > Hadrien Mary
>> >
>> >
>> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary <hadrien.mary at gmail.com>
>> > wrote:
>> >> Thanks for the tip (reminder to me: always look for example in tests!).
>> >>
>> >> Unfortunately crop does not work... I will try to do more tests
>> >> tomorrow or wait for you or someone else to have a look.
>> >>
>> >> Updated code:
>> >>
>> >> from ij import IJ
>> >> from ij import ImagePlus
>> >>
>> >> from io.scif import SCIFIO
>> >> from io.scif.config import SCIFIOConfig
>> >> from io.scif.img import ImageRegion
>> >> from io.scif.img import ImgOpener
>> >> from io.scif.img import ImgSaver
>> >> from net.imglib2.meta import Axes
>> >>
>> >> fname = "/home/hadim/original.ome.tif"
>> >> target = "/home/hadim/cropped.ome.tif"
>> >>
>> >> axes = [Axes.X, Axes.Y]
>> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>> >> config = SCIFIOConfig()
>> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >>
>> >> opener = ImgOpener()
>> >> imps = opener.openImgs(fname, config)
>> >> imp = imps[0]
>> >>
>> >> saver = ImgSaver()
>> >> saver.saveImg(target, imp)
>> >>
>> >> print('Done')
>> >>
>> >> --
>> >> Hadrien Mary
>> >>
>> >>
>> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu>
>> >> wrote:
>> >>> Hi Hadrien,
>> >>>
>> >>>> I would like to be able to crop a region in X and Y while
>> >>>> keeping any other dimensions which could exist (C, Z, T).
>> >>>
>> >>> Here's some Java:
>> >>>
>> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
>> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>> >>>
>> >>> Adapted from here:
>> >>>
>> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>> >>>
>> >>> And untested.
>> >>>
>> >>> HTH,
>> >>> Curtis
>> >>>
>> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> >>> wrote:
>> >>>>
>> >>>> After some investigations, I'm pretty sure I don't instanciate
>> >>>> ImageRegion correctly. Doc and source code didn't help me... I would
>> >>>> like to be able to crop a region in X and Y while keeping any other
>> >>>> dimensions which could exist (C, Z, T).
>> >>>>
>> >>>> --
>> >>>> Hadrien Mary
>> >>>>
>> >>>>
>> >>>>
>> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>> >>>> <hadrien.mary at gmail.com>
>> >>>> wrote:
>> >>>> > Thank you Curtis for the answer.
>> >>>> >
>> >>>> > I tried to apply what you told me and the code now works without
>> >>>> > error. However the saved cropped image is not cropped (same size as
>> >>>> > original) and pixel values are modified).
>> >>>> >
>> >>>> > Script:
>> >>>> >
>> >>>> > from io.scif.config import SCIFIOConfig
>> >>>> > from io.scif.img import ImageRegion
>> >>>> > from io.scif.img import ImgOpener
>> >>>> > from io.scif.img import ImgSaver
>> >>>> >
>> >>>> > fname = "/home/hadim/original.ome.tif"
>> >>>> > target = "/home/hadim/cropped.ome.tif"
>> >>>> >
>> >>>> > config = SCIFIOConfig()
>> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>> >>>> > config.imgOpenerSetRegion(region)
>> >>>> >
>> >>>> > opener = ImgOpener()
>> >>>> > imps = opener.openImgs(fname, config)
>> >>>> > imp = imps[0]
>> >>>> >
>> >>>> > print(imps)
>> >>>> >
>> >>>> > saver = ImgSaver()
>> >>>> > saver.saveImg(target, imp)
>> >>>> >
>> >>>> > Thanks again for your time. Don't be sorry if you don't have time
>> >>>> > to
>> >>>> > write an example.
>> >>>> >
>> >>>> > I will be happy to provide some python/scifio examples scripts.
>> >>>> >
>> >>>> >
>> >>>> > --
>> >>>> > Hadrien Mary
>> >>>> >
>> >>>> > Ph.D student in Biology
>> >>>> > Tournier-Gachet Team
>> >>>> > CNRS - LBCMCP - UMR 5088
>> >>>> >
>> >>>> > Universit? de Toulouse - B?t. 4R3B1
>> >>>> > 118, route de Narbonne - 31062 Toulouse
>> >>>> >
>> >>>> >
>> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu>
>> >>>> > wrote:
>> >>>> >> Hi Hadrien,
>> >>>> >>
>> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn
>> >>>> >>> not
>> >>>> >>> work.
>> >>>> >>
>> >>>> >> The error you see is because SCIFIO operates on ImgLib2 data
>> >>>> >> structures, not
>> >>>> >> ImagePlus objects.
>> >>>> >>
>> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion function
>> >>>> >>> in
>> >>>> >>> SCIFIO ?
>> >>>> >>
>> >>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1] on
>> >>>> >> it,
>> >>>> >> then
>> >>>> >> pass it as an argument to the ImgOpener. You'll get back an
>> >>>> >> ImgLib2
>> >>>> >> data
>> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
>> >>>> >>
>> >>>> >> I'm sorry that I don't have time to whip up an example for you
>> >>>> >> right
>> >>>> >> now. It
>> >>>> >> would be great to add more SCIFIO tutorials [2] that use the
>> >>>> >> ImgOpener
>> >>>> >> and
>> >>>> >> ImgSaver, since they are much higher level APIs akin to the
>> >>>> >> Bio-Formats
>> >>>> >> "BF"
>> >>>> >> functionality... please feel welcome to contribute some!
>> >>>> >>
>> >>>> >> Regards,
>> >>>> >> Curtis
>> >>>> >>
>> >>>> >> [1]
>> >>>> >>
>> >>>> >>
>> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>> >>>> >>
>> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>> >>>> >> <hadrien.mary at gmail.com>
>> >>>> >> wrote:
>> >>>> >>>
>> >>>> >>> Hi,
>> >>>> >>>
>> >>>> >>> I am writing a python macro which iterate over all rois in ROI
>> >>>> >>> Manager
>> >>>> >>> and then use setCropRegion function from bioformat plugin to open
>> >>>> >>> a
>> >>>> >>> cropped region of an image.
>> >>>> >>>
>> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it doesn
>> >>>> >>> not
>> >>>> >>> work.
>> >>>> >>>
>> >>>> >>> (I am using an updated version of Fiji.)
>> >>>> >>>
>> >>>> >>> Here is my script:
>> >>>> >>>
>> >>>> >>> from ij.plugin.frame import RoiManager
>> >>>> >>> from ij import IJ
>> >>>> >>> from io.scif.img import ImgSaver
>> >>>> >>>
>> >>>> >>> from loci.plugins import BF
>> >>>> >>> from loci.plugins.in import ImporterOptions
>> >>>> >>> from loci.common import Region
>> >>>> >>>
>> >>>> >>> import os
>> >>>> >>>
>> >>>> >>> # Get current image filename
>> >>>> >>> imp = IJ.getImage()
>> >>>> >>> f = imp.getOriginalFileInfo()
>> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>> >>>> >>>
>> >>>> >>> IJ.log('Image filename is %s' % fname)
>> >>>> >>>
>> >>>> >>> # Iterate over all ROIs from ROI Manager
>> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>> >>>> >>> for i, roi in enumerate(rois):
>> >>>> >>>
>> >>>> >>>     crop_id = i +1
>> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>> >>>> >>>
>> >>>> >>>     bounds = roi.getBounds()
>> >>>> >>>
>> >>>> >>>     x = bounds.x
>> >>>> >>>     y = bounds.y
>> >>>> >>>     w = bounds.width
>> >>>> >>>     h = bounds.height
>> >>>> >>>
>> >>>> >>>     # Import only cropped region of the image
>> >>>> >>>     options = ImporterOptions()
>> >>>> >>>     options.setCrop(True)
>> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>> >>>> >>>     options.setId(fname)
>> >>>> >>>     imps = BF.openImagePlus(options)
>> >>>> >>>
>> >>>> >>>     imp = imps[0]
>> >>>> >>>     imp.show()
>> >>>> >>>
>> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>> >>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
>> >>>> >>>     imp.setTitle(crop_basename)
>> >>>> >>>
>> >>>> >>>     # Save image
>> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>> >>>> >>>     saver = ImgSaver()
>> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >>>> >>>
>> >>>> >>> IJ.log('Done')
>> >>>> >>>
>> >>>> >>> It fails with this error:
>> >>>> >>>
>> >>>> >>> Traceback (most recent call last):
>> >>>> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>> >>>> >>> line
>> >>>> >>> 49, in <module>
>> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to io.scif.Writer,
>> >>>> >>> String
>> >>>> >>>
>> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>> >>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >>>> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >>>> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >>>> >>> at
>> >>>> >>>
>> >>>> >>>
>> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>> >>>> >>>
>> >>>> >>> Three questions:
>> >>>> >>>
>> >>>> >>> how can I write cropped image (I need to write them as OME Tiff
>> >>>> >>> so I
>> >>>> >>> need BF or SCIFIO).
>> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion function
>> >>>> >>> in
>> >>>> >>> SCIFIO
>> >>>> >>> ?
>> >>>> >>> I am currently using RoiManager.getInstance().getRoisAsArray() to
>> >>>> >>> retrieve all rois. How can I directly get a ROIManager instance
>> >>>> >>> from
>> >>>> >>> RoiSet.zip file ?
>> >>>> >>>
>> >>>> >>> Any help would be very appreciated.
>> >>>> >>>
>> >>>> >>> Thanks !
>> >>>> >>>
>> >>>> >>> ?
>> >>>> >>> Hadrien Mary
>> >>>> >>>
>> >>>> >>> _______________________________________________
>> >>>> >>> ImageJ-devel mailing list
>> >>>> >>> ImageJ-devel at imagej.net
>> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>> >>>> >>
>> >>>> >>
>> >>>
>> >>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>
>


From jay.w.warrick at gmail.com  Sat Jan 10 12:31:05 2015
From: jay.w.warrick at gmail.com (Jay Warrick)
Date: Sat, 10 Jan 2015 12:31:05 -0600
Subject: [ImageJ-devel] Best way to cite new ImageJ?
Message-ID: <D0356C77-B6BE-4FFA-9307-FCA1413B85A2@gmail.com>

Probably somewhere obvious but I couldn't see if you have somewhere written how to cite the new frameworks (e.g., ImageJ2, scijava etc)? Suggestions?

Thanks,

Jay



From gerrit.polder at wur.nl  Sat Jan 10 15:59:11 2015
From: gerrit.polder at wur.nl (Polder, Gerrit)
Date: Sat, 10 Jan 2015 21:59:11 +0000
Subject: [ImageJ-devel] plugin development for ImageJ2 or ImageJ1?
In-Reply-To: <CADN69y=WTyYAG4vBvExoq8H3wXpDC7Gqz5TVR+HJCp7acgGxqQ@mail.gmail.com>
References: <IMAGEJ%201412200000287140.3746@LIST.NIH.GOV>
	<AD4E257A-38B0-46DB-ACE3-DBB97C22B41E@wur.nl>
	<B67F73EB-3C73-4E0B-90F0-A18677CD6F6F@wur.nl>
	<F2F92D58-D918-458B-BE30-2FC09A21CB95@nih.gov>
	<A1333F4B-328F-47FF-A21E-93A6B7BD9B9A@wur.nl>
	<B1FF25EC-7825-4FDF-A018-017E278DF693@nih.gov>
	<02271277-BF89-481B-BD1F-EE62FD7019F9@wur.nl>
	<CA+B=mGrdmOKr4x7W_Vy-MLbvc9uKj--fSVibNn8diHSpN-J_sQ@mail.gmail.com>
	<CADN69y=WTyYAG4vBvExoq8H3wXpDC7Gqz5TVR+HJCp7acgGxqQ@mail.gmail.com>
Message-ID: <997F4CB4-F46F-482D-BE66-F6770BD37ABC@wur.nl>

Curtis and Mark,

thanks for clarifying the situation. As I already told I?m an occasional ImageJ user/programmer, and due to that not completely up to date regarding its current stage. Regarding ImageJ2 versus ImgLib, yes I know, I joined one of the ImgLib workshops during the last ImageJ conference in Luxembourg. This is one of the reasons I really would like to switch.

But your explanation placed me with both feet again on the ground. For this particular project I will use ImageJ1.

Best regards,
Gerrit.

On 8 jan. 2015, at 20:57, Curtis Rueden <ctrueden at wisc.edu<mailto:ctrueden at wisc.edu>> wrote:

Hi Gerrit,

> I?m a little bit confused reading ImageJ2 is still in beta.

It is confusing because "ImageJ2" consists of more than one component -- some of which are still in beta, and some of which are not [1]. In each case, the component's version number gives a hint [2].

In a nutshell: ImageJ2 is "in production" as an end-user application which enhances ImageJ1, but ImageJ2's data model [3] and image I/O [4] libraries are still under heavy development and not yet production quality.

> I thought it would be worthwhile to convert it to the current ImageJ
> platform, in order to make it future proof.

As Mark said, coding against ImageJ 1.x is the most future proof for now. The ImageJ2 data model will be a good choice once it is more mature and has reached version 1.0.0.

> I?v seen a lot of nice ImageJ2 and ImgLib features, and promises about
> availability.

If you want to start utilizing some of the new features sooner, two useful components in particular are out of beta:

1. ImgLib2 [5] - powerful new N-dimensional data model

There are several Fiji plugins (e.g., [6]) that use ImgLib2 together with the ImageJ1 data model; the imglib2-ij component [7] is useful for doing this. (The difference between ImgLib2 and ImageJ2 is: ImgLib2 provides a powerful underlying image data model, while ImageJ2 builds rich metadata structures on top of it.)

2. SciJava Common [8] - powerful new plugin framework

There are several cool things you can do with SciJava Common -- e.g., define new plugin types, or write parameterized commands (e.g., [9], [10]) usable from various applications such as ImageJ, KNIME, OMERO and CellProfiler.

All the code is available on GitHub [11], and all the binaries are shipped with Fiji [12].

Regards,
Curtis

[1] http://imagej.net/ImageJ2#ImageJ2_is_more_than_just_an_application
[2] http://imagej.net/Architecture#Versioning
[3] http://imagej.net/ImageJ_Common
[4] http://imagej.net/SCIFIO
[5] http://imagej.net/ImgLib2
[6] http://fiji.sc/Stitching
[7] https://github.com/imglib/imglib2-ij
[8] http://imagej.net/SciJava_Common
[9] http://git.io/zEx--w
[10] http://git.io/FapZcw
[11] http://imagej.net/Source_code
[12] http://fiji.sc/Downloads

On Thu, Jan 8, 2015 at 8:29 AM, Mark Hiner <hiner at wisc.edu<mailto:hiner at wisc.edu>> wrote:
Hi Gerrit,

>so given the fact that ImageJ2 reached the 2.0.0 stage in june last year, and also since it is the default ImageJ version in Fiji

The ImageJ welcome page [1] describes each of Fiji, ImageJ 1.x and ImageJ2 in detail. But to clarify briefly, Fiji is a distribution of ImageJ - it includes both ImageJ 1.x, and ImageJ2 (as well as a number of plugins).

>So from your message I conclude that although my customer uses Fiji, I better stick to ImageJ1

Because Fiji ships both ImageJ 1.x and IJ2, it is capable of running plugins for both. Since your client can use either, for production work like it sounds you're doing, you should use the ImageJ 1.x API [2] due to its stability. The ImageJ2 team is committed to backwards compatibility with ImageJ 1.x [3], so your plugins should still work as ImageJ2 continues to develop.

>Is there information available about ImageJ?s roadmap?

All our development happens on GitHub [4]. In particular, the base ImageJ repository [5] provides a good view of issues and milestones.

>As you suggested I will send this message also to Imagej-devel, sorry for cross-posting.

No worries at all. Per the mailing list descriptions [6], both of these lists are perfectly appropriate for the scope of these discussions.

Hope this helps. Thanks for the questions - let us know if you have any more!

Best,
Mark

[1] http://imagej.net/Welcome
[2] http://imagej.net/developer/api/index.html
[3] http://imagej.net/Frequently_Asked_Questions#Will_ImageJ1_macros.2C_plugins_and_scripts_still_work_in_ImageJ2.3F
[4] http://imagej.net/Git
[5] https://github.com/imagej/imagej
[6] http://imagej.net/Mailing_lists

On Thu, Jan 8, 2015 at 7:16 AM, Polder, Gerrit <gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl>> wrote:
Dear Wayne,

I?m a little bit confused reading ImageJ2 is still in beta.

Im not a fulltime ImageJ user, but once and a while customers ask me to develop imaging software in ImageJ. Mainly I'm using Matlab and Halcon.
I?m spending about 4-8 weeks a year on ImageJ. My previous project was about a year ago.
Currently I need to update some features on one of my plugins, so given the fact that ImageJ2 reached the 2.0.0 stage in june last year, and also since it is the default ImageJ version in Fiji, as I already said I thought it would be worthwhile to convert it to the current ImageJ platform, in order to make it future proof.

So from your message I conclude that although my customer uses Fiji, I better stick to ImageJ1, in order not to provide him with a buggy plugin.

On the last two conferences I?v seen a lot of nice ImageJ2 and ImgLib features, and promises about availability.
Is there information available about ImageJ?s roadmap?

As you suggested I will send this message also to Imagej-devel, sorry for cross-posting.

best regards,
Gerrit.

On 8 Jan 2015, at 05:50, Rasband, Wayne (NIH/NIMH) [E] <rasbandw at mail.nih.gov<mailto:rasbandw at mail.nih.gov>> wrote:

> Dear Gerrit,
>
>> On Jan 7, 2015, at 2:54 PM, Polder, Gerrit <gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl>> wrote:
>>
>> Dear Wayne,
>>
>> thanks for the prompt reply, my question was indeed not clear stated.
>> Yes this is a ImageJ1 plugin, but since I need to add some functionality to it I thought it would be worthwhile to convert it to the current ImageJ platform, in order to make it future proof.
>> As ImageJ2 now is the production release I decided to give it a try.
>
> ImageJ2 is not the production release. It is beta software. The two options in Fiji?s Edit>Option>ImageJ2 dialog (ImageJ2 data structures and SCIFIO) are disabled by default because they are buggy.
>
>> Is it true that questions related to the development of user plugins should be addressed to imagej-devel?
>
> Question related to development of ImageJ2 plugins, imglib2 and SCIFIO should be addressed to imagej-devel.
>
>> I?m also curious about other plugin developers, how many still develop in ImageJ1, and how many switched already to ImageJ2?
>
> Most developers are still writing ImageJ plugins.
>
>> By the way I already found part of the problem. The Image I tested my plugin tryout on was an old ImageJ image, instead of a new dataset ?image?. After enabling the SCIFIO library I could input an image in my plugin.
>> But still I think need more documentation and examples, kind of ?guide for switchers?.
>
> You should bring these issues up on the imagej-devel mailing list.
>
> Best regards,
>
> -wayne
>
>
>> On 7 jan. 2015, at 17:26, Rasband, Wayne (NIH/NIMH) [E] <rasbandw at mail.nih.gov<mailto:rasbandw at mail.nih.gov><mailto:rasbandw at mail.nih.gov<mailto:rasbandw at mail.nih.gov>>> wrote:
>>
>> Dear Polder,
>>
>> Your plugin is not an ImageJ2 plugin. It is an ImageJ plugin that you can easily compile and run it using the Plugins>Compile and Run command. Questions about ImageJ2 and mavin should be sent to the image-dev mailing list.
>>
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>> Best regards,
>>
>> -wayne
>>
>>
>>
>> On Jan 7, 2015, at 10:40 AM, Polder, Gerrit <gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl><mailto:gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl>>> wrote:
>>
>> I succeeded in making a maven project, but I?m still struggling in finding demo code and the api for writing a simple plugin.
>> For instance how to code a pluginfiler in imagej2?
>>
>> public class Get_blue_region implements PlugInFilter {
>> ImagePlus imp;
>> boolean DEBUG = false;
>>
>> public int setup(String arg, ImagePlus imp) {
>>     this.imp = imp;
>>     if (arg.equals("about")) {
>>         showAbout();
>>         return DONE;
>>     }
>>     return DOES_RGB;
>> }
>>
>> public void run(ImageProcessor ip) {
>>     ImagePlus calim = new ImagePlus("Blue Part", ip);
>>     ?????.
>> }
>> }
>>
>> sorry if this is a silly question, but I got stuck in all wikis and github repositories.
>>
>> Gerrit.
>>
>>
>> On 20 Dec 2014, at 19:11, Polder, Gerrit <gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl><mailto:gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl>><mailto:gerrit.polder at wur.nl<mailto:gerrit.polder at wur.nl>>> wrote:
>>
>> thanks Mark, this is exactly where I was looking for.
>>
>> Gerrit.
>>
>> On 20 dec. 2014, at 06:00, IMAGEJ automatic digest system <LISTSERV at LIST.NIH.GOV<mailto:LISTSERV at LIST.NIH.GOV><mailto:LISTSERV at LIST.NIH.GOV<mailto:LISTSERV at LIST.NIH.GOV>><mailto:LISTSERV at LIST.NIH.GOV<mailto:LISTSERV at LIST.NIH.GOV>>> wrote:
>>
>> Hi Gerrit,
>>
>> Now I like to switch to IJ2, I?m wondering whether there is an IJ2 example
>> project available.
>>
>> The ImageJ-tutorials <https://github.com/imagej/imagej-tutorials> project
>> is the intended starting point for developers. There is also an accompanying
>> entry <http://imagej.net/Writing_ImageJ2_plugins> in the Development
>> <http://imagej.net/Development> section of the ImageJ wiki.
>>
>> Thanks for the interest in ImageJ2 - let us know if you have any questions
>> or run into problems!
>>
>> Best,
>> Mark
>>
>> --
>> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
>>
>


_______________________________________________
ImageJ-devel mailing list
ImageJ-devel at imagej.net<mailto:ImageJ-devel at imagej.net>
http://imagej.net/mailman/listinfo/imagej-devel


_______________________________________________
ImageJ-devel mailing list
ImageJ-devel at imagej.net<mailto:ImageJ-devel at imagej.net>
http://imagej.net/mailman/listinfo/imagej-devel





From ctrueden at wisc.edu  Mon Jan 12 14:24:12 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 12 Jan 2015 14:24:12 -0600
Subject: [ImageJ-devel] Best way to cite new ImageJ?
In-Reply-To: <D0356C77-B6BE-4FFA-9307-FCA1413B85A2@gmail.com>
References: <D0356C77-B6BE-4FFA-9307-FCA1413B85A2@gmail.com>
Message-ID: <CADN69y=WVrK+fzMYLjHXr_FwwrqN5YetCG0cyVtJHOBMU7oy6A@mail.gmail.com>

Hi Jay,

> how to cite the new frameworks (e.g., ImageJ2, scijava etc)?

Unfortunately, several of the new components do not have publications yet.
For now, you can cite the respective websites, or else cite ImageJ or Fiji
as a whole.

For details, see:
    http://imagej.net/Citing

Regards,
Curtis

On Sat, Jan 10, 2015 at 12:31 PM, Jay Warrick <jay.w.warrick at gmail.com>
wrote:

> Probably somewhere obvious but I couldn't see if you have somewhere
> written how to cite the new frameworks (e.g., ImageJ2, scijava etc)?
> Suggestions?
>
> Thanks,
>
> Jay
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150112/736eaaef/attachment.html>

From hiner at wisc.edu  Tue Jan 13 15:20:36 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Tue, 13 Jan 2015 15:20:36 -0600
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
Message-ID: <CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>

Hi Hadrien,

 Unsurprisingly, cropping and writing OME-TIFFs was quite broken.

 It's working for me now, as of the latest SCIFIO[1] and SCIFIO-OME-XML[2].
Note that these libraries have updated dependencies compared to what's
currently on Fiji, so you can't just drop these .jars into your Fiji
installation if you want to test locally; you need to update the
dependencies as well. The easiest way to do this would be to just clone
Imagej.git[3] and install it into your Fiji.app directory by running:

mvn -Dimagej.app.directory=/path/to/Fiji.app/ -Ddelete.other.versions=true

We'll push these changes up to Fiji this week, and I will find or write
better instructions for local testing.

Hope this helps. Let us know if you have any questions/problems. Thanks
again for finding this issue!

Best,
- Mark

[1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
[2]
https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
[3] https://github.com/imagej/imagej

On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> Ok. Let me know when you want me to test your changes. I also tested
> fix-writing branch and I didn't notice any changes.
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
> > Hi Hadrien,
> >
> > I've identified at least two bugs that could be affecting you here.
> >
> > First of all, there was a bug in the OME-TIFF format writing out
> > multi-dimensional images. That's fixed on a branch but not uploaded to
> Fiji
> > yet [1].
> >
> > Second, it seems like cropping is restricting pixel reads to the correct
> > region but then doesn't change the image size.
> >
> > I'm hoping when I fix the second issue writing cropped regions will be
> > fixed.
> >
> > Thanks for the great feedback!
> > - Mark
> >
> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
> >
> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary <hadrien.mary at gmail.com>
> > wrote:
> >>
> >> I also confirm the same behaviour when replacing original file by OME
> >> sample data :
> >>
> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip
> .
> >>
> >> --
> >> Hadrien Mary
> >>
> >> Ph.D student in Biology
> >> Tournier-Gachet Team
> >> CNRS - LBCMCP - UMR 5088
> >>
> >> Universit? de Toulouse - B?t. 4R3B1
> >> 118, route de Narbonne - 31062 Toulouse
> >>
> >>
> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary <hadrien.mary at gmail.com>
> >> wrote:
> >> > After some investigations I think there is a bug with ImgSaver. In the
> >> > following script, X, Y crop is fine but axes informations (T and Z)
> >> > are lost and all frames appears on the same axes. Now if I replace
> >> > "target = "/home/hadim/cropped.tif" by "target =
> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
> >> > image has the same dimensions than original however axes informations
> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
> >> > totally incoherent which is not the case in cropped.tif.
> >> >
> >> > Files can be found here :
> >> >
> >> >
> https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
> >> >
> >> > Archive contains cropped.tif, cropped.ome.tif and original.ome.tif.
> >> >
> >> > The script:
> >> >
> >> > ---------------------------------------------------
> >> > from io.scif import SCIFIO
> >> > from io.scif.config import SCIFIOConfig
> >> > from io.scif.img import ImageRegion
> >> > from io.scif.img import ImgOpener
> >> > from io.scif.img import ImgSaver
> >> > from net.imglib2.meta import Axes
> >> >
> >> > fname = "/home/hadim/original.ome.tif"
> >> > target = "/home/hadim/cropped.tif"
> >> >
> >> > axes = [Axes.X, Axes.Y]
> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
> >> > config = SCIFIOConfig()
> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >> >
> >> > opener = ImgOpener()
> >> > imps = opener.openImgs(fname, config)
> >> > imp = imps[0]
> >> >
> >> > saver = ImgSaver()
> >> > saver.saveImg(target, imp)
> >> >
> >> > print('Done')
> >> > ---------------------------------------------------
> >> >
> >> >
> >> > --
> >> > Hadrien Mary
> >> >
> >> >
> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary <hadrien.mary at gmail.com
> >
> >> > wrote:
> >> >> Thanks for the tip (reminder to me: always look for example in
> tests!).
> >> >>
> >> >> Unfortunately crop does not work... I will try to do more tests
> >> >> tomorrow or wait for you or someone else to have a look.
> >> >>
> >> >> Updated code:
> >> >>
> >> >> from ij import IJ
> >> >> from ij import ImagePlus
> >> >>
> >> >> from io.scif import SCIFIO
> >> >> from io.scif.config import SCIFIOConfig
> >> >> from io.scif.img import ImageRegion
> >> >> from io.scif.img import ImgOpener
> >> >> from io.scif.img import ImgSaver
> >> >> from net.imglib2.meta import Axes
> >> >>
> >> >> fname = "/home/hadim/original.ome.tif"
> >> >> target = "/home/hadim/cropped.ome.tif"
> >> >>
> >> >> axes = [Axes.X, Axes.Y]
> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
> >> >> config = SCIFIOConfig()
> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >> >>
> >> >> opener = ImgOpener()
> >> >> imps = opener.openImgs(fname, config)
> >> >> imp = imps[0]
> >> >>
> >> >> saver = ImgSaver()
> >> >> saver.saveImg(target, imp)
> >> >>
> >> >> print('Done')
> >> >>
> >> >> --
> >> >> Hadrien Mary
> >> >>
> >> >>
> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu>
> >> >> wrote:
> >> >>> Hi Hadrien,
> >> >>>
> >> >>>> I would like to be able to crop a region in X and Y while
> >> >>>> keeping any other dimensions which could exist (C, Z, T).
> >> >>>
> >> >>> Here's some Java:
> >> >>>
> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
> >> >>>
> >> >>> Adapted from here:
> >> >>>
> >> >>>
> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
> >> >>>
> >> >>> And untested.
> >> >>>
> >> >>> HTH,
> >> >>> Curtis
> >> >>>
> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary <
> hadrien.mary at gmail.com>
> >> >>> wrote:
> >> >>>>
> >> >>>> After some investigations, I'm pretty sure I don't instanciate
> >> >>>> ImageRegion correctly. Doc and source code didn't help me... I
> would
> >> >>>> like to be able to crop a region in X and Y while keeping any other
> >> >>>> dimensions which could exist (C, Z, T).
> >> >>>>
> >> >>>> --
> >> >>>> Hadrien Mary
> >> >>>>
> >> >>>>
> >> >>>>
> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
> >> >>>> <hadrien.mary at gmail.com>
> >> >>>> wrote:
> >> >>>> > Thank you Curtis for the answer.
> >> >>>> >
> >> >>>> > I tried to apply what you told me and the code now works without
> >> >>>> > error. However the saved cropped image is not cropped (same size
> as
> >> >>>> > original) and pixel values are modified).
> >> >>>> >
> >> >>>> > Script:
> >> >>>> >
> >> >>>> > from io.scif.config import SCIFIOConfig
> >> >>>> > from io.scif.img import ImageRegion
> >> >>>> > from io.scif.img import ImgOpener
> >> >>>> > from io.scif.img import ImgSaver
> >> >>>> >
> >> >>>> > fname = "/home/hadim/original.ome.tif"
> >> >>>> > target = "/home/hadim/cropped.ome.tif"
> >> >>>> >
> >> >>>> > config = SCIFIOConfig()
> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
> >> >>>> > config.imgOpenerSetRegion(region)
> >> >>>> >
> >> >>>> > opener = ImgOpener()
> >> >>>> > imps = opener.openImgs(fname, config)
> >> >>>> > imp = imps[0]
> >> >>>> >
> >> >>>> > print(imps)
> >> >>>> >
> >> >>>> > saver = ImgSaver()
> >> >>>> > saver.saveImg(target, imp)
> >> >>>> >
> >> >>>> > Thanks again for your time. Don't be sorry if you don't have time
> >> >>>> > to
> >> >>>> > write an example.
> >> >>>> >
> >> >>>> > I will be happy to provide some python/scifio examples scripts.
> >> >>>> >
> >> >>>> >
> >> >>>> > --
> >> >>>> > Hadrien Mary
> >> >>>> >
> >> >>>> > Ph.D student in Biology
> >> >>>> > Tournier-Gachet Team
> >> >>>> > CNRS - LBCMCP - UMR 5088
> >> >>>> >
> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
> >> >>>> > 118, route de Narbonne - 31062 Toulouse
> >> >>>> >
> >> >>>> >
> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden <ctrueden at wisc.edu
> >
> >> >>>> > wrote:
> >> >>>> >> Hi Hadrien,
> >> >>>> >>
> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
> doesn
> >> >>>> >>> not
> >> >>>> >>> work.
> >> >>>> >>
> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2 data
> >> >>>> >> structures, not
> >> >>>> >> ImagePlus objects.
> >> >>>> >>
> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion function
> >> >>>> >>> in
> >> >>>> >>> SCIFIO ?
> >> >>>> >>
> >> >>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1]
> on
> >> >>>> >> it,
> >> >>>> >> then
> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back an
> >> >>>> >> ImgLib2
> >> >>>> >> data
> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
> >> >>>> >>
> >> >>>> >> I'm sorry that I don't have time to whip up an example for you
> >> >>>> >> right
> >> >>>> >> now. It
> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use the
> >> >>>> >> ImgOpener
> >> >>>> >> and
> >> >>>> >> ImgSaver, since they are much higher level APIs akin to the
> >> >>>> >> Bio-Formats
> >> >>>> >> "BF"
> >> >>>> >> functionality... please feel welcome to contribute some!
> >> >>>> >>
> >> >>>> >> Regards,
> >> >>>> >> Curtis
> >> >>>> >>
> >> >>>> >> [1]
> >> >>>> >>
> >> >>>> >>
> >> >>>> >>
> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
> >> >>>> >>
> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
> >> >>>> >> <hadrien.mary at gmail.com>
> >> >>>> >> wrote:
> >> >>>> >>>
> >> >>>> >>> Hi,
> >> >>>> >>>
> >> >>>> >>> I am writing a python macro which iterate over all rois in ROI
> >> >>>> >>> Manager
> >> >>>> >>> and then use setCropRegion function from bioformat plugin to
> open
> >> >>>> >>> a
> >> >>>> >>> cropped region of an image.
> >> >>>> >>>
> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
> doesn
> >> >>>> >>> not
> >> >>>> >>> work.
> >> >>>> >>>
> >> >>>> >>> (I am using an updated version of Fiji.)
> >> >>>> >>>
> >> >>>> >>> Here is my script:
> >> >>>> >>>
> >> >>>> >>> from ij.plugin.frame import RoiManager
> >> >>>> >>> from ij import IJ
> >> >>>> >>> from io.scif.img import ImgSaver
> >> >>>> >>>
> >> >>>> >>> from loci.plugins import BF
> >> >>>> >>> from loci.plugins.in import ImporterOptions
> >> >>>> >>> from loci.common import Region
> >> >>>> >>>
> >> >>>> >>> import os
> >> >>>> >>>
> >> >>>> >>> # Get current image filename
> >> >>>> >>> imp = IJ.getImage()
> >> >>>> >>> f = imp.getOriginalFileInfo()
> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
> >> >>>> >>>
> >> >>>> >>> IJ.log('Image filename is %s' % fname)
> >> >>>> >>>
> >> >>>> >>> # Iterate over all ROIs from ROI Manager
> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
> >> >>>> >>> for i, roi in enumerate(rois):
> >> >>>> >>>
> >> >>>> >>>     crop_id = i +1
> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
> >> >>>> >>>
> >> >>>> >>>     bounds = roi.getBounds()
> >> >>>> >>>
> >> >>>> >>>     x = bounds.x
> >> >>>> >>>     y = bounds.y
> >> >>>> >>>     w = bounds.width
> >> >>>> >>>     h = bounds.height
> >> >>>> >>>
> >> >>>> >>>     # Import only cropped region of the image
> >> >>>> >>>     options = ImporterOptions()
> >> >>>> >>>     options.setCrop(True)
> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
> >> >>>> >>>     options.setId(fname)
> >> >>>> >>>     imps = BF.openImagePlus(options)
> >> >>>> >>>
> >> >>>> >>>     imp = imps[0]
> >> >>>> >>>     imp.show()
> >> >>>> >>>
> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
> >> >>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
> >> >>>> >>>     imp.setTitle(crop_basename)
> >> >>>> >>>
> >> >>>> >>>     # Save image
> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
> >> >>>> >>>     saver = ImgSaver()
> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >> >>>> >>>
> >> >>>> >>> IJ.log('Done')
> >> >>>> >>>
> >> >>>> >>> It fails with this error:
> >> >>>> >>>
> >> >>>> >>> Traceback (most recent call last):
> >> >>>> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
> >> >>>> >>> line
> >> >>>> >>> 49, in <module>
> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
> io.scif.Writer,
> >> >>>> >>> String
> >> >>>> >>>
> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> >> >>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >> >>>> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >> >>>> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >> >>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >> >>>> >>> at
> >> >>>> >>>
> >> >>>> >>>
> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
> >> >>>> >>>
> >> >>>> >>> Three questions:
> >> >>>> >>>
> >> >>>> >>> how can I write cropped image (I need to write them as OME Tiff
> >> >>>> >>> so I
> >> >>>> >>> need BF or SCIFIO).
> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion function
> >> >>>> >>> in
> >> >>>> >>> SCIFIO
> >> >>>> >>> ?
> >> >>>> >>> I am currently using RoiManager.getInstance().getRoisAsArray()
> to
> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager instance
> >> >>>> >>> from
> >> >>>> >>> RoiSet.zip file ?
> >> >>>> >>>
> >> >>>> >>> Any help would be very appreciated.
> >> >>>> >>>
> >> >>>> >>> Thanks !
> >> >>>> >>>
> >> >>>> >>> ?
> >> >>>> >>> Hadrien Mary
> >> >>>> >>>
> >> >>>> >>> _______________________________________________
> >> >>>> >>> ImageJ-devel mailing list
> >> >>>> >>> ImageJ-devel at imagej.net
> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
> >> >>>> >>
> >> >>>> >>
> >> >>>
> >> >>>
> >>
> >> _______________________________________________
> >> ImageJ-devel mailing list
> >> ImageJ-devel at imagej.net
> >> http://imagej.net/mailman/listinfo/imagej-devel
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150113/2108b222/attachment-0001.html>

From hadrien.mary at gmail.com  Tue Jan 13 15:59:46 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Tue, 13 Jan 2015 22:59:46 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
Message-ID: <CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>

Thank you Mark !

Sorry if it's off topic but I tried to run my script and I got a
python error probably related to type difference between python and
java. It's not the first time I saw this kind of message and I'd like
to know how to resolve it. Note that for python script I mainly use
javadoc as documentation.

The error is below coming from almost the same script as before in this thread.

********************************
Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
Traceback (most recent call last):
  File "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
line 17, in <module>
    config.imgOpenerSetRegion(ImageRegion(axes, ranges))
TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
net.imagej.axis.AxisType[]

at org.python.core.Py.TypeError(Py.java:235)
at org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
at org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
at org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
at org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
at org.python.core.PyObject.__call__(PyObject.java:345)
at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
at org.python.core.PyMethod.__call__(PyMethod.java:211)
at org.python.core.PyMethod.__call__(PyMethod.java:206)
at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
at org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
at org.python.core.PyType.type___call__(PyType.java:1565)
at org.python.core.PyType.__call__(PyType.java:1548)
at org.python.core.PyObject.__call__(PyObject.java:404)
at org.python.core.PyObject.__call__(PyObject.java:408)
at org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
at org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
at org.python.core.PyTableCode.call(PyTableCode.java:165)
at org.python.core.PyCode.call(PyCode.java:18)
at org.python.core.Py.runCode(Py.java:1275)
at org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
at org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
at java.util.concurrent.FutureTask.run(FutureTask.java:262)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at java.lang.Thread.run(Thread.java:745)
************************************

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
> Hi Hadrien,
>
>  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
>
>  It's working for me now, as of the latest SCIFIO[1] and SCIFIO-OME-XML[2].
> Note that these libraries have updated dependencies compared to what's
> currently on Fiji, so you can't just drop these .jars into your Fiji
> installation if you want to test locally; you need to update the
> dependencies as well. The easiest way to do this would be to just clone
> Imagej.git[3] and install it into your Fiji.app directory by running:
>
> mvn -Dimagej.app.directory=/path/to/Fiji.app/ -Ddelete.other.versions=true
>
> We'll push these changes up to Fiji this week, and I will find or write
> better instructions for local testing.
>
> Hope this helps. Let us know if you have any questions/problems. Thanks
> again for finding this issue!
>
> Best,
> - Mark
>
> [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
> [2]
> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
> [3] https://github.com/imagej/imagej
>
> On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>>
>> Ok. Let me know when you want me to test your changes. I also tested
>> fix-writing branch and I didn't notice any changes.
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> > Hi Hadrien,
>> >
>> > I've identified at least two bugs that could be affecting you here.
>> >
>> > First of all, there was a bug in the OME-TIFF format writing out
>> > multi-dimensional images. That's fixed on a branch but not uploaded to
>> > Fiji
>> > yet [1].
>> >
>> > Second, it seems like cropping is restricting pixel reads to the correct
>> > region but then doesn't change the image size.
>> >
>> > I'm hoping when I fix the second issue writing cropped regions will be
>> > fixed.
>> >
>> > Thanks for the great feedback!
>> > - Mark
>> >
>> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>> >
>> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary <hadrien.mary at gmail.com>
>> > wrote:
>> >>
>> >> I also confirm the same behaviour when replacing original file by OME
>> >> sample data :
>> >>
>> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>> >>
>> >> --
>> >> Hadrien Mary
>> >>
>> >> Ph.D student in Biology
>> >> Tournier-Gachet Team
>> >> CNRS - LBCMCP - UMR 5088
>> >>
>> >> Universit? de Toulouse - B?t. 4R3B1
>> >> 118, route de Narbonne - 31062 Toulouse
>> >>
>> >>
>> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> >> wrote:
>> >> > After some investigations I think there is a bug with ImgSaver. In
>> >> > the
>> >> > following script, X, Y crop is fine but axes informations (T and Z)
>> >> > are lost and all frames appears on the same axes. Now if I replace
>> >> > "target = "/home/hadim/cropped.tif" by "target =
>> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
>> >> > image has the same dimensions than original however axes informations
>> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
>> >> > totally incoherent which is not the case in cropped.tif.
>> >> >
>> >> > Files can be found here :
>> >> >
>> >> >
>> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>> >> >
>> >> > Archive contains cropped.tif, cropped.ome.tif and original.ome.tif.
>> >> >
>> >> > The script:
>> >> >
>> >> > ---------------------------------------------------
>> >> > from io.scif import SCIFIO
>> >> > from io.scif.config import SCIFIOConfig
>> >> > from io.scif.img import ImageRegion
>> >> > from io.scif.img import ImgOpener
>> >> > from io.scif.img import ImgSaver
>> >> > from net.imglib2.meta import Axes
>> >> >
>> >> > fname = "/home/hadim/original.ome.tif"
>> >> > target = "/home/hadim/cropped.tif"
>> >> >
>> >> > axes = [Axes.X, Axes.Y]
>> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>> >> > config = SCIFIOConfig()
>> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >> >
>> >> > opener = ImgOpener()
>> >> > imps = opener.openImgs(fname, config)
>> >> > imp = imps[0]
>> >> >
>> >> > saver = ImgSaver()
>> >> > saver.saveImg(target, imp)
>> >> >
>> >> > print('Done')
>> >> > ---------------------------------------------------
>> >> >
>> >> >
>> >> > --
>> >> > Hadrien Mary
>> >> >
>> >> >
>> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>> >> > <hadrien.mary at gmail.com>
>> >> > wrote:
>> >> >> Thanks for the tip (reminder to me: always look for example in
>> >> >> tests!).
>> >> >>
>> >> >> Unfortunately crop does not work... I will try to do more tests
>> >> >> tomorrow or wait for you or someone else to have a look.
>> >> >>
>> >> >> Updated code:
>> >> >>
>> >> >> from ij import IJ
>> >> >> from ij import ImagePlus
>> >> >>
>> >> >> from io.scif import SCIFIO
>> >> >> from io.scif.config import SCIFIOConfig
>> >> >> from io.scif.img import ImageRegion
>> >> >> from io.scif.img import ImgOpener
>> >> >> from io.scif.img import ImgSaver
>> >> >> from net.imglib2.meta import Axes
>> >> >>
>> >> >> fname = "/home/hadim/original.ome.tif"
>> >> >> target = "/home/hadim/cropped.ome.tif"
>> >> >>
>> >> >> axes = [Axes.X, Axes.Y]
>> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>> >> >> config = SCIFIOConfig()
>> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >> >>
>> >> >> opener = ImgOpener()
>> >> >> imps = opener.openImgs(fname, config)
>> >> >> imp = imps[0]
>> >> >>
>> >> >> saver = ImgSaver()
>> >> >> saver.saveImg(target, imp)
>> >> >>
>> >> >> print('Done')
>> >> >>
>> >> >> --
>> >> >> Hadrien Mary
>> >> >>
>> >> >>
>> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu>
>> >> >> wrote:
>> >> >>> Hi Hadrien,
>> >> >>>
>> >> >>>> I would like to be able to crop a region in X and Y while
>> >> >>>> keeping any other dimensions which could exist (C, Z, T).
>> >> >>>
>> >> >>> Here's some Java:
>> >> >>>
>> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
>> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>> >> >>>
>> >> >>> Adapted from here:
>> >> >>>
>> >> >>>
>> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>> >> >>>
>> >> >>> And untested.
>> >> >>>
>> >> >>> HTH,
>> >> >>> Curtis
>> >> >>>
>> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>> >> >>> <hadrien.mary at gmail.com>
>> >> >>> wrote:
>> >> >>>>
>> >> >>>> After some investigations, I'm pretty sure I don't instanciate
>> >> >>>> ImageRegion correctly. Doc and source code didn't help me... I
>> >> >>>> would
>> >> >>>> like to be able to crop a region in X and Y while keeping any
>> >> >>>> other
>> >> >>>> dimensions which could exist (C, Z, T).
>> >> >>>>
>> >> >>>> --
>> >> >>>> Hadrien Mary
>> >> >>>>
>> >> >>>>
>> >> >>>>
>> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>> >> >>>> <hadrien.mary at gmail.com>
>> >> >>>> wrote:
>> >> >>>> > Thank you Curtis for the answer.
>> >> >>>> >
>> >> >>>> > I tried to apply what you told me and the code now works without
>> >> >>>> > error. However the saved cropped image is not cropped (same size
>> >> >>>> > as
>> >> >>>> > original) and pixel values are modified).
>> >> >>>> >
>> >> >>>> > Script:
>> >> >>>> >
>> >> >>>> > from io.scif.config import SCIFIOConfig
>> >> >>>> > from io.scif.img import ImageRegion
>> >> >>>> > from io.scif.img import ImgOpener
>> >> >>>> > from io.scif.img import ImgSaver
>> >> >>>> >
>> >> >>>> > fname = "/home/hadim/original.ome.tif"
>> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>> >> >>>> >
>> >> >>>> > config = SCIFIOConfig()
>> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>> >> >>>> > config.imgOpenerSetRegion(region)
>> >> >>>> >
>> >> >>>> > opener = ImgOpener()
>> >> >>>> > imps = opener.openImgs(fname, config)
>> >> >>>> > imp = imps[0]
>> >> >>>> >
>> >> >>>> > print(imps)
>> >> >>>> >
>> >> >>>> > saver = ImgSaver()
>> >> >>>> > saver.saveImg(target, imp)
>> >> >>>> >
>> >> >>>> > Thanks again for your time. Don't be sorry if you don't have
>> >> >>>> > time
>> >> >>>> > to
>> >> >>>> > write an example.
>> >> >>>> >
>> >> >>>> > I will be happy to provide some python/scifio examples scripts.
>> >> >>>> >
>> >> >>>> >
>> >> >>>> > --
>> >> >>>> > Hadrien Mary
>> >> >>>> >
>> >> >>>> > Ph.D student in Biology
>> >> >>>> > Tournier-Gachet Team
>> >> >>>> > CNRS - LBCMCP - UMR 5088
>> >> >>>> >
>> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>> >> >>>> >
>> >> >>>> >
>> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>> >> >>>> > <ctrueden at wisc.edu>
>> >> >>>> > wrote:
>> >> >>>> >> Hi Hadrien,
>> >> >>>> >>
>> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
>> >> >>>> >>> doesn
>> >> >>>> >>> not
>> >> >>>> >>> work.
>> >> >>>> >>
>> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2 data
>> >> >>>> >> structures, not
>> >> >>>> >> ImagePlus objects.
>> >> >>>> >>
>> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>> >> >>>> >>> function
>> >> >>>> >>> in
>> >> >>>> >>> SCIFIO ?
>> >> >>>> >>
>> >> >>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion [1]
>> >> >>>> >> on
>> >> >>>> >> it,
>> >> >>>> >> then
>> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back an
>> >> >>>> >> ImgLib2
>> >> >>>> >> data
>> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
>> >> >>>> >>
>> >> >>>> >> I'm sorry that I don't have time to whip up an example for you
>> >> >>>> >> right
>> >> >>>> >> now. It
>> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use the
>> >> >>>> >> ImgOpener
>> >> >>>> >> and
>> >> >>>> >> ImgSaver, since they are much higher level APIs akin to the
>> >> >>>> >> Bio-Formats
>> >> >>>> >> "BF"
>> >> >>>> >> functionality... please feel welcome to contribute some!
>> >> >>>> >>
>> >> >>>> >> Regards,
>> >> >>>> >> Curtis
>> >> >>>> >>
>> >> >>>> >> [1]
>> >> >>>> >>
>> >> >>>> >>
>> >> >>>> >>
>> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>> >> >>>> >>
>> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>> >> >>>> >> <hadrien.mary at gmail.com>
>> >> >>>> >> wrote:
>> >> >>>> >>>
>> >> >>>> >>> Hi,
>> >> >>>> >>>
>> >> >>>> >>> I am writing a python macro which iterate over all rois in ROI
>> >> >>>> >>> Manager
>> >> >>>> >>> and then use setCropRegion function from bioformat plugin to
>> >> >>>> >>> open
>> >> >>>> >>> a
>> >> >>>> >>> cropped region of an image.
>> >> >>>> >>>
>> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
>> >> >>>> >>> doesn
>> >> >>>> >>> not
>> >> >>>> >>> work.
>> >> >>>> >>>
>> >> >>>> >>> (I am using an updated version of Fiji.)
>> >> >>>> >>>
>> >> >>>> >>> Here is my script:
>> >> >>>> >>>
>> >> >>>> >>> from ij.plugin.frame import RoiManager
>> >> >>>> >>> from ij import IJ
>> >> >>>> >>> from io.scif.img import ImgSaver
>> >> >>>> >>>
>> >> >>>> >>> from loci.plugins import BF
>> >> >>>> >>> from loci.plugins.in import ImporterOptions
>> >> >>>> >>> from loci.common import Region
>> >> >>>> >>>
>> >> >>>> >>> import os
>> >> >>>> >>>
>> >> >>>> >>> # Get current image filename
>> >> >>>> >>> imp = IJ.getImage()
>> >> >>>> >>> f = imp.getOriginalFileInfo()
>> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>> >> >>>> >>>
>> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>> >> >>>> >>>
>> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>> >> >>>> >>> for i, roi in enumerate(rois):
>> >> >>>> >>>
>> >> >>>> >>>     crop_id = i +1
>> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>> >> >>>> >>>
>> >> >>>> >>>     bounds = roi.getBounds()
>> >> >>>> >>>
>> >> >>>> >>>     x = bounds.x
>> >> >>>> >>>     y = bounds.y
>> >> >>>> >>>     w = bounds.width
>> >> >>>> >>>     h = bounds.height
>> >> >>>> >>>
>> >> >>>> >>>     # Import only cropped region of the image
>> >> >>>> >>>     options = ImporterOptions()
>> >> >>>> >>>     options.setCrop(True)
>> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>> >> >>>> >>>     options.setId(fname)
>> >> >>>> >>>     imps = BF.openImagePlus(options)
>> >> >>>> >>>
>> >> >>>> >>>     imp = imps[0]
>> >> >>>> >>>     imp.show()
>> >> >>>> >>>
>> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>> >> >>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
>> >> >>>> >>>     imp.setTitle(crop_basename)
>> >> >>>> >>>
>> >> >>>> >>>     # Save image
>> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>> >> >>>> >>>     saver = ImgSaver()
>> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >> >>>> >>>
>> >> >>>> >>> IJ.log('Done')
>> >> >>>> >>>
>> >> >>>> >>> It fails with this error:
>> >> >>>> >>>
>> >> >>>> >>> Traceback (most recent call last):
>> >> >>>> >>>   File "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>> >> >>>> >>> line
>> >> >>>> >>> 49, in <module>
>> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>> >> >>>> >>> io.scif.Writer,
>> >> >>>> >>> String
>> >> >>>> >>>
>> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>> >> >>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >> >>>> >>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >> >>>> >>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >> >>>> >>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >> >>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >> >>>> >>> at
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>>
>> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>> >> >>>> >>>
>> >> >>>> >>> Three questions:
>> >> >>>> >>>
>> >> >>>> >>> how can I write cropped image (I need to write them as OME
>> >> >>>> >>> Tiff
>> >> >>>> >>> so I
>> >> >>>> >>> need BF or SCIFIO).
>> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>> >> >>>> >>> function
>> >> >>>> >>> in
>> >> >>>> >>> SCIFIO
>> >> >>>> >>> ?
>> >> >>>> >>> I am currently using RoiManager.getInstance().getRoisAsArray()
>> >> >>>> >>> to
>> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
>> >> >>>> >>> instance
>> >> >>>> >>> from
>> >> >>>> >>> RoiSet.zip file ?
>> >> >>>> >>>
>> >> >>>> >>> Any help would be very appreciated.
>> >> >>>> >>>
>> >> >>>> >>> Thanks !
>> >> >>>> >>>
>> >> >>>> >>> ?
>> >> >>>> >>> Hadrien Mary
>> >> >>>> >>>
>> >> >>>> >>> _______________________________________________
>> >> >>>> >>> ImageJ-devel mailing list
>> >> >>>> >>> ImageJ-devel at imagej.net
>> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>> >> >>>> >>
>> >> >>>> >>
>> >> >>>
>> >> >>>
>> >>
>> >> _______________________________________________
>> >> ImageJ-devel mailing list
>> >> ImageJ-devel at imagej.net
>> >> http://imagej.net/mailman/listinfo/imagej-devel
>> >
>> >
>
>


From ctrueden at wisc.edu  Tue Jan 13 16:08:31 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 13 Jan 2015 16:08:31 -0600
Subject: [ImageJ-devel] Differences between .fft.FourierTransform and
	.fft2.FFT
In-Reply-To: <CAMWa8i2HeyXzoXyAu=d7+k7hSk+3b4TB7qSYmupZx7bhisaGRg@mail.gmail.com>
References: <CADN69ynLSTUuN4CTVmhr=7Rxu68s8Vbm-LUw1nVbABETJqDrnA@mail.gmail.com>
	<334BAF73-798D-45B6-A9E2-D28951F40E97@dsuk.biz>
	<CAMWa8i2HeyXzoXyAu=d7+k7hSk+3b4TB7qSYmupZx7bhisaGRg@mail.gmail.com>
Message-ID: <CADN69ymoxUB1LSdTn+VwhRpNBLkjfEqOYDVuS0nDxM7yb-b70g@mail.gmail.com>

Hi Michael,

Brian Northan wrote:
> If you manage to get the tutorial working with the new FFT I think
> that would be a great addition to the tutorial.

Agreed. If you manage to get tutorial 6C working with the updated FFT API,
a Pull Request would be very helpful!

https://github.com/imglib/imglib2-tutorials
https://help.github.com/articles/using-pull-requests/

Thanks,
Curtis

On Wed, Dec 17, 2014 at 8:42 AM, Brian Northan <bnorthan at gmail.com> wrote:

> Hi Micheal
>
> I am not entirely familiar with 'FourierTransform' because I've been using
> the newer FFT.java class but I think the differences you are seeing are
> because 'FourierTransform' has different preprocessing and extension
> related settings.
>
> If you look at FourierTransform.java you can see that the constructor you
> used in turn calls another constructor
>
>
> https://github.com/imglib/imglib2-algorithm-gpl/blob/master/src/main/java/net/imglib2/algorithm/fft/FourierTransform.java
>
> It looks like the 'preprocessing' option defaults to
> "relativeExtensionFade' and 'relativeImageExtension' is set to 0.25.
>
> In contrast FFT.java only extends to the nearest 'fast' FFT size and uses
> a constant padding strategy.
>
> Keep us up to date on how things are going.  If you manage to get the
> tutorial working with the new FFT I think that would be a great addition to
> the tutorial.
>
> Brian
>
>
>
> On Wed, Dec 17, 2014 at 3:54 AM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>>
>> I am trying to reproduce example
>>
>> imglib2-tutorials Example6c
>>
>>
>> https://github.com/imglib/imglib2-tutorials/blob/master/src/main/java/Example6c.java
>>
>> using the new net.imglib2.algorithm.fft2.FFT rather than the old
>> deprecated net.imglib2.algorithm.fft.FourierTransform
>>
>> The original example code does:
>>
>>         // compute fourier transform of the template
>>         final FourierTransform< FloatType, ComplexFloatType> fft
>>                 = new FourierTransform< FloatType, ComplexFloatType>(
>>                         template, new ComplexFloatType());
>>         fft.process();
>>         Img< ComplexFloatType> templateFFT = fft.getResult();
>>
>> Which produces an image of size templateFFT minX=0 minY=0 maxX=40 maxY=79
>>
>> My new code looks like this:
>>
>>             ImgFactory<ComplexFloatType> fftImgFactory = null;
>>             try {
>>                 fftImgFactory = template.factory().imgFactory(new
>> ComplexFloatType());
>>             } catch (IncompatibleTypeException ex) {
>>                 fftImgFactory = null;
>>             }
>>
>>             // compute fourier transform of the template
>>             Img< ComplexFloatType> templateFFT2 =
>> FFT.realToComplex(template, fftImgFactory);
>>
>> Which produces an image of size templateFFT2 minX=0 minY=0 maxX=36 maxY=71
>>
>> Also it looks like the image produced by the old FourierTransform and new
>> FFT differ in that the results are shifted in X and Y.
>>
>> Can anyone help?
>>
>> In particular I want to achieve the image alignment functionality that is
>> done in Example6c.java without using deprecated code.
>>
>> Many thanks ? Michael Ellis
>>
>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150113/5ef5d095/attachment-0001.html>

From hiner at wisc.edu  Wed Jan 14 05:58:12 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 14 Jan 2015 05:58:12 -0600
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
Message-ID: <CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>

Hi Hadrien,

>Sorry if it's off topic but I tried to run my script and I got a python
error

Oh no! This is totally my fault. I had to update your script for the new
dependencies I mentioned and forgot to paste the new version in my response
yesterday:

>from net.imglib2.meta import Axes

This import needs to change to:

from net.imagej.axis import Axes

Sorry about that!

Best,
Mark


On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> Thank you Mark !
>
> Sorry if it's off topic but I tried to run my script and I got a
> python error probably related to type difference between python and
> java. It's not the first time I saw this kind of message and I'd like
> to know how to resolve it. Note that for python script I mainly use
> javadoc as documentation.
>
> The error is below coming from almost the same script as before in this
> thread.
>
> ********************************
> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
> Traceback (most recent call last):
>   File
> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
> line 17, in <module>
>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
> net.imagej.axis.AxisType[]
>
> at org.python.core.Py.TypeError(Py.java:235)
> at
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> at
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> at
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> at
> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
> at org.python.core.PyObject.__call__(PyObject.java:345)
> at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
> at org.python.core.PyMethod.__call__(PyMethod.java:211)
> at org.python.core.PyMethod.__call__(PyMethod.java:206)
> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
> at
> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
> at org.python.core.PyType.type___call__(PyType.java:1565)
> at org.python.core.PyType.__call__(PyType.java:1548)
> at org.python.core.PyObject.__call__(PyObject.java:404)
> at org.python.core.PyObject.__call__(PyObject.java:408)
> at
> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
> at
> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> at org.python.core.PyCode.call(PyCode.java:18)
> at org.python.core.Py.runCode(Py.java:1275)
> at
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> at
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> at java.lang.Thread.run(Thread.java:745)
> ************************************
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
> > Hi Hadrien,
> >
> >  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
> >
> >  It's working for me now, as of the latest SCIFIO[1] and
> SCIFIO-OME-XML[2].
> > Note that these libraries have updated dependencies compared to what's
> > currently on Fiji, so you can't just drop these .jars into your Fiji
> > installation if you want to test locally; you need to update the
> > dependencies as well. The easiest way to do this would be to just clone
> > Imagej.git[3] and install it into your Fiji.app directory by running:
> >
> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
> -Ddelete.other.versions=true
> >
> > We'll push these changes up to Fiji this week, and I will find or write
> > better instructions for local testing.
> >
> > Hope this helps. Let us know if you have any questions/problems. Thanks
> > again for finding this issue!
> >
> > Best,
> > - Mark
> >
> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
> > [2]
> >
> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
> > [3] https://github.com/imagej/imagej
> >
> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary <hadrien.mary at gmail.com>
> > wrote:
> >>
> >> Ok. Let me know when you want me to test your changes. I also tested
> >> fix-writing branch and I didn't notice any changes.
> >>
> >> --
> >> Hadrien Mary
> >>
> >> Ph.D student in Biology
> >> Tournier-Gachet Team
> >> CNRS - LBCMCP - UMR 5088
> >>
> >> Universit? de Toulouse - B?t. 4R3B1
> >> 118, route de Narbonne - 31062 Toulouse
> >>
> >>
> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
> >> > Hi Hadrien,
> >> >
> >> > I've identified at least two bugs that could be affecting you here.
> >> >
> >> > First of all, there was a bug in the OME-TIFF format writing out
> >> > multi-dimensional images. That's fixed on a branch but not uploaded to
> >> > Fiji
> >> > yet [1].
> >> >
> >> > Second, it seems like cropping is restricting pixel reads to the
> correct
> >> > region but then doesn't change the image size.
> >> >
> >> > I'm hoping when I fix the second issue writing cropped regions will be
> >> > fixed.
> >> >
> >> > Thanks for the great feedback!
> >> > - Mark
> >> >
> >> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
> >> >
> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary <hadrien.mary at gmail.com
> >
> >> > wrote:
> >> >>
> >> >> I also confirm the same behaviour when replacing original file by OME
> >> >> sample data :
> >> >>
> >> >>
> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip
> .
> >> >>
> >> >> --
> >> >> Hadrien Mary
> >> >>
> >> >> Ph.D student in Biology
> >> >> Tournier-Gachet Team
> >> >> CNRS - LBCMCP - UMR 5088
> >> >>
> >> >> Universit? de Toulouse - B?t. 4R3B1
> >> >> 118, route de Narbonne - 31062 Toulouse
> >> >>
> >> >>
> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary <hadrien.mary at gmail.com
> >
> >> >> wrote:
> >> >> > After some investigations I think there is a bug with ImgSaver. In
> >> >> > the
> >> >> > following script, X, Y crop is fine but axes informations (T and Z)
> >> >> > are lost and all frames appears on the same axes. Now if I replace
> >> >> > "target = "/home/hadim/cropped.tif" by "target =
> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
> >> >> > image has the same dimensions than original however axes
> informations
> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
> >> >> > totally incoherent which is not the case in cropped.tif.
> >> >> >
> >> >> > Files can be found here :
> >> >> >
> >> >> >
> >> >> >
> https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
> >> >> >
> >> >> > Archive contains cropped.tif, cropped.ome.tif and original.ome.tif.
> >> >> >
> >> >> > The script:
> >> >> >
> >> >> > ---------------------------------------------------
> >> >> > from io.scif import SCIFIO
> >> >> > from io.scif.config import SCIFIOConfig
> >> >> > from io.scif.img import ImageRegion
> >> >> > from io.scif.img import ImgOpener
> >> >> > from io.scif.img import ImgSaver
> >> >> > from net.imglib2.meta import Axes
> >> >> >
> >> >> > fname = "/home/hadim/original.ome.tif"
> >> >> > target = "/home/hadim/cropped.tif"
> >> >> >
> >> >> > axes = [Axes.X, Axes.Y]
> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
> >> >> > config = SCIFIOConfig()
> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >> >> >
> >> >> > opener = ImgOpener()
> >> >> > imps = opener.openImgs(fname, config)
> >> >> > imp = imps[0]
> >> >> >
> >> >> > saver = ImgSaver()
> >> >> > saver.saveImg(target, imp)
> >> >> >
> >> >> > print('Done')
> >> >> > ---------------------------------------------------
> >> >> >
> >> >> >
> >> >> > --
> >> >> > Hadrien Mary
> >> >> >
> >> >> >
> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
> >> >> > <hadrien.mary at gmail.com>
> >> >> > wrote:
> >> >> >> Thanks for the tip (reminder to me: always look for example in
> >> >> >> tests!).
> >> >> >>
> >> >> >> Unfortunately crop does not work... I will try to do more tests
> >> >> >> tomorrow or wait for you or someone else to have a look.
> >> >> >>
> >> >> >> Updated code:
> >> >> >>
> >> >> >> from ij import IJ
> >> >> >> from ij import ImagePlus
> >> >> >>
> >> >> >> from io.scif import SCIFIO
> >> >> >> from io.scif.config import SCIFIOConfig
> >> >> >> from io.scif.img import ImageRegion
> >> >> >> from io.scif.img import ImgOpener
> >> >> >> from io.scif.img import ImgSaver
> >> >> >> from net.imglib2.meta import Axes
> >> >> >>
> >> >> >> fname = "/home/hadim/original.ome.tif"
> >> >> >> target = "/home/hadim/cropped.ome.tif"
> >> >> >>
> >> >> >> axes = [Axes.X, Axes.Y]
> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
> >> >> >> config = SCIFIOConfig()
> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >> >> >>
> >> >> >> opener = ImgOpener()
> >> >> >> imps = opener.openImgs(fname, config)
> >> >> >> imp = imps[0]
> >> >> >>
> >> >> >> saver = ImgSaver()
> >> >> >> saver.saveImg(target, imp)
> >> >> >>
> >> >> >> print('Done')
> >> >> >>
> >> >> >> --
> >> >> >> Hadrien Mary
> >> >> >>
> >> >> >>
> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden <ctrueden at wisc.edu
> >
> >> >> >> wrote:
> >> >> >>> Hi Hadrien,
> >> >> >>>
> >> >> >>>> I would like to be able to crop a region in X and Y while
> >> >> >>>> keeping any other dimensions which could exist (C, Z, T).
> >> >> >>>
> >> >> >>> Here's some Java:
> >> >> >>>
> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
> >> >> >>>
> >> >> >>> Adapted from here:
> >> >> >>>
> >> >> >>>
> >> >> >>>
> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
> >> >> >>>
> >> >> >>> And untested.
> >> >> >>>
> >> >> >>> HTH,
> >> >> >>> Curtis
> >> >> >>>
> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
> >> >> >>> <hadrien.mary at gmail.com>
> >> >> >>> wrote:
> >> >> >>>>
> >> >> >>>> After some investigations, I'm pretty sure I don't instanciate
> >> >> >>>> ImageRegion correctly. Doc and source code didn't help me... I
> >> >> >>>> would
> >> >> >>>> like to be able to crop a region in X and Y while keeping any
> >> >> >>>> other
> >> >> >>>> dimensions which could exist (C, Z, T).
> >> >> >>>>
> >> >> >>>> --
> >> >> >>>> Hadrien Mary
> >> >> >>>>
> >> >> >>>>
> >> >> >>>>
> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
> >> >> >>>> <hadrien.mary at gmail.com>
> >> >> >>>> wrote:
> >> >> >>>> > Thank you Curtis for the answer.
> >> >> >>>> >
> >> >> >>>> > I tried to apply what you told me and the code now works
> without
> >> >> >>>> > error. However the saved cropped image is not cropped (same
> size
> >> >> >>>> > as
> >> >> >>>> > original) and pixel values are modified).
> >> >> >>>> >
> >> >> >>>> > Script:
> >> >> >>>> >
> >> >> >>>> > from io.scif.config import SCIFIOConfig
> >> >> >>>> > from io.scif.img import ImageRegion
> >> >> >>>> > from io.scif.img import ImgOpener
> >> >> >>>> > from io.scif.img import ImgSaver
> >> >> >>>> >
> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
> >> >> >>>> >
> >> >> >>>> > config = SCIFIOConfig()
> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
> >> >> >>>> > config.imgOpenerSetRegion(region)
> >> >> >>>> >
> >> >> >>>> > opener = ImgOpener()
> >> >> >>>> > imps = opener.openImgs(fname, config)
> >> >> >>>> > imp = imps[0]
> >> >> >>>> >
> >> >> >>>> > print(imps)
> >> >> >>>> >
> >> >> >>>> > saver = ImgSaver()
> >> >> >>>> > saver.saveImg(target, imp)
> >> >> >>>> >
> >> >> >>>> > Thanks again for your time. Don't be sorry if you don't have
> >> >> >>>> > time
> >> >> >>>> > to
> >> >> >>>> > write an example.
> >> >> >>>> >
> >> >> >>>> > I will be happy to provide some python/scifio examples
> scripts.
> >> >> >>>> >
> >> >> >>>> >
> >> >> >>>> > --
> >> >> >>>> > Hadrien Mary
> >> >> >>>> >
> >> >> >>>> > Ph.D student in Biology
> >> >> >>>> > Tournier-Gachet Team
> >> >> >>>> > CNRS - LBCMCP - UMR 5088
> >> >> >>>> >
> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
> >> >> >>>> >
> >> >> >>>> >
> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
> >> >> >>>> > <ctrueden at wisc.edu>
> >> >> >>>> > wrote:
> >> >> >>>> >> Hi Hadrien,
> >> >> >>>> >>
> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
> >> >> >>>> >>> doesn
> >> >> >>>> >>> not
> >> >> >>>> >>> work.
> >> >> >>>> >>
> >> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2 data
> >> >> >>>> >> structures, not
> >> >> >>>> >> ImagePlus objects.
> >> >> >>>> >>
> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
> >> >> >>>> >>> function
> >> >> >>>> >>> in
> >> >> >>>> >>> SCIFIO ?
> >> >> >>>> >>
> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion
> [1]
> >> >> >>>> >> on
> >> >> >>>> >> it,
> >> >> >>>> >> then
> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back an
> >> >> >>>> >> ImgLib2
> >> >> >>>> >> data
> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
> >> >> >>>> >>
> >> >> >>>> >> I'm sorry that I don't have time to whip up an example for
> you
> >> >> >>>> >> right
> >> >> >>>> >> now. It
> >> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use the
> >> >> >>>> >> ImgOpener
> >> >> >>>> >> and
> >> >> >>>> >> ImgSaver, since they are much higher level APIs akin to the
> >> >> >>>> >> Bio-Formats
> >> >> >>>> >> "BF"
> >> >> >>>> >> functionality... please feel welcome to contribute some!
> >> >> >>>> >>
> >> >> >>>> >> Regards,
> >> >> >>>> >> Curtis
> >> >> >>>> >>
> >> >> >>>> >> [1]
> >> >> >>>> >>
> >> >> >>>> >>
> >> >> >>>> >>
> >> >> >>>> >>
> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
> >> >> >>>> >>
> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
> >> >> >>>> >> <hadrien.mary at gmail.com>
> >> >> >>>> >> wrote:
> >> >> >>>> >>>
> >> >> >>>> >>> Hi,
> >> >> >>>> >>>
> >> >> >>>> >>> I am writing a python macro which iterate over all rois in
> ROI
> >> >> >>>> >>> Manager
> >> >> >>>> >>> and then use setCropRegion function from bioformat plugin to
> >> >> >>>> >>> open
> >> >> >>>> >>> a
> >> >> >>>> >>> cropped region of an image.
> >> >> >>>> >>>
> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
> >> >> >>>> >>> doesn
> >> >> >>>> >>> not
> >> >> >>>> >>> work.
> >> >> >>>> >>>
> >> >> >>>> >>> (I am using an updated version of Fiji.)
> >> >> >>>> >>>
> >> >> >>>> >>> Here is my script:
> >> >> >>>> >>>
> >> >> >>>> >>> from ij.plugin.frame import RoiManager
> >> >> >>>> >>> from ij import IJ
> >> >> >>>> >>> from io.scif.img import ImgSaver
> >> >> >>>> >>>
> >> >> >>>> >>> from loci.plugins import BF
> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
> >> >> >>>> >>> from loci.common import Region
> >> >> >>>> >>>
> >> >> >>>> >>> import os
> >> >> >>>> >>>
> >> >> >>>> >>> # Get current image filename
> >> >> >>>> >>> imp = IJ.getImage()
> >> >> >>>> >>> f = imp.getOriginalFileInfo()
> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
> >> >> >>>> >>>
> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
> >> >> >>>> >>>
> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
> >> >> >>>> >>> for i, roi in enumerate(rois):
> >> >> >>>> >>>
> >> >> >>>> >>>     crop_id = i +1
> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
> >> >> >>>> >>>
> >> >> >>>> >>>     bounds = roi.getBounds()
> >> >> >>>> >>>
> >> >> >>>> >>>     x = bounds.x
> >> >> >>>> >>>     y = bounds.y
> >> >> >>>> >>>     w = bounds.width
> >> >> >>>> >>>     h = bounds.height
> >> >> >>>> >>>
> >> >> >>>> >>>     # Import only cropped region of the image
> >> >> >>>> >>>     options = ImporterOptions()
> >> >> >>>> >>>     options.setCrop(True)
> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
> >> >> >>>> >>>     options.setId(fname)
> >> >> >>>> >>>     imps = BF.openImagePlus(options)
> >> >> >>>> >>>
> >> >> >>>> >>>     imp = imps[0]
> >> >> >>>> >>>     imp.show()
> >> >> >>>> >>>
> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
> >> >> >>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
> >> >> >>>> >>>     imp.setTitle(crop_basename)
> >> >> >>>> >>>
> >> >> >>>> >>>     # Save image
> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
> >> >> >>>> >>>     saver = ImgSaver()
> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >> >> >>>> >>>
> >> >> >>>> >>> IJ.log('Done')
> >> >> >>>> >>>
> >> >> >>>> >>> It fails with this error:
> >> >> >>>> >>>
> >> >> >>>> >>> Traceback (most recent call last):
> >> >> >>>> >>>   File
> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
> >> >> >>>> >>> line
> >> >> >>>> >>> 49, in <module>
> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
> >> >> >>>> >>> io.scif.Writer,
> >> >> >>>> >>> String
> >> >> >>>> >>>
> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
> >> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> >> >> >>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >> >> >>>> >>> at
> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >> >> >>>> >>> at
> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >> >> >>>> >>> at
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >> >> >>>> >>> at
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >> >> >>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >> >> >>>> >>> at
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> >> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
> >> >> >>>> >>>
> >> >> >>>> >>> Three questions:
> >> >> >>>> >>>
> >> >> >>>> >>> how can I write cropped image (I need to write them as OME
> >> >> >>>> >>> Tiff
> >> >> >>>> >>> so I
> >> >> >>>> >>> need BF or SCIFIO).
> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
> >> >> >>>> >>> function
> >> >> >>>> >>> in
> >> >> >>>> >>> SCIFIO
> >> >> >>>> >>> ?
> >> >> >>>> >>> I am currently using
> RoiManager.getInstance().getRoisAsArray()
> >> >> >>>> >>> to
> >> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
> >> >> >>>> >>> instance
> >> >> >>>> >>> from
> >> >> >>>> >>> RoiSet.zip file ?
> >> >> >>>> >>>
> >> >> >>>> >>> Any help would be very appreciated.
> >> >> >>>> >>>
> >> >> >>>> >>> Thanks !
> >> >> >>>> >>>
> >> >> >>>> >>> ?
> >> >> >>>> >>> Hadrien Mary
> >> >> >>>> >>>
> >> >> >>>> >>> _______________________________________________
> >> >> >>>> >>> ImageJ-devel mailing list
> >> >> >>>> >>> ImageJ-devel at imagej.net
> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
> >> >> >>>> >>
> >> >> >>>> >>
> >> >> >>>
> >> >> >>>
> >> >>
> >> >> _______________________________________________
> >> >> ImageJ-devel mailing list
> >> >> ImageJ-devel at imagej.net
> >> >> http://imagej.net/mailman/listinfo/imagej-devel
> >> >
> >> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150114/f0a9255a/attachment-0001.html>

From hadrien.mary at gmail.com  Wed Jan 14 07:05:57 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Wed, 14 Jan 2015 14:05:57 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
Message-ID: <CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>

Ok it makes sense now !

So I did what you told me about cloning imagej repo, building and
install it with maven inside my local Fiji.app/. I don't know if it's
a bug or a missing dependency but I am now unable to open OME Tiff
files (other kind of file works well) wether it is by drag and drop or
with my script. The error is the following:

-------------------------------------------------
Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
at io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
at io.scif.AbstractParser.parse(AbstractParser.java:254)
at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
at io.scif.AbstractParser.parse(AbstractParser.java:335)
at io.scif.AbstractParser.parse(AbstractParser.java:52)
at io.scif.AbstractReader.setSource(AbstractReader.java:270)
at io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
at net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
at net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
at java.lang.Thread.run(Thread.java:745)
-----------------------------------------------

I guess something in scifio has not been updated to use the new
net.imagej.axis or maybe the update is not built/downloaded when I run
maven on my imagej clone.


--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
> Hi Hadrien,
>
>>Sorry if it's off topic but I tried to run my script and I got a python
>> error
>
> Oh no! This is totally my fault. I had to update your script for the new
> dependencies I mentioned and forgot to paste the new version in my response
> yesterday:
>
>>from net.imglib2.meta import Axes
>
> This import needs to change to:
>
> from net.imagej.axis import Axes
>
> Sorry about that!
>
> Best,
> Mark
>
>
> On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>>
>> Thank you Mark !
>>
>> Sorry if it's off topic but I tried to run my script and I got a
>> python error probably related to type difference between python and
>> java. It's not the first time I saw this kind of message and I'd like
>> to know how to resolve it. Note that for python script I mainly use
>> javadoc as documentation.
>>
>> The error is below coming from almost the same script as before in this
>> thread.
>>
>> ********************************
>> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>> Traceback (most recent call last):
>>   File
>> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>> line 17, in <module>
>>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>> net.imagej.axis.AxisType[]
>>
>> at org.python.core.Py.TypeError(Py.java:235)
>> at
>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> at
>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> at
>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> at
>> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>> at org.python.core.PyObject.__call__(PyObject.java:345)
>> at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>> at
>> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>> at org.python.core.PyType.type___call__(PyType.java:1565)
>> at org.python.core.PyType.__call__(PyType.java:1548)
>> at org.python.core.PyObject.__call__(PyObject.java:404)
>> at org.python.core.PyObject.__call__(PyObject.java:408)
>> at
>> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>> at
>> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> at org.python.core.PyCode.call(PyCode.java:18)
>> at org.python.core.Py.runCode(Py.java:1275)
>> at
>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> at
>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> at java.lang.Thread.run(Thread.java:745)
>> ************************************
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> > Hi Hadrien,
>> >
>> >  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
>> >
>> >  It's working for me now, as of the latest SCIFIO[1] and
>> > SCIFIO-OME-XML[2].
>> > Note that these libraries have updated dependencies compared to what's
>> > currently on Fiji, so you can't just drop these .jars into your Fiji
>> > installation if you want to test locally; you need to update the
>> > dependencies as well. The easiest way to do this would be to just clone
>> > Imagej.git[3] and install it into your Fiji.app directory by running:
>> >
>> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>> > -Ddelete.other.versions=true
>> >
>> > We'll push these changes up to Fiji this week, and I will find or write
>> > better instructions for local testing.
>> >
>> > Hope this helps. Let us know if you have any questions/problems. Thanks
>> > again for finding this issue!
>> >
>> > Best,
>> > - Mark
>> >
>> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>> > [2]
>> >
>> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>> > [3] https://github.com/imagej/imagej
>> >
>> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary <hadrien.mary at gmail.com>
>> > wrote:
>> >>
>> >> Ok. Let me know when you want me to test your changes. I also tested
>> >> fix-writing branch and I didn't notice any changes.
>> >>
>> >> --
>> >> Hadrien Mary
>> >>
>> >> Ph.D student in Biology
>> >> Tournier-Gachet Team
>> >> CNRS - LBCMCP - UMR 5088
>> >>
>> >> Universit? de Toulouse - B?t. 4R3B1
>> >> 118, route de Narbonne - 31062 Toulouse
>> >>
>> >>
>> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> >> > Hi Hadrien,
>> >> >
>> >> > I've identified at least two bugs that could be affecting you here.
>> >> >
>> >> > First of all, there was a bug in the OME-TIFF format writing out
>> >> > multi-dimensional images. That's fixed on a branch but not uploaded
>> >> > to
>> >> > Fiji
>> >> > yet [1].
>> >> >
>> >> > Second, it seems like cropping is restricting pixel reads to the
>> >> > correct
>> >> > region but then doesn't change the image size.
>> >> >
>> >> > I'm hoping when I fix the second issue writing cropped regions will
>> >> > be
>> >> > fixed.
>> >> >
>> >> > Thanks for the great feedback!
>> >> > - Mark
>> >> >
>> >> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>> >> >
>> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>> >> > <hadrien.mary at gmail.com>
>> >> > wrote:
>> >> >>
>> >> >> I also confirm the same behaviour when replacing original file by
>> >> >> OME
>> >> >> sample data :
>> >> >>
>> >> >>
>> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>> >> >>
>> >> >> --
>> >> >> Hadrien Mary
>> >> >>
>> >> >> Ph.D student in Biology
>> >> >> Tournier-Gachet Team
>> >> >> CNRS - LBCMCP - UMR 5088
>> >> >>
>> >> >> Universit? de Toulouse - B?t. 4R3B1
>> >> >> 118, route de Narbonne - 31062 Toulouse
>> >> >>
>> >> >>
>> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>> >> >> <hadrien.mary at gmail.com>
>> >> >> wrote:
>> >> >> > After some investigations I think there is a bug with ImgSaver. In
>> >> >> > the
>> >> >> > following script, X, Y crop is fine but axes informations (T and
>> >> >> > Z)
>> >> >> > are lost and all frames appears on the same axes. Now if I replace
>> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails, cropped
>> >> >> > image has the same dimensions than original however axes
>> >> >> > informations
>> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
>> >> >> > totally incoherent which is not the case in cropped.tif.
>> >> >> >
>> >> >> > Files can be found here :
>> >> >> >
>> >> >> >
>> >> >> >
>> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>> >> >> >
>> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>> >> >> > original.ome.tif.
>> >> >> >
>> >> >> > The script:
>> >> >> >
>> >> >> > ---------------------------------------------------
>> >> >> > from io.scif import SCIFIO
>> >> >> > from io.scif.config import SCIFIOConfig
>> >> >> > from io.scif.img import ImageRegion
>> >> >> > from io.scif.img import ImgOpener
>> >> >> > from io.scif.img import ImgSaver
>> >> >> > from net.imglib2.meta import Axes
>> >> >> >
>> >> >> > fname = "/home/hadim/original.ome.tif"
>> >> >> > target = "/home/hadim/cropped.tif"
>> >> >> >
>> >> >> > axes = [Axes.X, Axes.Y]
>> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>> >> >> > config = SCIFIOConfig()
>> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >> >> >
>> >> >> > opener = ImgOpener()
>> >> >> > imps = opener.openImgs(fname, config)
>> >> >> > imp = imps[0]
>> >> >> >
>> >> >> > saver = ImgSaver()
>> >> >> > saver.saveImg(target, imp)
>> >> >> >
>> >> >> > print('Done')
>> >> >> > ---------------------------------------------------
>> >> >> >
>> >> >> >
>> >> >> > --
>> >> >> > Hadrien Mary
>> >> >> >
>> >> >> >
>> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>> >> >> > <hadrien.mary at gmail.com>
>> >> >> > wrote:
>> >> >> >> Thanks for the tip (reminder to me: always look for example in
>> >> >> >> tests!).
>> >> >> >>
>> >> >> >> Unfortunately crop does not work... I will try to do more tests
>> >> >> >> tomorrow or wait for you or someone else to have a look.
>> >> >> >>
>> >> >> >> Updated code:
>> >> >> >>
>> >> >> >> from ij import IJ
>> >> >> >> from ij import ImagePlus
>> >> >> >>
>> >> >> >> from io.scif import SCIFIO
>> >> >> >> from io.scif.config import SCIFIOConfig
>> >> >> >> from io.scif.img import ImageRegion
>> >> >> >> from io.scif.img import ImgOpener
>> >> >> >> from io.scif.img import ImgSaver
>> >> >> >> from net.imglib2.meta import Axes
>> >> >> >>
>> >> >> >> fname = "/home/hadim/original.ome.tif"
>> >> >> >> target = "/home/hadim/cropped.ome.tif"
>> >> >> >>
>> >> >> >> axes = [Axes.X, Axes.Y]
>> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>> >> >> >> config = SCIFIOConfig()
>> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >> >> >>
>> >> >> >> opener = ImgOpener()
>> >> >> >> imps = opener.openImgs(fname, config)
>> >> >> >> imp = imps[0]
>> >> >> >>
>> >> >> >> saver = ImgSaver()
>> >> >> >> saver.saveImg(target, imp)
>> >> >> >>
>> >> >> >> print('Done')
>> >> >> >>
>> >> >> >> --
>> >> >> >> Hadrien Mary
>> >> >> >>
>> >> >> >>
>> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>> >> >> >> <ctrueden at wisc.edu>
>> >> >> >> wrote:
>> >> >> >>> Hi Hadrien,
>> >> >> >>>
>> >> >> >>>> I would like to be able to crop a region in X and Y while
>> >> >> >>>> keeping any other dimensions which could exist (C, Z, T).
>> >> >> >>>
>> >> >> >>> Here's some Java:
>> >> >> >>>
>> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY };
>> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>> >> >> >>>
>> >> >> >>> Adapted from here:
>> >> >> >>>
>> >> >> >>>
>> >> >> >>>
>> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>> >> >> >>>
>> >> >> >>> And untested.
>> >> >> >>>
>> >> >> >>> HTH,
>> >> >> >>> Curtis
>> >> >> >>>
>> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>> >> >> >>> <hadrien.mary at gmail.com>
>> >> >> >>> wrote:
>> >> >> >>>>
>> >> >> >>>> After some investigations, I'm pretty sure I don't instanciate
>> >> >> >>>> ImageRegion correctly. Doc and source code didn't help me... I
>> >> >> >>>> would
>> >> >> >>>> like to be able to crop a region in X and Y while keeping any
>> >> >> >>>> other
>> >> >> >>>> dimensions which could exist (C, Z, T).
>> >> >> >>>>
>> >> >> >>>> --
>> >> >> >>>> Hadrien Mary
>> >> >> >>>>
>> >> >> >>>>
>> >> >> >>>>
>> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>> >> >> >>>> <hadrien.mary at gmail.com>
>> >> >> >>>> wrote:
>> >> >> >>>> > Thank you Curtis for the answer.
>> >> >> >>>> >
>> >> >> >>>> > I tried to apply what you told me and the code now works
>> >> >> >>>> > without
>> >> >> >>>> > error. However the saved cropped image is not cropped (same
>> >> >> >>>> > size
>> >> >> >>>> > as
>> >> >> >>>> > original) and pixel values are modified).
>> >> >> >>>> >
>> >> >> >>>> > Script:
>> >> >> >>>> >
>> >> >> >>>> > from io.scif.config import SCIFIOConfig
>> >> >> >>>> > from io.scif.img import ImageRegion
>> >> >> >>>> > from io.scif.img import ImgOpener
>> >> >> >>>> > from io.scif.img import ImgSaver
>> >> >> >>>> >
>> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>> >> >> >>>> >
>> >> >> >>>> > config = SCIFIOConfig()
>> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>> >> >> >>>> > config.imgOpenerSetRegion(region)
>> >> >> >>>> >
>> >> >> >>>> > opener = ImgOpener()
>> >> >> >>>> > imps = opener.openImgs(fname, config)
>> >> >> >>>> > imp = imps[0]
>> >> >> >>>> >
>> >> >> >>>> > print(imps)
>> >> >> >>>> >
>> >> >> >>>> > saver = ImgSaver()
>> >> >> >>>> > saver.saveImg(target, imp)
>> >> >> >>>> >
>> >> >> >>>> > Thanks again for your time. Don't be sorry if you don't have
>> >> >> >>>> > time
>> >> >> >>>> > to
>> >> >> >>>> > write an example.
>> >> >> >>>> >
>> >> >> >>>> > I will be happy to provide some python/scifio examples
>> >> >> >>>> > scripts.
>> >> >> >>>> >
>> >> >> >>>> >
>> >> >> >>>> > --
>> >> >> >>>> > Hadrien Mary
>> >> >> >>>> >
>> >> >> >>>> > Ph.D student in Biology
>> >> >> >>>> > Tournier-Gachet Team
>> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>> >> >> >>>> >
>> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>> >> >> >>>> >
>> >> >> >>>> >
>> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>> >> >> >>>> > <ctrueden at wisc.edu>
>> >> >> >>>> > wrote:
>> >> >> >>>> >> Hi Hadrien,
>> >> >> >>>> >>
>> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
>> >> >> >>>> >>> doesn
>> >> >> >>>> >>> not
>> >> >> >>>> >>> work.
>> >> >> >>>> >>
>> >> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2 data
>> >> >> >>>> >> structures, not
>> >> >> >>>> >> ImagePlus objects.
>> >> >> >>>> >>
>> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>> >> >> >>>> >>> function
>> >> >> >>>> >>> in
>> >> >> >>>> >>> SCIFIO ?
>> >> >> >>>> >>
>> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion
>> >> >> >>>> >> [1]
>> >> >> >>>> >> on
>> >> >> >>>> >> it,
>> >> >> >>>> >> then
>> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back an
>> >> >> >>>> >> ImgLib2
>> >> >> >>>> >> data
>> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
>> >> >> >>>> >>
>> >> >> >>>> >> I'm sorry that I don't have time to whip up an example for
>> >> >> >>>> >> you
>> >> >> >>>> >> right
>> >> >> >>>> >> now. It
>> >> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use the
>> >> >> >>>> >> ImgOpener
>> >> >> >>>> >> and
>> >> >> >>>> >> ImgSaver, since they are much higher level APIs akin to the
>> >> >> >>>> >> Bio-Formats
>> >> >> >>>> >> "BF"
>> >> >> >>>> >> functionality... please feel welcome to contribute some!
>> >> >> >>>> >>
>> >> >> >>>> >> Regards,
>> >> >> >>>> >> Curtis
>> >> >> >>>> >>
>> >> >> >>>> >> [1]
>> >> >> >>>> >>
>> >> >> >>>> >>
>> >> >> >>>> >>
>> >> >> >>>> >>
>> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>> >> >> >>>> >>
>> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>> >> >> >>>> >> <hadrien.mary at gmail.com>
>> >> >> >>>> >> wrote:
>> >> >> >>>> >>>
>> >> >> >>>> >>> Hi,
>> >> >> >>>> >>>
>> >> >> >>>> >>> I am writing a python macro which iterate over all rois in
>> >> >> >>>> >>> ROI
>> >> >> >>>> >>> Manager
>> >> >> >>>> >>> and then use setCropRegion function from bioformat plugin
>> >> >> >>>> >>> to
>> >> >> >>>> >>> open
>> >> >> >>>> >>> a
>> >> >> >>>> >>> cropped region of an image.
>> >> >> >>>> >>>
>> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but it
>> >> >> >>>> >>> doesn
>> >> >> >>>> >>> not
>> >> >> >>>> >>> work.
>> >> >> >>>> >>>
>> >> >> >>>> >>> (I am using an updated version of Fiji.)
>> >> >> >>>> >>>
>> >> >> >>>> >>> Here is my script:
>> >> >> >>>> >>>
>> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>> >> >> >>>> >>> from ij import IJ
>> >> >> >>>> >>> from io.scif.img import ImgSaver
>> >> >> >>>> >>>
>> >> >> >>>> >>> from loci.plugins import BF
>> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>> >> >> >>>> >>> from loci.common import Region
>> >> >> >>>> >>>
>> >> >> >>>> >>> import os
>> >> >> >>>> >>>
>> >> >> >>>> >>> # Get current image filename
>> >> >> >>>> >>> imp = IJ.getImage()
>> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>> >> >> >>>> >>>
>> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>> >> >> >>>> >>>
>> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>> >> >> >>>> >>> for i, roi in enumerate(rois):
>> >> >> >>>> >>>
>> >> >> >>>> >>>     crop_id = i +1
>> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>> >> >> >>>> >>>
>> >> >> >>>> >>>     bounds = roi.getBounds()
>> >> >> >>>> >>>
>> >> >> >>>> >>>     x = bounds.x
>> >> >> >>>> >>>     y = bounds.y
>> >> >> >>>> >>>     w = bounds.width
>> >> >> >>>> >>>     h = bounds.height
>> >> >> >>>> >>>
>> >> >> >>>> >>>     # Import only cropped region of the image
>> >> >> >>>> >>>     options = ImporterOptions()
>> >> >> >>>> >>>     options.setCrop(True)
>> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>> >> >> >>>> >>>     options.setId(fname)
>> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>> >> >> >>>> >>>
>> >> >> >>>> >>>     imp = imps[0]
>> >> >> >>>> >>>     imp.show()
>> >> >> >>>> >>>
>> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>> >> >> >>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
>> >> >> >>>> >>>     imp.setTitle(crop_basename)
>> >> >> >>>> >>>
>> >> >> >>>> >>>     # Save image
>> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>> >> >> >>>> >>>     saver = ImgSaver()
>> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >> >> >>>> >>>
>> >> >> >>>> >>> IJ.log('Done')
>> >> >> >>>> >>>
>> >> >> >>>> >>> It fails with this error:
>> >> >> >>>> >>>
>> >> >> >>>> >>> Traceback (most recent call last):
>> >> >> >>>> >>>   File
>> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>> >> >> >>>> >>> line
>> >> >> >>>> >>> 49, in <module>
>> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>> >> >> >>>> >>> io.scif.Writer,
>> >> >> >>>> >>> String
>> >> >> >>>> >>>
>> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>> >> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>> >> >> >>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >> >> >>>> >>> at
>> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >> >> >>>> >>> at
>> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >> >> >>>> >>> at
>> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >> >> >>>> >>> at
>> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >> >> >>>> >>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >> >> >>>> >>> at
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>>
>> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>> >> >> >>>> >>>
>> >> >> >>>> >>> Three questions:
>> >> >> >>>> >>>
>> >> >> >>>> >>> how can I write cropped image (I need to write them as OME
>> >> >> >>>> >>> Tiff
>> >> >> >>>> >>> so I
>> >> >> >>>> >>> need BF or SCIFIO).
>> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>> >> >> >>>> >>> function
>> >> >> >>>> >>> in
>> >> >> >>>> >>> SCIFIO
>> >> >> >>>> >>> ?
>> >> >> >>>> >>> I am currently using
>> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>> >> >> >>>> >>> to
>> >> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
>> >> >> >>>> >>> instance
>> >> >> >>>> >>> from
>> >> >> >>>> >>> RoiSet.zip file ?
>> >> >> >>>> >>>
>> >> >> >>>> >>> Any help would be very appreciated.
>> >> >> >>>> >>>
>> >> >> >>>> >>> Thanks !
>> >> >> >>>> >>>
>> >> >> >>>> >>> ?
>> >> >> >>>> >>> Hadrien Mary
>> >> >> >>>> >>>
>> >> >> >>>> >>> _______________________________________________
>> >> >> >>>> >>> ImageJ-devel mailing list
>> >> >> >>>> >>> ImageJ-devel at imagej.net
>> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>> >> >> >>>> >>
>> >> >> >>>> >>
>> >> >> >>>
>> >> >> >>>
>> >> >>
>> >> >> _______________________________________________
>> >> >> ImageJ-devel mailing list
>> >> >> ImageJ-devel at imagej.net
>> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>> >> >
>> >> >
>> >
>> >
>
>


From incardon at mpi-cbg.de  Wed Jan 14 07:18:14 2015
From: incardon at mpi-cbg.de (Pietro Incardona)
Date: Wed, 14 Jan 2015 14:18:14 +0100
Subject: [ImageJ-devel] SCIFIO and imageJ1
Message-ID: <54B66C96.2040302@mpi-cbg.de>

Hi All

Is there any way to pack a jar with SCIFIO included that work also in 
imageJ1

Cheers
Pietro



From hiner at wisc.edu  Wed Jan 14 08:32:52 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 14 Jan 2015 08:32:52 -0600
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
Message-ID: <CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>

Hi Hadrien,

>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V

Ah sorry - my fault again for responding too quickly. ImageJ.git doesn't
have a dependency on scifio-ome-xml; it's a dependency in Fiji itself[1].
So when you installed ImageJ into your Fiji, it updated all the
dependencies but didn't actually update scifio-ome-xml.

You can either manually copy scifio-ome-xml[2] over, or try installing from
the latest Fiji master[3] which I just updated to have the latest
dependencies.

[1]
https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
[2]
https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
[3]
https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062

On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> Ok it makes sense now !
>
> So I did what you told me about cloning imagej repo, building and
> install it with maven inside my local Fiji.app/. I don't know if it's
> a bug or a missing dependency but I am now unable to open OME Tiff
> files (other kind of file works well) wether it is by drag and drop or
> with my script. The error is the following:
>
> -------------------------------------------------
> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
> at
> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
> at io.scif.AbstractParser.parse(AbstractParser.java:254)
> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
> at io.scif.AbstractParser.parse(AbstractParser.java:335)
> at io.scif.AbstractParser.parse(AbstractParser.java:52)
> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
> at
> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
> at
> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
> at
> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
> at java.lang.Thread.run(Thread.java:745)
> -----------------------------------------------
>
> I guess something in scifio has not been updated to use the new
> net.imagej.axis or maybe the update is not built/downloaded when I run
> maven on my imagej clone.
>
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
> > Hi Hadrien,
> >
> >>Sorry if it's off topic but I tried to run my script and I got a python
> >> error
> >
> > Oh no! This is totally my fault. I had to update your script for the new
> > dependencies I mentioned and forgot to paste the new version in my
> response
> > yesterday:
> >
> >>from net.imglib2.meta import Axes
> >
> > This import needs to change to:
> >
> > from net.imagej.axis import Axes
> >
> > Sorry about that!
> >
> > Best,
> > Mark
> >
> >
> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <hadrien.mary at gmail.com>
> > wrote:
> >>
> >> Thank you Mark !
> >>
> >> Sorry if it's off topic but I tried to run my script and I got a
> >> python error probably related to type difference between python and
> >> java. It's not the first time I saw this kind of message and I'd like
> >> to know how to resolve it. Note that for python script I mainly use
> >> javadoc as documentation.
> >>
> >> The error is below coming from almost the same script as before in this
> >> thread.
> >>
> >> ********************************
> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
> >> Traceback (most recent call last):
> >>   File
> >>
> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
> >> line 17, in <module>
> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
> >> net.imagej.axis.AxisType[]
> >>
> >> at org.python.core.Py.TypeError(Py.java:235)
> >> at
> >>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >> at
> >>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >> at
> >>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >> at
> >>
> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
> >> at org.python.core.PyObject.__call__(PyObject.java:345)
> >> at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
> >> at
> >>
> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
> >> at org.python.core.PyType.type___call__(PyType.java:1565)
> >> at org.python.core.PyType.__call__(PyType.java:1548)
> >> at org.python.core.PyObject.__call__(PyObject.java:404)
> >> at org.python.core.PyObject.__call__(PyObject.java:408)
> >> at
> >>
> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
> >> at
> >>
> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> >> at org.python.core.PyCode.call(PyCode.java:18)
> >> at org.python.core.Py.runCode(Py.java:1275)
> >> at
> >>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >> at
> >>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >> at
> >>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >> at
> >>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >> at java.lang.Thread.run(Thread.java:745)
> >> ************************************
> >>
> >> --
> >> Hadrien Mary
> >>
> >> Ph.D student in Biology
> >> Tournier-Gachet Team
> >> CNRS - LBCMCP - UMR 5088
> >>
> >> Universit? de Toulouse - B?t. 4R3B1
> >> 118, route de Narbonne - 31062 Toulouse
> >>
> >>
> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
> >> > Hi Hadrien,
> >> >
> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
> >> >
> >> >  It's working for me now, as of the latest SCIFIO[1] and
> >> > SCIFIO-OME-XML[2].
> >> > Note that these libraries have updated dependencies compared to what's
> >> > currently on Fiji, so you can't just drop these .jars into your Fiji
> >> > installation if you want to test locally; you need to update the
> >> > dependencies as well. The easiest way to do this would be to just
> clone
> >> > Imagej.git[3] and install it into your Fiji.app directory by running:
> >> >
> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
> >> > -Ddelete.other.versions=true
> >> >
> >> > We'll push these changes up to Fiji this week, and I will find or
> write
> >> > better instructions for local testing.
> >> >
> >> > Hope this helps. Let us know if you have any questions/problems.
> Thanks
> >> > again for finding this issue!
> >> >
> >> > Best,
> >> > - Mark
> >> >
> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
> >> > [2]
> >> >
> >> >
> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
> >> > [3] https://github.com/imagej/imagej
> >> >
> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary <hadrien.mary at gmail.com
> >
> >> > wrote:
> >> >>
> >> >> Ok. Let me know when you want me to test your changes. I also tested
> >> >> fix-writing branch and I didn't notice any changes.
> >> >>
> >> >> --
> >> >> Hadrien Mary
> >> >>
> >> >> Ph.D student in Biology
> >> >> Tournier-Gachet Team
> >> >> CNRS - LBCMCP - UMR 5088
> >> >>
> >> >> Universit? de Toulouse - B?t. 4R3B1
> >> >> 118, route de Narbonne - 31062 Toulouse
> >> >>
> >> >>
> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
> >> >> > Hi Hadrien,
> >> >> >
> >> >> > I've identified at least two bugs that could be affecting you here.
> >> >> >
> >> >> > First of all, there was a bug in the OME-TIFF format writing out
> >> >> > multi-dimensional images. That's fixed on a branch but not uploaded
> >> >> > to
> >> >> > Fiji
> >> >> > yet [1].
> >> >> >
> >> >> > Second, it seems like cropping is restricting pixel reads to the
> >> >> > correct
> >> >> > region but then doesn't change the image size.
> >> >> >
> >> >> > I'm hoping when I fix the second issue writing cropped regions will
> >> >> > be
> >> >> > fixed.
> >> >> >
> >> >> > Thanks for the great feedback!
> >> >> > - Mark
> >> >> >
> >> >> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
> >> >> >
> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
> >> >> > <hadrien.mary at gmail.com>
> >> >> > wrote:
> >> >> >>
> >> >> >> I also confirm the same behaviour when replacing original file by
> >> >> >> OME
> >> >> >> sample data :
> >> >> >>
> >> >> >>
> >> >> >>
> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip
> .
> >> >> >>
> >> >> >> --
> >> >> >> Hadrien Mary
> >> >> >>
> >> >> >> Ph.D student in Biology
> >> >> >> Tournier-Gachet Team
> >> >> >> CNRS - LBCMCP - UMR 5088
> >> >> >>
> >> >> >> Universit? de Toulouse - B?t. 4R3B1
> >> >> >> 118, route de Narbonne - 31062 Toulouse
> >> >> >>
> >> >> >>
> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
> >> >> >> <hadrien.mary at gmail.com>
> >> >> >> wrote:
> >> >> >> > After some investigations I think there is a bug with ImgSaver.
> In
> >> >> >> > the
> >> >> >> > following script, X, Y crop is fine but axes informations (T and
> >> >> >> > Z)
> >> >> >> > are lost and all frames appears on the same axes. Now if I
> replace
> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
> cropped
> >> >> >> > image has the same dimensions than original however axes
> >> >> >> > informations
> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values are
> >> >> >> > totally incoherent which is not the case in cropped.tif.
> >> >> >> >
> >> >> >> > Files can be found here :
> >> >> >> >
> >> >> >> >
> >> >> >> >
> >> >> >> >
> https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
> >> >> >> >
> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
> >> >> >> > original.ome.tif.
> >> >> >> >
> >> >> >> > The script:
> >> >> >> >
> >> >> >> > ---------------------------------------------------
> >> >> >> > from io.scif import SCIFIO
> >> >> >> > from io.scif.config import SCIFIOConfig
> >> >> >> > from io.scif.img import ImageRegion
> >> >> >> > from io.scif.img import ImgOpener
> >> >> >> > from io.scif.img import ImgSaver
> >> >> >> > from net.imglib2.meta import Axes
> >> >> >> >
> >> >> >> > fname = "/home/hadim/original.ome.tif"
> >> >> >> > target = "/home/hadim/cropped.tif"
> >> >> >> >
> >> >> >> > axes = [Axes.X, Axes.Y]
> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
> >> >> >> > config = SCIFIOConfig()
> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >> >> >> >
> >> >> >> > opener = ImgOpener()
> >> >> >> > imps = opener.openImgs(fname, config)
> >> >> >> > imp = imps[0]
> >> >> >> >
> >> >> >> > saver = ImgSaver()
> >> >> >> > saver.saveImg(target, imp)
> >> >> >> >
> >> >> >> > print('Done')
> >> >> >> > ---------------------------------------------------
> >> >> >> >
> >> >> >> >
> >> >> >> > --
> >> >> >> > Hadrien Mary
> >> >> >> >
> >> >> >> >
> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
> >> >> >> > <hadrien.mary at gmail.com>
> >> >> >> > wrote:
> >> >> >> >> Thanks for the tip (reminder to me: always look for example in
> >> >> >> >> tests!).
> >> >> >> >>
> >> >> >> >> Unfortunately crop does not work... I will try to do more tests
> >> >> >> >> tomorrow or wait for you or someone else to have a look.
> >> >> >> >>
> >> >> >> >> Updated code:
> >> >> >> >>
> >> >> >> >> from ij import IJ
> >> >> >> >> from ij import ImagePlus
> >> >> >> >>
> >> >> >> >> from io.scif import SCIFIO
> >> >> >> >> from io.scif.config import SCIFIOConfig
> >> >> >> >> from io.scif.img import ImageRegion
> >> >> >> >> from io.scif.img import ImgOpener
> >> >> >> >> from io.scif.img import ImgSaver
> >> >> >> >> from net.imglib2.meta import Axes
> >> >> >> >>
> >> >> >> >> fname = "/home/hadim/original.ome.tif"
> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
> >> >> >> >>
> >> >> >> >> axes = [Axes.X, Axes.Y]
> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
> >> >> >> >> config = SCIFIOConfig()
> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >> >> >> >>
> >> >> >> >> opener = ImgOpener()
> >> >> >> >> imps = opener.openImgs(fname, config)
> >> >> >> >> imp = imps[0]
> >> >> >> >>
> >> >> >> >> saver = ImgSaver()
> >> >> >> >> saver.saveImg(target, imp)
> >> >> >> >>
> >> >> >> >> print('Done')
> >> >> >> >>
> >> >> >> >> --
> >> >> >> >> Hadrien Mary
> >> >> >> >>
> >> >> >> >>
> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
> >> >> >> >> <ctrueden at wisc.edu>
> >> >> >> >> wrote:
> >> >> >> >>> Hi Hadrien,
> >> >> >> >>>
> >> >> >> >>>> I would like to be able to crop a region in X and Y while
> >> >> >> >>>> keeping any other dimensions which could exist (C, Z, T).
> >> >> >> >>>
> >> >> >> >>> Here's some Java:
> >> >> >> >>>
> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY
> };
> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
> >> >> >> >>>
> >> >> >> >>> Adapted from here:
> >> >> >> >>>
> >> >> >> >>>
> >> >> >> >>>
> >> >> >> >>>
> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
> >> >> >> >>>
> >> >> >> >>> And untested.
> >> >> >> >>>
> >> >> >> >>> HTH,
> >> >> >> >>> Curtis
> >> >> >> >>>
> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
> >> >> >> >>> <hadrien.mary at gmail.com>
> >> >> >> >>> wrote:
> >> >> >> >>>>
> >> >> >> >>>> After some investigations, I'm pretty sure I don't
> instanciate
> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help me...
> I
> >> >> >> >>>> would
> >> >> >> >>>> like to be able to crop a region in X and Y while keeping any
> >> >> >> >>>> other
> >> >> >> >>>> dimensions which could exist (C, Z, T).
> >> >> >> >>>>
> >> >> >> >>>> --
> >> >> >> >>>> Hadrien Mary
> >> >> >> >>>>
> >> >> >> >>>>
> >> >> >> >>>>
> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
> >> >> >> >>>> <hadrien.mary at gmail.com>
> >> >> >> >>>> wrote:
> >> >> >> >>>> > Thank you Curtis for the answer.
> >> >> >> >>>> >
> >> >> >> >>>> > I tried to apply what you told me and the code now works
> >> >> >> >>>> > without
> >> >> >> >>>> > error. However the saved cropped image is not cropped (same
> >> >> >> >>>> > size
> >> >> >> >>>> > as
> >> >> >> >>>> > original) and pixel values are modified).
> >> >> >> >>>> >
> >> >> >> >>>> > Script:
> >> >> >> >>>> >
> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
> >> >> >> >>>> > from io.scif.img import ImageRegion
> >> >> >> >>>> > from io.scif.img import ImgOpener
> >> >> >> >>>> > from io.scif.img import ImgSaver
> >> >> >> >>>> >
> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
> >> >> >> >>>> >
> >> >> >> >>>> > config = SCIFIOConfig()
> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
> >> >> >> >>>> > config.imgOpenerSetRegion(region)
> >> >> >> >>>> >
> >> >> >> >>>> > opener = ImgOpener()
> >> >> >> >>>> > imps = opener.openImgs(fname, config)
> >> >> >> >>>> > imp = imps[0]
> >> >> >> >>>> >
> >> >> >> >>>> > print(imps)
> >> >> >> >>>> >
> >> >> >> >>>> > saver = ImgSaver()
> >> >> >> >>>> > saver.saveImg(target, imp)
> >> >> >> >>>> >
> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you don't
> have
> >> >> >> >>>> > time
> >> >> >> >>>> > to
> >> >> >> >>>> > write an example.
> >> >> >> >>>> >
> >> >> >> >>>> > I will be happy to provide some python/scifio examples
> >> >> >> >>>> > scripts.
> >> >> >> >>>> >
> >> >> >> >>>> >
> >> >> >> >>>> > --
> >> >> >> >>>> > Hadrien Mary
> >> >> >> >>>> >
> >> >> >> >>>> > Ph.D student in Biology
> >> >> >> >>>> > Tournier-Gachet Team
> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
> >> >> >> >>>> >
> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
> >> >> >> >>>> >
> >> >> >> >>>> >
> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
> >> >> >> >>>> > <ctrueden at wisc.edu>
> >> >> >> >>>> > wrote:
> >> >> >> >>>> >> Hi Hadrien,
> >> >> >> >>>> >>
> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
> it
> >> >> >> >>>> >>> doesn
> >> >> >> >>>> >>> not
> >> >> >> >>>> >>> work.
> >> >> >> >>>> >>
> >> >> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2
> data
> >> >> >> >>>> >> structures, not
> >> >> >> >>>> >> ImagePlus objects.
> >> >> >> >>>> >>
> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
> >> >> >> >>>> >>> function
> >> >> >> >>>> >>> in
> >> >> >> >>>> >>> SCIFIO ?
> >> >> >> >>>> >>
> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling imgOpenerSetRegion
> >> >> >> >>>> >> [1]
> >> >> >> >>>> >> on
> >> >> >> >>>> >> it,
> >> >> >> >>>> >> then
> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back
> an
> >> >> >> >>>> >> ImgLib2
> >> >> >> >>>> >> data
> >> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
> >> >> >> >>>> >>
> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an example for
> >> >> >> >>>> >> you
> >> >> >> >>>> >> right
> >> >> >> >>>> >> now. It
> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use
> the
> >> >> >> >>>> >> ImgOpener
> >> >> >> >>>> >> and
> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs akin to
> the
> >> >> >> >>>> >> Bio-Formats
> >> >> >> >>>> >> "BF"
> >> >> >> >>>> >> functionality... please feel welcome to contribute some!
> >> >> >> >>>> >>
> >> >> >> >>>> >> Regards,
> >> >> >> >>>> >> Curtis
> >> >> >> >>>> >>
> >> >> >> >>>> >> [1]
> >> >> >> >>>> >>
> >> >> >> >>>> >>
> >> >> >> >>>> >>
> >> >> >> >>>> >>
> >> >> >> >>>> >>
> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
> >> >> >> >>>> >>
> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
> >> >> >> >>>> >> <hadrien.mary at gmail.com>
> >> >> >> >>>> >> wrote:
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> Hi,
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> I am writing a python macro which iterate over all rois
> in
> >> >> >> >>>> >>> ROI
> >> >> >> >>>> >>> Manager
> >> >> >> >>>> >>> and then use setCropRegion function from bioformat plugin
> >> >> >> >>>> >>> to
> >> >> >> >>>> >>> open
> >> >> >> >>>> >>> a
> >> >> >> >>>> >>> cropped region of an image.
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
> it
> >> >> >> >>>> >>> doesn
> >> >> >> >>>> >>> not
> >> >> >> >>>> >>> work.
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> Here is my script:
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
> >> >> >> >>>> >>> from ij import IJ
> >> >> >> >>>> >>> from io.scif.img import ImgSaver
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> from loci.plugins import BF
> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
> >> >> >> >>>> >>> from loci.common import Region
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> import os
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> # Get current image filename
> >> >> >> >>>> >>> imp = IJ.getImage()
> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
> >> >> >> >>>> >>> for i, roi in enumerate(rois):
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>     crop_id = i +1
> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>     bounds = roi.getBounds()
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>     x = bounds.x
> >> >> >> >>>> >>>     y = bounds.y
> >> >> >> >>>> >>>     w = bounds.width
> >> >> >> >>>> >>>     h = bounds.height
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>     # Import only cropped region of the image
> >> >> >> >>>> >>>     options = ImporterOptions()
> >> >> >> >>>> >>>     options.setCrop(True)
> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
> >> >> >> >>>> >>>     options.setId(fname)
> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>     imp = imps[0]
> >> >> >> >>>> >>>     imp.show()
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory, crop_basename)
> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>     # Save image
> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
> >> >> >> >>>> >>>     saver = ImgSaver()
> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> IJ.log('Done')
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> It fails with this error:
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> Traceback (most recent call last):
> >> >> >> >>>> >>>   File
> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
> >> >> >> >>>> >>> line
> >> >> >> >>>> >>> 49, in <module>
> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
> >> >> >> >>>> >>> io.scif.Writer,
> >> >> >> >>>> >>> String
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
> >> >> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> >> >> >> >>>> >>> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >> >> >> >>>> >>> at
> java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >> >> >> >>>> >>> at
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> >> >> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> Three questions:
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> how can I write cropped image (I need to write them as
> OME
> >> >> >> >>>> >>> Tiff
> >> >> >> >>>> >>> so I
> >> >> >> >>>> >>> need BF or SCIFIO).
> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
> >> >> >> >>>> >>> function
> >> >> >> >>>> >>> in
> >> >> >> >>>> >>> SCIFIO
> >> >> >> >>>> >>> ?
> >> >> >> >>>> >>> I am currently using
> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
> >> >> >> >>>> >>> to
> >> >> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
> >> >> >> >>>> >>> instance
> >> >> >> >>>> >>> from
> >> >> >> >>>> >>> RoiSet.zip file ?
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> Any help would be very appreciated.
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> Thanks !
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> ?
> >> >> >> >>>> >>> Hadrien Mary
> >> >> >> >>>> >>>
> >> >> >> >>>> >>> _______________________________________________
> >> >> >> >>>> >>> ImageJ-devel mailing list
> >> >> >> >>>> >>> ImageJ-devel at imagej.net
> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
> >> >> >> >>>> >>
> >> >> >> >>>> >>
> >> >> >> >>>
> >> >> >> >>>
> >> >> >>
> >> >> >> _______________________________________________
> >> >> >> ImageJ-devel mailing list
> >> >> >> ImageJ-devel at imagej.net
> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
> >> >> >
> >> >> >
> >> >
> >> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150114/55c2b0a0/attachment-0001.html>

From hadrien.mary at gmail.com  Wed Jan 14 09:35:31 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Wed, 14 Jan 2015 16:35:31 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
Message-ID: <CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>

I confirm it works !

Thanks again

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
> Hi Hadrien,
>
>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>
> Ah sorry - my fault again for responding too quickly. ImageJ.git doesn't
> have a dependency on scifio-ome-xml; it's a dependency in Fiji itself[1]. So
> when you installed ImageJ into your Fiji, it updated all the dependencies
> but didn't actually update scifio-ome-xml.
>
> You can either manually copy scifio-ome-xml[2] over, or try installing from
> the latest Fiji master[3] which I just updated to have the latest
> dependencies.
>
> [1]
> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
> [2]
> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
> [3]
> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
>
> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>>
>> Ok it makes sense now !
>>
>> So I did what you told me about cloning imagej repo, building and
>> install it with maven inside my local Fiji.app/. I don't know if it's
>> a bug or a missing dependency but I am now unable to open OME Tiff
>> files (other kind of file works well) wether it is by drag and drop or
>> with my script. The error is the following:
>>
>> -------------------------------------------------
>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>> at
>> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
>> at
>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
>> at
>> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
>> at
>> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
>> at java.lang.Thread.run(Thread.java:745)
>> -----------------------------------------------
>>
>> I guess something in scifio has not been updated to use the new
>> net.imagej.axis or maybe the update is not built/downloaded when I run
>> maven on my imagej clone.
>>
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> > Hi Hadrien,
>> >
>> >>Sorry if it's off topic but I tried to run my script and I got a python
>> >> error
>> >
>> > Oh no! This is totally my fault. I had to update your script for the new
>> > dependencies I mentioned and forgot to paste the new version in my
>> > response
>> > yesterday:
>> >
>> >>from net.imglib2.meta import Axes
>> >
>> > This import needs to change to:
>> >
>> > from net.imagej.axis import Axes
>> >
>> > Sorry about that!
>> >
>> > Best,
>> > Mark
>> >
>> >
>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> > wrote:
>> >>
>> >> Thank you Mark !
>> >>
>> >> Sorry if it's off topic but I tried to run my script and I got a
>> >> python error probably related to type difference between python and
>> >> java. It's not the first time I saw this kind of message and I'd like
>> >> to know how to resolve it. Note that for python script I mainly use
>> >> javadoc as documentation.
>> >>
>> >> The error is below coming from almost the same script as before in this
>> >> thread.
>> >>
>> >> ********************************
>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>> >> Traceback (most recent call last):
>> >>   File
>> >>
>> >> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>> >> line 17, in <module>
>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>> >> net.imagej.axis.AxisType[]
>> >>
>> >> at org.python.core.Py.TypeError(Py.java:235)
>> >> at
>> >>
>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >> at
>> >>
>> >> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >> at
>> >>
>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >> at
>> >>
>> >> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
>> >> at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>> >> at
>> >>
>> >> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
>> >> at org.python.core.PyType.__call__(PyType.java:1548)
>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
>> >> at
>> >>
>> >> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>> >> at
>> >>
>> >> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >> at org.python.core.PyCode.call(PyCode.java:18)
>> >> at org.python.core.Py.runCode(Py.java:1275)
>> >> at
>> >>
>> >> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >> at
>> >>
>> >> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >> at
>> >>
>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >> at
>> >>
>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >> at java.lang.Thread.run(Thread.java:745)
>> >> ************************************
>> >>
>> >> --
>> >> Hadrien Mary
>> >>
>> >> Ph.D student in Biology
>> >> Tournier-Gachet Team
>> >> CNRS - LBCMCP - UMR 5088
>> >>
>> >> Universit? de Toulouse - B?t. 4R3B1
>> >> 118, route de Narbonne - 31062 Toulouse
>> >>
>> >>
>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> >> > Hi Hadrien,
>> >> >
>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
>> >> >
>> >> >  It's working for me now, as of the latest SCIFIO[1] and
>> >> > SCIFIO-OME-XML[2].
>> >> > Note that these libraries have updated dependencies compared to
>> >> > what's
>> >> > currently on Fiji, so you can't just drop these .jars into your Fiji
>> >> > installation if you want to test locally; you need to update the
>> >> > dependencies as well. The easiest way to do this would be to just
>> >> > clone
>> >> > Imagej.git[3] and install it into your Fiji.app directory by running:
>> >> >
>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>> >> > -Ddelete.other.versions=true
>> >> >
>> >> > We'll push these changes up to Fiji this week, and I will find or
>> >> > write
>> >> > better instructions for local testing.
>> >> >
>> >> > Hope this helps. Let us know if you have any questions/problems.
>> >> > Thanks
>> >> > again for finding this issue!
>> >> >
>> >> > Best,
>> >> > - Mark
>> >> >
>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>> >> > [2]
>> >> >
>> >> >
>> >> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>> >> > [3] https://github.com/imagej/imagej
>> >> >
>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
>> >> > <hadrien.mary at gmail.com>
>> >> > wrote:
>> >> >>
>> >> >> Ok. Let me know when you want me to test your changes. I also tested
>> >> >> fix-writing branch and I didn't notice any changes.
>> >> >>
>> >> >> --
>> >> >> Hadrien Mary
>> >> >>
>> >> >> Ph.D student in Biology
>> >> >> Tournier-Gachet Team
>> >> >> CNRS - LBCMCP - UMR 5088
>> >> >>
>> >> >> Universit? de Toulouse - B?t. 4R3B1
>> >> >> 118, route de Narbonne - 31062 Toulouse
>> >> >>
>> >> >>
>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> >> >> > Hi Hadrien,
>> >> >> >
>> >> >> > I've identified at least two bugs that could be affecting you
>> >> >> > here.
>> >> >> >
>> >> >> > First of all, there was a bug in the OME-TIFF format writing out
>> >> >> > multi-dimensional images. That's fixed on a branch but not
>> >> >> > uploaded
>> >> >> > to
>> >> >> > Fiji
>> >> >> > yet [1].
>> >> >> >
>> >> >> > Second, it seems like cropping is restricting pixel reads to the
>> >> >> > correct
>> >> >> > region but then doesn't change the image size.
>> >> >> >
>> >> >> > I'm hoping when I fix the second issue writing cropped regions
>> >> >> > will
>> >> >> > be
>> >> >> > fixed.
>> >> >> >
>> >> >> > Thanks for the great feedback!
>> >> >> > - Mark
>> >> >> >
>> >> >> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>> >> >> >
>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>> >> >> > <hadrien.mary at gmail.com>
>> >> >> > wrote:
>> >> >> >>
>> >> >> >> I also confirm the same behaviour when replacing original file by
>> >> >> >> OME
>> >> >> >> sample data :
>> >> >> >>
>> >> >> >>
>> >> >> >>
>> >> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>> >> >> >>
>> >> >> >> --
>> >> >> >> Hadrien Mary
>> >> >> >>
>> >> >> >> Ph.D student in Biology
>> >> >> >> Tournier-Gachet Team
>> >> >> >> CNRS - LBCMCP - UMR 5088
>> >> >> >>
>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
>> >> >> >> 118, route de Narbonne - 31062 Toulouse
>> >> >> >>
>> >> >> >>
>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>> >> >> >> <hadrien.mary at gmail.com>
>> >> >> >> wrote:
>> >> >> >> > After some investigations I think there is a bug with ImgSaver.
>> >> >> >> > In
>> >> >> >> > the
>> >> >> >> > following script, X, Y crop is fine but axes informations (T
>> >> >> >> > and
>> >> >> >> > Z)
>> >> >> >> > are lost and all frames appears on the same axes. Now if I
>> >> >> >> > replace
>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
>> >> >> >> > cropped
>> >> >> >> > image has the same dimensions than original however axes
>> >> >> >> > informations
>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values
>> >> >> >> > are
>> >> >> >> > totally incoherent which is not the case in cropped.tif.
>> >> >> >> >
>> >> >> >> > Files can be found here :
>> >> >> >> >
>> >> >> >> >
>> >> >> >> >
>> >> >> >> >
>> >> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>> >> >> >> >
>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>> >> >> >> > original.ome.tif.
>> >> >> >> >
>> >> >> >> > The script:
>> >> >> >> >
>> >> >> >> > ---------------------------------------------------
>> >> >> >> > from io.scif import SCIFIO
>> >> >> >> > from io.scif.config import SCIFIOConfig
>> >> >> >> > from io.scif.img import ImageRegion
>> >> >> >> > from io.scif.img import ImgOpener
>> >> >> >> > from io.scif.img import ImgSaver
>> >> >> >> > from net.imglib2.meta import Axes
>> >> >> >> >
>> >> >> >> > fname = "/home/hadim/original.ome.tif"
>> >> >> >> > target = "/home/hadim/cropped.tif"
>> >> >> >> >
>> >> >> >> > axes = [Axes.X, Axes.Y]
>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>> >> >> >> > config = SCIFIOConfig()
>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >> >> >> >
>> >> >> >> > opener = ImgOpener()
>> >> >> >> > imps = opener.openImgs(fname, config)
>> >> >> >> > imp = imps[0]
>> >> >> >> >
>> >> >> >> > saver = ImgSaver()
>> >> >> >> > saver.saveImg(target, imp)
>> >> >> >> >
>> >> >> >> > print('Done')
>> >> >> >> > ---------------------------------------------------
>> >> >> >> >
>> >> >> >> >
>> >> >> >> > --
>> >> >> >> > Hadrien Mary
>> >> >> >> >
>> >> >> >> >
>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>> >> >> >> > <hadrien.mary at gmail.com>
>> >> >> >> > wrote:
>> >> >> >> >> Thanks for the tip (reminder to me: always look for example in
>> >> >> >> >> tests!).
>> >> >> >> >>
>> >> >> >> >> Unfortunately crop does not work... I will try to do more
>> >> >> >> >> tests
>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
>> >> >> >> >>
>> >> >> >> >> Updated code:
>> >> >> >> >>
>> >> >> >> >> from ij import IJ
>> >> >> >> >> from ij import ImagePlus
>> >> >> >> >>
>> >> >> >> >> from io.scif import SCIFIO
>> >> >> >> >> from io.scif.config import SCIFIOConfig
>> >> >> >> >> from io.scif.img import ImageRegion
>> >> >> >> >> from io.scif.img import ImgOpener
>> >> >> >> >> from io.scif.img import ImgSaver
>> >> >> >> >> from net.imglib2.meta import Axes
>> >> >> >> >>
>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
>> >> >> >> >>
>> >> >> >> >> axes = [Axes.X, Axes.Y]
>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>> >> >> >> >> config = SCIFIOConfig()
>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >> >> >> >>
>> >> >> >> >> opener = ImgOpener()
>> >> >> >> >> imps = opener.openImgs(fname, config)
>> >> >> >> >> imp = imps[0]
>> >> >> >> >>
>> >> >> >> >> saver = ImgSaver()
>> >> >> >> >> saver.saveImg(target, imp)
>> >> >> >> >>
>> >> >> >> >> print('Done')
>> >> >> >> >>
>> >> >> >> >> --
>> >> >> >> >> Hadrien Mary
>> >> >> >> >>
>> >> >> >> >>
>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>> >> >> >> >> <ctrueden at wisc.edu>
>> >> >> >> >> wrote:
>> >> >> >> >>> Hi Hadrien,
>> >> >> >> >>>
>> >> >> >> >>>> I would like to be able to crop a region in X and Y while
>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z, T).
>> >> >> >> >>>
>> >> >> >> >>> Here's some Java:
>> >> >> >> >>>
>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY
>> >> >> >> >>> };
>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>> >> >> >> >>>
>> >> >> >> >>> Adapted from here:
>> >> >> >> >>>
>> >> >> >> >>>
>> >> >> >> >>>
>> >> >> >> >>>
>> >> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>> >> >> >> >>>
>> >> >> >> >>> And untested.
>> >> >> >> >>>
>> >> >> >> >>> HTH,
>> >> >> >> >>> Curtis
>> >> >> >> >>>
>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>> >> >> >> >>> <hadrien.mary at gmail.com>
>> >> >> >> >>> wrote:
>> >> >> >> >>>>
>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
>> >> >> >> >>>> instanciate
>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help me...
>> >> >> >> >>>> I
>> >> >> >> >>>> would
>> >> >> >> >>>> like to be able to crop a region in X and Y while keeping
>> >> >> >> >>>> any
>> >> >> >> >>>> other
>> >> >> >> >>>> dimensions which could exist (C, Z, T).
>> >> >> >> >>>>
>> >> >> >> >>>> --
>> >> >> >> >>>> Hadrien Mary
>> >> >> >> >>>>
>> >> >> >> >>>>
>> >> >> >> >>>>
>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>> >> >> >> >>>> <hadrien.mary at gmail.com>
>> >> >> >> >>>> wrote:
>> >> >> >> >>>> > Thank you Curtis for the answer.
>> >> >> >> >>>> >
>> >> >> >> >>>> > I tried to apply what you told me and the code now works
>> >> >> >> >>>> > without
>> >> >> >> >>>> > error. However the saved cropped image is not cropped
>> >> >> >> >>>> > (same
>> >> >> >> >>>> > size
>> >> >> >> >>>> > as
>> >> >> >> >>>> > original) and pixel values are modified).
>> >> >> >> >>>> >
>> >> >> >> >>>> > Script:
>> >> >> >> >>>> >
>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
>> >> >> >> >>>> > from io.scif.img import ImageRegion
>> >> >> >> >>>> > from io.scif.img import ImgOpener
>> >> >> >> >>>> > from io.scif.img import ImgSaver
>> >> >> >> >>>> >
>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>> >> >> >> >>>> >
>> >> >> >> >>>> > config = SCIFIOConfig()
>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
>> >> >> >> >>>> >
>> >> >> >> >>>> > opener = ImgOpener()
>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
>> >> >> >> >>>> > imp = imps[0]
>> >> >> >> >>>> >
>> >> >> >> >>>> > print(imps)
>> >> >> >> >>>> >
>> >> >> >> >>>> > saver = ImgSaver()
>> >> >> >> >>>> > saver.saveImg(target, imp)
>> >> >> >> >>>> >
>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you don't
>> >> >> >> >>>> > have
>> >> >> >> >>>> > time
>> >> >> >> >>>> > to
>> >> >> >> >>>> > write an example.
>> >> >> >> >>>> >
>> >> >> >> >>>> > I will be happy to provide some python/scifio examples
>> >> >> >> >>>> > scripts.
>> >> >> >> >>>> >
>> >> >> >> >>>> >
>> >> >> >> >>>> > --
>> >> >> >> >>>> > Hadrien Mary
>> >> >> >> >>>> >
>> >> >> >> >>>> > Ph.D student in Biology
>> >> >> >> >>>> > Tournier-Gachet Team
>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>> >> >> >> >>>> >
>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>> >> >> >> >>>> >
>> >> >> >> >>>> >
>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>> >> >> >> >>>> > <ctrueden at wisc.edu>
>> >> >> >> >>>> > wrote:
>> >> >> >> >>>> >> Hi Hadrien,
>> >> >> >> >>>> >>
>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>> >> >> >> >>>> >>> it
>> >> >> >> >>>> >>> doesn
>> >> >> >> >>>> >>> not
>> >> >> >> >>>> >>> work.
>> >> >> >> >>>> >>
>> >> >> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2
>> >> >> >> >>>> >> data
>> >> >> >> >>>> >> structures, not
>> >> >> >> >>>> >> ImagePlus objects.
>> >> >> >> >>>> >>
>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>> >> >> >> >>>> >>> function
>> >> >> >> >>>> >>> in
>> >> >> >> >>>> >>> SCIFIO ?
>> >> >> >> >>>> >>
>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
>> >> >> >> >>>> >> imgOpenerSetRegion
>> >> >> >> >>>> >> [1]
>> >> >> >> >>>> >> on
>> >> >> >> >>>> >> it,
>> >> >> >> >>>> >> then
>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back
>> >> >> >> >>>> >> an
>> >> >> >> >>>> >> ImgLib2
>> >> >> >> >>>> >> data
>> >> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
>> >> >> >> >>>> >>
>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an example
>> >> >> >> >>>> >> for
>> >> >> >> >>>> >> you
>> >> >> >> >>>> >> right
>> >> >> >> >>>> >> now. It
>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use
>> >> >> >> >>>> >> the
>> >> >> >> >>>> >> ImgOpener
>> >> >> >> >>>> >> and
>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs akin to
>> >> >> >> >>>> >> the
>> >> >> >> >>>> >> Bio-Formats
>> >> >> >> >>>> >> "BF"
>> >> >> >> >>>> >> functionality... please feel welcome to contribute some!
>> >> >> >> >>>> >>
>> >> >> >> >>>> >> Regards,
>> >> >> >> >>>> >> Curtis
>> >> >> >> >>>> >>
>> >> >> >> >>>> >> [1]
>> >> >> >> >>>> >>
>> >> >> >> >>>> >>
>> >> >> >> >>>> >>
>> >> >> >> >>>> >>
>> >> >> >> >>>> >>
>> >> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>> >> >> >> >>>> >>
>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
>> >> >> >> >>>> >> wrote:
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> Hi,
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> I am writing a python macro which iterate over all rois
>> >> >> >> >>>> >>> in
>> >> >> >> >>>> >>> ROI
>> >> >> >> >>>> >>> Manager
>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
>> >> >> >> >>>> >>> plugin
>> >> >> >> >>>> >>> to
>> >> >> >> >>>> >>> open
>> >> >> >> >>>> >>> a
>> >> >> >> >>>> >>> cropped region of an image.
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>> >> >> >> >>>> >>> it
>> >> >> >> >>>> >>> doesn
>> >> >> >> >>>> >>> not
>> >> >> >> >>>> >>> work.
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> Here is my script:
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>> >> >> >> >>>> >>> from ij import IJ
>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> from loci.plugins import BF
>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>> >> >> >> >>>> >>> from loci.common import Region
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> import os
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> # Get current image filename
>> >> >> >> >>>> >>> imp = IJ.getImage()
>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>     crop_id = i +1
>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
>> >> >> >> >>>> >>> len(rois)))
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>     bounds = roi.getBounds()
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>     x = bounds.x
>> >> >> >> >>>> >>>     y = bounds.y
>> >> >> >> >>>> >>>     w = bounds.width
>> >> >> >> >>>> >>>     h = bounds.height
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>     # Import only cropped region of the image
>> >> >> >> >>>> >>>     options = ImporterOptions()
>> >> >> >> >>>> >>>     options.setCrop(True)
>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>> >> >> >> >>>> >>>     options.setId(fname)
>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>     imp = imps[0]
>> >> >> >> >>>> >>>     imp.show()
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
>> >> >> >> >>>> >>> crop_basename)
>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>     # Save image
>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>> >> >> >> >>>> >>>     saver = ImgSaver()
>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> IJ.log('Done')
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> It fails with this error:
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> Traceback (most recent call last):
>> >> >> >> >>>> >>>   File
>> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>> >> >> >> >>>> >>> line
>> >> >> >> >>>> >>> 49, in <module>
>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>> >> >> >> >>>> >>> io.scif.Writer,
>> >> >> >> >>>> >>> String
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>> >> >> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>> org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>> java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >> >> >> >>>> >>> at
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> Three questions:
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> how can I write cropped image (I need to write them as
>> >> >> >> >>>> >>> OME
>> >> >> >> >>>> >>> Tiff
>> >> >> >> >>>> >>> so I
>> >> >> >> >>>> >>> need BF or SCIFIO).
>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>> >> >> >> >>>> >>> function
>> >> >> >> >>>> >>> in
>> >> >> >> >>>> >>> SCIFIO
>> >> >> >> >>>> >>> ?
>> >> >> >> >>>> >>> I am currently using
>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>> >> >> >> >>>> >>> to
>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
>> >> >> >> >>>> >>> instance
>> >> >> >> >>>> >>> from
>> >> >> >> >>>> >>> RoiSet.zip file ?
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> Any help would be very appreciated.
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> Thanks !
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> ?
>> >> >> >> >>>> >>> Hadrien Mary
>> >> >> >> >>>> >>>
>> >> >> >> >>>> >>> _______________________________________________
>> >> >> >> >>>> >>> ImageJ-devel mailing list
>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>> >> >> >> >>>> >>
>> >> >> >> >>>> >>
>> >> >> >> >>>
>> >> >> >> >>>
>> >> >> >>
>> >> >> >> _______________________________________________
>> >> >> >> ImageJ-devel mailing list
>> >> >> >> ImageJ-devel at imagej.net
>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>> >> >> >
>> >> >> >
>> >> >
>> >> >
>> >
>> >
>
>


From ctrueden at wisc.edu  Wed Jan 14 10:07:04 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 14 Jan 2015 10:07:04 -0600
Subject: [ImageJ-devel] SCIFIO and imageJ1
In-Reply-To: <54B66C96.2040302@mpi-cbg.de>
References: <54B66C96.2040302@mpi-cbg.de>
Message-ID: <CADN69ymi7G4BUkLftrxQOKLdNO1BcUcLQSnY0x6YNsTgtoRqxw@mail.gmail.com>

Hi Pietro,

> Is there any way to pack a jar with SCIFIO included that work also in
> imageJ1

Certainly. But it would help to be more specific about what you are trying
to do.

By "pack a jar with SCIFIO" do you mean "create an uber-JAR with
dependencies embedded"? Or something else?

By "ImageJ1" do you mean the vanilla ImageJ1 distribution from
imagej.nih.gov? If so, you can do it, but I would recommend saving yourself
a lot of work and just recommending people use ImageJ2, which comes with
SCIFIO already bundled. But if you really want to go that route, look at
the maven-shade-plugin or maven-assembly-plugin [1].

Regards,
Curtis

[1] Here is a starting point for how we create an ImageJ2 uber-JAR with
dependencies:
https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-22/pom.xml#L421-L648.
Your use case would likely be simpler.

On Wed, Jan 14, 2015 at 7:18 AM, Pietro Incardona <incardon at mpi-cbg.de>
wrote:

> Hi All
>
> Is there any way to pack a jar with SCIFIO included that work also in
> imageJ1
>
> Cheers
> Pietro
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150114/f01e6d5b/attachment.html>

From hadrien.mary at gmail.com  Wed Jan 14 12:57:11 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Wed, 14 Jan 2015 19:57:11 +0100
Subject: [ImageJ-devel] Save OME Tiff with File > Export > Image
Message-ID: <CAEpSnnYoYGt3JeVbUwgWCgAN4jQ=wj89KkkW+CC7a9WM895Krg@mail.gmail.com>

Hi,

I'd like to report a bug I noticed some time ago.

I have an error when I try to save an OME Tiff file with File > Export
> Image (to save it as an OME Tiff format). Note that it works well
when the saved image is not an OME Tiff file.

The bug is weird.

First when I click File > Export > Image, gtk file manager open to ask
where I want to save the file. The default filename is test.ometif
(instead of test.ome.tif, current filename). I change the filename to
be test.ome.tif (same bug when I don't change it) and when I click
"save", I have this message :

------------------------------------
(Fiji Is Just) ImageJ 2.0.0-rc-21/1.49m; Java 1.7.0_65 [64-bit]; Linux
3.13.0-44-generic; 80MB of 3600MB (2%)

java.lang.RuntimeException: java.util.concurrent.ExecutionException:
java.lang.IllegalArgumentException
at net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
at net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
at ij.IJ.runPlugIn(IJ.java)
at ij.Executer.runCommand(Executer.java:131)
at ij.Executer.run(Executer.java:64)
at java.lang.Thread.run(Thread.java:745)
Caused by: java.util.concurrent.ExecutionException:
java.lang.IllegalArgumentException
at java.util.concurrent.FutureTask.report(FutureTask.java:122)
at java.util.concurrent.FutureTask.get(FutureTask.java:188)
at net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
... 5 more
Caused by: java.lang.IllegalArgumentException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
at org.scijava.command.CommandModule.run(CommandModule.java:201)
at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
at org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
at java.util.concurrent.FutureTask.run(FutureTask.java:262)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
... 1 more
------------------------------------

I currently use BF exporter function which is working well for my
daily use. So don't rush on this.

Thank you

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


From incardon at mpi-cbg.de  Thu Jan 15 07:02:29 2015
From: incardon at mpi-cbg.de (Pietro Incardona)
Date: Thu, 15 Jan 2015 14:02:29 +0100
Subject: [ImageJ-devel] SCIFIO and imageJ1
In-Reply-To: <CADN69ymi7G4BUkLftrxQOKLdNO1BcUcLQSnY0x6YNsTgtoRqxw@mail.gmail.com>
References: <54B66C96.2040302@mpi-cbg.de>
	<CADN69ymi7G4BUkLftrxQOKLdNO1BcUcLQSnY0x6YNsTgtoRqxw@mail.gmail.com>
Message-ID: <54B7BA65.6080508@mpi-cbg.de>

Hi Curtis

I already strongly suggest to use Fiji/ImageJ2, but I would like (if 
reasonably possible) to maintain an imageJ version

I packed this in the jar file

/imglib2-2.0.0-beta-26.jar
/imglib2-2.0.0-SNAPSHOT.jar
/imglib2-algorithms-2.0.0-beta-26.jar
/imglib2-algorithms-gpl-2.0.0-beta-26.jar
/imglib2-algorithms-legacy-2.0.0-beta-26.jar
/imglib2-ij-2.0.0-beta-26.jar
/imglib2-meta-2.0.0-beta-26.jar
/imglib2-ops-2.0.0-beta-26.jar
/imglib2-realtransform-2.0.0-beta-26.jar
/imglib2-ui-2.0.0-SNAPSHOT.jar
/scifio-0.16.5.jar
/scifio-bf-compat-1.8.4.jar
/scifio-cli-0.1.0.jar
/scifio-jai-imageio-1.1.0.jar
/scifio-lifesci-0.5.2.jar
/scifio-ome-xml-0.9.2.jar
/scifio-tools-0.14.0.jar
/scijava-common-2.33.0.jar
/scijava-plugins-commands-0.1.7.jar
/scijava-plugins-platforms-0.1.2.jar
/scijava-plugins-text-markdown-0.1.1.jar
/scijava-plugins-text-plain-0.1.1.jar
/scijava-ui-awt-0.1.2.jar
/scijava-ui-swing-0.3.0.jar


Apparently it crashes on the instruction

         // create the ImgOpener
         ImgOpener imgOpener = new ImgOpener();

ImageJ 1.48v; Java 1.6.0_24 [64-bit]; Linux 3.16.3-200.fc20.x86_64; 10MB 
of 455MB (2%)

java.lang.IllegalArgumentException: No compatible service: 
io.scif.SCIFIOService
     at 
org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:242)
     at 
org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:193)
     at 
org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:169)
     at org.scijava.Context.<init>(Context.java:234)
     at org.scijava.Context.<init>(Context.java:195)
     at org.scijava.Context.<init>(Context.java:138)
     at org.scijava.Context.<init>(Context.java:126)
     at 
io.scif.img.AbstractImgIOComponent.<init>(AbstractImgIOComponent.java:57)
     at io.scif.img.ImgOpener.<init>(ImgOpener.java:94)
     at mosaic.core.utils.MosaicTest.processResult(MosaicTest.java:178)
     at mosaic.core.utils.MosaicTest.testPlugin(MosaicTest.java:335)
     at mosaic.plugins.test.Jtest.naturalization(Jtest.java:32)
     at mosaic.plugins.Jtest.setup(Jtest.java:39)
     at 
ij.plugin.filter.PlugInFilterRunner.<init>(PlugInFilterRunner.java:47)
     at ij.IJ.runUserPlugIn(IJ.java:201)
     at ij.IJ.runPlugIn(IJ.java:163)
     at ij.Executer.runCommand(Executer.java:131)
     at ij.Executer.run(Executer.java:64)
     at java.lang.Thread.run(Thread.java:662)


Cheers
Pietro

On 01/14/2015 05:07 PM, Curtis Rueden wrote:
> Hi Pietro,
>
> > Is there any way to pack a jar with SCIFIO included that work also in
> > imageJ1
>
> Certainly. But it would help to be more specific about what you are 
> trying to do.
>
> By "pack a jar with SCIFIO" do you mean "create an uber-JAR with 
> dependencies embedded"? Or something else?
>
> By "ImageJ1" do you mean the vanilla ImageJ1 distribution from 
> imagej.nih.gov <http://imagej.nih.gov>? If so, you can do it, but I 
> would recommend saving yourself a lot of work and just recommending 
> people use ImageJ2, which comes with SCIFIO already bundled. But if 
> you really want to go that route, look at the maven-shade-plugin or 
> maven-assembly-plugin [1].
>
> Regards,
> Curtis
>
> [1] Here is a starting point for how we create an ImageJ2 uber-JAR 
> with dependencies: 
> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-22/pom.xml#L421-L648. 
> Your use case would likely be simpler.
>
> On Wed, Jan 14, 2015 at 7:18 AM, Pietro Incardona <incardon at mpi-cbg.de 
> <mailto:incardon at mpi-cbg.de>> wrote:
>
>     Hi All
>
>     Is there any way to pack a jar with SCIFIO included that work also
>     in imageJ1
>
>     Cheers
>     Pietro
>
>
>     _______________________________________________
>     ImageJ-devel mailing list
>     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>     http://imagej.net/mailman/listinfo/imagej-devel
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150115/871c6fd6/attachment.html>

From christian.goeschl at gmx.at  Thu Jan 15 09:20:47 2015
From: christian.goeschl at gmx.at (=?UTF-8?Q?=22Christian_G=C3=B6schl=22?=)
Date: Thu, 15 Jan 2015 16:20:47 +0100
Subject: [ImageJ-devel] imagej2 and ij1-plugins
Message-ID: <trinity-3b56da31-bbac-48fb-bb6d-c9492a5010e7-1421335247039@3capp-gmx-bs43>

An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150115/2a8741b0/attachment.html>

From ctrueden at wisc.edu  Thu Jan 15 15:34:44 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 15 Jan 2015 15:34:44 -0600
Subject: [ImageJ-devel] imagej2 and ij1-plugins
In-Reply-To: <trinity-3b56da31-bbac-48fb-bb6d-c9492a5010e7-1421335247039@3capp-gmx-bs43>
References: <trinity-3b56da31-bbac-48fb-bb6d-c9492a5010e7-1421335247039@3capp-gmx-bs43>
Message-ID: <CADN69ykKi4Szpg3Qe6hP73v=Sv82YAkZMhROqBuiChe_Fd9r3g@mail.gmail.com>

Hi Christian,

> When I start ImageJ with net.imagej.ImageJ() as main class, ImageJ
> finds all plugins I put into the plugins directory. However, if I try
> to run one of them, I get a "Plugin or class not found" error.

How are you starting the net.imagej.ImageJ main class? From an IDE? From
the command line?

Regards,
Curtis

On Thu, Jan 15, 2015 at 9:20 AM, "Christian G?schl" <
christian.goeschl at gmx.at> wrote:

> Hi all,
>
> I've downloaded and compiled the source code for ImageJ2.
> When I start ImageJ with net.imagej.ImageJ() as main class, ImageJ finds
> all plugins I put into the plugins directory. However, if I try to run one
> of them, I get a "Plugin or class not found" error.
> If I start ImageJ with ij.ImageJ() as main class, the plugins work as
> expected.
> Do I have to set a class path (or some other option) for ImageJ2 to find
> the plugins?
>
> Thanks,
> Christian
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150115/ef4571f9/attachment.html>

From ctrueden at wisc.edu  Thu Jan 15 15:57:55 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 15 Jan 2015 15:57:55 -0600
Subject: [ImageJ-devel] SCIFIO and imageJ1
In-Reply-To: <54B7BA65.6080508@mpi-cbg.de>
References: <54B66C96.2040302@mpi-cbg.de>
	<CADN69ymi7G4BUkLftrxQOKLdNO1BcUcLQSnY0x6YNsTgtoRqxw@mail.gmail.com>
	<54B7BA65.6080508@mpi-cbg.de>
Message-ID: <CADN69ykPJFwSvWQiweygAnhmJCDWiJGZ4RBn9c_GOGX6Cfmrog@mail.gmail.com>

Hi Pietro,

> java.lang.IllegalArgumentException: No compatible service:
> io.scif.SCIFIOService

You have been bitten by the annotation combining problem: many of the JAR
files you are trying to combine have a file at
META-INF/json/org.scijava.plugin.Plugin, which lists the plugins included
in that JAR file. All of these files need to be appended to one another and
stored within your uber-JAR, or else plugins will not be discoverable. The
scheme you are using to build your uberjar is likely not merging these
files as needed.

We provide some code in scijava-common to facilitate combining this
metadata in the correct way. If you are using Maven to build, you can use
it via the following configuration in your pom.xml:


https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-22/pom.xml#L577-L594

See also:
https://github.com/scijava/scijava-common/issues/37

Regards,
Curtis


On Thu, Jan 15, 2015 at 7:02 AM, Pietro Incardona <incardon at mpi-cbg.de>
wrote:

>  Hi Curtis
>
> I already strongly suggest to use Fiji/ImageJ2, but I would like (if
> reasonably possible) to maintain an imageJ version
>
> I packed this in the jar file
>
> /imglib2-2.0.0-beta-26.jar
> /imglib2-2.0.0-SNAPSHOT.jar
> /imglib2-algorithms-2.0.0-beta-26.jar
> /imglib2-algorithms-gpl-2.0.0-beta-26.jar
> /imglib2-algorithms-legacy-2.0.0-beta-26.jar
> /imglib2-ij-2.0.0-beta-26.jar
> /imglib2-meta-2.0.0-beta-26.jar
> /imglib2-ops-2.0.0-beta-26.jar
> /imglib2-realtransform-2.0.0-beta-26.jar
> /imglib2-ui-2.0.0-SNAPSHOT.jar
> /scifio-0.16.5.jar
> /scifio-bf-compat-1.8.4.jar
> /scifio-cli-0.1.0.jar
> /scifio-jai-imageio-1.1.0.jar
> /scifio-lifesci-0.5.2.jar
> /scifio-ome-xml-0.9.2.jar
> /scifio-tools-0.14.0.jar
> /scijava-common-2.33.0.jar
> /scijava-plugins-commands-0.1.7.jar
> /scijava-plugins-platforms-0.1.2.jar
> /scijava-plugins-text-markdown-0.1.1.jar
> /scijava-plugins-text-plain-0.1.1.jar
> /scijava-ui-awt-0.1.2.jar
> /scijava-ui-swing-0.3.0.jar
>
>
> Apparently it crashes on the instruction
>
>         // create the ImgOpener
>         ImgOpener imgOpener = new ImgOpener();
>
> ImageJ 1.48v; Java 1.6.0_24 [64-bit]; Linux 3.16.3-200.fc20.x86_64; 10MB
> of 455MB (2%)
>
> java.lang.IllegalArgumentException: No compatible service:
> io.scif.SCIFIOService
>     at
> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:242)
>     at
> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:193)
>     at
> org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:169)
>     at org.scijava.Context.<init>(Context.java:234)
>     at org.scijava.Context.<init>(Context.java:195)
>     at org.scijava.Context.<init>(Context.java:138)
>     at org.scijava.Context.<init>(Context.java:126)
>     at
> io.scif.img.AbstractImgIOComponent.<init>(AbstractImgIOComponent.java:57)
>     at io.scif.img.ImgOpener.<init>(ImgOpener.java:94)
>     at mosaic.core.utils.MosaicTest.processResult(MosaicTest.java:178)
>     at mosaic.core.utils.MosaicTest.testPlugin(MosaicTest.java:335)
>     at mosaic.plugins.test.Jtest.naturalization(Jtest.java:32)
>     at mosaic.plugins.Jtest.setup(Jtest.java:39)
>     at
> ij.plugin.filter.PlugInFilterRunner.<init>(PlugInFilterRunner.java:47)
>     at ij.IJ.runUserPlugIn(IJ.java:201)
>     at ij.IJ.runPlugIn(IJ.java:163)
>     at ij.Executer.runCommand(Executer.java:131)
>     at ij.Executer.run(Executer.java:64)
>     at java.lang.Thread.run(Thread.java:662)
>
>
> Cheers
> Pietro
>
>
> On 01/14/2015 05:07 PM, Curtis Rueden wrote:
>
> Hi Pietro,
>
>  > Is there any way to pack a jar with SCIFIO included that work also in
> > imageJ1
>
>  Certainly. But it would help to be more specific about what you are
> trying to do.
>
>  By "pack a jar with SCIFIO" do you mean "create an uber-JAR with
> dependencies embedded"? Or something else?
>
>  By "ImageJ1" do you mean the vanilla ImageJ1 distribution from
> imagej.nih.gov? If so, you can do it, but I would recommend saving
> yourself a lot of work and just recommending people use ImageJ2, which
> comes with SCIFIO already bundled. But if you really want to go that route,
> look at the maven-shade-plugin or maven-assembly-plugin [1].
>
>  Regards,
> Curtis
>
>  [1] Here is a starting point for how we create an ImageJ2 uber-JAR with
> dependencies:
> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-22/pom.xml#L421-L648.
> Your use case would likely be simpler.
>
> On Wed, Jan 14, 2015 at 7:18 AM, Pietro Incardona <incardon at mpi-cbg.de>
> wrote:
>
>> Hi All
>>
>> Is there any way to pack a jar with SCIFIO included that work also in
>> imageJ1
>>
>> Cheers
>> Pietro
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150115/75f443b3/attachment.html>

From ctrueden at wisc.edu  Fri Jan 16 15:04:14 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 16 Jan 2015 15:04:14 -0600
Subject: [ImageJ-devel] imagej2 and ij1-plugins
In-Reply-To: <trinity-005ae236-848e-4c49-9c55-53be28975eb3-1421422807253@3capp-gmx-bs47>
References: <trinity-3b56da31-bbac-48fb-bb6d-c9492a5010e7-1421335247039@3capp-gmx-bs43>
	<CADN69ykKi4Szpg3Qe6hP73v=Sv82YAkZMhROqBuiChe_Fd9r3g@mail.gmail.com>
	<trinity-005ae236-848e-4c49-9c55-53be28975eb3-1421422807253@3capp-gmx-bs47>
Message-ID: <CADN69ykXKHEOMze03Q0ddkEeiX-xu-6m02RrVvBv7Oe3D17cPQ@mail.gmail.com>

Hi Christian,

> I start it from Eclipse. I imported imagej as a maven project.
>
> I also tried to set the System.property "plugins.dir" (as in the
> minimal-IJ1-plugin example), but it did not help. The strange thing
> is, that the plugins are shown in the Plugins-menu, so I assume that
> the plugins.config files are parsed correctly.

Thanks, I can confirm this bug. I filed an issue for it:
   https://github.com/imagej/imagej/issues/110

In the meantime, you can work around by copying your project JAR file(s)
into your ImageJ application's jars/ and plugins/ folders as appropriate,
and launching ImageJ via the ImageJ launcher as usual.

Regards,
Curtis

On Fri, Jan 16, 2015 at 9:40 AM, "Christian G?schl" <
christian.goeschl at gmx.at> wrote:

> Hi Curtis,
>
> thanks for your answer.
>
> > How are you starting the net.imagej.ImageJ main class? From an IDE? From
> the command line?
> I start it from Eclipse. I imported imagej as a maven project.
>
> I also tried to set the System.property "plugins.dir" (as in the
> minimal-IJ1-plugin example), but it did not help.
> The strange thing is, that the plugins are shown in the Plugins-menu, so I
> assume that the plugins.config files are parsed correctly.
>
> Best,
> Christian
>
> Hi Christian,
>
>
> > When I start ImageJ with net.imagej.ImageJ() as main class, ImageJ
> > finds all plugins I put into the plugins directory. However, if I try
> > to run one of them, I get a "Plugin or class not found" error.
>
> How are you starting the net.imagej.ImageJ main class? From an IDE? From
> the command line?
>
> Regards,
> Curtis
>
> On Thu, Jan 15, 2015 at 9:20 AM, "Christian G?schl" <
> christian.goeschl at gmx.at> wrote:
>
> Hi all,
>
> I've downloaded and compiled the source code for ImageJ2.
> When I start ImageJ with net.imagej.ImageJ() as main class, ImageJ finds
> all plugins I put into the plugins directory. However, if I try to run one
> of them, I get a "Plugin or class not found" error.
> If I start ImageJ with ij.ImageJ() as main class, the plugins work as
> expected.
> Do I have to set a class path (or some other option) for ImageJ2 to find
> the plugins?
>
> Thanks,
> Christian
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net[ImageJ-devel at imagej.net]
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150116/70034dbe/attachment.html>

From hadrien.mary at gmail.com  Mon Jan 19 03:29:15 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Mon, 19 Jan 2015 10:29:15 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
	<CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
Message-ID: <CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>

Hi again,

The script works well for small images (OME Tiff or normal Tiff) with
the recent Fiji update. However when I run it on large movies (13GB),
I have the following error.

----------------------------------------------------------
-- Classpath of ClassLoader --
/home/hadim/local/Fiji.app/plugins/

at org.scijava.Context.inject(Context.java:431)
at org.scijava.Context.inject(Context.java:363)
at org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:237)
at org.scijava.ui.DefaultUIService.discoverUIs(DefaultUIService.java:500)
at org.scijava.ui.DefaultUIService.uiList(DefaultUIService.java:479)
at org.scijava.ui.DefaultUIService.getAvailableUIs(DefaultUIService.java:231)
at org.scijava.ui.DefaultUIService.onEvent(DefaultUIService.java:457)
at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
at org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:280)
at org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:254)
at org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
at org.scijava.event.DefaultEventBus.access$201(DefaultEventBus.java:56)
at org.scijava.event.DefaultEventBus$2.run(DefaultEventBus.java:223)
at org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
at java.util.concurrent.FutureTask.run(FutureTask.java:262)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
at java.lang.Thread.run(Thread.java:745)
Traceback (most recent call last):
  File "/home/hadim/local/Fiji.app/plugins/Scripts/Plugins/Crop_Multi_Roi.py",
line 50, in <module>
    saver.saveImg(crop_fname, imp)
at io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
at io.scif.img.cell.SCIFIOCellCache.load(SCIFIOCellCache.java:144)
at io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:122)
at io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:101)
at net.imglib2.img.list.ListCursor.get(ListCursor.java:80)
at net.imglib2.img.cell.CellCursor.getCell(CellCursor.java:92)
at net.imglib2.img.cell.CellCursor.moveToNextCell(CellCursor.java:180)
at net.imglib2.img.cell.CellCursor.reset(CellCursor.java:150)
at net.imglib2.img.cell.CellCursor.<init>(CellCursor.java:86)
at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:113)
at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:47)
at net.imglib2.img.AbstractImg.firstElement(AbstractImg.java:81)
at net.imagej.ImgPlus.firstElement(ImgPlus.java:261)
at io.scif.img.ImgSaver.populateMeta(ImgSaver.java:894)
at io.scif.img.ImgSaver.writeImg(ImgSaver.java:514)
at io.scif.img.ImgSaver.writeImg(ImgSaver.java:495)
at io.scif.img.ImgSaver.writeImg(ImgSaver.java:457)
at io.scif.img.ImgSaver.saveImg(ImgSaver.java:174)
at io.scif.img.ImgSaver.saveImg(ImgSaver.java:158)
at io.scif.img.ImgSaver.saveImg(ImgSaver.java:128)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)

java.lang.NullPointerException: java.lang.NullPointerException
-------------------------------------------------------------------

The associated script is below.

------------------------------------------------------------------------
from ij import IJ
from ij.plugin.frame import RoiManager

from io.scif.config import SCIFIOConfig
from io.scif.img import ImageRegion
from io.scif.img import ImgOpener
from io.scif.img import ImgSaver
from net.imagej.axis import Axes

import os

# Get current image filename
imp = IJ.getImage()
f = imp.getOriginalFileInfo()
fname = os.path.join(f.directory, f.fileName)

IJ.log('Image filename is %s' % fname)

# Iterate over all ROIs from ROI Manager
rois = RoiManager.getInstance().getRoisAsArray()
for i, roi in enumerate(rois):

    crop_id = i +1
    IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))

    # Get ROI bounds
    bounds = roi.getBounds()
    x = bounds.x
    y = bounds.y
    w = bounds.width
    h = bounds.height

    # Import only cropped region of the image
    axes = [Axes.X, Axes.Y]
    ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
    config = SCIFIOConfig()
    config.imgOpenerSetRegion(ImageRegion(axes, ranges))

    opener = ImgOpener()
    imps = opener.openImgs(fname, config)
    imp = imps[0]

    # Get filename and basename of the current cropped image
    crop_basename = "crop%i_%s" % (crop_id, f.fileName)
    crop_fname = os.path.join(f.directory, crop_basename)
    IJ.log("Saving crop to %s" % crop_fname)

    # Save cropped image
    saver = ImgSaver()
    saver.saveImg(crop_fname, imp)

IJ.log('Done')
----------------------------------------------------------------------------

Does opener.openImgs() wait for the image to open ? If it does not I
guess that saver.saveImg() is called on an image that does not exist
in memory.

Thanks

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Wed, Jan 14, 2015 at 4:35 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> I confirm it works !
>
> Thanks again
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> Hi Hadrien,
>>
>>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>
>> Ah sorry - my fault again for responding too quickly. ImageJ.git doesn't
>> have a dependency on scifio-ome-xml; it's a dependency in Fiji itself[1]. So
>> when you installed ImageJ into your Fiji, it updated all the dependencies
>> but didn't actually update scifio-ome-xml.
>>
>> You can either manually copy scifio-ome-xml[2] over, or try installing from
>> the latest Fiji master[3] which I just updated to have the latest
>> dependencies.
>>
>> [1]
>> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
>> [2]
>> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>> [3]
>> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
>>
>> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary <hadrien.mary at gmail.com>
>> wrote:
>>>
>>> Ok it makes sense now !
>>>
>>> So I did what you told me about cloning imagej repo, building and
>>> install it with maven inside my local Fiji.app/. I don't know if it's
>>> a bug or a missing dependency but I am now unable to open OME Tiff
>>> files (other kind of file works well) wether it is by drag and drop or
>>> with my script. The error is the following:
>>>
>>> -------------------------------------------------
>>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>> at
>>> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
>>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
>>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
>>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
>>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
>>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
>>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
>>> at
>>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
>>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
>>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
>>> at
>>> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
>>> at
>>> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
>>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
>>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
>>> at java.lang.Thread.run(Thread.java:745)
>>> -----------------------------------------------
>>>
>>> I guess something in scifio has not been updated to use the new
>>> net.imagej.axis or maybe the update is not built/downloaded when I run
>>> maven on my imagej clone.
>>>
>>>
>>> --
>>> Hadrien Mary
>>>
>>> Ph.D student in Biology
>>> Tournier-Gachet Team
>>> CNRS - LBCMCP - UMR 5088
>>>
>>> Universit? de Toulouse - B?t. 4R3B1
>>> 118, route de Narbonne - 31062 Toulouse
>>>
>>>
>>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>> > Hi Hadrien,
>>> >
>>> >>Sorry if it's off topic but I tried to run my script and I got a python
>>> >> error
>>> >
>>> > Oh no! This is totally my fault. I had to update your script for the new
>>> > dependencies I mentioned and forgot to paste the new version in my
>>> > response
>>> > yesterday:
>>> >
>>> >>from net.imglib2.meta import Axes
>>> >
>>> > This import needs to change to:
>>> >
>>> > from net.imagej.axis import Axes
>>> >
>>> > Sorry about that!
>>> >
>>> > Best,
>>> > Mark
>>> >
>>> >
>>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>> > wrote:
>>> >>
>>> >> Thank you Mark !
>>> >>
>>> >> Sorry if it's off topic but I tried to run my script and I got a
>>> >> python error probably related to type difference between python and
>>> >> java. It's not the first time I saw this kind of message and I'd like
>>> >> to know how to resolve it. Note that for python script I mainly use
>>> >> javadoc as documentation.
>>> >>
>>> >> The error is below coming from almost the same script as before in this
>>> >> thread.
>>> >>
>>> >> ********************************
>>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>>> >> Traceback (most recent call last):
>>> >>   File
>>> >>
>>> >> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>>> >> line 17, in <module>
>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>>> >> net.imagej.axis.AxisType[]
>>> >>
>>> >> at org.python.core.Py.TypeError(Py.java:235)
>>> >> at
>>> >>
>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>> >> at
>>> >>
>>> >> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>> >> at
>>> >>
>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>> >> at
>>> >>
>>> >> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
>>> >> at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>>> >> at
>>> >>
>>> >> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
>>> >> at org.python.core.PyType.__call__(PyType.java:1548)
>>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
>>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
>>> >> at
>>> >>
>>> >> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>>> >> at
>>> >>
>>> >> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>> >> at org.python.core.PyCode.call(PyCode.java:18)
>>> >> at org.python.core.Py.runCode(Py.java:1275)
>>> >> at
>>> >>
>>> >> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>> >> at
>>> >>
>>> >> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>> >> at
>>> >>
>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>> >> at
>>> >>
>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>> >> at java.lang.Thread.run(Thread.java:745)
>>> >> ************************************
>>> >>
>>> >> --
>>> >> Hadrien Mary
>>> >>
>>> >> Ph.D student in Biology
>>> >> Tournier-Gachet Team
>>> >> CNRS - LBCMCP - UMR 5088
>>> >>
>>> >> Universit? de Toulouse - B?t. 4R3B1
>>> >> 118, route de Narbonne - 31062 Toulouse
>>> >>
>>> >>
>>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>> >> > Hi Hadrien,
>>> >> >
>>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
>>> >> >
>>> >> >  It's working for me now, as of the latest SCIFIO[1] and
>>> >> > SCIFIO-OME-XML[2].
>>> >> > Note that these libraries have updated dependencies compared to
>>> >> > what's
>>> >> > currently on Fiji, so you can't just drop these .jars into your Fiji
>>> >> > installation if you want to test locally; you need to update the
>>> >> > dependencies as well. The easiest way to do this would be to just
>>> >> > clone
>>> >> > Imagej.git[3] and install it into your Fiji.app directory by running:
>>> >> >
>>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>>> >> > -Ddelete.other.versions=true
>>> >> >
>>> >> > We'll push these changes up to Fiji this week, and I will find or
>>> >> > write
>>> >> > better instructions for local testing.
>>> >> >
>>> >> > Hope this helps. Let us know if you have any questions/problems.
>>> >> > Thanks
>>> >> > again for finding this issue!
>>> >> >
>>> >> > Best,
>>> >> > - Mark
>>> >> >
>>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>>> >> > [2]
>>> >> >
>>> >> >
>>> >> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>> >> > [3] https://github.com/imagej/imagej
>>> >> >
>>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
>>> >> > <hadrien.mary at gmail.com>
>>> >> > wrote:
>>> >> >>
>>> >> >> Ok. Let me know when you want me to test your changes. I also tested
>>> >> >> fix-writing branch and I didn't notice any changes.
>>> >> >>
>>> >> >> --
>>> >> >> Hadrien Mary
>>> >> >>
>>> >> >> Ph.D student in Biology
>>> >> >> Tournier-Gachet Team
>>> >> >> CNRS - LBCMCP - UMR 5088
>>> >> >>
>>> >> >> Universit? de Toulouse - B?t. 4R3B1
>>> >> >> 118, route de Narbonne - 31062 Toulouse
>>> >> >>
>>> >> >>
>>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>> >> >> > Hi Hadrien,
>>> >> >> >
>>> >> >> > I've identified at least two bugs that could be affecting you
>>> >> >> > here.
>>> >> >> >
>>> >> >> > First of all, there was a bug in the OME-TIFF format writing out
>>> >> >> > multi-dimensional images. That's fixed on a branch but not
>>> >> >> > uploaded
>>> >> >> > to
>>> >> >> > Fiji
>>> >> >> > yet [1].
>>> >> >> >
>>> >> >> > Second, it seems like cropping is restricting pixel reads to the
>>> >> >> > correct
>>> >> >> > region but then doesn't change the image size.
>>> >> >> >
>>> >> >> > I'm hoping when I fix the second issue writing cropped regions
>>> >> >> > will
>>> >> >> > be
>>> >> >> > fixed.
>>> >> >> >
>>> >> >> > Thanks for the great feedback!
>>> >> >> > - Mark
>>> >> >> >
>>> >> >> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>>> >> >> >
>>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>>> >> >> > <hadrien.mary at gmail.com>
>>> >> >> > wrote:
>>> >> >> >>
>>> >> >> >> I also confirm the same behaviour when replacing original file by
>>> >> >> >> OME
>>> >> >> >> sample data :
>>> >> >> >>
>>> >> >> >>
>>> >> >> >>
>>> >> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>>> >> >> >>
>>> >> >> >> --
>>> >> >> >> Hadrien Mary
>>> >> >> >>
>>> >> >> >> Ph.D student in Biology
>>> >> >> >> Tournier-Gachet Team
>>> >> >> >> CNRS - LBCMCP - UMR 5088
>>> >> >> >>
>>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
>>> >> >> >> 118, route de Narbonne - 31062 Toulouse
>>> >> >> >>
>>> >> >> >>
>>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>>> >> >> >> <hadrien.mary at gmail.com>
>>> >> >> >> wrote:
>>> >> >> >> > After some investigations I think there is a bug with ImgSaver.
>>> >> >> >> > In
>>> >> >> >> > the
>>> >> >> >> > following script, X, Y crop is fine but axes informations (T
>>> >> >> >> > and
>>> >> >> >> > Z)
>>> >> >> >> > are lost and all frames appears on the same axes. Now if I
>>> >> >> >> > replace
>>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
>>> >> >> >> > cropped
>>> >> >> >> > image has the same dimensions than original however axes
>>> >> >> >> > informations
>>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values
>>> >> >> >> > are
>>> >> >> >> > totally incoherent which is not the case in cropped.tif.
>>> >> >> >> >
>>> >> >> >> > Files can be found here :
>>> >> >> >> >
>>> >> >> >> >
>>> >> >> >> >
>>> >> >> >> >
>>> >> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>>> >> >> >> >
>>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>>> >> >> >> > original.ome.tif.
>>> >> >> >> >
>>> >> >> >> > The script:
>>> >> >> >> >
>>> >> >> >> > ---------------------------------------------------
>>> >> >> >> > from io.scif import SCIFIO
>>> >> >> >> > from io.scif.config import SCIFIOConfig
>>> >> >> >> > from io.scif.img import ImageRegion
>>> >> >> >> > from io.scif.img import ImgOpener
>>> >> >> >> > from io.scif.img import ImgSaver
>>> >> >> >> > from net.imglib2.meta import Axes
>>> >> >> >> >
>>> >> >> >> > fname = "/home/hadim/original.ome.tif"
>>> >> >> >> > target = "/home/hadim/cropped.tif"
>>> >> >> >> >
>>> >> >> >> > axes = [Axes.X, Axes.Y]
>>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>>> >> >> >> > config = SCIFIOConfig()
>>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>> >> >> >> >
>>> >> >> >> > opener = ImgOpener()
>>> >> >> >> > imps = opener.openImgs(fname, config)
>>> >> >> >> > imp = imps[0]
>>> >> >> >> >
>>> >> >> >> > saver = ImgSaver()
>>> >> >> >> > saver.saveImg(target, imp)
>>> >> >> >> >
>>> >> >> >> > print('Done')
>>> >> >> >> > ---------------------------------------------------
>>> >> >> >> >
>>> >> >> >> >
>>> >> >> >> > --
>>> >> >> >> > Hadrien Mary
>>> >> >> >> >
>>> >> >> >> >
>>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>>> >> >> >> > <hadrien.mary at gmail.com>
>>> >> >> >> > wrote:
>>> >> >> >> >> Thanks for the tip (reminder to me: always look for example in
>>> >> >> >> >> tests!).
>>> >> >> >> >>
>>> >> >> >> >> Unfortunately crop does not work... I will try to do more
>>> >> >> >> >> tests
>>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
>>> >> >> >> >>
>>> >> >> >> >> Updated code:
>>> >> >> >> >>
>>> >> >> >> >> from ij import IJ
>>> >> >> >> >> from ij import ImagePlus
>>> >> >> >> >>
>>> >> >> >> >> from io.scif import SCIFIO
>>> >> >> >> >> from io.scif.config import SCIFIOConfig
>>> >> >> >> >> from io.scif.img import ImageRegion
>>> >> >> >> >> from io.scif.img import ImgOpener
>>> >> >> >> >> from io.scif.img import ImgSaver
>>> >> >> >> >> from net.imglib2.meta import Axes
>>> >> >> >> >>
>>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
>>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
>>> >> >> >> >>
>>> >> >> >> >> axes = [Axes.X, Axes.Y]
>>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>>> >> >> >> >> config = SCIFIOConfig()
>>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>> >> >> >> >>
>>> >> >> >> >> opener = ImgOpener()
>>> >> >> >> >> imps = opener.openImgs(fname, config)
>>> >> >> >> >> imp = imps[0]
>>> >> >> >> >>
>>> >> >> >> >> saver = ImgSaver()
>>> >> >> >> >> saver.saveImg(target, imp)
>>> >> >> >> >>
>>> >> >> >> >> print('Done')
>>> >> >> >> >>
>>> >> >> >> >> --
>>> >> >> >> >> Hadrien Mary
>>> >> >> >> >>
>>> >> >> >> >>
>>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>>> >> >> >> >> <ctrueden at wisc.edu>
>>> >> >> >> >> wrote:
>>> >> >> >> >>> Hi Hadrien,
>>> >> >> >> >>>
>>> >> >> >> >>>> I would like to be able to crop a region in X and Y while
>>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z, T).
>>> >> >> >> >>>
>>> >> >> >> >>> Here's some Java:
>>> >> >> >> >>>
>>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY
>>> >> >> >> >>> };
>>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>>> >> >> >> >>>
>>> >> >> >> >>> Adapted from here:
>>> >> >> >> >>>
>>> >> >> >> >>>
>>> >> >> >> >>>
>>> >> >> >> >>>
>>> >> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>>> >> >> >> >>>
>>> >> >> >> >>> And untested.
>>> >> >> >> >>>
>>> >> >> >> >>> HTH,
>>> >> >> >> >>> Curtis
>>> >> >> >> >>>
>>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>>> >> >> >> >>> <hadrien.mary at gmail.com>
>>> >> >> >> >>> wrote:
>>> >> >> >> >>>>
>>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
>>> >> >> >> >>>> instanciate
>>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help me...
>>> >> >> >> >>>> I
>>> >> >> >> >>>> would
>>> >> >> >> >>>> like to be able to crop a region in X and Y while keeping
>>> >> >> >> >>>> any
>>> >> >> >> >>>> other
>>> >> >> >> >>>> dimensions which could exist (C, Z, T).
>>> >> >> >> >>>>
>>> >> >> >> >>>> --
>>> >> >> >> >>>> Hadrien Mary
>>> >> >> >> >>>>
>>> >> >> >> >>>>
>>> >> >> >> >>>>
>>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>>> >> >> >> >>>> <hadrien.mary at gmail.com>
>>> >> >> >> >>>> wrote:
>>> >> >> >> >>>> > Thank you Curtis for the answer.
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > I tried to apply what you told me and the code now works
>>> >> >> >> >>>> > without
>>> >> >> >> >>>> > error. However the saved cropped image is not cropped
>>> >> >> >> >>>> > (same
>>> >> >> >> >>>> > size
>>> >> >> >> >>>> > as
>>> >> >> >> >>>> > original) and pixel values are modified).
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > Script:
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
>>> >> >> >> >>>> > from io.scif.img import ImageRegion
>>> >> >> >> >>>> > from io.scif.img import ImgOpener
>>> >> >> >> >>>> > from io.scif.img import ImgSaver
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > config = SCIFIOConfig()
>>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > opener = ImgOpener()
>>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
>>> >> >> >> >>>> > imp = imps[0]
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > print(imps)
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > saver = ImgSaver()
>>> >> >> >> >>>> > saver.saveImg(target, imp)
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you don't
>>> >> >> >> >>>> > have
>>> >> >> >> >>>> > time
>>> >> >> >> >>>> > to
>>> >> >> >> >>>> > write an example.
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > I will be happy to provide some python/scifio examples
>>> >> >> >> >>>> > scripts.
>>> >> >> >> >>>> >
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > --
>>> >> >> >> >>>> > Hadrien Mary
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > Ph.D student in Biology
>>> >> >> >> >>>> > Tournier-Gachet Team
>>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>>> >> >> >> >>>> >
>>> >> >> >> >>>> >
>>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>>> >> >> >> >>>> > <ctrueden at wisc.edu>
>>> >> >> >> >>>> > wrote:
>>> >> >> >> >>>> >> Hi Hadrien,
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>>> >> >> >> >>>> >>> it
>>> >> >> >> >>>> >>> doesn
>>> >> >> >> >>>> >>> not
>>> >> >> >> >>>> >>> work.
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2
>>> >> >> >> >>>> >> data
>>> >> >> >> >>>> >> structures, not
>>> >> >> >> >>>> >> ImagePlus objects.
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>>> >> >> >> >>>> >>> function
>>> >> >> >> >>>> >>> in
>>> >> >> >> >>>> >>> SCIFIO ?
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
>>> >> >> >> >>>> >> imgOpenerSetRegion
>>> >> >> >> >>>> >> [1]
>>> >> >> >> >>>> >> on
>>> >> >> >> >>>> >> it,
>>> >> >> >> >>>> >> then
>>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back
>>> >> >> >> >>>> >> an
>>> >> >> >> >>>> >> ImgLib2
>>> >> >> >> >>>> >> data
>>> >> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an example
>>> >> >> >> >>>> >> for
>>> >> >> >> >>>> >> you
>>> >> >> >> >>>> >> right
>>> >> >> >> >>>> >> now. It
>>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use
>>> >> >> >> >>>> >> the
>>> >> >> >> >>>> >> ImgOpener
>>> >> >> >> >>>> >> and
>>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs akin to
>>> >> >> >> >>>> >> the
>>> >> >> >> >>>> >> Bio-Formats
>>> >> >> >> >>>> >> "BF"
>>> >> >> >> >>>> >> functionality... please feel welcome to contribute some!
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >> Regards,
>>> >> >> >> >>>> >> Curtis
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >> [1]
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
>>> >> >> >> >>>> >> wrote:
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> Hi,
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> I am writing a python macro which iterate over all rois
>>> >> >> >> >>>> >>> in
>>> >> >> >> >>>> >>> ROI
>>> >> >> >> >>>> >>> Manager
>>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
>>> >> >> >> >>>> >>> plugin
>>> >> >> >> >>>> >>> to
>>> >> >> >> >>>> >>> open
>>> >> >> >> >>>> >>> a
>>> >> >> >> >>>> >>> cropped region of an image.
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>>> >> >> >> >>>> >>> it
>>> >> >> >> >>>> >>> doesn
>>> >> >> >> >>>> >>> not
>>> >> >> >> >>>> >>> work.
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> Here is my script:
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>>> >> >> >> >>>> >>> from ij import IJ
>>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> from loci.plugins import BF
>>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>>> >> >> >> >>>> >>> from loci.common import Region
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> import os
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> # Get current image filename
>>> >> >> >> >>>> >>> imp = IJ.getImage()
>>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>     crop_id = i +1
>>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
>>> >> >> >> >>>> >>> len(rois)))
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>     bounds = roi.getBounds()
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>     x = bounds.x
>>> >> >> >> >>>> >>>     y = bounds.y
>>> >> >> >> >>>> >>>     w = bounds.width
>>> >> >> >> >>>> >>>     h = bounds.height
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>     # Import only cropped region of the image
>>> >> >> >> >>>> >>>     options = ImporterOptions()
>>> >> >> >> >>>> >>>     options.setCrop(True)
>>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>>> >> >> >> >>>> >>>     options.setId(fname)
>>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>     imp = imps[0]
>>> >> >> >> >>>> >>>     imp.show()
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
>>> >> >> >> >>>> >>> crop_basename)
>>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>     # Save image
>>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>>> >> >> >> >>>> >>>     saver = ImgSaver()
>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> IJ.log('Done')
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> It fails with this error:
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> Traceback (most recent call last):
>>> >> >> >> >>>> >>>   File
>>> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>>> >> >> >> >>>> >>> line
>>> >> >> >> >>>> >>> 49, in <module>
>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>>> >> >> >> >>>> >>> io.scif.Writer,
>>> >> >> >> >>>> >>> String
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>>> >> >> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>> org.python.core.PyTableCode.call(PyTableCode.java:165)
>>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>> java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>> >> >> >> >>>> >>> at
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> Three questions:
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> how can I write cropped image (I need to write them as
>>> >> >> >> >>>> >>> OME
>>> >> >> >> >>>> >>> Tiff
>>> >> >> >> >>>> >>> so I
>>> >> >> >> >>>> >>> need BF or SCIFIO).
>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>>> >> >> >> >>>> >>> function
>>> >> >> >> >>>> >>> in
>>> >> >> >> >>>> >>> SCIFIO
>>> >> >> >> >>>> >>> ?
>>> >> >> >> >>>> >>> I am currently using
>>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>>> >> >> >> >>>> >>> to
>>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
>>> >> >> >> >>>> >>> instance
>>> >> >> >> >>>> >>> from
>>> >> >> >> >>>> >>> RoiSet.zip file ?
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> Any help would be very appreciated.
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> Thanks !
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> ?
>>> >> >> >> >>>> >>> Hadrien Mary
>>> >> >> >> >>>> >>>
>>> >> >> >> >>>> >>> _______________________________________________
>>> >> >> >> >>>> >>> ImageJ-devel mailing list
>>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
>>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>>> >> >> >> >>>> >>
>>> >> >> >> >>>> >>
>>> >> >> >> >>>
>>> >> >> >> >>>
>>> >> >> >>
>>> >> >> >> _______________________________________________
>>> >> >> >> ImageJ-devel mailing list
>>> >> >> >> ImageJ-devel at imagej.net
>>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>>> >> >> >
>>> >> >> >
>>> >> >
>>> >> >
>>> >
>>> >
>>
>>


From hadrien.mary at gmail.com  Tue Jan 20 03:17:52 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Tue, 20 Jan 2015 10:17:52 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
	<CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
	<CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>
Message-ID: <CAEpSnna31YnH6bBxePyxtx7VWypNLYYQ7JwtEczVZy58HgcOfQ@mail.gmail.com>

Another thing I noticed, it's that histogram is different when
cropping manually inside Fiji (select area and do "Duplicate") or when
it has been cropped with the python script (SCIFIO crop).

See screenshot attachment.



--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Mon, Jan 19, 2015 at 10:29 AM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> Hi again,
>
> The script works well for small images (OME Tiff or normal Tiff) with
> the recent Fiji update. However when I run it on large movies (13GB),
> I have the following error.
>
> ----------------------------------------------------------
> -- Classpath of ClassLoader --
> /home/hadim/local/Fiji.app/plugins/
>
> at org.scijava.Context.inject(Context.java:431)
> at org.scijava.Context.inject(Context.java:363)
> at org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:237)
> at org.scijava.ui.DefaultUIService.discoverUIs(DefaultUIService.java:500)
> at org.scijava.ui.DefaultUIService.uiList(DefaultUIService.java:479)
> at org.scijava.ui.DefaultUIService.getAvailableUIs(DefaultUIService.java:231)
> at org.scijava.ui.DefaultUIService.onEvent(DefaultUIService.java:457)
> at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> at java.lang.reflect.Method.invoke(Method.java:606)
> at org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:280)
> at org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:254)
> at org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
> at org.scijava.event.DefaultEventBus.access$201(DefaultEventBus.java:56)
> at org.scijava.event.DefaultEventBus$2.run(DefaultEventBus.java:223)
> at org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
> at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> at java.lang.Thread.run(Thread.java:745)
> Traceback (most recent call last):
>   File "/home/hadim/local/Fiji.app/plugins/Scripts/Plugins/Crop_Multi_Roi.py",
> line 50, in <module>
>     saver.saveImg(crop_fname, imp)
> at io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
> at io.scif.img.cell.SCIFIOCellCache.load(SCIFIOCellCache.java:144)
> at io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:122)
> at io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:101)
> at net.imglib2.img.list.ListCursor.get(ListCursor.java:80)
> at net.imglib2.img.cell.CellCursor.getCell(CellCursor.java:92)
> at net.imglib2.img.cell.CellCursor.moveToNextCell(CellCursor.java:180)
> at net.imglib2.img.cell.CellCursor.reset(CellCursor.java:150)
> at net.imglib2.img.cell.CellCursor.<init>(CellCursor.java:86)
> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:113)
> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:47)
> at net.imglib2.img.AbstractImg.firstElement(AbstractImg.java:81)
> at net.imagej.ImgPlus.firstElement(ImgPlus.java:261)
> at io.scif.img.ImgSaver.populateMeta(ImgSaver.java:894)
> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:514)
> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:495)
> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:457)
> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:174)
> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:158)
> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:128)
> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> at java.lang.reflect.Method.invoke(Method.java:606)
>
> java.lang.NullPointerException: java.lang.NullPointerException
> -------------------------------------------------------------------
>
> The associated script is below.
>
> ------------------------------------------------------------------------
> from ij import IJ
> from ij.plugin.frame import RoiManager
>
> from io.scif.config import SCIFIOConfig
> from io.scif.img import ImageRegion
> from io.scif.img import ImgOpener
> from io.scif.img import ImgSaver
> from net.imagej.axis import Axes
>
> import os
>
> # Get current image filename
> imp = IJ.getImage()
> f = imp.getOriginalFileInfo()
> fname = os.path.join(f.directory, f.fileName)
>
> IJ.log('Image filename is %s' % fname)
>
> # Iterate over all ROIs from ROI Manager
> rois = RoiManager.getInstance().getRoisAsArray()
> for i, roi in enumerate(rois):
>
>     crop_id = i +1
>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>
>     # Get ROI bounds
>     bounds = roi.getBounds()
>     x = bounds.x
>     y = bounds.y
>     w = bounds.width
>     h = bounds.height
>
>     # Import only cropped region of the image
>     axes = [Axes.X, Axes.Y]
>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
>     config = SCIFIOConfig()
>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>
>     opener = ImgOpener()
>     imps = opener.openImgs(fname, config)
>     imp = imps[0]
>
>     # Get filename and basename of the current cropped image
>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>     crop_fname = os.path.join(f.directory, crop_basename)
>     IJ.log("Saving crop to %s" % crop_fname)
>
>     # Save cropped image
>     saver = ImgSaver()
>     saver.saveImg(crop_fname, imp)
>
> IJ.log('Done')
> ----------------------------------------------------------------------------
>
> Does opener.openImgs() wait for the image to open ? If it does not I
> guess that saver.saveImg() is called on an image that does not exist
> in memory.
>
> Thanks
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Wed, Jan 14, 2015 at 4:35 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>> I confirm it works !
>>
>> Thanks again
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>> Hi Hadrien,
>>>
>>>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>>
>>> Ah sorry - my fault again for responding too quickly. ImageJ.git doesn't
>>> have a dependency on scifio-ome-xml; it's a dependency in Fiji itself[1]. So
>>> when you installed ImageJ into your Fiji, it updated all the dependencies
>>> but didn't actually update scifio-ome-xml.
>>>
>>> You can either manually copy scifio-ome-xml[2] over, or try installing from
>>> the latest Fiji master[3] which I just updated to have the latest
>>> dependencies.
>>>
>>> [1]
>>> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
>>> [2]
>>> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>> [3]
>>> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
>>>
>>> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary <hadrien.mary at gmail.com>
>>> wrote:
>>>>
>>>> Ok it makes sense now !
>>>>
>>>> So I did what you told me about cloning imagej repo, building and
>>>> install it with maven inside my local Fiji.app/. I don't know if it's
>>>> a bug or a missing dependency but I am now unable to open OME Tiff
>>>> files (other kind of file works well) wether it is by drag and drop or
>>>> with my script. The error is the following:
>>>>
>>>> -------------------------------------------------
>>>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>>> at
>>>> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
>>>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
>>>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
>>>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
>>>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
>>>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
>>>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
>>>> at
>>>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
>>>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
>>>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
>>>> at
>>>> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
>>>> at
>>>> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
>>>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
>>>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
>>>> at java.lang.Thread.run(Thread.java:745)
>>>> -----------------------------------------------
>>>>
>>>> I guess something in scifio has not been updated to use the new
>>>> net.imagej.axis or maybe the update is not built/downloaded when I run
>>>> maven on my imagej clone.
>>>>
>>>>
>>>> --
>>>> Hadrien Mary
>>>>
>>>> Ph.D student in Biology
>>>> Tournier-Gachet Team
>>>> CNRS - LBCMCP - UMR 5088
>>>>
>>>> Universit? de Toulouse - B?t. 4R3B1
>>>> 118, route de Narbonne - 31062 Toulouse
>>>>
>>>>
>>>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>> > Hi Hadrien,
>>>> >
>>>> >>Sorry if it's off topic but I tried to run my script and I got a python
>>>> >> error
>>>> >
>>>> > Oh no! This is totally my fault. I had to update your script for the new
>>>> > dependencies I mentioned and forgot to paste the new version in my
>>>> > response
>>>> > yesterday:
>>>> >
>>>> >>from net.imglib2.meta import Axes
>>>> >
>>>> > This import needs to change to:
>>>> >
>>>> > from net.imagej.axis import Axes
>>>> >
>>>> > Sorry about that!
>>>> >
>>>> > Best,
>>>> > Mark
>>>> >
>>>> >
>>>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>>> > wrote:
>>>> >>
>>>> >> Thank you Mark !
>>>> >>
>>>> >> Sorry if it's off topic but I tried to run my script and I got a
>>>> >> python error probably related to type difference between python and
>>>> >> java. It's not the first time I saw this kind of message and I'd like
>>>> >> to know how to resolve it. Note that for python script I mainly use
>>>> >> javadoc as documentation.
>>>> >>
>>>> >> The error is below coming from almost the same script as before in this
>>>> >> thread.
>>>> >>
>>>> >> ********************************
>>>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>>>> >> Traceback (most recent call last):
>>>> >>   File
>>>> >>
>>>> >> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>>>> >> line 17, in <module>
>>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>>>> >> net.imagej.axis.AxisType[]
>>>> >>
>>>> >> at org.python.core.Py.TypeError(Py.java:235)
>>>> >> at
>>>> >>
>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>>> >> at
>>>> >>
>>>> >> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>>> >> at
>>>> >>
>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>>> >> at
>>>> >>
>>>> >> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>>>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
>>>> >> at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>>>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>>>> >> at
>>>> >>
>>>> >> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>>>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
>>>> >> at org.python.core.PyType.__call__(PyType.java:1548)
>>>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
>>>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
>>>> >> at
>>>> >>
>>>> >> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>>>> >> at
>>>> >>
>>>> >> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>>>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>>> >> at org.python.core.PyCode.call(PyCode.java:18)
>>>> >> at org.python.core.Py.runCode(Py.java:1275)
>>>> >> at
>>>> >>
>>>> >> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>> >> at
>>>> >>
>>>> >> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>> >> at
>>>> >>
>>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>> >> at
>>>> >>
>>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>> >> at java.lang.Thread.run(Thread.java:745)
>>>> >> ************************************
>>>> >>
>>>> >> --
>>>> >> Hadrien Mary
>>>> >>
>>>> >> Ph.D student in Biology
>>>> >> Tournier-Gachet Team
>>>> >> CNRS - LBCMCP - UMR 5088
>>>> >>
>>>> >> Universit? de Toulouse - B?t. 4R3B1
>>>> >> 118, route de Narbonne - 31062 Toulouse
>>>> >>
>>>> >>
>>>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>> >> > Hi Hadrien,
>>>> >> >
>>>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
>>>> >> >
>>>> >> >  It's working for me now, as of the latest SCIFIO[1] and
>>>> >> > SCIFIO-OME-XML[2].
>>>> >> > Note that these libraries have updated dependencies compared to
>>>> >> > what's
>>>> >> > currently on Fiji, so you can't just drop these .jars into your Fiji
>>>> >> > installation if you want to test locally; you need to update the
>>>> >> > dependencies as well. The easiest way to do this would be to just
>>>> >> > clone
>>>> >> > Imagej.git[3] and install it into your Fiji.app directory by running:
>>>> >> >
>>>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>>>> >> > -Ddelete.other.versions=true
>>>> >> >
>>>> >> > We'll push these changes up to Fiji this week, and I will find or
>>>> >> > write
>>>> >> > better instructions for local testing.
>>>> >> >
>>>> >> > Hope this helps. Let us know if you have any questions/problems.
>>>> >> > Thanks
>>>> >> > again for finding this issue!
>>>> >> >
>>>> >> > Best,
>>>> >> > - Mark
>>>> >> >
>>>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>>>> >> > [2]
>>>> >> >
>>>> >> >
>>>> >> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>>> >> > [3] https://github.com/imagej/imagej
>>>> >> >
>>>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
>>>> >> > <hadrien.mary at gmail.com>
>>>> >> > wrote:
>>>> >> >>
>>>> >> >> Ok. Let me know when you want me to test your changes. I also tested
>>>> >> >> fix-writing branch and I didn't notice any changes.
>>>> >> >>
>>>> >> >> --
>>>> >> >> Hadrien Mary
>>>> >> >>
>>>> >> >> Ph.D student in Biology
>>>> >> >> Tournier-Gachet Team
>>>> >> >> CNRS - LBCMCP - UMR 5088
>>>> >> >>
>>>> >> >> Universit? de Toulouse - B?t. 4R3B1
>>>> >> >> 118, route de Narbonne - 31062 Toulouse
>>>> >> >>
>>>> >> >>
>>>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>> >> >> > Hi Hadrien,
>>>> >> >> >
>>>> >> >> > I've identified at least two bugs that could be affecting you
>>>> >> >> > here.
>>>> >> >> >
>>>> >> >> > First of all, there was a bug in the OME-TIFF format writing out
>>>> >> >> > multi-dimensional images. That's fixed on a branch but not
>>>> >> >> > uploaded
>>>> >> >> > to
>>>> >> >> > Fiji
>>>> >> >> > yet [1].
>>>> >> >> >
>>>> >> >> > Second, it seems like cropping is restricting pixel reads to the
>>>> >> >> > correct
>>>> >> >> > region but then doesn't change the image size.
>>>> >> >> >
>>>> >> >> > I'm hoping when I fix the second issue writing cropped regions
>>>> >> >> > will
>>>> >> >> > be
>>>> >> >> > fixed.
>>>> >> >> >
>>>> >> >> > Thanks for the great feedback!
>>>> >> >> > - Mark
>>>> >> >> >
>>>> >> >> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>>>> >> >> >
>>>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>>>> >> >> > <hadrien.mary at gmail.com>
>>>> >> >> > wrote:
>>>> >> >> >>
>>>> >> >> >> I also confirm the same behaviour when replacing original file by
>>>> >> >> >> OME
>>>> >> >> >> sample data :
>>>> >> >> >>
>>>> >> >> >>
>>>> >> >> >>
>>>> >> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>>>> >> >> >>
>>>> >> >> >> --
>>>> >> >> >> Hadrien Mary
>>>> >> >> >>
>>>> >> >> >> Ph.D student in Biology
>>>> >> >> >> Tournier-Gachet Team
>>>> >> >> >> CNRS - LBCMCP - UMR 5088
>>>> >> >> >>
>>>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
>>>> >> >> >> 118, route de Narbonne - 31062 Toulouse
>>>> >> >> >>
>>>> >> >> >>
>>>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>>>> >> >> >> <hadrien.mary at gmail.com>
>>>> >> >> >> wrote:
>>>> >> >> >> > After some investigations I think there is a bug with ImgSaver.
>>>> >> >> >> > In
>>>> >> >> >> > the
>>>> >> >> >> > following script, X, Y crop is fine but axes informations (T
>>>> >> >> >> > and
>>>> >> >> >> > Z)
>>>> >> >> >> > are lost and all frames appears on the same axes. Now if I
>>>> >> >> >> > replace
>>>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>>>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
>>>> >> >> >> > cropped
>>>> >> >> >> > image has the same dimensions than original however axes
>>>> >> >> >> > informations
>>>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values
>>>> >> >> >> > are
>>>> >> >> >> > totally incoherent which is not the case in cropped.tif.
>>>> >> >> >> >
>>>> >> >> >> > Files can be found here :
>>>> >> >> >> >
>>>> >> >> >> >
>>>> >> >> >> >
>>>> >> >> >> >
>>>> >> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>>>> >> >> >> >
>>>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>>>> >> >> >> > original.ome.tif.
>>>> >> >> >> >
>>>> >> >> >> > The script:
>>>> >> >> >> >
>>>> >> >> >> > ---------------------------------------------------
>>>> >> >> >> > from io.scif import SCIFIO
>>>> >> >> >> > from io.scif.config import SCIFIOConfig
>>>> >> >> >> > from io.scif.img import ImageRegion
>>>> >> >> >> > from io.scif.img import ImgOpener
>>>> >> >> >> > from io.scif.img import ImgSaver
>>>> >> >> >> > from net.imglib2.meta import Axes
>>>> >> >> >> >
>>>> >> >> >> > fname = "/home/hadim/original.ome.tif"
>>>> >> >> >> > target = "/home/hadim/cropped.tif"
>>>> >> >> >> >
>>>> >> >> >> > axes = [Axes.X, Axes.Y]
>>>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>>>> >> >> >> > config = SCIFIOConfig()
>>>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>> >> >> >> >
>>>> >> >> >> > opener = ImgOpener()
>>>> >> >> >> > imps = opener.openImgs(fname, config)
>>>> >> >> >> > imp = imps[0]
>>>> >> >> >> >
>>>> >> >> >> > saver = ImgSaver()
>>>> >> >> >> > saver.saveImg(target, imp)
>>>> >> >> >> >
>>>> >> >> >> > print('Done')
>>>> >> >> >> > ---------------------------------------------------
>>>> >> >> >> >
>>>> >> >> >> >
>>>> >> >> >> > --
>>>> >> >> >> > Hadrien Mary
>>>> >> >> >> >
>>>> >> >> >> >
>>>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>>>> >> >> >> > <hadrien.mary at gmail.com>
>>>> >> >> >> > wrote:
>>>> >> >> >> >> Thanks for the tip (reminder to me: always look for example in
>>>> >> >> >> >> tests!).
>>>> >> >> >> >>
>>>> >> >> >> >> Unfortunately crop does not work... I will try to do more
>>>> >> >> >> >> tests
>>>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
>>>> >> >> >> >>
>>>> >> >> >> >> Updated code:
>>>> >> >> >> >>
>>>> >> >> >> >> from ij import IJ
>>>> >> >> >> >> from ij import ImagePlus
>>>> >> >> >> >>
>>>> >> >> >> >> from io.scif import SCIFIO
>>>> >> >> >> >> from io.scif.config import SCIFIOConfig
>>>> >> >> >> >> from io.scif.img import ImageRegion
>>>> >> >> >> >> from io.scif.img import ImgOpener
>>>> >> >> >> >> from io.scif.img import ImgSaver
>>>> >> >> >> >> from net.imglib2.meta import Axes
>>>> >> >> >> >>
>>>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
>>>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
>>>> >> >> >> >>
>>>> >> >> >> >> axes = [Axes.X, Axes.Y]
>>>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>>>> >> >> >> >> config = SCIFIOConfig()
>>>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>> >> >> >> >>
>>>> >> >> >> >> opener = ImgOpener()
>>>> >> >> >> >> imps = opener.openImgs(fname, config)
>>>> >> >> >> >> imp = imps[0]
>>>> >> >> >> >>
>>>> >> >> >> >> saver = ImgSaver()
>>>> >> >> >> >> saver.saveImg(target, imp)
>>>> >> >> >> >>
>>>> >> >> >> >> print('Done')
>>>> >> >> >> >>
>>>> >> >> >> >> --
>>>> >> >> >> >> Hadrien Mary
>>>> >> >> >> >>
>>>> >> >> >> >>
>>>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>>>> >> >> >> >> <ctrueden at wisc.edu>
>>>> >> >> >> >> wrote:
>>>> >> >> >> >>> Hi Hadrien,
>>>> >> >> >> >>>
>>>> >> >> >> >>>> I would like to be able to crop a region in X and Y while
>>>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z, T).
>>>> >> >> >> >>>
>>>> >> >> >> >>> Here's some Java:
>>>> >> >> >> >>>
>>>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>>>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>>>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY
>>>> >> >> >> >>> };
>>>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>>>> >> >> >> >>>
>>>> >> >> >> >>> Adapted from here:
>>>> >> >> >> >>>
>>>> >> >> >> >>>
>>>> >> >> >> >>>
>>>> >> >> >> >>>
>>>> >> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>>>> >> >> >> >>>
>>>> >> >> >> >>> And untested.
>>>> >> >> >> >>>
>>>> >> >> >> >>> HTH,
>>>> >> >> >> >>> Curtis
>>>> >> >> >> >>>
>>>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>>>> >> >> >> >>> <hadrien.mary at gmail.com>
>>>> >> >> >> >>> wrote:
>>>> >> >> >> >>>>
>>>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
>>>> >> >> >> >>>> instanciate
>>>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help me...
>>>> >> >> >> >>>> I
>>>> >> >> >> >>>> would
>>>> >> >> >> >>>> like to be able to crop a region in X and Y while keeping
>>>> >> >> >> >>>> any
>>>> >> >> >> >>>> other
>>>> >> >> >> >>>> dimensions which could exist (C, Z, T).
>>>> >> >> >> >>>>
>>>> >> >> >> >>>> --
>>>> >> >> >> >>>> Hadrien Mary
>>>> >> >> >> >>>>
>>>> >> >> >> >>>>
>>>> >> >> >> >>>>
>>>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>>>> >> >> >> >>>> <hadrien.mary at gmail.com>
>>>> >> >> >> >>>> wrote:
>>>> >> >> >> >>>> > Thank you Curtis for the answer.
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > I tried to apply what you told me and the code now works
>>>> >> >> >> >>>> > without
>>>> >> >> >> >>>> > error. However the saved cropped image is not cropped
>>>> >> >> >> >>>> > (same
>>>> >> >> >> >>>> > size
>>>> >> >> >> >>>> > as
>>>> >> >> >> >>>> > original) and pixel values are modified).
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > Script:
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
>>>> >> >> >> >>>> > from io.scif.img import ImageRegion
>>>> >> >> >> >>>> > from io.scif.img import ImgOpener
>>>> >> >> >> >>>> > from io.scif.img import ImgSaver
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>>>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > config = SCIFIOConfig()
>>>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>>>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > opener = ImgOpener()
>>>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
>>>> >> >> >> >>>> > imp = imps[0]
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > print(imps)
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > saver = ImgSaver()
>>>> >> >> >> >>>> > saver.saveImg(target, imp)
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you don't
>>>> >> >> >> >>>> > have
>>>> >> >> >> >>>> > time
>>>> >> >> >> >>>> > to
>>>> >> >> >> >>>> > write an example.
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > I will be happy to provide some python/scifio examples
>>>> >> >> >> >>>> > scripts.
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > --
>>>> >> >> >> >>>> > Hadrien Mary
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > Ph.D student in Biology
>>>> >> >> >> >>>> > Tournier-Gachet Team
>>>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>>>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> >
>>>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>>>> >> >> >> >>>> > <ctrueden at wisc.edu>
>>>> >> >> >> >>>> > wrote:
>>>> >> >> >> >>>> >> Hi Hadrien,
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>>>> >> >> >> >>>> >>> it
>>>> >> >> >> >>>> >>> doesn
>>>> >> >> >> >>>> >>> not
>>>> >> >> >> >>>> >>> work.
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2
>>>> >> >> >> >>>> >> data
>>>> >> >> >> >>>> >> structures, not
>>>> >> >> >> >>>> >> ImagePlus objects.
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>>>> >> >> >> >>>> >>> function
>>>> >> >> >> >>>> >>> in
>>>> >> >> >> >>>> >>> SCIFIO ?
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
>>>> >> >> >> >>>> >> imgOpenerSetRegion
>>>> >> >> >> >>>> >> [1]
>>>> >> >> >> >>>> >> on
>>>> >> >> >> >>>> >> it,
>>>> >> >> >> >>>> >> then
>>>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back
>>>> >> >> >> >>>> >> an
>>>> >> >> >> >>>> >> ImgLib2
>>>> >> >> >> >>>> >> data
>>>> >> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an example
>>>> >> >> >> >>>> >> for
>>>> >> >> >> >>>> >> you
>>>> >> >> >> >>>> >> right
>>>> >> >> >> >>>> >> now. It
>>>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use
>>>> >> >> >> >>>> >> the
>>>> >> >> >> >>>> >> ImgOpener
>>>> >> >> >> >>>> >> and
>>>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs akin to
>>>> >> >> >> >>>> >> the
>>>> >> >> >> >>>> >> Bio-Formats
>>>> >> >> >> >>>> >> "BF"
>>>> >> >> >> >>>> >> functionality... please feel welcome to contribute some!
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >> Regards,
>>>> >> >> >> >>>> >> Curtis
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >> [1]
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>>>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>>>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
>>>> >> >> >> >>>> >> wrote:
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> Hi,
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> I am writing a python macro which iterate over all rois
>>>> >> >> >> >>>> >>> in
>>>> >> >> >> >>>> >>> ROI
>>>> >> >> >> >>>> >>> Manager
>>>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
>>>> >> >> >> >>>> >>> plugin
>>>> >> >> >> >>>> >>> to
>>>> >> >> >> >>>> >>> open
>>>> >> >> >> >>>> >>> a
>>>> >> >> >> >>>> >>> cropped region of an image.
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>>>> >> >> >> >>>> >>> it
>>>> >> >> >> >>>> >>> doesn
>>>> >> >> >> >>>> >>> not
>>>> >> >> >> >>>> >>> work.
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> Here is my script:
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>>>> >> >> >> >>>> >>> from ij import IJ
>>>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> from loci.plugins import BF
>>>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>>>> >> >> >> >>>> >>> from loci.common import Region
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> import os
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> # Get current image filename
>>>> >> >> >> >>>> >>> imp = IJ.getImage()
>>>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>>>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>>>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>>>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>     crop_id = i +1
>>>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
>>>> >> >> >> >>>> >>> len(rois)))
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>     bounds = roi.getBounds()
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>     x = bounds.x
>>>> >> >> >> >>>> >>>     y = bounds.y
>>>> >> >> >> >>>> >>>     w = bounds.width
>>>> >> >> >> >>>> >>>     h = bounds.height
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>     # Import only cropped region of the image
>>>> >> >> >> >>>> >>>     options = ImporterOptions()
>>>> >> >> >> >>>> >>>     options.setCrop(True)
>>>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>>>> >> >> >> >>>> >>>     options.setId(fname)
>>>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>     imp = imps[0]
>>>> >> >> >> >>>> >>>     imp.show()
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
>>>> >> >> >> >>>> >>> crop_basename)
>>>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>     # Save image
>>>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>>>> >> >> >> >>>> >>>     saver = ImgSaver()
>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> IJ.log('Done')
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> It fails with this error:
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> Traceback (most recent call last):
>>>> >> >> >> >>>> >>>   File
>>>> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>>>> >> >> >> >>>> >>> line
>>>> >> >> >> >>>> >>> 49, in <module>
>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>>>> >> >> >> >>>> >>> io.scif.Writer,
>>>> >> >> >> >>>> >>> String
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>>>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>>>> >> >> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>> org.python.core.PyTableCode.call(PyTableCode.java:165)
>>>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>>>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>> java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>> >> >> >> >>>> >>> at
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> Three questions:
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> how can I write cropped image (I need to write them as
>>>> >> >> >> >>>> >>> OME
>>>> >> >> >> >>>> >>> Tiff
>>>> >> >> >> >>>> >>> so I
>>>> >> >> >> >>>> >>> need BF or SCIFIO).
>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>>>> >> >> >> >>>> >>> function
>>>> >> >> >> >>>> >>> in
>>>> >> >> >> >>>> >>> SCIFIO
>>>> >> >> >> >>>> >>> ?
>>>> >> >> >> >>>> >>> I am currently using
>>>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>>>> >> >> >> >>>> >>> to
>>>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
>>>> >> >> >> >>>> >>> instance
>>>> >> >> >> >>>> >>> from
>>>> >> >> >> >>>> >>> RoiSet.zip file ?
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> Any help would be very appreciated.
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> Thanks !
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> ?
>>>> >> >> >> >>>> >>> Hadrien Mary
>>>> >> >> >> >>>> >>>
>>>> >> >> >> >>>> >>> _______________________________________________
>>>> >> >> >> >>>> >>> ImageJ-devel mailing list
>>>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
>>>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>> >>
>>>> >> >> >> >>>
>>>> >> >> >> >>>
>>>> >> >> >>
>>>> >> >> >> _______________________________________________
>>>> >> >> >> ImageJ-devel mailing list
>>>> >> >> >> ImageJ-devel at imagej.net
>>>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>>>> >> >> >
>>>> >> >> >
>>>> >> >
>>>> >> >
>>>> >
>>>> >
>>>
>>>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: histo.png
Type: image/png
Size: 100547 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150120/6b6b3952/attachment-0001.png>

From hiner at wisc.edu  Wed Jan 21 13:04:39 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Wed, 21 Jan 2015 13:04:39 -0600
Subject: [ImageJ-devel] Save OME Tiff with File > Export > Image
In-Reply-To: <CAEpSnnYoYGt3JeVbUwgWCgAN4jQ=wj89KkkW+CC7a9WM895Krg@mail.gmail.com>
References: <CAEpSnnYoYGt3JeVbUwgWCgAN4jQ=wj89KkkW+CC7a9WM895Krg@mail.gmail.com>
Message-ID: <CA+B=mGpYpR9edggHAyOQ3h523AyuOMhBK0KzC5-xSERyLA+Y1g@mail.gmail.com>

Hi Hadrien,

 Thanks for reporting this. I finally tracked it down when working on
updating File > Export > Image... and File > Import > Image... to use the
fixes to OME-TIFF writing[1].

 The issue has to do with whether or not the JFileChooser is enabled[2]. A
temporary workaround should be just to enable the use of the JFileChooser.
I'm hoping to have an actual fix soon though.

Thanks again!
- Mark

[1] http://imagej.net/pipermail/imagej-devel/2015-January/002407.html
[2] https://github.com/imagej/imagej-legacy/issues/101

On Wed, Jan 14, 2015 at 12:57 PM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> Hi,
>
> I'd like to report a bug I noticed some time ago.
>
> I have an error when I try to save an OME Tiff file with File > Export
> > Image (to save it as an OME Tiff format). Note that it works well
> when the saved image is not an OME Tiff file.
>
> The bug is weird.
>
> First when I click File > Export > Image, gtk file manager open to ask
> where I want to save the file. The default filename is test.ometif
> (instead of test.ome.tif, current filename). I change the filename to
> be test.ome.tif (same bug when I don't change it) and when I click
> "save", I have this message :
>
> ------------------------------------
> (Fiji Is Just) ImageJ 2.0.0-rc-21/1.49m; Java 1.7.0_65 [64-bit]; Linux
> 3.13.0-44-generic; 80MB of 3600MB (2%)
>
> java.lang.RuntimeException: java.util.concurrent.ExecutionException:
> java.lang.IllegalArgumentException
> at
> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
> at
> net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
> at ij.IJ.runPlugIn(IJ.java)
> at ij.Executer.runCommand(Executer.java:131)
> at ij.Executer.run(Executer.java:64)
> at java.lang.Thread.run(Thread.java:745)
> Caused by: java.util.concurrent.ExecutionException:
> java.lang.IllegalArgumentException
> at java.util.concurrent.FutureTask.report(FutureTask.java:122)
> at java.util.concurrent.FutureTask.get(FutureTask.java:188)
> at
> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
> ... 5 more
> Caused by: java.lang.IllegalArgumentException
> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> at java.lang.reflect.Method.invoke(Method.java:606)
> at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
> at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
> at org.scijava.command.CommandModule.run(CommandModule.java:201)
> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> at
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> ... 1 more
> ------------------------------------
>
> I currently use BF exporter function which is working well for my
> daily use. So don't rush on this.
>
> Thank you
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150121/801e273b/attachment.html>

From hadrien.mary at gmail.com  Wed Jan 21 18:24:23 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Thu, 22 Jan 2015 01:24:23 +0100
Subject: [ImageJ-devel] Save OME Tiff with File > Export > Image
In-Reply-To: <CA+B=mGpYpR9edggHAyOQ3h523AyuOMhBK0KzC5-xSERyLA+Y1g@mail.gmail.com>
References: <CAEpSnnYoYGt3JeVbUwgWCgAN4jQ=wj89KkkW+CC7a9WM895Krg@mail.gmail.com>
	<CA+B=mGpYpR9edggHAyOQ3h523AyuOMhBK0KzC5-xSERyLA+Y1g@mail.gmail.com>
Message-ID: <CAEpSnnYTMYSmor5X8H-1eBQYaaysO15nwVgL6iw9if=vwmF5mg@mail.gmail.com>

Ok thanks. However even if I enable JFileChoose I still have an error
which prevent me to save the file. See below.

------------------------------------------
(Fiji Is Just) ImageJ 2.0.0-rc-22/1.49m; Java 1.7.0_65 [64-bit]; Linux
3.13.0-44-generic; 80MB of 4362MB (1%)

java.lang.RuntimeException: java.util.concurrent.ExecutionException:
java.lang.IllegalArgumentException
at net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
at net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
at ij.IJ.runPlugIn(IJ.java)
at ij.Executer.runCommand(Executer.java:131)
at ij.Executer.run(Executer.java:64)
at java.lang.Thread.run(Thread.java:745)
Caused by: java.util.concurrent.ExecutionException:
java.lang.IllegalArgumentException
at java.util.concurrent.FutureTask.report(FutureTask.java:122)
at java.util.concurrent.FutureTask.get(FutureTask.java:188)
at net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
... 5 more
Caused by: java.lang.IllegalArgumentException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
at org.scijava.command.CommandModule.run(CommandModule.java:201)
at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
at org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
at java.util.concurrent.FutureTask.run(FutureTask.java:262)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
... 1 more
-------------------------------------------

I can't tell if it's related or another bug...

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Wed, Jan 21, 2015 at 8:04 PM, Mark Hiner <hiner at wisc.edu> wrote:
> Hi Hadrien,
>
>  Thanks for reporting this. I finally tracked it down when working on
> updating File > Export > Image... and File > Import > Image... to use the
> fixes to OME-TIFF writing[1].
>
>  The issue has to do with whether or not the JFileChooser is enabled[2]. A
> temporary workaround should be just to enable the use of the JFileChooser.
> I'm hoping to have an actual fix soon though.
>
> Thanks again!
> - Mark
>
> [1] http://imagej.net/pipermail/imagej-devel/2015-January/002407.html
> [2] https://github.com/imagej/imagej-legacy/issues/101
>
> On Wed, Jan 14, 2015 at 12:57 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>>
>> Hi,
>>
>> I'd like to report a bug I noticed some time ago.
>>
>> I have an error when I try to save an OME Tiff file with File > Export
>> > Image (to save it as an OME Tiff format). Note that it works well
>> when the saved image is not an OME Tiff file.
>>
>> The bug is weird.
>>
>> First when I click File > Export > Image, gtk file manager open to ask
>> where I want to save the file. The default filename is test.ometif
>> (instead of test.ome.tif, current filename). I change the filename to
>> be test.ome.tif (same bug when I don't change it) and when I click
>> "save", I have this message :
>>
>> ------------------------------------
>> (Fiji Is Just) ImageJ 2.0.0-rc-21/1.49m; Java 1.7.0_65 [64-bit]; Linux
>> 3.13.0-44-generic; 80MB of 3600MB (2%)
>>
>> java.lang.RuntimeException: java.util.concurrent.ExecutionException:
>> java.lang.IllegalArgumentException
>> at
>> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
>> at
>> net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
>> at ij.IJ.runPlugIn(IJ.java)
>> at ij.Executer.runCommand(Executer.java:131)
>> at ij.Executer.run(Executer.java:64)
>> at java.lang.Thread.run(Thread.java:745)
>> Caused by: java.util.concurrent.ExecutionException:
>> java.lang.IllegalArgumentException
>> at java.util.concurrent.FutureTask.report(FutureTask.java:122)
>> at java.util.concurrent.FutureTask.get(FutureTask.java:188)
>> at
>> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
>> ... 5 more
>> Caused by: java.lang.IllegalArgumentException
>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
>> at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> at java.lang.reflect.Method.invoke(Method.java:606)
>> at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
>> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
>> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
>> at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
>> at org.scijava.command.CommandModule.run(CommandModule.java:201)
>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> at
>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> ... 1 more
>> ------------------------------------
>>
>> I currently use BF exporter function which is working well for my
>> daily use. So don't rush on this.
>>
>> Thank you
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>
>


From hiner at wisc.edu  Thu Jan 22 04:51:03 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 22 Jan 2015 04:51:03 -0600
Subject: [ImageJ-devel] Save OME Tiff with File > Export > Image
In-Reply-To: <CAEpSnnYTMYSmor5X8H-1eBQYaaysO15nwVgL6iw9if=vwmF5mg@mail.gmail.com>
References: <CAEpSnnYoYGt3JeVbUwgWCgAN4jQ=wj89KkkW+CC7a9WM895Krg@mail.gmail.com>
	<CA+B=mGpYpR9edggHAyOQ3h523AyuOMhBK0KzC5-xSERyLA+Y1g@mail.gmail.com>
	<CAEpSnnYTMYSmor5X8H-1eBQYaaysO15nwVgL6iw9if=vwmF5mg@mail.gmail.com>
Message-ID: <CA+B=mGqORiHj-NAzyHuby6Zy-3__tyH1pCORkRcN8FfTzUay=g@mail.gmail.com>

Sorry Hadrien - I didn't go into much detail on my last e-mail. You
would've needed development versions of several other libraries to fix the
bugs in "File > Export > Image...".

Anyway, I just uploaded all my fixes to Fiji. If you update, exporting as
.ome.tif should be working now, regardless of whether JFileChooser is
enabled or not.

Note that there is still a known issue if overwriting multi-dot files (like
.ome.tif) with JFileChooser enabled[1].

Thanks again for your help identifying these issues!

Best,
Mark

[1] https://github.com/imagej/imagej-legacy/issues/102


On Wed, Jan 21, 2015 at 6:24 PM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> Ok thanks. However even if I enable JFileChoose I still have an error
> which prevent me to save the file. See below.
>
> ------------------------------------------
> (Fiji Is Just) ImageJ 2.0.0-rc-22/1.49m; Java 1.7.0_65 [64-bit]; Linux
> 3.13.0-44-generic; 80MB of 4362MB (1%)
>
> java.lang.RuntimeException: java.util.concurrent.ExecutionException:
> java.lang.IllegalArgumentException
> at
> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
> at
> net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
> at ij.IJ.runPlugIn(IJ.java)
> at ij.Executer.runCommand(Executer.java:131)
> at ij.Executer.run(Executer.java:64)
> at java.lang.Thread.run(Thread.java:745)
> Caused by: java.util.concurrent.ExecutionException:
> java.lang.IllegalArgumentException
> at java.util.concurrent.FutureTask.report(FutureTask.java:122)
> at java.util.concurrent.FutureTask.get(FutureTask.java:188)
> at
> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
> ... 5 more
> Caused by: java.lang.IllegalArgumentException
> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> at java.lang.reflect.Method.invoke(Method.java:606)
> at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
> at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
> at org.scijava.command.CommandModule.run(CommandModule.java:201)
> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> at
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> ... 1 more
> -------------------------------------------
>
> I can't tell if it's related or another bug...
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Wed, Jan 21, 2015 at 8:04 PM, Mark Hiner <hiner at wisc.edu> wrote:
> > Hi Hadrien,
> >
> >  Thanks for reporting this. I finally tracked it down when working on
> > updating File > Export > Image... and File > Import > Image... to use the
> > fixes to OME-TIFF writing[1].
> >
> >  The issue has to do with whether or not the JFileChooser is enabled[2].
> A
> > temporary workaround should be just to enable the use of the
> JFileChooser.
> > I'm hoping to have an actual fix soon though.
> >
> > Thanks again!
> > - Mark
> >
> > [1] http://imagej.net/pipermail/imagej-devel/2015-January/002407.html
> > [2] https://github.com/imagej/imagej-legacy/issues/101
> >
> > On Wed, Jan 14, 2015 at 12:57 PM, Hadrien Mary <hadrien.mary at gmail.com>
> > wrote:
> >>
> >> Hi,
> >>
> >> I'd like to report a bug I noticed some time ago.
> >>
> >> I have an error when I try to save an OME Tiff file with File > Export
> >> > Image (to save it as an OME Tiff format). Note that it works well
> >> when the saved image is not an OME Tiff file.
> >>
> >> The bug is weird.
> >>
> >> First when I click File > Export > Image, gtk file manager open to ask
> >> where I want to save the file. The default filename is test.ometif
> >> (instead of test.ome.tif, current filename). I change the filename to
> >> be test.ome.tif (same bug when I don't change it) and when I click
> >> "save", I have this message :
> >>
> >> ------------------------------------
> >> (Fiji Is Just) ImageJ 2.0.0-rc-21/1.49m; Java 1.7.0_65 [64-bit]; Linux
> >> 3.13.0-44-generic; 80MB of 3600MB (2%)
> >>
> >> java.lang.RuntimeException: java.util.concurrent.ExecutionException:
> >> java.lang.IllegalArgumentException
> >> at
> >>
> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
> >> at
> >>
> net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
> >> at ij.IJ.runPlugIn(IJ.java)
> >> at ij.Executer.runCommand(Executer.java:131)
> >> at ij.Executer.run(Executer.java:64)
> >> at java.lang.Thread.run(Thread.java:745)
> >> Caused by: java.util.concurrent.ExecutionException:
> >> java.lang.IllegalArgumentException
> >> at java.util.concurrent.FutureTask.report(FutureTask.java:122)
> >> at java.util.concurrent.FutureTask.get(FutureTask.java:188)
> >> at
> >>
> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
> >> ... 5 more
> >> Caused by: java.lang.IllegalArgumentException
> >> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> >> at
> >>
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
> >> at
> >>
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> >> at java.lang.reflect.Method.invoke(Method.java:606)
> >> at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
> >> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
> >> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
> >> at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
> >> at org.scijava.command.CommandModule.run(CommandModule.java:201)
> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >> at
> >>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >> at
> >>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >> at
> >>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >> ... 1 more
> >> ------------------------------------
> >>
> >> I currently use BF exporter function which is working well for my
> >> daily use. So don't rush on this.
> >>
> >> Thank you
> >>
> >> --
> >> Hadrien Mary
> >>
> >> Ph.D student in Biology
> >> Tournier-Gachet Team
> >> CNRS - LBCMCP - UMR 5088
> >>
> >> Universit? de Toulouse - B?t. 4R3B1
> >> 118, route de Narbonne - 31062 Toulouse
> >>
> >> _______________________________________________
> >> ImageJ-devel mailing list
> >> ImageJ-devel at imagej.net
> >> http://imagej.net/mailman/listinfo/imagej-devel
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150122/8987f56a/attachment-0001.html>

From hadrien.mary at gmail.com  Thu Jan 22 06:27:36 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Thu, 22 Jan 2015 13:27:36 +0100
Subject: [ImageJ-devel] Save OME Tiff with File > Export > Image
In-Reply-To: <CA+B=mGqORiHj-NAzyHuby6Zy-3__tyH1pCORkRcN8FfTzUay=g@mail.gmail.com>
References: <CAEpSnnYoYGt3JeVbUwgWCgAN4jQ=wj89KkkW+CC7a9WM895Krg@mail.gmail.com>
	<CA+B=mGpYpR9edggHAyOQ3h523AyuOMhBK0KzC5-xSERyLA+Y1g@mail.gmail.com>
	<CAEpSnnYTMYSmor5X8H-1eBQYaaysO15nwVgL6iw9if=vwmF5mg@mail.gmail.com>
	<CA+B=mGqORiHj-NAzyHuby6Zy-3__tyH1pCORkRcN8FfTzUay=g@mail.gmail.com>
Message-ID: <CAEpSnnZPVwZF1nLuZHX5BKsuM1E83U+nm-M4nKbeq6AzF28NTw@mail.gmail.com>

Very nice. Thanks Mark!
Le 22 janv. 2015 11:51, "Mark Hiner" <hiner at wisc.edu> a ?crit :

> Sorry Hadrien - I didn't go into much detail on my last e-mail. You
> would've needed development versions of several other libraries to fix the
> bugs in "File > Export > Image...".
>
> Anyway, I just uploaded all my fixes to Fiji. If you update, exporting as
> .ome.tif should be working now, regardless of whether JFileChooser is
> enabled or not.
>
> Note that there is still a known issue if overwriting multi-dot files
> (like .ome.tif) with JFileChooser enabled[1].
>
> Thanks again for your help identifying these issues!
>
> Best,
> Mark
>
> [1] https://github.com/imagej/imagej-legacy/issues/102
>
>
> On Wed, Jan 21, 2015 at 6:24 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>
>> Ok thanks. However even if I enable JFileChoose I still have an error
>> which prevent me to save the file. See below.
>>
>> ------------------------------------------
>> (Fiji Is Just) ImageJ 2.0.0-rc-22/1.49m; Java 1.7.0_65 [64-bit]; Linux
>> 3.13.0-44-generic; 80MB of 4362MB (1%)
>>
>> java.lang.RuntimeException: java.util.concurrent.ExecutionException:
>> java.lang.IllegalArgumentException
>> at
>> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
>> at
>> net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
>> at ij.IJ.runPlugIn(IJ.java)
>> at ij.Executer.runCommand(Executer.java:131)
>> at ij.Executer.run(Executer.java:64)
>> at java.lang.Thread.run(Thread.java:745)
>> Caused by: java.util.concurrent.ExecutionException:
>> java.lang.IllegalArgumentException
>> at java.util.concurrent.FutureTask.report(FutureTask.java:122)
>> at java.util.concurrent.FutureTask.get(FutureTask.java:188)
>> at
>> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
>> ... 5 more
>> Caused by: java.lang.IllegalArgumentException
>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
>> at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> at java.lang.reflect.Method.invoke(Method.java:606)
>> at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
>> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
>> at net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
>> at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
>> at org.scijava.command.CommandModule.run(CommandModule.java:201)
>> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> at
>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> ... 1 more
>> -------------------------------------------
>>
>> I can't tell if it's related or another bug...
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Wed, Jan 21, 2015 at 8:04 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> > Hi Hadrien,
>> >
>> >  Thanks for reporting this. I finally tracked it down when working on
>> > updating File > Export > Image... and File > Import > Image... to use
>> the
>> > fixes to OME-TIFF writing[1].
>> >
>> >  The issue has to do with whether or not the JFileChooser is
>> enabled[2]. A
>> > temporary workaround should be just to enable the use of the
>> JFileChooser.
>> > I'm hoping to have an actual fix soon though.
>> >
>> > Thanks again!
>> > - Mark
>> >
>> > [1] http://imagej.net/pipermail/imagej-devel/2015-January/002407.html
>> > [2] https://github.com/imagej/imagej-legacy/issues/101
>> >
>> > On Wed, Jan 14, 2015 at 12:57 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> > wrote:
>> >>
>> >> Hi,
>> >>
>> >> I'd like to report a bug I noticed some time ago.
>> >>
>> >> I have an error when I try to save an OME Tiff file with File > Export
>> >> > Image (to save it as an OME Tiff format). Note that it works well
>> >> when the saved image is not an OME Tiff file.
>> >>
>> >> The bug is weird.
>> >>
>> >> First when I click File > Export > Image, gtk file manager open to ask
>> >> where I want to save the file. The default filename is test.ometif
>> >> (instead of test.ome.tif, current filename). I change the filename to
>> >> be test.ome.tif (same bug when I don't change it) and when I click
>> >> "save", I have this message :
>> >>
>> >> ------------------------------------
>> >> (Fiji Is Just) ImageJ 2.0.0-rc-21/1.49m; Java 1.7.0_65 [64-bit]; Linux
>> >> 3.13.0-44-generic; 80MB of 3600MB (2%)
>> >>
>> >> java.lang.RuntimeException: java.util.concurrent.ExecutionException:
>> >> java.lang.IllegalArgumentException
>> >> at
>> >>
>> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:256)
>> >> at
>> >>
>> net.imagej.legacy.DefaultLegacyHooks.interceptRunPlugIn(DefaultLegacyHooks.java:160)
>> >> at ij.IJ.runPlugIn(IJ.java)
>> >> at ij.Executer.runCommand(Executer.java:131)
>> >> at ij.Executer.run(Executer.java:64)
>> >> at java.lang.Thread.run(Thread.java:745)
>> >> Caused by: java.util.concurrent.ExecutionException:
>> >> java.lang.IllegalArgumentException
>> >> at java.util.concurrent.FutureTask.report(FutureTask.java:122)
>> >> at java.util.concurrent.FutureTask.get(FutureTask.java:188)
>> >> at
>> >>
>> net.imagej.legacy.DefaultLegacyService.runLegacyCompatibleCommand(DefaultLegacyService.java:252)
>> >> ... 5 more
>> >> Caused by: java.lang.IllegalArgumentException
>> >> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> >> at
>> >>
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
>> >> at
>> >>
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> >> at java.lang.reflect.Method.invoke(Method.java:606)
>> >> at org.scijava.util.ReflectedUniverse.exec(ReflectedUniverse.java:314)
>> >> at
>> net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:327)
>> >> at
>> net.imagej.DefaultDatasetService.save(DefaultDatasetService.java:310)
>> >> at net.imagej.plugins.commands.io.SaveAsImage.run(SaveAsImage.java:101)
>> >> at org.scijava.command.CommandModule.run(CommandModule.java:201)
>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >> at
>> >>
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >> at
>> >>
>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >> at
>> >>
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >> ... 1 more
>> >> ------------------------------------
>> >>
>> >> I currently use BF exporter function which is working well for my
>> >> daily use. So don't rush on this.
>> >>
>> >> Thank you
>> >>
>> >> --
>> >> Hadrien Mary
>> >>
>> >> Ph.D student in Biology
>> >> Tournier-Gachet Team
>> >> CNRS - LBCMCP - UMR 5088
>> >>
>> >> Universit? de Toulouse - B?t. 4R3B1
>> >> 118, route de Narbonne - 31062 Toulouse
>> >>
>> >> _______________________________________________
>> >> ImageJ-devel mailing list
>> >> ImageJ-devel at imagej.net
>> >> http://imagej.net/mailman/listinfo/imagej-devel
>> >
>> >
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150122/e6385480/attachment.html>

From michael.ellis at dsuk.biz  Thu Jan 22 11:28:34 2015
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Thu, 22 Jan 2015 17:28:34 +0000
Subject: [ImageJ-devel] How do I Perform an Image Convolution?
In-Reply-To: <CADN69y=Bd+vmpukzGR+G9ZvXpVSGWOcr4t7fEVe4qDqMC5hQtQ@mail.gmail.com>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
	<CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>
	<D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
	<CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>
	<00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>
	<CADN69y=Bd+vmpukzGR+G9ZvXpVSGWOcr4t7fEVe4qDqMC5hQtQ@mail.gmail.com>
Message-ID: <99288AB2-4744-451E-9A86-D8DFD614E588@dsuk.biz>

Curtis, 

I am once again looking into trying to perform the image alignment function as done in Example6c but using the new Fourier code.

Thus far I have discovered that how to perform FFTs and inverse FFTs using imglib/imglib2-algorithm-fft 

However, when I compare the results generated by the deprecated version:
            // compute fourier transform of the template
            final FourierTransform< FloatType, ComplexFloatType> fft
                    = new FourierTransform< FloatType, ComplexFloatType>(
                            image, new ComplexFloatType());
            fft.process();
            Img< ComplexFloatType> fftImage = fft.getResult();


And the new version

            ImgFactory<ComplexFloatType> fftImgFactory = image.factory().imgFactory(new ComplexFloatType());

            // Compute fourier transform
            Img< ComplexFloatType> fft = FFT.realToComplex(image, fftImgFactory);

I find the results differ.

The original images is the ?WingTemplate.tif" image that comes with Example6c. This is of size 64x64 (8 bit pixels).

The new FFT.realToComplex yields a Fourier image that is size 37x72
The older FourierTransform yields an image that is size 41x80

I do not understand either of these resulting image sizes, when I use ImageJ to perform the FFT I get a resulting image where each dimension is the smallest power of two equal or greater than the source image dimensions.

Also in both cases it looks as though the FFT produced might be containing only half of the information in the X dimension (hence the resulting images appearing to be roughly twitch as tall as they are wide)

Also the old Fourier code produces the brightest spot on the right hand side of the image, exactly half way down (width -1, height /2 -1) whereas the new Fourier code produces the a brightest spot at the top left of the image (0,0) I think this is something to with quadrant swapping but I am honestly at a loss here.

Both methods old and new can have their corresponding inverse fourier transforms created to recreate the original image (or something that is very close).

Even if the new Fourier method is correct can anyone point me in the right direction for what I would need to do to convert the Example6c from using the deprecated old Fourier code to the new Fourier code.

Also can you tell me where I should look for FFTConvolution within https://github.com/imglib as I cannot seem to locate it.

Many thanks in advance of any help ? Michael Ellis





On 18 Dec 2014, at 22:28, Curtis Rueden <ctrueden at WISC.EDU> wrote:

> Hi Michael,
> 
> > The Example6c has not been updated to reflect the new way of doing
> > things.
> 
> Indeed. If you end up updating it, a pull request to that effect would be most welcome!
> 
> > You previously pointed me at the ImageJ OPS library. Is that th best
> > way of achieving the convolution?
> 
> The most future-proof, in that OPS is the direction we are going. However, at this point in time it won't be the smoothest ride, since the OPS library is still in incubation.
> 
> Furthermore, the main OPS convolve routine leans on the ImgLib2 FFTConvolution implementation, so if all you need is the low-level function, then OPS is probably not necessary for you.
> 
> > [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system
> > contains com/sun/codemodel/internal/ClassType.class targeted to JDK
> > 1.8
> 
> This was a bug in the Maven build configuration, addressed earlier this week. Should work with the latest master.
> 
> > So what are the minimal hoops I need to jump though to setup ops such
> > that the code below will compile? (I want to avoid dragging in any
> > ImageJ 1 legacy code)
> > 
> >         Img<FloatType> result = image.copy();
> >         Op op = ops.op("convolve", result, image, templateInverse);
> 
> OPS does not depend on ImageJ1. (The only ImageJ2 component that does is called imagej-legacy, and is expressly for the purpose of backwards compatibility.)
> 
> Easiest would be to start with the "using-ops" tutorial project, and edit the code from there.
> 
> https://github.com/imagej/imagej-tutorials/tree/31a5771277682e5f1ef45112094d147539dc4bc7/using-ops
> 
> FTR, you can invoke the routine with something like:
> 
>     Object result = ops.convolve(image, templateInverse);
> 
> However, in attempting a quick test of the convolve routine, I ran into some obstacles with the current code. My advice at the moment is to just use FFTConvolution directly for your needs.
> 
> > For the record, I am suspicious about Java annotations!
> 
> I agree with your concerns: they do unfortunately obfuscate the execution flow. However, they also bring many advantages. In particular, the way we are using them provides: 1) a dependency injection mechanism without the need for any external configuration files; and 2) a very succinct syntax for parameterized commands. We are shooting for DRY ("Don't Repeat Yourself") code here [1], not just in the core, but particularly for plugin developers [2].
> 
> I think the best way to counter the mystery surrounding the inner workings is to thoroughly document how things work.
> 
> Regards,
> Curtis
> 
> P.S. Related to FFTConvolution, see also these issues:
> * https://github.com/imglib/imglib2-algorithm-fft/pull/1
> * https://github.com/imglib/imglib2/issues/61
> * https://github.com/imagej/imagej-ops/issues/12
> 
> [1] http://imagej.net/Philosophy#Convention_over_configuration
> [2] Example: http://curtis.imagej.net/2013-03-15-imagej-research-paper/plugin-comparison.png
> 
> On Wed, Dec 10, 2014 at 1:09 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> Curtis,
> 
> Thanks for this reply and I am now turning my attention to use of the FFT. 
> 
> It seems the FFT was moved from imglib2-algorithm to imglib2-algorithm-fft (due I think to licensing issues).
> 
> I need to achieve what is done in imglib2-tutorials/Example6c.java at master ? imglib/imglib2-tutorials
> 
> The Example6c has not been updated to reflect the new way of doing things. If I clone the imglib/imglib2-tutorials project I see the following are all deprecated.
> 
> import net.imglib2.algorithm.fft.FourierConvolution;
> import net.imglib2.algorithm.fft.FourierTransform;
> import net.imglib2.algorithm.fft.InverseFourierTransform;
> 
> I have managed to make progress and think I have got fourier and inverse fourier transforms working. So that just leaves the convolution.
> 
> You previously pointed me at the ImageJ OPS library. Is that th best way of achieving the convolution?
> 
> The ImageJ OPS example however depends on ImageJ. The ImageJ OPS test programs don?t help me either since the test classes do some magic wizardry that I do not understand at all i.e. with Contexts, Java annotations and some injection stuff.
> 
> So what are the minimal hoops I need to jump though to setup ops such that the code below will compile? (I want to avoid dragging in any ImageJ 1 legacy code)
> 
>         Img<FloatType> result = image.copy(); 
>         Op op = ops.op("convolve", result, image, templateInverse);
> 
> Also in downloading the ImageJ-Ops project and running maven compile, I get the following. I realise that I am at Java8 and that might be jumping the gun a bit, but Java 6 is well past its sell by date and if you are on a new Apple Mac, Java 6 is not a comfortable option.
> 
> [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system contains com/sun/codemodel/internal/ClassType.class targeted to JDK 1.8
> [WARNING] Rule 1: org.apache.maven.plugins.enforcer.EnforceBytecodeVersion failed with message:
> Found Banned Dependency: com.sun:tools:jar:1.4.2
> 
> For the record, I am suspicious about Java annotations! *For me at least* They fro not help with trying to understand code as I cannot make out how to call the code in question. The feel rather like something layered on top of a language rather than an intrinsic built in.  They give me that uncomfortable feeling that C++ Standard Template Library did - and that gave me nightmares when it came time to debug code.
> 
> Thanks in anticipation of any light you can throw into my darkness!
> 
> ? Michael Ellis
> 
> 
>  
> 
> 
> 
> 
> On 5 Dec 2014, at 18:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
> 
>> Hi Michael,
>> 
>> > It looks like there is a new FFT but the tutorials use the older
>> > version. 
>> > 
>> > What should I go with?
>> 
>> The library for doing FFT is imglib2-algorithm-fft:
>>     https://github.com/imglib/imglib2-algorithm-fft
>> 
>> Regarding the "new FFT", perhaps you refer to this?
>>     https://github.com/imglib/imglib2-algorithm-fft/pull/1
>> 
>> At the moment there are licensing issues with imglib2-algorithm-fft (it depends on the Mines JTK library which has a license incompatible with GPL). That PR addresses the issues by using the JTransforms library instead.
>> 
>> You also might want to consider using the higher level ImageJ OPS library:
>>     https://github.com/imagej/imagej-ops
>> 
>> Thanks to the efforts of Brian Northan, we are about to merge an OP wrapper for FFT:
>>     https://github.com/imagej/imagej-ops/pull/76
>> 
>> Note that these components are still in the 0.x incubation phase, meaning they do not have stable APIs. That said, we would really appreciate early adopters who can try out the code and help drive things in the right direction.
>> 
>> We will be reviewing and merging these improvements over the next few days, then cutting new releases of imglib2-algorithm-fft and imagej-ops. At that point, it should be easier for you to try them out.
>> 
>> The relevant tutorials are based on imglib2-algorithm-fft:
>>     https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6b.java
>>     https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6c.java
>> 
>> And IIUC the changes above are internal so the tutorial code should not requiring updating (beyond an update to the version of imglib2-algorithm-fft in the POM, of course).
>> 
>> Regards,
>> Curtis
>> 
>> On Fri, Dec 5, 2014 at 12:21 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>> Once again, Curtis
>> 
>> I really appreciate your help with this.
>> 
>> Next questions on the horizon will involve the ImgLib2 algorithm FFT classes. It looks like there is a new FFT but the tutorials use the older version. 
>> 
>> What should I go with?
>> 
>> My aim is build an application, which as part of it will be doing image alignment using FFT phase correlation.
>> 
>> Regards ? Michael Ellis
>> 
>> 
>> On 5 Dec 2014, at 18:13, Curtis Rueden <ctrueden at wisc.edu> wrote:
>> 
>>> Hi Michael,
>>> 
>>> > gives me a self contained runnable jar. Progress! I?m learning.
>>> > 
>>> > BUT as before when I run the jar, I get the Exception: No compatible
>>> > service: org.scijava.service.SciJavaService
>>> 
>>> Self contained runnable JARs (i.e., uber-jars) are convenient in some ways, but come with a host of problems.
>>> 
>>> 1) If you do not shade your dependencies (i.e., rename their packages), then you may ship duplicate and/or incompatible classes with other libraries. This makes your library much harder to reuse in a shared system such as an ImageJ installation.
>>> 
>>> 2) You cannot ship piecemeal updates to individual dependencies -- i.e., every time your code changes, you must ship a new (possibly very large) new JAR file to your users.
>>> 
>>> 3) The SciJava annotation processor, responsible for indexing the @Plugin annotations that drive SciJava/ImageJ2/etc. plugins, writes the metadata into a resource file at META-INF/json/org.scijava.plugin.Plugin within the JAR. If you try to create an uber-jar via the assembly or shade plugin, the default combination algorithm will overwrite those files, stomping the annotations.
>>> 
>>> We wrote some code which offers one way around this:
>>>    https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631
>>> 
>>> For more on uber-jars, see also:
>>>    http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F
>>> 
>>> The gist is: avoid using an uber-jar unless you really need it.
>>> 
>>> > I?ve got it working with your help!
>>> 
>>> Awesome, congratulations. Let us know if you encounter any more roadblocks.
>>> 
>>> Regards,
>>> Curtis
>>> 
>>> On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>> Adding a build section to the POM:
>>> 
>>>   <build>
>>>     <plugins>
>>>       <plugin>
>>>         <groupId>org.apache.maven.plugins</groupId>
>>>         <artifactId>maven-shade-plugin</artifactId>
>>>         <version>2.3</version>
>>>         <executions>
>>>           <execution>
>>>             <phase>package</phase>
>>>             <goals>
>>>               <goal>shade</goal>
>>>             </goals>
>>>             <configuration>
>>>               <transformers>
>>>                 <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>>>                   <manifestEntries>
>>>                     <Main-Class>com.mycompany.app.App</Main-Class>
>>>                     <Build-Number>123</Build-Number>
>>>                   </manifestEntries>
>>>                 </transformer>
>>>               </transformers>
>>>             </configuration>
>>>           </execution>
>>>         </executions>
>>>       </plugin>
>>>     </plugins>
>>>   </build>
>>> 
>>> To the POM gives me a self contained runnable jar. Progress! I?m learning.
>>> 
>>> BUT as before when I run the jar, I get the Exception: No compatible service: org.scijava.service.SciJavaService
>>> =================================================================
>>> 
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar target/my-app-1.0-SNAPSHOT.jar 
>>> Hello World!
>>> Exception: No compatible service: org.scijava.service.SciJavaService
>>> =================================================================
>>> 
>>> Still vexed!
>>> 
>>> 
>>> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>> 
>>>> Hi Michael,
>>>> 
>>>> > mvn claims to build everything OK
>>>> 
>>>> Yep, it did build successfully.
>>>> 
>>>> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>> > Error: A JNI error has occurred, please check your installation and try again
>>>> > Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>>>> 
>>>> Maven is primarily a build tool. It puts the correct JARs on your classpath at compile time. In your case, that is scifio-0.17.1.jar and its dependencies.
>>>> 
>>>> However, the way you are launching your program is not putting the required dependencies on the classpath. You put only my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing. So of course Java cannot find the needed classes.
>>>> 
>>>> The gist is: it is your responsibility to assemble the dependencies and ensure they are on the classpath somehow when you launch your application.
>>>> 
>>>> There are several ways to accomplish this. Here is one generally useful way using Maven, which does not assume you are doing anything ImageJ-related:
>>>> 
>>>>     $ mvn dependency:copy-dependencies
>>>>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*' com.mycompany.app.App
>>>> 
>>>> The "copy-dependencies" goal copies all the JAR files needed by your program into the target/dependency folder, for easy subsequent consumption.
>>>> 
>>>> Alternately, the "ImageJ way" of dealing with deployment is to ship all needed dependencies in the "jars" folder of your ImageJ application. We created a Maven goal for this too, which you can use as follows:
>>>> 
>>>>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app -Ddelete.other.versions=true
>>>> 
>>>> Which will copy your JAR and its dependencies into your ImageJ installation at /Applications/ImageJ.app. But note that in order for this goal to work, you must extend the pom-imagej parent (see https://github.com/imagej/minimal-ij1-plugin for an example).
>>>> 
>>>> A third solution is to use the exec-maven-plugin to launch your application directly using Maven. E.g.: https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>>>> 
>>>> Regards,
>>>> Curtis
>>>> 
>>>> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>> Curtis,
>>>> 
>>>> Thanks but it is still not working.
>>>> 
>>>> I have cut out using NetBeans and am now just using the CLI and a text editor. 
>>>> 
>>>> POM as follows:
>>>> 
>>>> ========================================================
>>>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>>>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>>>   <modelVersion>4.0.0</modelVersion>
>>>> 
>>>>   <groupId>com.mycompany.app</groupId>
>>>>   <artifactId>my-app</artifactId>
>>>>   <version>1.0-SNAPSHOT</version>
>>>>   <packaging>jar</packaging>
>>>> 
>>>>   <name>my-app</name>
>>>>   <url>http://maven.apache.org</url>
>>>> 
>>>>   <properties>
>>>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>>>   </properties>
>>>>   
>>>> 	<repositories>
>>>> 		<repository>
>>>> 			<id>imagej.public</id>
>>>> 			<url>http://maven.imagej.net/content/groups/public</url>
>>>> 		</repository>
>>>> 	</repositories>
>>>> 
>>>>   <dependencies>
>>>>     <dependency>
>>>>       <groupId>junit</groupId>
>>>>       <artifactId>junit</artifactId>
>>>>       <version>3.8.1</version>
>>>>       <scope>test</scope>
>>>>     </dependency>
>>>>     
>>>> 	<dependency>
>>>> 	  <groupId>io.scif</groupId>
>>>> 	  <artifactId>scifio</artifactId>
>>>> 	  <version>0.17.1</version>
>>>> 	</dependency>
>>>>     
>>>>   </dependencies>
>>>> </project>
>>>> ========================================================
>>>> 
>>>> File hierarchy:
>>>> 
>>>> .
>>>> ./.DS_Store
>>>> ./pom.xml
>>>> ./src
>>>> ./src/main
>>>> ./src/main/java
>>>> ./src/main/java/com
>>>> ./src/main/java/com/mycompany
>>>> ./src/main/java/com/mycompany/app
>>>> ./src/main/java/com/mycompany/app/App.java
>>>> ./src/test
>>>> ./src/test/java
>>>> ./src/test/java/com
>>>> ./src/test/java/com/mycompany
>>>> ./src/test/java/com/mycompany/app
>>>> ./src/test/java/com/mycompany/app/AppTest.java
>>>> ========================================================
>>>> 
>>>> App.java as follows:
>>>> 
>>>> package com.mycompany.app;
>>>> 
>>>> import io.scif.FormatException;
>>>> import io.scif.ImageMetadata;
>>>> import io.scif.Plane;
>>>> import io.scif.Reader;
>>>> import io.scif.SCIFIO;
>>>> 
>>>> public class App 
>>>> {
>>>>     public static void main( String[] args )
>>>>     {
>>>> 		try {
>>>>     	    System.out.println( "Hello World!" );
>>>> 			SCIFIO scifio = new SCIFIO();
>>>> 			String sampleImage
>>>> 					= "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>> 			final Reader reader = scifio.initializer().initializeReader(sampleImage);
>>>> 			System.out.printf("reader=%s%n", reader );
>>>>         } catch (Exception e) {
>>>> 	        System.out.printf("Exception: %s%n", e.getMessage() );
>>>>         }
>>>>     }
>>>> }
>>>> 
>>>> ========================================================
>>>> 
>>>> mvm -U install
>>>> 
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>>>> [INFO] Scanning for projects...
>>>> [INFO]                                                                         
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] Building my-app 1.0-SNAPSHOT
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] 
>>>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>>>> [INFO] 
>>>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/classes
>>>> [INFO] 
>>>> [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>>>> [INFO] 
>>>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ my-app ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>>>> [INFO] 
>>>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
>>>> [INFO] Surefire report directory: /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>>> 
>>>> -------------------------------------------------------
>>>>  T E S T S
>>>> -------------------------------------------------------
>>>> Running com.mycompany.app.AppTest
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
>>>> 
>>>> Results :
>>>> 
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>>> 
>>>> [INFO] 
>>>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>>>> [INFO] Building jar: /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>>>> [INFO] 
>>>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
>>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] BUILD SUCCESS
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] Total time: 1.962 s
>>>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>>>> [INFO] Final Memory: 18M/242M
>>>> [INFO] ????????????????????????????????????
>>>> 
>>>> ========================================================
>>>> 
>>>> mvn claims to build everything OK there seems to be no inclusion of any scif libraries or class files.
>>>> 
>>>> 
>>>> When I run it I get:
>>>> 
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>> Error: A JNI error has occurred, please check your installation and try again
>>>> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>>>> 	at java.lang.Class.getDeclaredMethods0(Native Method)
>>>> 	at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>>>> 	at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>>>> 	at java.lang.Class.getMethod0(Class.java:3016)
>>>> 	at java.lang.Class.getMethod(Class.java:1782)
>>>> 	at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>>>> 	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>>>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>>>> 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>>>> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>>>> 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>>>> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>>>> 	... 7 more
>>>> 
>>>> 
>>>> ========================================================
>>>> 
>>>> I?ve been banging my head against this for two days now. 
>>>> 
>>>> So any help appreciated
>>>> 
>>>> 
>>>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>> 
>>>>> Hi Michael,
>>>>> 
>>>>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>>> > information available
>>>>> 
>>>>> Make sure you have the following <repositories> block in your POM:
>>>>> 
>>>>> 	<repositories>
>>>>> 		<repository>
>>>>> 			<id>imagej.public</id>
>>>>> 			<url>http://maven.imagej.net/content/groups/public</url>
>>>>> 		</repository>
>>>>> 	</repositories>
>>>>> 
>>>>> Then rebuild with the "-U" flag. I don't know how to do this from NetBeans, but you only need to do it once from the CLI -- then you can return to NetBeans and it should work.
>>>>> 
>>>>> Regards,
>>>>> Curtis
>>>>> 
>>>>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>>> I have followed the advice offered by Curtis regarding adding the io.scif: scifio dependency to my POM
>>>>> 
>>>>> The dependency part of my POM looks like this:
>>>>> 
>>>>>     <dependencies>
>>>>>         <dependency>
>>>>>             <groupId>net.imglib2</groupId>
>>>>>             <artifactId>imglib2</artifactId>
>>>>>             <version>2.2.1-SNAPSHOT</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>         <dependency>
>>>>>             <groupId>io.scif</groupId>
>>>>>             <artifactId>scifio</artifactId>
>>>>>             <version>0.17.1</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>     </dependencies>
>>>>> 
>>>>> I am using NetBeans IDE, configured for use with maven project (I am slo using Java 8 and JavaFX)
>>>>> 
>>>>> However when I attempt to Build (or Build with Dependencies)  within NetBeans, I get the following error message:
>>>>> ============================================================
>>>>> 
>>>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home "/Applications/NetBeans/NetBeans 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>>>> Scanning for projects...
>>>>>                                                                         
>>>>> ------------------------------------------------------------------------
>>>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>>>> ------------------------------------------------------------------------
>>>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency information available
>>>>> ------------------------------------------------------------------------
>>>>> BUILD FAILURE
>>>>> ------------------------------------------------------------------------
>>>>> Total time: 0.341s
>>>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>>>> Final Memory: 7M/245M
>>>>> ------------------------------------------------------------------------
>>>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]
>>>>> 
>>>>> To see the full stack trace of the errors, re-run Maven with the -e switch.
>>>>> Re-run Maven using the -X switch to enable full debug logging.
>>>>> 
>>>>> For more information about the errors and possible solutions, please read the following articles:
>>>>> [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>>> 
>>>>> ============================================================
>>>>> 
>>>>> If I open a terminal window and cd into the project directory and:
>>>>> 
>>>>> 	mvn clean package
>>>>> 
>>>>> It succeeds.
>>>>> 
>>>>> However, when I then attempt to run the project with:
>>>>> 
>>>>> 	java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>>>>> 
>>>>> The application starts to execute but throws ?No compatible service: io.scif.SCIFIOService? exception.
>>>>> ============================================================
>>>>> 
>>>>> img1=CellImg [20x30]
>>>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha = false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1 dataOff[0] = 0
>>>>> Loading image...
>>>>> Exception in Application start method
>>>>> java.lang.reflect.InvocationTargetException
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> 	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>>>> Caused by: java.lang.RuntimeException: Exception in Application start method
>>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>>>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>>>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown Source)
>>>>> 	at java.lang.Thread.run(Thread.java:745)
>>>>> Caused by: java.lang.IllegalArgumentException: No compatible service: io.scif.SCIFIOService
>>>>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>>>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>>>> 	at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>>>> 	at org.scijava.Context.<init>(Context.java:244)
>>>>> 	at org.scijava.Context.<init>(Context.java:203)
>>>>> 	at org.scijava.Context.<init>(Context.java:142)
>>>>> 	at org.scijava.Context.<init>(Context.java:128)
>>>>> 	at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>>>> 	at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>>>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>>>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown Source)
>>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown Source)
>>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown Source)
>>>>> 	at java.security.AccessController.doPrivileged(Native Method)
>>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown Source)
>>>>> 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>>>> ============================================================
>>>>> 
>>>>> If I remove the calls to the SCIO code and build and run from the command line, all works well.
>>>>> 
>>>>> The SCIO source code that I am using is lifted/amended from one of the tutorials and is as follows:
>>>>> 
>>>>> ============================================================
>>>>>             imagePath = "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>>             System.out.println("Loading image... '" + imagePath + "'");
>>>>>             SCIFIO scifio = new SCIFIO();
>>>>>             final Reader reader = scifio.initializer().initializeReader(imagePath);
>>>>> ============================================================
>>>>> 
>>>>> This source code works file in the SCIFIO tutorial.
>>>>> 
>>>>> Any help gratefully appreciated!!!!!
>>>>> 
>>>>> ? Michael Ellis
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>> 
>>>>>> Hi Michael,
>>>>>> 
>>>>>> > How do I establish what Maven projects I need to include? 
>>>>>> 
>>>>>> One way to check is using the dependency-maven-plugin like so:
>>>>>> 
>>>>>>     mvn dependency:analyze
>>>>>> 
>>>>>> This will tell you:
>>>>>> 
>>>>>> A) Dependencies you declared but do not actually use; and
>>>>>> B) Dependencies you did not declare directly, but actually need.
>>>>>> 
>>>>>> Note that this will only work if your project compiles successfully. In other words, it is easier to start with "too many" dependencies and pare down, rather than trying to "build up" from zero.
>>>>>> 
>>>>>> So in your case, you can start with the ImgLib2 Examples dependencies block, run dependency:analyze, and adjust the POM according to its recommendations.
>>>>>> 
>>>>>> > When I go to my NetBeans project dependence, select Add dependency,
>>>>>> > then type SCIF to the query text box, I get a huge list of
>>>>>> > possibilities.
>>>>>> 
>>>>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of io.scif, and an artifactId of scifio). Presumably at the latest version. You can search for that here:
>>>>>> 
>>>>>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>>>> 
>>>>>> So your dependency block in this case would be:
>>>>>> 
>>>>>>     <dependency>
>>>>>>       <groupId>io.scif</groupId>
>>>>>>       <artifactId>scifio</artifactId>
>>>>>>       <version>0.17.1</version>
>>>>>>     </dependency>
>>>>>> 
>>>>>> Note that that block of XML is available for copy-pasting from the link above.
>>>>>> 
>>>>>> > I am completely new to maven
>>>>>> 
>>>>>> For more information, see:
>>>>>>     http://imagej.net/Maven
>>>>>> 
>>>>>> Regards,
>>>>>> Curtis
>>>>>> 
>>>>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>>>> I am investigating the using ImgLib2 for a project.
>>>>>> 
>>>>>> I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.
>>>>>> 
>>>>>> I now want to add the least possible requirements for the purpose of opening some image files.
>>>>>> 
>>>>>> How do I establish what Maven projects I need to include? 
>>>>>> 
>>>>>> I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.
>>>>>> 
>>>>>> When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.
>>>>>> 
>>>>>> I am completely new to maven and so do not know what I am doing with it!
>>>>>> 
>>>>>> ? Michael Ellis
>>>>>> Digital Scientific UK Ltd.
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> _______________________________________________
>>>>>> ImageJ-devel mailing list
>>>>>> ImageJ-devel at imagej.net
>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>> 
>>>>>> 
>>>>> 
>>>>> 
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>> 
>>>>> 
>>>> 
>>>> 
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>> 
>>>> 
>>> 
>>> 
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>> 
>>> 
>> 
>> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150122/b88e1464/attachment-0001.html>

From bnorthan at gmail.com  Fri Jan 23 15:14:56 2015
From: bnorthan at gmail.com (Brian Northan)
Date: Fri, 23 Jan 2015 16:14:56 -0500
Subject: [ImageJ-devel] How do I Perform an Image Convolution?
In-Reply-To: <99288AB2-4744-451E-9A86-D8DFD614E588@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
	<CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>
	<D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
	<CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>
	<00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>
	<CADN69y=Bd+vmpukzGR+G9ZvXpVSGWOcr4t7fEVe4qDqMC5hQtQ@mail.gmail.com>
	<99288AB2-4744-451E-9A86-D8DFD614E588@dsuk.biz>
Message-ID: <CAMWa8i3Q2TEc-oGGrdj4dBV6b8Di-=o_kj2=e6ofJs4tHvh2ng@mail.gmail.com>

Hi Michael

Also can you tell me where I should look for FFTConvolution within
> https://github.com/imglib as I cannot seem to locate it.
>

It is licensed as GPL so it is in a slightly different spot....

https://github.com/imglib/imglib2-algorithm-gpl/tree/master/src/main/java/net/imglib2/algorithm/fft2


I do not understand either of these resulting image sizes, when I use
> ImageJ to perform the FFT I get a resulting image where each dimension is
> the smallest power of two equal or greater than the source image dimensions.
>

The images are resized so that the FFT can be performed efficiently.   A
particular FFT implementation may not support every buffer size.  Looks
like that ImageJ implementation only supports power of 2.  ImgLib supports
non-power of 2 sizes... but it will still extend the image slightly so the
FFT can be performed faster.

Some of the differences you are seeing are because 'FourierTransform' has
different preprocessing and extension related settings.

If you look at FourierTransform.java you can see that the constructor you
used in turn calls another constructor which sets defaults values for some
parameters

https://github.com/imglib/imglib2-algorithm-gpl/blob/master/src/main/java/net/imglib2/algorithm/
fft/FourierTransform.java

Also in both cases it looks as though the FFT produced might be containing
> only half of the information in the X dimension (hence the resulting images
> appearing to be roughly twitch as tall as they are wide)
>

That sounds correct.  An ND FFT is achieved by performing a a real to
complex transform in the first dimension that dimension will have n/2+1
complex coefficients.  A complex to complex transform is performed in the
remaining dimensions.

Brian

On Thu, Jan 22, 2015 at 12:28 PM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:

> Curtis,
>
> I am once again looking into trying to perform the image alignment
> function as done in Example6c but using the new Fourier code.
>
> Thus far I have discovered that how to perform FFTs and inverse FFTs
> using imglib/imglib2-algorithm-fft
>
> However, when I compare the results generated by the deprecated version:
>             // compute fourier transform of the template
>             final FourierTransform< FloatType, ComplexFloatType> fft
>                     = new FourierTransform< FloatType, ComplexFloatType>(
>                             image, new ComplexFloatType());
>             fft.process();
>             Img< ComplexFloatType> fftImage = fft.getResult();
>
>
> And the new version
>
>             ImgFactory<ComplexFloatType> fftImgFactory =
> image.factory().imgFactory(new ComplexFloatType());
>
>             // Compute fourier transform
>             Img< ComplexFloatType> fft = FFT.realToComplex(image,
> fftImgFactory);
>
> I find the results differ.
>
> The original images is the ?WingTemplate.tif" image that comes with
> Example6c. This is of size 64x64 (8 bit pixels).
>
> The new FFT.realToComplex yields a Fourier image that is size 37x72
> The older FourierTransform yields an image that is size 41x80
>
> I do not understand either of these resulting image sizes, when I use
> ImageJ to perform the FFT I get a resulting image where each dimension is
> the smallest power of two equal or greater than the source image dimensions.
>
> Also in both cases it looks as though the FFT produced might be containing
> only half of the information in the X dimension (hence the resulting images
> appearing to be roughly twitch as tall as they are wide)
>
> Also the old Fourier code produces the brightest spot on the right hand
> side of the image, exactly half way down (width -1, height /2 -1) whereas
> the new Fourier code produces the a brightest spot at the top left of the
> image (0,0) I think this is something to with quadrant swapping but I am
> honestly at a loss here.
>
> Both methods old and new can have their corresponding inverse fourier
> transforms created to recreate the original image (or something that is
> very close).
>
> Even if the new Fourier method is correct can anyone point me in the right
> direction for what I would need to do to convert the Example6c from using
> the deprecated old Fourier code to the new Fourier code.
>
> Also can you tell me where I should look for FFTConvolution within
> https://github.com/imglib as I cannot seem to locate it.
>
> Many thanks in advance of any help ? Michael Ellis
>
>
>
>
>
> On 18 Dec 2014, at 22:28, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>
> Hi Michael,
>
> > The Example6c has not been updated to reflect the new way of doing
> > things.
>
> Indeed. If you end up updating it, a pull request to that effect would be
> most welcome!
>
> > You previously pointed me at the ImageJ OPS library. Is that th best
> > way of achieving the convolution?
>
> The most future-proof, in that OPS is the direction we are going. However,
> at this point in time it won't be the smoothest ride, since the OPS library
> is still in incubation.
>
> Furthermore, the main OPS convolve routine leans on the ImgLib2
> FFTConvolution implementation, so if all you need is the low-level
> function, then OPS is probably not necessary for you.
>
> > [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system
> > contains com/sun/codemodel/internal/ClassType.class targeted to JDK
> > 1.8
>
> This was a bug in the Maven build configuration, addressed earlier this
> week. Should work with the latest master.
>
> > So what are the minimal hoops I need to jump though to setup ops such
> > that the code below will compile? (I want to avoid dragging in any
> > ImageJ 1 legacy code)
> >
> >         Img<FloatType> result = image.copy();
> >         Op op = ops.op("convolve", result, image, templateInverse);
>
> OPS does not depend on ImageJ1. (The only ImageJ2 component that does is
> called imagej-legacy, and is expressly for the purpose of backwards
> compatibility.)
>
> Easiest would be to start with the "using-ops" tutorial project, and edit
> the code from there.
>
>
> https://github.com/imagej/imagej-tutorials/tree/31a5771277682e5f1ef45112094d147539dc4bc7/using-ops
>
> FTR, you can invoke the routine with something like:
>
>     Object result = ops.convolve(image, templateInverse);
>
> However, in attempting a quick test of the convolve routine, I ran into
> some obstacles with the current code. My advice at the moment is to just
> use FFTConvolution directly for your needs.
>
> > For the record, I am suspicious about Java annotations!
>
> I agree with your concerns: they do unfortunately obfuscate the execution
> flow. However, they also bring many advantages. In particular, the way we
> are using them provides: 1) a dependency injection mechanism without the
> need for any external configuration files; and 2) a very succinct syntax
> for parameterized commands. We are shooting for DRY ("Don't Repeat
> Yourself") code here [1], not just in the core, but particularly for plugin
> developers [2].
>
> I think the best way to counter the mystery surrounding the inner workings
> is to thoroughly document how things work.
>
> Regards,
> Curtis
>
> P.S. Related to FFTConvolution, see also these issues:
> * https://github.com/imglib/imglib2-algorithm-fft/pull/1
> * https://github.com/imglib/imglib2/issues/61
> * https://github.com/imagej/imagej-ops/issues/12
>
> [1] http://imagej.net/Philosophy#Convention_over_configuration
> [2] Example:
> http://curtis.imagej.net/2013-03-15-imagej-research-paper/plugin-comparison.png
>
> On Wed, Dec 10, 2014 at 1:09 PM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>>
>> Curtis,
>>
>> Thanks for this reply and I am now turning my attention to use of the
>> FFT.
>>
>> It seems the FFT was moved from imglib2-algorithm
>> to imglib2-algorithm-fft (due I think to licensing issues).
>>
>> I need to achieve what is done in imglib2-tutorials/Example6c.java at
>> master ? imglib/imglib2-tutorials
>> <https://github.com/imglib/imglib2-tutorials/blob/master/src/main/java/Example6c.java>
>>
>> The Example6c has not been updated to reflect the new way of doing
>> things. If I clone the imglib/imglib2-tutorials
>> <https://github.com/imglib/imglib2-tutorials> project I see the
>> following are all deprecated.
>>
>> import net.imglib2.algorithm.fft.FourierConvolution;
>> import net.imglib2.algorithm.fft.FourierTransform;
>> import net.imglib2.algorithm.fft.InverseFourierTransform;
>>
>> I have managed to make progress and think I have got fourier and inverse
>> fourier transforms working. So that just leaves the convolution.
>>
>> You previously pointed me at the ImageJ OPS library. Is that th best way
>> of achieving the convolution?
>>
>> The ImageJ OPS example however depends on ImageJ. The ImageJ OPS test
>> programs don?t help me either since the test classes do some magic wizardry
>> that I do not understand at all i.e. with Contexts, Java annotations and
>> some injection stuff.
>>
>> So what are the minimal hoops I need to jump though to setup ops such
>> that the code below will compile? (I want to avoid dragging in any ImageJ 1
>> legacy code)
>>
>> Img<FloatType> result = image.copy(); Op op = ops.op("convolve", result,
>> image, templateInverse);
>>
>> Also in downloading the ImageJ-Ops project and running maven compile, I
>> get the following. I realise that I am at Java8 and that might be jumping
>> the gun a bit, but Java 6 is well past its sell by date and if you are
>> on a new Apple Mac, Java 6 is not a comfortable option.
>>
>> [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system contains
>> com/sun/codemodel/internal/ClassType.class targeted to JDK 1.8
>> [WARNING] Rule 1:
>> org.apache.maven.plugins.enforcer.EnforceBytecodeVersion failed with
>> message:
>> Found Banned Dependency: com.sun:tools:jar:1.4.2
>>
>> For the record, I am suspicious about Java annotations! *For me at least*
>> They fro not help with trying to understand code as I cannot make out how
>> to call the code in question. The feel rather like something layered on top
>> of a language rather than an intrinsic built in.  They give me that
>> uncomfortable feeling that C++ Standard Template Library did - and that
>> gave me nightmares when it came time to debug code.
>>
>> Thanks in anticipation of any light you can throw into my darkness!
>>
>> ? Michael Ellis
>>
>>
>>
>>
>>
>>
>>
>> On 5 Dec 2014, at 18:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>
>> Hi Michael,
>>
>> > It looks like there is a new FFT but the tutorials use the older
>> > version.
>> >
>> > What should I go with?
>>
>> The library for doing FFT is imglib2-algorithm-fft:
>>     https://github.com/imglib/imglib2-algorithm-fft
>>
>> Regarding the "new FFT", perhaps you refer to this?
>>     https://github.com/imglib/imglib2-algorithm-fft/pull/1
>>
>> At the moment there are licensing issues with imglib2-algorithm-fft (it
>> depends on the Mines JTK library which has a license incompatible with
>> GPL). That PR addresses the issues by using the JTransforms library instead.
>>
>> You also might want to consider using the higher level ImageJ OPS library:
>>     https://github.com/imagej/imagej-ops
>>
>> Thanks to the efforts of Brian Northan, we are about to merge an OP
>> wrapper for FFT:
>>     https://github.com/imagej/imagej-ops/pull/76
>>
>> Note that these components are still in the 0.x incubation phase, meaning
>> they do not have stable APIs. That said, we would really appreciate early
>> adopters who can try out the code and help drive things in the right
>> direction.
>>
>> We will be reviewing and merging these improvements over the next few
>> days, then cutting new releases of imglib2-algorithm-fft and imagej-ops. At
>> that point, it should be easier for you to try them out.
>>
>> The relevant tutorials are based on imglib2-algorithm-fft:
>>
>> https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6b.java
>>
>> https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6c.java
>>
>> And IIUC the changes above are internal so the tutorial code should not
>> requiring updating (beyond an update to the version of
>> imglib2-algorithm-fft in the POM, of course).
>>
>> Regards,
>> Curtis
>>
>> On Fri, Dec 5, 2014 at 12:21 PM, Michael Ellis <michael.ellis at dsuk.biz>
>> wrote:
>>
>>> Once again, Curtis
>>>
>>> I really appreciate your help with this.
>>>
>>> Next questions on the horizon will involve the ImgLib2 algorithm FFT
>>> classes. It looks like there is a new FFT but the tutorials use the older
>>> version.
>>>
>>> What should I go with?
>>>
>>> My aim is build an application, which as part of it will be doing image
>>> alignment using FFT phase correlation.
>>>
>>> Regards ? Michael Ellis
>>>
>>>
>>> On 5 Dec 2014, at 18:13, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>>
>>> Hi Michael,
>>>
>>> > gives me a self contained runnable jar. Progress! I?m learning.
>>> >
>>> > BUT as before when I run the jar, I get the Exception: No compatible
>>> > service: org.scijava.service.SciJavaService
>>>
>>> Self contained runnable JARs (i.e., uber-jars) are convenient in some
>>> ways, but come with a host of problems.
>>>
>>> 1) If you do not shade your dependencies (i.e., rename their packages),
>>> then you may ship duplicate and/or incompatible classes with other
>>> libraries. This makes your library much harder to reuse in a shared system
>>> such as an ImageJ installation.
>>>
>>> 2) You cannot ship piecemeal updates to individual dependencies -- i.e.,
>>> every time your code changes, you must ship a new (possibly very large) new
>>> JAR file to your users.
>>>
>>> 3) The SciJava annotation processor, responsible for indexing the
>>> @Plugin annotations that drive SciJava/ImageJ2/etc. plugins, writes the
>>> metadata into a resource file at META-INF/json/org.scijava.plugin.Plugin
>>> within the JAR. If you try to create an uber-jar via the assembly or shade
>>> plugin, the default combination algorithm will overwrite those files,
>>> stomping the annotations.
>>>
>>> We wrote some code which offers one way around this:
>>>
>>> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631
>>>
>>> For more on uber-jars, see also:
>>>
>>> http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F
>>>
>>> The gist is: avoid using an uber-jar unless you really need it.
>>>
>>> > I?ve got it working with your help!
>>>
>>> Awesome, congratulations. Let us know if you encounter any more
>>> roadblocks.
>>>
>>> Regards,
>>> Curtis
>>>
>>> On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz>
>>> wrote:
>>>
>>>> Adding a build section to the POM:
>>>>
>>>>   <build>
>>>>     <plugins>
>>>>       <plugin>
>>>>         <groupId>org.apache.maven.plugins</groupId>
>>>>         <artifactId>maven-shade-plugin</artifactId>
>>>>         <version>2.3</version>
>>>>         <executions>
>>>>           <execution>
>>>>             <phase>package</phase>
>>>>             <goals>
>>>>               <goal>shade</goal>
>>>>             </goals>
>>>>             <configuration>
>>>>               <transformers>
>>>>                 <transformer
>>>> implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>>>>                   <manifestEntries>
>>>>                     <Main-Class>com.mycompany.app.App</Main-Class>
>>>>                     <Build-Number>123</Build-Number>
>>>>                   </manifestEntries>
>>>>                 </transformer>
>>>>               </transformers>
>>>>             </configuration>
>>>>           </execution>
>>>>         </executions>
>>>>       </plugin>
>>>>     </plugins>
>>>>   </build>
>>>>
>>>> To the POM gives me a self contained runnable jar. Progress! I?m
>>>> learning.
>>>>
>>>> BUT as before when I run the jar, I get the Exception: No compatible
>>>> service: org.scijava.service.SciJavaService
>>>> =================================================================
>>>>
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar
>>>> target/my-app-1.0-SNAPSHOT.jar
>>>> Hello World!
>>>> Exception: No compatible service: org.scijava.service.SciJavaService
>>>> =================================================================
>>>>
>>>> Still vexed!
>>>>
>>>>
>>>> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>>>
>>>> Hi Michael,
>>>>
>>>> > mvn claims to build everything OK
>>>>
>>>> Yep, it did build successfully.
>>>>
>>>> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>> > Error: A JNI error has occurred, please check your installation and
>>>> try again
>>>> > Exception in thread "main" java.lang.NoClassDefFoundError:
>>>> io/scif/SCIFIO
>>>>
>>>> Maven is primarily a build tool. It puts the correct JARs on your
>>>> classpath at compile time. In your case, that is scifio-0.17.1.jar and its
>>>> dependencies.
>>>>
>>>> However, the way you are launching your program is not putting the
>>>> required dependencies on the classpath. You put only
>>>> my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing.
>>>> So of course Java cannot find the needed classes.
>>>>
>>>> The gist is: it is your responsibility to assemble the dependencies and
>>>> ensure they are on the classpath somehow when you launch your application.
>>>>
>>>> There are several ways to accomplish this. Here is one generally useful
>>>> way using Maven, which does not assume you are doing anything
>>>> ImageJ-related:
>>>>
>>>>     $ mvn dependency:copy-dependencies
>>>>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*'
>>>> com.mycompany.app.App
>>>>
>>>> The "copy-dependencies" goal copies all the JAR files needed by your
>>>> program into the target/dependency folder, for easy subsequent consumption.
>>>>
>>>> Alternately, the "ImageJ way" of dealing with deployment is to ship all
>>>> needed dependencies in the "jars" folder of your ImageJ application. We
>>>> created a Maven goal for this too, which you can use as follows:
>>>>
>>>>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app
>>>> -Ddelete.other.versions=true
>>>>
>>>> Which will copy your JAR and its dependencies into your ImageJ
>>>> installation at /Applications/ImageJ.app. But note that in order for this
>>>> goal to work, you must extend the pom-imagej parent (see
>>>> https://github.com/imagej/minimal-ij1-plugin for an example).
>>>>
>>>> A third solution is to use the exec-maven-plugin to launch your
>>>> application directly using Maven. E.g.:
>>>> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>>>>
>>>> Regards,
>>>> Curtis
>>>>
>>>> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz>
>>>> wrote:
>>>>
>>>>> Curtis,
>>>>>
>>>>> Thanks but it is still not working.
>>>>>
>>>>> I have cut out using NetBeans and am now just using the CLI and a text
>>>>> editor.
>>>>>
>>>>> POM as follows:
>>>>>
>>>>> ========================================================
>>>>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="
>>>>> http://www.w3.org/2001/XMLSchema-instance"
>>>>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
>>>>> http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>>>>   <modelVersion>4.0.0</modelVersion>
>>>>>
>>>>>   <groupId>com.mycompany.app</groupId>
>>>>>   <artifactId>my-app</artifactId>
>>>>>   <version>1.0-SNAPSHOT</version>
>>>>>   <packaging>jar</packaging>
>>>>>
>>>>>   <name>my-app</name>
>>>>>   <url>http://maven.apache.org</url>
>>>>>
>>>>>   <properties>
>>>>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>>>>   </properties>
>>>>>
>>>>> <repositories>
>>>>> <repository>
>>>>> <id>imagej.public</id>
>>>>> <url>http://maven.imagej.net/content/groups/public</url>
>>>>> </repository>
>>>>> </repositories>
>>>>>
>>>>>   <dependencies>
>>>>>     <dependency>
>>>>>       <groupId>junit</groupId>
>>>>>       <artifactId>junit</artifactId>
>>>>>       <version>3.8.1</version>
>>>>>       <scope>test</scope>
>>>>>     </dependency>
>>>>>
>>>>> <dependency>
>>>>>   <groupId>io.scif</groupId>
>>>>>   <artifactId>scifio</artifactId>
>>>>>   <version>0.17.1</version>
>>>>> </dependency>
>>>>>
>>>>>   </dependencies>
>>>>> </project>
>>>>> ========================================================
>>>>>
>>>>> File hierarchy:
>>>>>
>>>>> .
>>>>> ./.DS_Store
>>>>> ./pom.xml
>>>>> ./src
>>>>> ./src/main
>>>>> ./src/main/java
>>>>> ./src/main/java/com
>>>>> ./src/main/java/com/mycompany
>>>>> ./src/main/java/com/mycompany/app
>>>>> ./src/main/java/com/mycompany/app/App.java
>>>>> ./src/test
>>>>> ./src/test/java
>>>>> ./src/test/java/com
>>>>> ./src/test/java/com/mycompany
>>>>> ./src/test/java/com/mycompany/app
>>>>> ./src/test/java/com/mycompany/app/AppTest.java
>>>>> ========================================================
>>>>>
>>>>> App.java as follows:
>>>>>
>>>>> package com.mycompany.app;
>>>>>
>>>>> import io.scif.FormatException;
>>>>> import io.scif.ImageMetadata;
>>>>> import io.scif.Plane;
>>>>> import io.scif.Reader;
>>>>> import io.scif.SCIFIO;
>>>>>
>>>>> public class App
>>>>> {
>>>>>     public static void main( String[] args )
>>>>>     {
>>>>> try {
>>>>>         System.out.println( "Hello World!" );
>>>>> SCIFIO scifio = new SCIFIO();
>>>>> String sampleImage
>>>>> =
>>>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>> final Reader reader =
>>>>> scifio.initializer().initializeReader(sampleImage);
>>>>> System.out.printf("reader=%s%n", reader );
>>>>>         } catch (Exception e) {
>>>>>         System.out.printf("Exception: %s%n", e.getMessage() );
>>>>>         }
>>>>>     }
>>>>> }
>>>>>
>>>>> ========================================================
>>>>>
>>>>> mvm -U install
>>>>>
>>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>>>>> [INFO] Scanning for projects...
>>>>> [INFO]
>>>>>
>>>>> [INFO]
>>>>> ------------------------------------------------------------------------
>>>>> [INFO] Building my-app 1.0-SNAPSHOT
>>>>> [INFO]
>>>>> ------------------------------------------------------------------------
>>>>> [INFO]
>>>>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
>>>>> my-app ---
>>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>>> [INFO] skip non existing resourceDirectory
>>>>> /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>>>>> [INFO]
>>>>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @
>>>>> my-app ---
>>>>> [INFO] Changes detected - recompiling the module!
>>>>> [INFO] Compiling 1 source file to
>>>>> /Users/michaelellis/temp/deleteme/my-app/target/classes
>>>>> [INFO]
>>>>> [INFO] --- maven-resources-plugin:2.6:testResources
>>>>> (default-testResources) @ my-app ---
>>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>>> [INFO] skip non existing resourceDirectory
>>>>> /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>>>>> [INFO]
>>>>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile)
>>>>> @ my-app ---
>>>>> [INFO] Changes detected - recompiling the module!
>>>>> [INFO] Compiling 1 source file to
>>>>> /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>>>>> [INFO]
>>>>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app
>>>>> ---
>>>>> [INFO] Surefire report directory:
>>>>> /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>>>>
>>>>> -------------------------------------------------------
>>>>>  T E S T S
>>>>> -------------------------------------------------------
>>>>> Running com.mycompany.app.AppTest
>>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005
>>>>> sec
>>>>>
>>>>> Results :
>>>>>
>>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>>>>
>>>>> [INFO]
>>>>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>>>>> [INFO] Building jar:
>>>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>>>>> [INFO]
>>>>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app
>>>>> ---
>>>>> [INFO] Installing
>>>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to
>>>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>>>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to
>>>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>>>>> [INFO]
>>>>> ------------------------------------------------------------------------
>>>>> [INFO] BUILD SUCCESS
>>>>> [INFO]
>>>>> ------------------------------------------------------------------------
>>>>> [INFO] Total time: 1.962 s
>>>>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>>>>> [INFO] Final Memory: 18M/242M
>>>>> [INFO] ????????????????????????????????????
>>>>>
>>>>> ========================================================
>>>>>
>>>>> mvn claims to build everything OK there seems to be no inclusion of
>>>>> any scif libraries or class files.
>>>>>
>>>>>
>>>>> When I run it I get:
>>>>>
>>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp
>>>>> target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>>> Error: A JNI error has occurred, please check your installation and
>>>>> try again
>>>>> Exception in thread "main" java.lang.NoClassDefFoundError:
>>>>> io/scif/SCIFIO
>>>>> at java.lang.Class.getDeclaredMethods0(Native Method)
>>>>> at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>>>>> at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>>>>> at java.lang.Class.getMethod0(Class.java:3016)
>>>>> at java.lang.Class.getMethod(Class.java:1782)
>>>>> at
>>>>> sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>>>>> at
>>>>> sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>>>>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>>>>> at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>>>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>>>>> at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>>>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>>>>> ... 7 more
>>>>>
>>>>>
>>>>> ========================================================
>>>>>
>>>>> I?ve been banging my head against this for two days now.
>>>>>
>>>>> So any help appreciated
>>>>>
>>>>>
>>>>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>>
>>>>> Hi Michael,
>>>>>
>>>>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>>> > information available
>>>>>
>>>>> Make sure you have the following <repositories> block in your POM:
>>>>>
>>>>> <repositories>
>>>>> <repository>
>>>>> <id>imagej.public</id>
>>>>> <url>http://maven.imagej.net/content/groups/public</url>
>>>>> </repository>
>>>>> </repositories>
>>>>>
>>>>> Then rebuild with the "-U" flag. I don't know how to do this from
>>>>> NetBeans, but you only need to do it once from the CLI -- then you can
>>>>> return to NetBeans and it should work.
>>>>>
>>>>> Regards,
>>>>> Curtis
>>>>>
>>>>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz>
>>>>> wrote:
>>>>>
>>>>>> I have followed the advice offered by Curtis regarding adding
>>>>>> the io.scif: scifio dependency to my POM
>>>>>>
>>>>>> The dependency part of my POM looks like this:
>>>>>>
>>>>>>     <dependencies>
>>>>>>         <dependency>
>>>>>>             <groupId>net.imglib2</groupId>
>>>>>>             <artifactId>imglib2</artifactId>
>>>>>>             <version>2.2.1-SNAPSHOT</version>
>>>>>>             <type>jar</type>
>>>>>>         </dependency>
>>>>>>         <dependency>
>>>>>>             <groupId>io.scif</groupId>
>>>>>>             <artifactId>scifio</artifactId>
>>>>>>             <version>0.17.1</version>
>>>>>>             <type>jar</type>
>>>>>>         </dependency>
>>>>>>     </dependencies>
>>>>>>
>>>>>> I am using NetBeans IDE, configured for use with maven project (I am
>>>>>> slo using Java 8 and JavaFX)
>>>>>>
>>>>>> However when I attempt to Build (or Build with Dependencies)  within
>>>>>> NetBeans, I get the following error message:
>>>>>> ============================================================
>>>>>>
>>>>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX;
>>>>>> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
>>>>>> "/Applications/NetBeans/NetBeans
>>>>>> 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>>>>> Scanning for projects...
>>>>>>
>>>>>>
>>>>>>
>>>>>> ------------------------------------------------------------------------
>>>>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>>>>>
>>>>>> ------------------------------------------------------------------------
>>>>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>>>> information available
>>>>>>
>>>>>> ------------------------------------------------------------------------
>>>>>> BUILD FAILURE
>>>>>>
>>>>>> ------------------------------------------------------------------------
>>>>>> Total time: 0.341s
>>>>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>>>>> Final Memory: 7M/245M
>>>>>>
>>>>>> ------------------------------------------------------------------------
>>>>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve
>>>>>> dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure
>>>>>> to find io.scif:scifio:jar:0.17.1 in
>>>>>> http://repo.maven.apache.org/maven2 was cached in the local
>>>>>> repository, resolution will not be reattempted until the update interval of
>>>>>> central has elapsed or updates are forced -> [Help 1]
>>>>>>
>>>>>> To see the full stack trace of the errors, re-run Maven with the -e
>>>>>> switch.
>>>>>> Re-run Maven using the -X switch to enable full debug logging.
>>>>>>
>>>>>> For more information about the errors and possible solutions, please
>>>>>> read the following articles:
>>>>>> [Help 1]
>>>>>> http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>>>>
>>>>>> ============================================================
>>>>>>
>>>>>> If I open a terminal window and cd into the project directory and:
>>>>>>
>>>>>> mvn clean package
>>>>>>
>>>>>> It succeeds.
>>>>>>
>>>>>> However, when I then attempt to run the project with:
>>>>>>
>>>>>> java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar
>>>>>> biz.dsuk.mavenimglib2fx.MainApp
>>>>>>
>>>>>> The application starts to execute but throws ?No compatible service:
>>>>>> io.scif.SCIFIOService? exception.
>>>>>> ============================================================
>>>>>>
>>>>>> img1=CellImg [20x30]
>>>>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel:
>>>>>> #pixelBits = 8 numComponents = 1 color space =
>>>>>> java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha =
>>>>>> false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699
>>>>>> #numDataElements 1 dataOff[0] = 0
>>>>>> Loading image...
>>>>>> Exception in Application start method
>>>>>> java.lang.reflect.InvocationTargetException
>>>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>>> at
>>>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>>> at
>>>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>>>> at
>>>>>> com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>>>>> at
>>>>>> com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>>> at
>>>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>>> at
>>>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>>>> at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>>>>> Caused by: java.lang.RuntimeException: Exception in Application start
>>>>>> method
>>>>>> at
>>>>>> com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>>>>> at
>>>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>>>>> at
>>>>>> com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown
>>>>>> Source)
>>>>>> at java.lang.Thread.run(Thread.java:745)
>>>>>> Caused by: java.lang.IllegalArgumentException: No compatible service:
>>>>>> io.scif.SCIFIOService
>>>>>> at
>>>>>> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>>>>> at
>>>>>> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>>>>> at
>>>>>> org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>>>>> at org.scijava.Context.<init>(Context.java:244)
>>>>>> at org.scijava.Context.<init>(Context.java:203)
>>>>>> at org.scijava.Context.<init>(Context.java:142)
>>>>>> at org.scijava.Context.<init>(Context.java:128)
>>>>>> at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>>>>> at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>>>>> at
>>>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>>>>> at
>>>>>> com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown
>>>>>> Source)
>>>>>> at
>>>>>> com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>>>>> at
>>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown
>>>>>> Source)
>>>>>> at
>>>>>> com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>>>>> at
>>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown
>>>>>> Source)
>>>>>> at java.security.AccessController.doPrivileged(Native Method)
>>>>>> at
>>>>>> com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>>>>> at
>>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown
>>>>>> Source)
>>>>>> at
>>>>>> com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>>>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>>>>> ============================================================
>>>>>>
>>>>>> If I remove the calls to the SCIO code and build and run from the
>>>>>> command line, all works well.
>>>>>>
>>>>>> The SCIO source code that I am using is lifted/amended from one of
>>>>>> the tutorials and is as follows:
>>>>>>
>>>>>> ============================================================
>>>>>>             imagePath =
>>>>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>>>             System.out.println("Loading image... '" + imagePath +
>>>>>> "'");
>>>>>>             SCIFIO scifio = new SCIFIO();
>>>>>>             final Reader reader =
>>>>>> scifio.initializer().initializeReader(imagePath);
>>>>>> ============================================================
>>>>>>
>>>>>> This source code works file in the SCIFIO tutorial.
>>>>>>
>>>>>> Any help gratefully appreciated!!!!!
>>>>>>
>>>>>> ? Michael Ellis
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>>>
>>>>>> Hi Michael,
>>>>>>
>>>>>> > How do I establish what Maven projects I need to include?
>>>>>>
>>>>>> One way to check is using the dependency-maven-plugin like so:
>>>>>>
>>>>>>     mvn dependency:analyze
>>>>>>
>>>>>> This will tell you:
>>>>>>
>>>>>> A) Dependencies you declared but do not actually use; and
>>>>>> B) Dependencies you did not declare directly, but actually need.
>>>>>>
>>>>>> Note that this will only work if your project compiles successfully.
>>>>>> In other words, it is easier to start with "too many" dependencies and pare
>>>>>> down, rather than trying to "build up" from zero.
>>>>>>
>>>>>> So in your case, you can start with the ImgLib2 Examples dependencies
>>>>>> block, run dependency:analyze, and adjust the POM according to its
>>>>>> recommendations.
>>>>>>
>>>>>> > When I go to my NetBeans project dependence, select Add dependency,
>>>>>> > then type SCIF to the query text box, I get a huge list of
>>>>>> > possibilities.
>>>>>>
>>>>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId
>>>>>> of io.scif, and an artifactId of scifio). Presumably at the latest version.
>>>>>> You can search for that here:
>>>>>>
>>>>>>
>>>>>> http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>>>>
>>>>>> So your dependency block in this case would be:
>>>>>>
>>>>>>     <dependency>
>>>>>>       <groupId>io.scif</groupId>
>>>>>>       <artifactId>scifio</artifactId>
>>>>>>       <version>0.17.1</version>
>>>>>>     </dependency>
>>>>>>
>>>>>> Note that that block of XML is available for copy-pasting from the
>>>>>> link above.
>>>>>>
>>>>>> > I am completely new to maven
>>>>>>
>>>>>> For more information, see:
>>>>>>     http://imagej.net/Maven
>>>>>>
>>>>>> Regards,
>>>>>> Curtis
>>>>>>
>>>>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz
>>>>>> > wrote:
>>>>>>
>>>>>>> I am investigating the using ImgLib2 for a project.
>>>>>>>
>>>>>>> I am using NetBeans and have managed to create a NetBeans Mavern
>>>>>>> project and have  added a dependency for ImgLib2 Core Library and that
>>>>>>> seems to be working OK.
>>>>>>>
>>>>>>> I now want to add the least possible requirements for the purpose of
>>>>>>> opening some image files.
>>>>>>>
>>>>>>> How do I establish what Maven projects I need to include?
>>>>>>>
>>>>>>> I have cloned  the ImgLib2 Examples project and got that working but
>>>>>>> that seems to include all manner of things that I suspect I do not need.
>>>>>>>
>>>>>>> When I go to my NetBeans project dependence, select Add dependency,
>>>>>>> then type SCIF to the query text box, I get a huge list of possibilities.
>>>>>>>
>>>>>>> I am completely new to maven and so do not know what I am doing with
>>>>>>> it!
>>>>>>>
>>>>>>> ? Michael Ellis
>>>>>>> Digital Scientific UK Ltd.
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> ImageJ-devel mailing list
>>>>>>> ImageJ-devel at imagej.net
>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>
>>>>>>>
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> ImageJ-devel mailing list
>>>>>> ImageJ-devel at imagej.net
>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>>
>>>
>>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150123/9e56332d/attachment-0001.html>

From hadrien.mary at gmail.com  Sat Jan 24 14:25:23 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sat, 24 Jan 2015 21:25:23 +0100
Subject: [ImageJ-devel] Python script: z projection
Message-ID: <CAEpSnnZjsqkT0kcCRC0hAYPJzL28PmiucQDsxiFEerGh7KTKzA@mail.gmail.com>

Hi,

I am trying to write a small script to perform z projection on an
image. It seems that I use the wrong signature for ops.project()
function. I tried many combinations without success...

-------------------------------
# @DatasetService data
# @DisplayService display
# @OpService ops

from net.imagej.ops.statistics import Max
from net.imglib2.type.numeric import RealType

fname = "/home/hadim/test_small.ome.tif"
img = data.open(fname)
display.createDisplay(img.getName(), img)

#op = ops.sum(RealType, img)
img2 = ops.project(img, Max, 1)
display.createDisplay(img2.getName(), img2)

data.save(img2, "/home/hadim/projected.ome.tif")
-----------------------------------

I looked the doc, imagej-ops tests but I can't find the correct
signature for python. Maybe you can help.

Thank you

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


From hadrien.mary at gmail.com  Sat Jan 24 14:35:32 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sat, 24 Jan 2015 21:35:32 +0100
Subject: [ImageJ-devel] Python script: z projection
In-Reply-To: <CAEpSnnZjsqkT0kcCRC0hAYPJzL28PmiucQDsxiFEerGh7KTKzA@mail.gmail.com>
References: <CAEpSnnZjsqkT0kcCRC0hAYPJzL28PmiucQDsxiFEerGh7KTKzA@mail.gmail.com>
Message-ID: <CAEpSnnbCaphbgGaD8gq9L48xxmtukCGypBDRLSBGMah0a-=ZHQ@mail.gmail.com>

Last thing : I would like to run this script in headless mode on
pretty big images (17GB), so I would like to be sure wether `img =
data.open(fname)` use SCIFIO to open them.

If it does I guess virtual stack is used in case the opened image is
big. Am I correct ?

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Sat, Jan 24, 2015 at 9:25 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> Hi,
>
> I am trying to write a small script to perform z projection on an
> image. It seems that I use the wrong signature for ops.project()
> function. I tried many combinations without success...
>
> -------------------------------
> # @DatasetService data
> # @DisplayService display
> # @OpService ops
>
> from net.imagej.ops.statistics import Max
> from net.imglib2.type.numeric import RealType
>
> fname = "/home/hadim/test_small.ome.tif"
> img = data.open(fname)
> display.createDisplay(img.getName(), img)
>
> #op = ops.sum(RealType, img)
> img2 = ops.project(img, Max, 1)
> display.createDisplay(img2.getName(), img2)
>
> data.save(img2, "/home/hadim/projected.ome.tif")
> -----------------------------------
>
> I looked the doc, imagej-ops tests but I can't find the correct
> signature for python. Maybe you can help.
>
> Thank you
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse


From hadrien.mary at gmail.com  Sat Jan 24 15:01:56 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sat, 24 Jan 2015 22:01:56 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnna31YnH6bBxePyxtx7VWypNLYYQ7JwtEczVZy58HgcOfQ@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
	<CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
	<CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>
	<CAEpSnna31YnH6bBxePyxtx7VWypNLYYQ7JwtEczVZy58HgcOfQ@mail.gmail.com>
Message-ID: <CAEpSnnakWEw11=cpYHxYgq7M1jnB6iXcoJOEtSxYxyfPAFKifw@mail.gmail.com>

Quick update:

I tried to use another method to save cropped images using DatasetService:

---------------------------
# Create dataset
ds = data.create(imp)

# Save cropped image
data.save(ds, crop_fname)
-------------------------

And the error is exactly the same as before.

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Tue, Jan 20, 2015 at 10:17 AM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> Another thing I noticed, it's that histogram is different when
> cropping manually inside Fiji (select area and do "Duplicate") or when
> it has been cropped with the python script (SCIFIO crop).
>
> See screenshot attachment.
>
>
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Mon, Jan 19, 2015 at 10:29 AM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>> Hi again,
>>
>> The script works well for small images (OME Tiff or normal Tiff) with
>> the recent Fiji update. However when I run it on large movies (13GB),
>> I have the following error.
>>
>> ----------------------------------------------------------
>> -- Classpath of ClassLoader --
>> /home/hadim/local/Fiji.app/plugins/
>>
>> at org.scijava.Context.inject(Context.java:431)
>> at org.scijava.Context.inject(Context.java:363)
>> at org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:237)
>> at org.scijava.ui.DefaultUIService.discoverUIs(DefaultUIService.java:500)
>> at org.scijava.ui.DefaultUIService.uiList(DefaultUIService.java:479)
>> at org.scijava.ui.DefaultUIService.getAvailableUIs(DefaultUIService.java:231)
>> at org.scijava.ui.DefaultUIService.onEvent(DefaultUIService.java:457)
>> at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
>> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> at java.lang.reflect.Method.invoke(Method.java:606)
>> at org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:280)
>> at org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:254)
>> at org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
>> at org.scijava.event.DefaultEventBus.access$201(DefaultEventBus.java:56)
>> at org.scijava.event.DefaultEventBus$2.run(DefaultEventBus.java:223)
>> at org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
>> at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
>> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> at java.lang.Thread.run(Thread.java:745)
>> Traceback (most recent call last):
>>   File "/home/hadim/local/Fiji.app/plugins/Scripts/Plugins/Crop_Multi_Roi.py",
>> line 50, in <module>
>>     saver.saveImg(crop_fname, imp)
>> at io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
>> at io.scif.img.cell.SCIFIOCellCache.load(SCIFIOCellCache.java:144)
>> at io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:122)
>> at io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:101)
>> at net.imglib2.img.list.ListCursor.get(ListCursor.java:80)
>> at net.imglib2.img.cell.CellCursor.getCell(CellCursor.java:92)
>> at net.imglib2.img.cell.CellCursor.moveToNextCell(CellCursor.java:180)
>> at net.imglib2.img.cell.CellCursor.reset(CellCursor.java:150)
>> at net.imglib2.img.cell.CellCursor.<init>(CellCursor.java:86)
>> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:113)
>> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:47)
>> at net.imglib2.img.AbstractImg.firstElement(AbstractImg.java:81)
>> at net.imagej.ImgPlus.firstElement(ImgPlus.java:261)
>> at io.scif.img.ImgSaver.populateMeta(ImgSaver.java:894)
>> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:514)
>> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:495)
>> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:457)
>> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:174)
>> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:158)
>> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:128)
>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
>> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> at java.lang.reflect.Method.invoke(Method.java:606)
>>
>> java.lang.NullPointerException: java.lang.NullPointerException
>> -------------------------------------------------------------------
>>
>> The associated script is below.
>>
>> ------------------------------------------------------------------------
>> from ij import IJ
>> from ij.plugin.frame import RoiManager
>>
>> from io.scif.config import SCIFIOConfig
>> from io.scif.img import ImageRegion
>> from io.scif.img import ImgOpener
>> from io.scif.img import ImgSaver
>> from net.imagej.axis import Axes
>>
>> import os
>>
>> # Get current image filename
>> imp = IJ.getImage()
>> f = imp.getOriginalFileInfo()
>> fname = os.path.join(f.directory, f.fileName)
>>
>> IJ.log('Image filename is %s' % fname)
>>
>> # Iterate over all ROIs from ROI Manager
>> rois = RoiManager.getInstance().getRoisAsArray()
>> for i, roi in enumerate(rois):
>>
>>     crop_id = i +1
>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>
>>     # Get ROI bounds
>>     bounds = roi.getBounds()
>>     x = bounds.x
>>     y = bounds.y
>>     w = bounds.width
>>     h = bounds.height
>>
>>     # Import only cropped region of the image
>>     axes = [Axes.X, Axes.Y]
>>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
>>     config = SCIFIOConfig()
>>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>
>>     opener = ImgOpener()
>>     imps = opener.openImgs(fname, config)
>>     imp = imps[0]
>>
>>     # Get filename and basename of the current cropped image
>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>     crop_fname = os.path.join(f.directory, crop_basename)
>>     IJ.log("Saving crop to %s" % crop_fname)
>>
>>     # Save cropped image
>>     saver = ImgSaver()
>>     saver.saveImg(crop_fname, imp)
>>
>> IJ.log('Done')
>> ----------------------------------------------------------------------------
>>
>> Does opener.openImgs() wait for the image to open ? If it does not I
>> guess that saver.saveImg() is called on an image that does not exist
>> in memory.
>>
>> Thanks
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Wed, Jan 14, 2015 at 4:35 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>>> I confirm it works !
>>>
>>> Thanks again
>>>
>>> --
>>> Hadrien Mary
>>>
>>> Ph.D student in Biology
>>> Tournier-Gachet Team
>>> CNRS - LBCMCP - UMR 5088
>>>
>>> Universit? de Toulouse - B?t. 4R3B1
>>> 118, route de Narbonne - 31062 Toulouse
>>>
>>>
>>> On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>> Hi Hadrien,
>>>>
>>>>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>>>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>>>
>>>> Ah sorry - my fault again for responding too quickly. ImageJ.git doesn't
>>>> have a dependency on scifio-ome-xml; it's a dependency in Fiji itself[1]. So
>>>> when you installed ImageJ into your Fiji, it updated all the dependencies
>>>> but didn't actually update scifio-ome-xml.
>>>>
>>>> You can either manually copy scifio-ome-xml[2] over, or try installing from
>>>> the latest Fiji master[3] which I just updated to have the latest
>>>> dependencies.
>>>>
>>>> [1]
>>>> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
>>>> [2]
>>>> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>>> [3]
>>>> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
>>>>
>>>> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary <hadrien.mary at gmail.com>
>>>> wrote:
>>>>>
>>>>> Ok it makes sense now !
>>>>>
>>>>> So I did what you told me about cloning imagej repo, building and
>>>>> install it with maven inside my local Fiji.app/. I don't know if it's
>>>>> a bug or a missing dependency but I am now unable to open OME Tiff
>>>>> files (other kind of file works well) wether it is by drag and drop or
>>>>> with my script. The error is the following:
>>>>>
>>>>> -------------------------------------------------
>>>>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>>>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>>>> at
>>>>> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
>>>>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
>>>>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
>>>>> at io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
>>>>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
>>>>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
>>>>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
>>>>> at
>>>>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
>>>>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
>>>>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
>>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
>>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
>>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
>>>>> at
>>>>> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
>>>>> at
>>>>> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
>>>>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
>>>>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
>>>>> at java.lang.Thread.run(Thread.java:745)
>>>>> -----------------------------------------------
>>>>>
>>>>> I guess something in scifio has not been updated to use the new
>>>>> net.imagej.axis or maybe the update is not built/downloaded when I run
>>>>> maven on my imagej clone.
>>>>>
>>>>>
>>>>> --
>>>>> Hadrien Mary
>>>>>
>>>>> Ph.D student in Biology
>>>>> Tournier-Gachet Team
>>>>> CNRS - LBCMCP - UMR 5088
>>>>>
>>>>> Universit? de Toulouse - B?t. 4R3B1
>>>>> 118, route de Narbonne - 31062 Toulouse
>>>>>
>>>>>
>>>>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>> > Hi Hadrien,
>>>>> >
>>>>> >>Sorry if it's off topic but I tried to run my script and I got a python
>>>>> >> error
>>>>> >
>>>>> > Oh no! This is totally my fault. I had to update your script for the new
>>>>> > dependencies I mentioned and forgot to paste the new version in my
>>>>> > response
>>>>> > yesterday:
>>>>> >
>>>>> >>from net.imglib2.meta import Axes
>>>>> >
>>>>> > This import needs to change to:
>>>>> >
>>>>> > from net.imagej.axis import Axes
>>>>> >
>>>>> > Sorry about that!
>>>>> >
>>>>> > Best,
>>>>> > Mark
>>>>> >
>>>>> >
>>>>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>>>> > wrote:
>>>>> >>
>>>>> >> Thank you Mark !
>>>>> >>
>>>>> >> Sorry if it's off topic but I tried to run my script and I got a
>>>>> >> python error probably related to type difference between python and
>>>>> >> java. It's not the first time I saw this kind of message and I'd like
>>>>> >> to know how to resolve it. Note that for python script I mainly use
>>>>> >> javadoc as documentation.
>>>>> >>
>>>>> >> The error is below coming from almost the same script as before in this
>>>>> >> thread.
>>>>> >>
>>>>> >> ********************************
>>>>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>>>>> >> Traceback (most recent call last):
>>>>> >>   File
>>>>> >>
>>>>> >> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>>>>> >> line 17, in <module>
>>>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>>>>> >> net.imagej.axis.AxisType[]
>>>>> >>
>>>>> >> at org.python.core.Py.TypeError(Py.java:235)
>>>>> >> at
>>>>> >>
>>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>>>> >> at
>>>>> >>
>>>>> >> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>>>> >> at
>>>>> >>
>>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>>>> >> at
>>>>> >>
>>>>> >> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>>>>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
>>>>> >> at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>>>>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>>>>> >> at
>>>>> >>
>>>>> >> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>>>>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
>>>>> >> at org.python.core.PyType.__call__(PyType.java:1548)
>>>>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
>>>>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
>>>>> >> at
>>>>> >>
>>>>> >> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>>>>> >> at
>>>>> >>
>>>>> >> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>>>>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>>>> >> at org.python.core.PyCode.call(PyCode.java:18)
>>>>> >> at org.python.core.Py.runCode(Py.java:1275)
>>>>> >> at
>>>>> >>
>>>>> >> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>>>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>>>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>>> >> at
>>>>> >>
>>>>> >> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>>> >> at
>>>>> >>
>>>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>>> >> at
>>>>> >>
>>>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>>> >> at java.lang.Thread.run(Thread.java:745)
>>>>> >> ************************************
>>>>> >>
>>>>> >> --
>>>>> >> Hadrien Mary
>>>>> >>
>>>>> >> Ph.D student in Biology
>>>>> >> Tournier-Gachet Team
>>>>> >> CNRS - LBCMCP - UMR 5088
>>>>> >>
>>>>> >> Universit? de Toulouse - B?t. 4R3B1
>>>>> >> 118, route de Narbonne - 31062 Toulouse
>>>>> >>
>>>>> >>
>>>>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>> >> > Hi Hadrien,
>>>>> >> >
>>>>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite broken.
>>>>> >> >
>>>>> >> >  It's working for me now, as of the latest SCIFIO[1] and
>>>>> >> > SCIFIO-OME-XML[2].
>>>>> >> > Note that these libraries have updated dependencies compared to
>>>>> >> > what's
>>>>> >> > currently on Fiji, so you can't just drop these .jars into your Fiji
>>>>> >> > installation if you want to test locally; you need to update the
>>>>> >> > dependencies as well. The easiest way to do this would be to just
>>>>> >> > clone
>>>>> >> > Imagej.git[3] and install it into your Fiji.app directory by running:
>>>>> >> >
>>>>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>>>>> >> > -Ddelete.other.versions=true
>>>>> >> >
>>>>> >> > We'll push these changes up to Fiji this week, and I will find or
>>>>> >> > write
>>>>> >> > better instructions for local testing.
>>>>> >> >
>>>>> >> > Hope this helps. Let us know if you have any questions/problems.
>>>>> >> > Thanks
>>>>> >> > again for finding this issue!
>>>>> >> >
>>>>> >> > Best,
>>>>> >> > - Mark
>>>>> >> >
>>>>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>>>>> >> > [2]
>>>>> >> >
>>>>> >> >
>>>>> >> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>>>> >> > [3] https://github.com/imagej/imagej
>>>>> >> >
>>>>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
>>>>> >> > <hadrien.mary at gmail.com>
>>>>> >> > wrote:
>>>>> >> >>
>>>>> >> >> Ok. Let me know when you want me to test your changes. I also tested
>>>>> >> >> fix-writing branch and I didn't notice any changes.
>>>>> >> >>
>>>>> >> >> --
>>>>> >> >> Hadrien Mary
>>>>> >> >>
>>>>> >> >> Ph.D student in Biology
>>>>> >> >> Tournier-Gachet Team
>>>>> >> >> CNRS - LBCMCP - UMR 5088
>>>>> >> >>
>>>>> >> >> Universit? de Toulouse - B?t. 4R3B1
>>>>> >> >> 118, route de Narbonne - 31062 Toulouse
>>>>> >> >>
>>>>> >> >>
>>>>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>>> >> >> > Hi Hadrien,
>>>>> >> >> >
>>>>> >> >> > I've identified at least two bugs that could be affecting you
>>>>> >> >> > here.
>>>>> >> >> >
>>>>> >> >> > First of all, there was a bug in the OME-TIFF format writing out
>>>>> >> >> > multi-dimensional images. That's fixed on a branch but not
>>>>> >> >> > uploaded
>>>>> >> >> > to
>>>>> >> >> > Fiji
>>>>> >> >> > yet [1].
>>>>> >> >> >
>>>>> >> >> > Second, it seems like cropping is restricting pixel reads to the
>>>>> >> >> > correct
>>>>> >> >> > region but then doesn't change the image size.
>>>>> >> >> >
>>>>> >> >> > I'm hoping when I fix the second issue writing cropped regions
>>>>> >> >> > will
>>>>> >> >> > be
>>>>> >> >> > fixed.
>>>>> >> >> >
>>>>> >> >> > Thanks for the great feedback!
>>>>> >> >> > - Mark
>>>>> >> >> >
>>>>> >> >> > [1] https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>>>>> >> >> >
>>>>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>>>>> >> >> > <hadrien.mary at gmail.com>
>>>>> >> >> > wrote:
>>>>> >> >> >>
>>>>> >> >> >> I also confirm the same behaviour when replacing original file by
>>>>> >> >> >> OME
>>>>> >> >> >> sample data :
>>>>> >> >> >>
>>>>> >> >> >>
>>>>> >> >> >>
>>>>> >> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>>>>> >> >> >>
>>>>> >> >> >> --
>>>>> >> >> >> Hadrien Mary
>>>>> >> >> >>
>>>>> >> >> >> Ph.D student in Biology
>>>>> >> >> >> Tournier-Gachet Team
>>>>> >> >> >> CNRS - LBCMCP - UMR 5088
>>>>> >> >> >>
>>>>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
>>>>> >> >> >> 118, route de Narbonne - 31062 Toulouse
>>>>> >> >> >>
>>>>> >> >> >>
>>>>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>>>>> >> >> >> <hadrien.mary at gmail.com>
>>>>> >> >> >> wrote:
>>>>> >> >> >> > After some investigations I think there is a bug with ImgSaver.
>>>>> >> >> >> > In
>>>>> >> >> >> > the
>>>>> >> >> >> > following script, X, Y crop is fine but axes informations (T
>>>>> >> >> >> > and
>>>>> >> >> >> > Z)
>>>>> >> >> >> > are lost and all frames appears on the same axes. Now if I
>>>>> >> >> >> > replace
>>>>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>>>>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
>>>>> >> >> >> > cropped
>>>>> >> >> >> > image has the same dimensions than original however axes
>>>>> >> >> >> > informations
>>>>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel values
>>>>> >> >> >> > are
>>>>> >> >> >> > totally incoherent which is not the case in cropped.tif.
>>>>> >> >> >> >
>>>>> >> >> >> > Files can be found here :
>>>>> >> >> >> >
>>>>> >> >> >> >
>>>>> >> >> >> >
>>>>> >> >> >> >
>>>>> >> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>>>>> >> >> >> >
>>>>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>>>>> >> >> >> > original.ome.tif.
>>>>> >> >> >> >
>>>>> >> >> >> > The script:
>>>>> >> >> >> >
>>>>> >> >> >> > ---------------------------------------------------
>>>>> >> >> >> > from io.scif import SCIFIO
>>>>> >> >> >> > from io.scif.config import SCIFIOConfig
>>>>> >> >> >> > from io.scif.img import ImageRegion
>>>>> >> >> >> > from io.scif.img import ImgOpener
>>>>> >> >> >> > from io.scif.img import ImgSaver
>>>>> >> >> >> > from net.imglib2.meta import Axes
>>>>> >> >> >> >
>>>>> >> >> >> > fname = "/home/hadim/original.ome.tif"
>>>>> >> >> >> > target = "/home/hadim/cropped.tif"
>>>>> >> >> >> >
>>>>> >> >> >> > axes = [Axes.X, Axes.Y]
>>>>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>>>>> >> >> >> > config = SCIFIOConfig()
>>>>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>>> >> >> >> >
>>>>> >> >> >> > opener = ImgOpener()
>>>>> >> >> >> > imps = opener.openImgs(fname, config)
>>>>> >> >> >> > imp = imps[0]
>>>>> >> >> >> >
>>>>> >> >> >> > saver = ImgSaver()
>>>>> >> >> >> > saver.saveImg(target, imp)
>>>>> >> >> >> >
>>>>> >> >> >> > print('Done')
>>>>> >> >> >> > ---------------------------------------------------
>>>>> >> >> >> >
>>>>> >> >> >> >
>>>>> >> >> >> > --
>>>>> >> >> >> > Hadrien Mary
>>>>> >> >> >> >
>>>>> >> >> >> >
>>>>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>>>>> >> >> >> > <hadrien.mary at gmail.com>
>>>>> >> >> >> > wrote:
>>>>> >> >> >> >> Thanks for the tip (reminder to me: always look for example in
>>>>> >> >> >> >> tests!).
>>>>> >> >> >> >>
>>>>> >> >> >> >> Unfortunately crop does not work... I will try to do more
>>>>> >> >> >> >> tests
>>>>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
>>>>> >> >> >> >>
>>>>> >> >> >> >> Updated code:
>>>>> >> >> >> >>
>>>>> >> >> >> >> from ij import IJ
>>>>> >> >> >> >> from ij import ImagePlus
>>>>> >> >> >> >>
>>>>> >> >> >> >> from io.scif import SCIFIO
>>>>> >> >> >> >> from io.scif.config import SCIFIOConfig
>>>>> >> >> >> >> from io.scif.img import ImageRegion
>>>>> >> >> >> >> from io.scif.img import ImgOpener
>>>>> >> >> >> >> from io.scif.img import ImgSaver
>>>>> >> >> >> >> from net.imglib2.meta import Axes
>>>>> >> >> >> >>
>>>>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
>>>>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
>>>>> >> >> >> >>
>>>>> >> >> >> >> axes = [Axes.X, Axes.Y]
>>>>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>>>>> >> >> >> >> config = SCIFIOConfig()
>>>>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>>> >> >> >> >>
>>>>> >> >> >> >> opener = ImgOpener()
>>>>> >> >> >> >> imps = opener.openImgs(fname, config)
>>>>> >> >> >> >> imp = imps[0]
>>>>> >> >> >> >>
>>>>> >> >> >> >> saver = ImgSaver()
>>>>> >> >> >> >> saver.saveImg(target, imp)
>>>>> >> >> >> >>
>>>>> >> >> >> >> print('Done')
>>>>> >> >> >> >>
>>>>> >> >> >> >> --
>>>>> >> >> >> >> Hadrien Mary
>>>>> >> >> >> >>
>>>>> >> >> >> >>
>>>>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>>>>> >> >> >> >> <ctrueden at wisc.edu>
>>>>> >> >> >> >> wrote:
>>>>> >> >> >> >>> Hi Hadrien,
>>>>> >> >> >> >>>
>>>>> >> >> >> >>>> I would like to be able to crop a region in X and Y while
>>>>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z, T).
>>>>> >> >> >> >>>
>>>>> >> >> >> >>> Here's some Java:
>>>>> >> >> >> >>>
>>>>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>>>>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>>>>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" + maxY
>>>>> >> >> >> >>> };
>>>>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes, ranges));
>>>>> >> >> >> >>>
>>>>> >> >> >> >>> Adapted from here:
>>>>> >> >> >> >>>
>>>>> >> >> >> >>>
>>>>> >> >> >> >>>
>>>>> >> >> >> >>>
>>>>> >> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>>>>> >> >> >> >>>
>>>>> >> >> >> >>> And untested.
>>>>> >> >> >> >>>
>>>>> >> >> >> >>> HTH,
>>>>> >> >> >> >>> Curtis
>>>>> >> >> >> >>>
>>>>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>>>>> >> >> >> >>> <hadrien.mary at gmail.com>
>>>>> >> >> >> >>> wrote:
>>>>> >> >> >> >>>>
>>>>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
>>>>> >> >> >> >>>> instanciate
>>>>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help me...
>>>>> >> >> >> >>>> I
>>>>> >> >> >> >>>> would
>>>>> >> >> >> >>>> like to be able to crop a region in X and Y while keeping
>>>>> >> >> >> >>>> any
>>>>> >> >> >> >>>> other
>>>>> >> >> >> >>>> dimensions which could exist (C, Z, T).
>>>>> >> >> >> >>>>
>>>>> >> >> >> >>>> --
>>>>> >> >> >> >>>> Hadrien Mary
>>>>> >> >> >> >>>>
>>>>> >> >> >> >>>>
>>>>> >> >> >> >>>>
>>>>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>>>>> >> >> >> >>>> <hadrien.mary at gmail.com>
>>>>> >> >> >> >>>> wrote:
>>>>> >> >> >> >>>> > Thank you Curtis for the answer.
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > I tried to apply what you told me and the code now works
>>>>> >> >> >> >>>> > without
>>>>> >> >> >> >>>> > error. However the saved cropped image is not cropped
>>>>> >> >> >> >>>> > (same
>>>>> >> >> >> >>>> > size
>>>>> >> >> >> >>>> > as
>>>>> >> >> >> >>>> > original) and pixel values are modified).
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > Script:
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
>>>>> >> >> >> >>>> > from io.scif.img import ImageRegion
>>>>> >> >> >> >>>> > from io.scif.img import ImgOpener
>>>>> >> >> >> >>>> > from io.scif.img import ImgSaver
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>>>>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > config = SCIFIOConfig()
>>>>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10, height=10))
>>>>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > opener = ImgOpener()
>>>>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
>>>>> >> >> >> >>>> > imp = imps[0]
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > print(imps)
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > saver = ImgSaver()
>>>>> >> >> >> >>>> > saver.saveImg(target, imp)
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you don't
>>>>> >> >> >> >>>> > have
>>>>> >> >> >> >>>> > time
>>>>> >> >> >> >>>> > to
>>>>> >> >> >> >>>> > write an example.
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > I will be happy to provide some python/scifio examples
>>>>> >> >> >> >>>> > scripts.
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > --
>>>>> >> >> >> >>>> > Hadrien Mary
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > Ph.D student in Biology
>>>>> >> >> >> >>>> > Tournier-Gachet Team
>>>>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>>>>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> >
>>>>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>>>>> >> >> >> >>>> > <ctrueden at wisc.edu>
>>>>> >> >> >> >>>> > wrote:
>>>>> >> >> >> >>>> >> Hi Hadrien,
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>>>>> >> >> >> >>>> >>> it
>>>>> >> >> >> >>>> >>> doesn
>>>>> >> >> >> >>>> >>> not
>>>>> >> >> >> >>>> >>> work.
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >> The error you see is because SCIFIO operates on ImgLib2
>>>>> >> >> >> >>>> >> data
>>>>> >> >> >> >>>> >> structures, not
>>>>> >> >> >> >>>> >> ImagePlus objects.
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>>>>> >> >> >> >>>> >>> function
>>>>> >> >> >> >>>> >>> in
>>>>> >> >> >> >>>> >>> SCIFIO ?
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
>>>>> >> >> >> >>>> >> imgOpenerSetRegion
>>>>> >> >> >> >>>> >> [1]
>>>>> >> >> >> >>>> >> on
>>>>> >> >> >> >>>> >> it,
>>>>> >> >> >> >>>> >> then
>>>>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get back
>>>>> >> >> >> >>>> >> an
>>>>> >> >> >> >>>> >> ImgLib2
>>>>> >> >> >> >>>> >> data
>>>>> >> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an example
>>>>> >> >> >> >>>> >> for
>>>>> >> >> >> >>>> >> you
>>>>> >> >> >> >>>> >> right
>>>>> >> >> >> >>>> >> now. It
>>>>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2] that use
>>>>> >> >> >> >>>> >> the
>>>>> >> >> >> >>>> >> ImgOpener
>>>>> >> >> >> >>>> >> and
>>>>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs akin to
>>>>> >> >> >> >>>> >> the
>>>>> >> >> >> >>>> >> Bio-Formats
>>>>> >> >> >> >>>> >> "BF"
>>>>> >> >> >> >>>> >> functionality... please feel welcome to contribute some!
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >> Regards,
>>>>> >> >> >> >>>> >> Curtis
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >> [1]
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>>>>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>>>>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
>>>>> >> >> >> >>>> >> wrote:
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> Hi,
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> I am writing a python macro which iterate over all rois
>>>>> >> >> >> >>>> >>> in
>>>>> >> >> >> >>>> >>> ROI
>>>>> >> >> >> >>>> >>> Manager
>>>>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
>>>>> >> >> >> >>>> >>> plugin
>>>>> >> >> >> >>>> >>> to
>>>>> >> >> >> >>>> >>> open
>>>>> >> >> >> >>>> >>> a
>>>>> >> >> >> >>>> >>> cropped region of an image.
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on disk but
>>>>> >> >> >> >>>> >>> it
>>>>> >> >> >> >>>> >>> doesn
>>>>> >> >> >> >>>> >>> not
>>>>> >> >> >> >>>> >>> work.
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> Here is my script:
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>>>>> >> >> >> >>>> >>> from ij import IJ
>>>>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> from loci.plugins import BF
>>>>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>>>>> >> >> >> >>>> >>> from loci.common import Region
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> import os
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> # Get current image filename
>>>>> >> >> >> >>>> >>> imp = IJ.getImage()
>>>>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>>>>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>>>>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>>>>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>     crop_id = i +1
>>>>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
>>>>> >> >> >> >>>> >>> len(rois)))
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>     bounds = roi.getBounds()
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>     x = bounds.x
>>>>> >> >> >> >>>> >>>     y = bounds.y
>>>>> >> >> >> >>>> >>>     w = bounds.width
>>>>> >> >> >> >>>> >>>     h = bounds.height
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>     # Import only cropped region of the image
>>>>> >> >> >> >>>> >>>     options = ImporterOptions()
>>>>> >> >> >> >>>> >>>     options.setCrop(True)
>>>>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>>>>> >> >> >> >>>> >>>     options.setId(fname)
>>>>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>     imp = imps[0]
>>>>> >> >> >> >>>> >>>     imp.show()
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>>>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
>>>>> >> >> >> >>>> >>> crop_basename)
>>>>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>     # Save image
>>>>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>>>>> >> >> >> >>>> >>>     saver = ImgSaver()
>>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> IJ.log('Done')
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> It fails with this error:
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> Traceback (most recent call last):
>>>>> >> >> >> >>>> >>>   File
>>>>> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>>>>> >> >> >> >>>> >>> line
>>>>> >> >> >> >>>> >>> 49, in <module>
>>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>>>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>>>>> >> >> >> >>>> >>> io.scif.Writer,
>>>>> >> >> >> >>>> >>> String
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>>>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:422)
>>>>> >> >> >> >>>> >>> at org.python.core.PyObject.__call__(PyObject.java:426)
>>>>> >> >> >> >>>> >>> at org.python.core.PyMethod.__call__(PyMethod.java:139)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>> org.python.core.PyTableCode.call(PyTableCode.java:165)
>>>>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>>>>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>> java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>>> >> >> >> >>>> >>> at
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> Three questions:
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> how can I write cropped image (I need to write them as
>>>>> >> >> >> >>>> >>> OME
>>>>> >> >> >> >>>> >>> Tiff
>>>>> >> >> >> >>>> >>> so I
>>>>> >> >> >> >>>> >>> need BF or SCIFIO).
>>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF setCropRegion
>>>>> >> >> >> >>>> >>> function
>>>>> >> >> >> >>>> >>> in
>>>>> >> >> >> >>>> >>> SCIFIO
>>>>> >> >> >> >>>> >>> ?
>>>>> >> >> >> >>>> >>> I am currently using
>>>>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>>>>> >> >> >> >>>> >>> to
>>>>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a ROIManager
>>>>> >> >> >> >>>> >>> instance
>>>>> >> >> >> >>>> >>> from
>>>>> >> >> >> >>>> >>> RoiSet.zip file ?
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> Any help would be very appreciated.
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> Thanks !
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> ?
>>>>> >> >> >> >>>> >>> Hadrien Mary
>>>>> >> >> >> >>>> >>>
>>>>> >> >> >> >>>> >>> _______________________________________________
>>>>> >> >> >> >>>> >>> ImageJ-devel mailing list
>>>>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
>>>>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>> >>
>>>>> >> >> >> >>>
>>>>> >> >> >> >>>
>>>>> >> >> >>
>>>>> >> >> >> _______________________________________________
>>>>> >> >> >> ImageJ-devel mailing list
>>>>> >> >> >> ImageJ-devel at imagej.net
>>>>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>>>>> >> >> >
>>>>> >> >> >
>>>>> >> >
>>>>> >> >
>>>>> >
>>>>> >
>>>>
>>>>


From hadrien.mary at gmail.com  Sat Jan 24 16:29:05 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sat, 24 Jan 2015 23:29:05 +0100
Subject: [ImageJ-devel] Python script: z projection
In-Reply-To: <CAEpSnnbCaphbgGaD8gq9L48xxmtukCGypBDRLSBGMah0a-=ZHQ@mail.gmail.com>
References: <CAEpSnnZjsqkT0kcCRC0hAYPJzL28PmiucQDsxiFEerGh7KTKzA@mail.gmail.com>
	<CAEpSnnbCaphbgGaD8gq9L48xxmtukCGypBDRLSBGMah0a-=ZHQ@mail.gmail.com>
Message-ID: <CAEpSnnbODnFH3W59FbD4MmThMJ-Cg6tdVMRTTrU8WwC81LhSdw@mail.gmail.com>

I tried another approach without success neither :

-----------------------------------
# @DatasetService data
# @DisplayService display
# @ImageJ ij

from net.imagej.ops.statistics import Max
from net.imagej.ops.statistics import Sum
from net.imglib2.type.numeric import RealType

from jarray import array

fname = "/home/hadim/test_small.ome.tif"
ds = data.open(fname)

# TODO : find dimensions in ds object
dims = array([136, 65], 'l')
out = ij.op().createimg(dims)

# Find ndim for project on Z axis
ndim = 2

op = ij.op().sum(RealType, out)
ds2 = ij.op().project(out, ds, op, ndim)

ij.ui().show(ds2.getName(), ds2)

# TODO: should I delete out ?
-------------------------------------

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Sat, Jan 24, 2015 at 9:35 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> Last thing : I would like to run this script in headless mode on
> pretty big images (17GB), so I would like to be sure wether `img =
> data.open(fname)` use SCIFIO to open them.
>
> If it does I guess virtual stack is used in case the opened image is
> big. Am I correct ?
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Sat, Jan 24, 2015 at 9:25 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>> Hi,
>>
>> I am trying to write a small script to perform z projection on an
>> image. It seems that I use the wrong signature for ops.project()
>> function. I tried many combinations without success...
>>
>> -------------------------------
>> # @DatasetService data
>> # @DisplayService display
>> # @OpService ops
>>
>> from net.imagej.ops.statistics import Max
>> from net.imglib2.type.numeric import RealType
>>
>> fname = "/home/hadim/test_small.ome.tif"
>> img = data.open(fname)
>> display.createDisplay(img.getName(), img)
>>
>> #op = ops.sum(RealType, img)
>> img2 = ops.project(img, Max, 1)
>> display.createDisplay(img2.getName(), img2)
>>
>> data.save(img2, "/home/hadim/projected.ome.tif")
>> -----------------------------------
>>
>> I looked the doc, imagej-ops tests but I can't find the correct
>> signature for python. Maybe you can help.
>>
>> Thank you
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse


From hadrien.mary at gmail.com  Sun Jan 25 09:14:13 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sun, 25 Jan 2015 16:14:13 +0100
Subject: [ImageJ-devel] Using imagej-ops to crop images
Message-ID: <CAEpSnnbMH=8-1tj2e=2-vhjE4ZsWsPRQ0RdCMBepXccOiJct-A@mail.gmail.com>

Hi,

I am having an issue with a script which crop an image with
imagej-ops. The error shows a "TODO" so I am not sure wether it's a
bug or it's something not supported right now.

-------------------------------
# @DatasetService data
# @ImageJ ij

from jarray import array

from net.imglib2 import FinalInterval
from net.imglib2.img.array import ArrayImgs
from net.imagej.axis import Axes
from net.imglib2.util import Intervals

fname = "/home/hadim/test_small.ome.tif"
ds = data.open(fname)

# Initiate dimensions
dims = {}
dim_names = [None] * 5
for ax in [Axes.X, Axes.Y, Axes.Z, Axes.TIME, Axes.CHANNEL]:
    ax_index = ds.dimensionIndex(ax)
    dim_names[ax_index] = str(ax)
    if int(ds.dimension(ax_index)) == 1:
        dims[str(ax)] = (0, 0)
    else:
        dims[str(ax)] = (0, int(ds.dimension(ax_index)) - 1)

# Set cropped regions
dims['X'] = (10, 40)
dims['Y'] = (5, 20)

# Set crop intervals
begin_interval = [dims[name][0] for name in dim_names]
end_interval = [dims[name][1] for name in dim_names]
interval = FinalInterval(begin_interval, end_interval)
print(begin_interval)
print(end_interval)
print(Intervals.contains(ds, interval))

ds2 = ij.op().crop(interval, ds)
ij.ui().show(ds2.getName(), ds2)
----------------------------------------------------

Error shows:

----------------------------------------------------
ds2 = ij.op().crop(interval, ds)
at net.imagej.DefaultDataset.factory(DefaultDataset.java:735)
at net.imagej.ImgPlus.factory(ImgPlus.java:280)
at net.imagej.ops.crop.CropImgPlus.run(CropImgPlus.java:74)
at org.scijava.command.CommandModule.run(CommandModule.java:201)
at net.imagej.ops.DefaultOpService.run(DefaultOpService.java:363)
at net.imagej.ops.DefaultOpService.run(DefaultOpService.java:78)
at net.imagej.ops.DefaultOpService.crop(DefaultOpService.java:215)
at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)

java.lang.UnsupportedOperationException:
java.lang.UnsupportedOperationException: TODO
-------------------------------------------------------

Thank you

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


From hiner at wisc.edu  Sun Jan 25 12:53:06 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Sun, 25 Jan 2015 12:53:06 -0600
Subject: [ImageJ-devel] Using imagej-ops to crop images
In-Reply-To: <CAEpSnnbMH=8-1tj2e=2-vhjE4ZsWsPRQ0RdCMBepXccOiJct-A@mail.gmail.com>
References: <CAEpSnnbMH=8-1tj2e=2-vhjE4ZsWsPRQ0RdCMBepXccOiJct-A@mail.gmail.com>
Message-ID: <CA+B=mGq2aa-ArimYHKHJdVztPjd+MYwPGypAKgfE-3Rd8Apbuw@mail.gmail.com>

Hi Hadrien!

>so I am not sure wether it's a bug or it's something not supported right
now.

It looks like it's a limitation of the DefaultDataset[1] right now. I
updated the message to suggest a workaround, at least[2].

So if you change your next to last line to:

ds2 = ij.op().crop(interval, ds.getImgPlus())

to crop the ImgPlus that's wrapped by the Dataset, your script should work
(or at least not crash).

Thanks, as always, for the report :)

Best,
Mark

[1]
https://github.com/imagej/imagej-common/blob/59bfc3cebf8204a48bc559adf079f227652514ed/src/main/java/net/imagej/DefaultDataset.java#L734-736
[2]
https://github.com/imagej/imagej-common/commit/75330a95c66013390cf4b6b4511e08357a8a28b0

On Sun, Jan 25, 2015 at 9:14 AM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> Hi,
>
> I am having an issue with a script which crop an image with
> imagej-ops. The error shows a "TODO" so I am not sure wether it's a
> bug or it's something not supported right now.
>
> -------------------------------
> # @DatasetService data
> # @ImageJ ij
>
> from jarray import array
>
> from net.imglib2 import FinalInterval
> from net.imglib2.img.array import ArrayImgs
> from net.imagej.axis import Axes
> from net.imglib2.util import Intervals
>
> fname = "/home/hadim/test_small.ome.tif"
> ds = data.open(fname)
>
> # Initiate dimensions
> dims = {}
> dim_names = [None] * 5
> for ax in [Axes.X, Axes.Y, Axes.Z, Axes.TIME, Axes.CHANNEL]:
>     ax_index = ds.dimensionIndex(ax)
>     dim_names[ax_index] = str(ax)
>     if int(ds.dimension(ax_index)) == 1:
>         dims[str(ax)] = (0, 0)
>     else:
>         dims[str(ax)] = (0, int(ds.dimension(ax_index)) - 1)
>
> # Set cropped regions
> dims['X'] = (10, 40)
> dims['Y'] = (5, 20)
>
> # Set crop intervals
> begin_interval = [dims[name][0] for name in dim_names]
> end_interval = [dims[name][1] for name in dim_names]
> interval = FinalInterval(begin_interval, end_interval)
> print(begin_interval)
> print(end_interval)
> print(Intervals.contains(ds, interval))
>
> ds2 = ij.op().crop(interval, ds)
> ij.ui().show(ds2.getName(), ds2)
> ----------------------------------------------------
>
> Error shows:
>
> ----------------------------------------------------
> ds2 = ij.op().crop(interval, ds)
> at net.imagej.DefaultDataset.factory(DefaultDataset.java:735)
> at net.imagej.ImgPlus.factory(ImgPlus.java:280)
> at net.imagej.ops.crop.CropImgPlus.run(CropImgPlus.java:74)
> at org.scijava.command.CommandModule.run(CommandModule.java:201)
> at net.imagej.ops.DefaultOpService.run(DefaultOpService.java:363)
> at net.imagej.ops.DefaultOpService.run(DefaultOpService.java:78)
> at net.imagej.ops.DefaultOpService.crop(DefaultOpService.java:215)
> at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> at java.lang.reflect.Method.invoke(Method.java:606)
>
> java.lang.UnsupportedOperationException:
> java.lang.UnsupportedOperationException: TODO
> -------------------------------------------------------
>
> Thank you
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150125/7df0eaf8/attachment.html>

From hadrien.mary at gmail.com  Sun Jan 25 13:18:36 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sun, 25 Jan 2015 20:18:36 +0100
Subject: [ImageJ-devel] Using imagej-ops to crop images
In-Reply-To: <CA+B=mGq2aa-ArimYHKHJdVztPjd+MYwPGypAKgfE-3Rd8Apbuw@mail.gmail.com>
References: <CAEpSnnbMH=8-1tj2e=2-vhjE4ZsWsPRQ0RdCMBepXccOiJct-A@mail.gmail.com>
	<CA+B=mGq2aa-ArimYHKHJdVztPjd+MYwPGypAKgfE-3Rd8Apbuw@mail.gmail.com>
Message-ID: <CAEpSnnaktmxshmuBt_rA=x-Y2gVJGsE-eCU1T9MuKHmHbCCw+A@mail.gmail.com>

Awesome ! Thanks again Mark :-)

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Sun, Jan 25, 2015 at 7:53 PM, Mark Hiner <hiner at wisc.edu> wrote:
> Hi Hadrien!
>
>>so I am not sure wether it's a bug or it's something not supported right
>> now.
>
> It looks like it's a limitation of the DefaultDataset[1] right now. I
> updated the message to suggest a workaround, at least[2].
>
> So if you change your next to last line to:
>
> ds2 = ij.op().crop(interval, ds.getImgPlus())
>
> to crop the ImgPlus that's wrapped by the Dataset, your script should work
> (or at least not crash).
>
> Thanks, as always, for the report :)
>
> Best,
> Mark
>
> [1]
> https://github.com/imagej/imagej-common/blob/59bfc3cebf8204a48bc559adf079f227652514ed/src/main/java/net/imagej/DefaultDataset.java#L734-736
> [2]
> https://github.com/imagej/imagej-common/commit/75330a95c66013390cf4b6b4511e08357a8a28b0
>
> On Sun, Jan 25, 2015 at 9:14 AM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>>
>> Hi,
>>
>> I am having an issue with a script which crop an image with
>> imagej-ops. The error shows a "TODO" so I am not sure wether it's a
>> bug or it's something not supported right now.
>>
>> -------------------------------
>> # @DatasetService data
>> # @ImageJ ij
>>
>> from jarray import array
>>
>> from net.imglib2 import FinalInterval
>> from net.imglib2.img.array import ArrayImgs
>> from net.imagej.axis import Axes
>> from net.imglib2.util import Intervals
>>
>> fname = "/home/hadim/test_small.ome.tif"
>> ds = data.open(fname)
>>
>> # Initiate dimensions
>> dims = {}
>> dim_names = [None] * 5
>> for ax in [Axes.X, Axes.Y, Axes.Z, Axes.TIME, Axes.CHANNEL]:
>>     ax_index = ds.dimensionIndex(ax)
>>     dim_names[ax_index] = str(ax)
>>     if int(ds.dimension(ax_index)) == 1:
>>         dims[str(ax)] = (0, 0)
>>     else:
>>         dims[str(ax)] = (0, int(ds.dimension(ax_index)) - 1)
>>
>> # Set cropped regions
>> dims['X'] = (10, 40)
>> dims['Y'] = (5, 20)
>>
>> # Set crop intervals
>> begin_interval = [dims[name][0] for name in dim_names]
>> end_interval = [dims[name][1] for name in dim_names]
>> interval = FinalInterval(begin_interval, end_interval)
>> print(begin_interval)
>> print(end_interval)
>> print(Intervals.contains(ds, interval))
>>
>> ds2 = ij.op().crop(interval, ds)
>> ij.ui().show(ds2.getName(), ds2)
>> ----------------------------------------------------
>>
>> Error shows:
>>
>> ----------------------------------------------------
>> ds2 = ij.op().crop(interval, ds)
>> at net.imagej.DefaultDataset.factory(DefaultDataset.java:735)
>> at net.imagej.ImgPlus.factory(ImgPlus.java:280)
>> at net.imagej.ops.crop.CropImgPlus.run(CropImgPlus.java:74)
>> at org.scijava.command.CommandModule.run(CommandModule.java:201)
>> at net.imagej.ops.DefaultOpService.run(DefaultOpService.java:363)
>> at net.imagej.ops.DefaultOpService.run(DefaultOpService.java:78)
>> at net.imagej.ops.DefaultOpService.crop(DefaultOpService.java:215)
>> at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
>> at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> at java.lang.reflect.Method.invoke(Method.java:606)
>>
>> java.lang.UnsupportedOperationException:
>> java.lang.UnsupportedOperationException: TODO
>> -------------------------------------------------------
>>
>> Thank you
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>
>


From hiner at wisc.edu  Sun Jan 25 14:42:02 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Sun, 25 Jan 2015 14:42:02 -0600
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnakWEw11=cpYHxYgq7M1jnB6iXcoJOEtSxYxyfPAFKifw@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
	<CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
	<CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>
	<CAEpSnna31YnH6bBxePyxtx7VWypNLYYQ7JwtEczVZy58HgcOfQ@mail.gmail.com>
	<CAEpSnnakWEw11=cpYHxYgq7M1jnB6iXcoJOEtSxYxyfPAFKifw@mail.gmail.com>
Message-ID: <CA+B=mGo7ctpasVCQhPNdB3vpOzXauBD92OqSOqdSFByKYhH6OQ@mail.gmail.com>

Hi Hadrien,

>I tried to use another method to save cropped images using DatasetService:

I couldn't reproduce this failure.. it works for me using the
DatasetService. Do you have any local changes? Did you update your Fiji to
the latest version? If you're still having problems, you could also copy
and paste the "Useful information about your system" contents generated by
Help > Report a Bug.

>    saver.saveImg(crop_fname, imp)
> at io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(
AbstractArrayLoader.java:156)
> java.lang.NullPointerException: java.lang.NullPointerException

Yes! This was definitely a bug - thank you for finding it. I think I have a
fix here: https://github.com/scifio/scifio/commits/fix-cell
Would you mind giving it a try locally in your workflow?

Thank you!
- Mark

On Sat, Jan 24, 2015 at 3:01 PM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> Quick update:
>
> I tried to use another method to save cropped images using DatasetService:
>
> ---------------------------
> # Create dataset
> ds = data.create(imp)
>
> # Save cropped image
> data.save(ds, crop_fname)
> -------------------------
>
> And the error is exactly the same as before.
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Tue, Jan 20, 2015 at 10:17 AM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> > Another thing I noticed, it's that histogram is different when
> > cropping manually inside Fiji (select area and do "Duplicate") or when
> > it has been cropped with the python script (SCIFIO crop).
> >
> > See screenshot attachment.
> >
> >
> >
> > --
> > Hadrien Mary
> >
> > Ph.D student in Biology
> > Tournier-Gachet Team
> > CNRS - LBCMCP - UMR 5088
> >
> > Universit? de Toulouse - B?t. 4R3B1
> > 118, route de Narbonne - 31062 Toulouse
> >
> >
> > On Mon, Jan 19, 2015 at 10:29 AM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> >> Hi again,
> >>
> >> The script works well for small images (OME Tiff or normal Tiff) with
> >> the recent Fiji update. However when I run it on large movies (13GB),
> >> I have the following error.
> >>
> >> ----------------------------------------------------------
> >> -- Classpath of ClassLoader --
> >> /home/hadim/local/Fiji.app/plugins/
> >>
> >> at org.scijava.Context.inject(Context.java:431)
> >> at org.scijava.Context.inject(Context.java:363)
> >> at
> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:237)
> >> at
> org.scijava.ui.DefaultUIService.discoverUIs(DefaultUIService.java:500)
> >> at org.scijava.ui.DefaultUIService.uiList(DefaultUIService.java:479)
> >> at
> org.scijava.ui.DefaultUIService.getAvailableUIs(DefaultUIService.java:231)
> >> at org.scijava.ui.DefaultUIService.onEvent(DefaultUIService.java:457)
> >> at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
> >> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> >> at java.lang.reflect.Method.invoke(Method.java:606)
> >> at
> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:280)
> >> at
> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:254)
> >> at
> org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
> >> at org.scijava.event.DefaultEventBus.access$201(DefaultEventBus.java:56)
> >> at org.scijava.event.DefaultEventBus$2.run(DefaultEventBus.java:223)
> >> at
> org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
> >> at
> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >> at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >> at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >> at java.lang.Thread.run(Thread.java:745)
> >> Traceback (most recent call last):
> >>   File
> "/home/hadim/local/Fiji.app/plugins/Scripts/Plugins/Crop_Multi_Roi.py",
> >> line 50, in <module>
> >>     saver.saveImg(crop_fname, imp)
> >> at
> io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
> >> at io.scif.img.cell.SCIFIOCellCache.load(SCIFIOCellCache.java:144)
> >> at
> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:122)
> >> at
> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:101)
> >> at net.imglib2.img.list.ListCursor.get(ListCursor.java:80)
> >> at net.imglib2.img.cell.CellCursor.getCell(CellCursor.java:92)
> >> at net.imglib2.img.cell.CellCursor.moveToNextCell(CellCursor.java:180)
> >> at net.imglib2.img.cell.CellCursor.reset(CellCursor.java:150)
> >> at net.imglib2.img.cell.CellCursor.<init>(CellCursor.java:86)
> >> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:113)
> >> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:47)
> >> at net.imglib2.img.AbstractImg.firstElement(AbstractImg.java:81)
> >> at net.imagej.ImgPlus.firstElement(ImgPlus.java:261)
> >> at io.scif.img.ImgSaver.populateMeta(ImgSaver.java:894)
> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:514)
> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:495)
> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:457)
> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:174)
> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:158)
> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:128)
> >> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> >> at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
> >> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> >> at java.lang.reflect.Method.invoke(Method.java:606)
> >>
> >> java.lang.NullPointerException: java.lang.NullPointerException
> >> -------------------------------------------------------------------
> >>
> >> The associated script is below.
> >>
> >> ------------------------------------------------------------------------
> >> from ij import IJ
> >> from ij.plugin.frame import RoiManager
> >>
> >> from io.scif.config import SCIFIOConfig
> >> from io.scif.img import ImageRegion
> >> from io.scif.img import ImgOpener
> >> from io.scif.img import ImgSaver
> >> from net.imagej.axis import Axes
> >>
> >> import os
> >>
> >> # Get current image filename
> >> imp = IJ.getImage()
> >> f = imp.getOriginalFileInfo()
> >> fname = os.path.join(f.directory, f.fileName)
> >>
> >> IJ.log('Image filename is %s' % fname)
> >>
> >> # Iterate over all ROIs from ROI Manager
> >> rois = RoiManager.getInstance().getRoisAsArray()
> >> for i, roi in enumerate(rois):
> >>
> >>     crop_id = i +1
> >>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
> >>
> >>     # Get ROI bounds
> >>     bounds = roi.getBounds()
> >>     x = bounds.x
> >>     y = bounds.y
> >>     w = bounds.width
> >>     h = bounds.height
> >>
> >>     # Import only cropped region of the image
> >>     axes = [Axes.X, Axes.Y]
> >>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
> >>     config = SCIFIOConfig()
> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >>
> >>     opener = ImgOpener()
> >>     imps = opener.openImgs(fname, config)
> >>     imp = imps[0]
> >>
> >>     # Get filename and basename of the current cropped image
> >>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
> >>     crop_fname = os.path.join(f.directory, crop_basename)
> >>     IJ.log("Saving crop to %s" % crop_fname)
> >>
> >>     # Save cropped image
> >>     saver = ImgSaver()
> >>     saver.saveImg(crop_fname, imp)
> >>
> >> IJ.log('Done')
> >>
> ----------------------------------------------------------------------------
> >>
> >> Does opener.openImgs() wait for the image to open ? If it does not I
> >> guess that saver.saveImg() is called on an image that does not exist
> >> in memory.
> >>
> >> Thanks
> >>
> >> --
> >> Hadrien Mary
> >>
> >> Ph.D student in Biology
> >> Tournier-Gachet Team
> >> CNRS - LBCMCP - UMR 5088
> >>
> >> Universit? de Toulouse - B?t. 4R3B1
> >> 118, route de Narbonne - 31062 Toulouse
> >>
> >>
> >> On Wed, Jan 14, 2015 at 4:35 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> >>> I confirm it works !
> >>>
> >>> Thanks again
> >>>
> >>> --
> >>> Hadrien Mary
> >>>
> >>> Ph.D student in Biology
> >>> Tournier-Gachet Team
> >>> CNRS - LBCMCP - UMR 5088
> >>>
> >>> Universit? de Toulouse - B?t. 4R3B1
> >>> 118, route de Narbonne - 31062 Toulouse
> >>>
> >>>
> >>> On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
> >>>> Hi Hadrien,
> >>>>
> >>>>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
> >>>>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
> >>>>
> >>>> Ah sorry - my fault again for responding too quickly. ImageJ.git
> doesn't
> >>>> have a dependency on scifio-ome-xml; it's a dependency in Fiji
> itself[1]. So
> >>>> when you installed ImageJ into your Fiji, it updated all the
> dependencies
> >>>> but didn't actually update scifio-ome-xml.
> >>>>
> >>>> You can either manually copy scifio-ome-xml[2] over, or try
> installing from
> >>>> the latest Fiji master[3] which I just updated to have the latest
> >>>> dependencies.
> >>>>
> >>>> [1]
> >>>>
> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
> >>>> [2]
> >>>>
> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
> >>>> [3]
> >>>>
> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
> >>>>
> >>>> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary <hadrien.mary at gmail.com
> >
> >>>> wrote:
> >>>>>
> >>>>> Ok it makes sense now !
> >>>>>
> >>>>> So I did what you told me about cloning imagej repo, building and
> >>>>> install it with maven inside my local Fiji.app/. I don't know if it's
> >>>>> a bug or a missing dependency but I am now unable to open OME Tiff
> >>>>> files (other kind of file works well) wether it is by drag and drop
> or
> >>>>> with my script. The error is the following:
> >>>>>
> >>>>> -------------------------------------------------
> >>>>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
> >>>>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
> >>>>> at
> >>>>>
> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
> >>>>> at
> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
> >>>>> at
> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
> >>>>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
> >>>>> at
> >>>>>
> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
> >>>>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
> >>>>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
> >>>>> at
> >>>>>
> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
> >>>>> at
> >>>>>
> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
> >>>>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
> >>>>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
> >>>>> at java.lang.Thread.run(Thread.java:745)
> >>>>> -----------------------------------------------
> >>>>>
> >>>>> I guess something in scifio has not been updated to use the new
> >>>>> net.imagej.axis or maybe the update is not built/downloaded when I
> run
> >>>>> maven on my imagej clone.
> >>>>>
> >>>>>
> >>>>> --
> >>>>> Hadrien Mary
> >>>>>
> >>>>> Ph.D student in Biology
> >>>>> Tournier-Gachet Team
> >>>>> CNRS - LBCMCP - UMR 5088
> >>>>>
> >>>>> Universit? de Toulouse - B?t. 4R3B1
> >>>>> 118, route de Narbonne - 31062 Toulouse
> >>>>>
> >>>>>
> >>>>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
> >>>>> > Hi Hadrien,
> >>>>> >
> >>>>> >>Sorry if it's off topic but I tried to run my script and I got a
> python
> >>>>> >> error
> >>>>> >
> >>>>> > Oh no! This is totally my fault. I had to update your script for
> the new
> >>>>> > dependencies I mentioned and forgot to paste the new version in my
> >>>>> > response
> >>>>> > yesterday:
> >>>>> >
> >>>>> >>from net.imglib2.meta import Axes
> >>>>> >
> >>>>> > This import needs to change to:
> >>>>> >
> >>>>> > from net.imagej.axis import Axes
> >>>>> >
> >>>>> > Sorry about that!
> >>>>> >
> >>>>> > Best,
> >>>>> > Mark
> >>>>> >
> >>>>> >
> >>>>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary <
> hadrien.mary at gmail.com>
> >>>>> > wrote:
> >>>>> >>
> >>>>> >> Thank you Mark !
> >>>>> >>
> >>>>> >> Sorry if it's off topic but I tried to run my script and I got a
> >>>>> >> python error probably related to type difference between python
> and
> >>>>> >> java. It's not the first time I saw this kind of message and I'd
> like
> >>>>> >> to know how to resolve it. Note that for python script I mainly
> use
> >>>>> >> javadoc as documentation.
> >>>>> >>
> >>>>> >> The error is below coming from almost the same script as before
> in this
> >>>>> >> thread.
> >>>>> >>
> >>>>> >> ********************************
> >>>>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
> >>>>> >> Traceback (most recent call last):
> >>>>> >>   File
> >>>>> >>
> >>>>> >>
> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
> >>>>> >> line 17, in <module>
> >>>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >>>>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
> >>>>> >> net.imagej.axis.AxisType[]
> >>>>> >>
> >>>>> >> at org.python.core.Py.TypeError(Py.java:235)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
> >>>>> >> at
> org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
> >>>>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
> >>>>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
> >>>>> >> at org.python.core.PyType.__call__(PyType.java:1548)
> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
> >>>>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
> >>>>> >> at org.python.core.PyCode.call(PyCode.java:18)
> >>>>> >> at org.python.core.Py.runCode(Py.java:1275)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >>>>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >>>>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >>>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >>>>> >> at
> >>>>> >>
> >>>>> >>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >>>>> >> at java.lang.Thread.run(Thread.java:745)
> >>>>> >> ************************************
> >>>>> >>
> >>>>> >> --
> >>>>> >> Hadrien Mary
> >>>>> >>
> >>>>> >> Ph.D student in Biology
> >>>>> >> Tournier-Gachet Team
> >>>>> >> CNRS - LBCMCP - UMR 5088
> >>>>> >>
> >>>>> >> Universit? de Toulouse - B?t. 4R3B1
> >>>>> >> 118, route de Narbonne - 31062 Toulouse
> >>>>> >>
> >>>>> >>
> >>>>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu>
> wrote:
> >>>>> >> > Hi Hadrien,
> >>>>> >> >
> >>>>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite
> broken.
> >>>>> >> >
> >>>>> >> >  It's working for me now, as of the latest SCIFIO[1] and
> >>>>> >> > SCIFIO-OME-XML[2].
> >>>>> >> > Note that these libraries have updated dependencies compared to
> >>>>> >> > what's
> >>>>> >> > currently on Fiji, so you can't just drop these .jars into your
> Fiji
> >>>>> >> > installation if you want to test locally; you need to update the
> >>>>> >> > dependencies as well. The easiest way to do this would be to
> just
> >>>>> >> > clone
> >>>>> >> > Imagej.git[3] and install it into your Fiji.app directory by
> running:
> >>>>> >> >
> >>>>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
> >>>>> >> > -Ddelete.other.versions=true
> >>>>> >> >
> >>>>> >> > We'll push these changes up to Fiji this week, and I will find
> or
> >>>>> >> > write
> >>>>> >> > better instructions for local testing.
> >>>>> >> >
> >>>>> >> > Hope this helps. Let us know if you have any questions/problems.
> >>>>> >> > Thanks
> >>>>> >> > again for finding this issue!
> >>>>> >> >
> >>>>> >> > Best,
> >>>>> >> > - Mark
> >>>>> >> >
> >>>>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
> >>>>> >> > [2]
> >>>>> >> >
> >>>>> >> >
> >>>>> >> >
> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
> >>>>> >> > [3] https://github.com/imagej/imagej
> >>>>> >> >
> >>>>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
> >>>>> >> > <hadrien.mary at gmail.com>
> >>>>> >> > wrote:
> >>>>> >> >>
> >>>>> >> >> Ok. Let me know when you want me to test your changes. I also
> tested
> >>>>> >> >> fix-writing branch and I didn't notice any changes.
> >>>>> >> >>
> >>>>> >> >> --
> >>>>> >> >> Hadrien Mary
> >>>>> >> >>
> >>>>> >> >> Ph.D student in Biology
> >>>>> >> >> Tournier-Gachet Team
> >>>>> >> >> CNRS - LBCMCP - UMR 5088
> >>>>> >> >>
> >>>>> >> >> Universit? de Toulouse - B?t. 4R3B1
> >>>>> >> >> 118, route de Narbonne - 31062 Toulouse
> >>>>> >> >>
> >>>>> >> >>
> >>>>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu>
> wrote:
> >>>>> >> >> > Hi Hadrien,
> >>>>> >> >> >
> >>>>> >> >> > I've identified at least two bugs that could be affecting you
> >>>>> >> >> > here.
> >>>>> >> >> >
> >>>>> >> >> > First of all, there was a bug in the OME-TIFF format writing
> out
> >>>>> >> >> > multi-dimensional images. That's fixed on a branch but not
> >>>>> >> >> > uploaded
> >>>>> >> >> > to
> >>>>> >> >> > Fiji
> >>>>> >> >> > yet [1].
> >>>>> >> >> >
> >>>>> >> >> > Second, it seems like cropping is restricting pixel reads to
> the
> >>>>> >> >> > correct
> >>>>> >> >> > region but then doesn't change the image size.
> >>>>> >> >> >
> >>>>> >> >> > I'm hoping when I fix the second issue writing cropped
> regions
> >>>>> >> >> > will
> >>>>> >> >> > be
> >>>>> >> >> > fixed.
> >>>>> >> >> >
> >>>>> >> >> > Thanks for the great feedback!
> >>>>> >> >> > - Mark
> >>>>> >> >> >
> >>>>> >> >> > [1]
> https://github.com/scifio/scifio-ome-xml/tree/fix-writing
> >>>>> >> >> >
> >>>>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
> >>>>> >> >> > <hadrien.mary at gmail.com>
> >>>>> >> >> > wrote:
> >>>>> >> >> >>
> >>>>> >> >> >> I also confirm the same behaviour when replacing original
> file by
> >>>>> >> >> >> OME
> >>>>> >> >> >> sample data :
> >>>>> >> >> >>
> >>>>> >> >> >>
> >>>>> >> >> >>
> >>>>> >> >> >>
> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip
> .
> >>>>> >> >> >>
> >>>>> >> >> >> --
> >>>>> >> >> >> Hadrien Mary
> >>>>> >> >> >>
> >>>>> >> >> >> Ph.D student in Biology
> >>>>> >> >> >> Tournier-Gachet Team
> >>>>> >> >> >> CNRS - LBCMCP - UMR 5088
> >>>>> >> >> >>
> >>>>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
> >>>>> >> >> >> 118, route de Narbonne - 31062 Toulouse
> >>>>> >> >> >>
> >>>>> >> >> >>
> >>>>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
> >>>>> >> >> >> <hadrien.mary at gmail.com>
> >>>>> >> >> >> wrote:
> >>>>> >> >> >> > After some investigations I think there is a bug with
> ImgSaver.
> >>>>> >> >> >> > In
> >>>>> >> >> >> > the
> >>>>> >> >> >> > following script, X, Y crop is fine but axes informations
> (T
> >>>>> >> >> >> > and
> >>>>> >> >> >> > Z)
> >>>>> >> >> >> > are lost and all frames appears on the same axes. Now if I
> >>>>> >> >> >> > replace
> >>>>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
> >>>>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
> >>>>> >> >> >> > cropped
> >>>>> >> >> >> > image has the same dimensions than original however axes
> >>>>> >> >> >> > informations
> >>>>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel
> values
> >>>>> >> >> >> > are
> >>>>> >> >> >> > totally incoherent which is not the case in cropped.tif.
> >>>>> >> >> >> >
> >>>>> >> >> >> > Files can be found here :
> >>>>> >> >> >> >
> >>>>> >> >> >> >
> >>>>> >> >> >> >
> >>>>> >> >> >> >
> >>>>> >> >> >> >
> https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
> >>>>> >> >> >> >
> >>>>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
> >>>>> >> >> >> > original.ome.tif.
> >>>>> >> >> >> >
> >>>>> >> >> >> > The script:
> >>>>> >> >> >> >
> >>>>> >> >> >> > ---------------------------------------------------
> >>>>> >> >> >> > from io.scif import SCIFIO
> >>>>> >> >> >> > from io.scif.config import SCIFIOConfig
> >>>>> >> >> >> > from io.scif.img import ImageRegion
> >>>>> >> >> >> > from io.scif.img import ImgOpener
> >>>>> >> >> >> > from io.scif.img import ImgSaver
> >>>>> >> >> >> > from net.imglib2.meta import Axes
> >>>>> >> >> >> >
> >>>>> >> >> >> > fname = "/home/hadim/original.ome.tif"
> >>>>> >> >> >> > target = "/home/hadim/cropped.tif"
> >>>>> >> >> >> >
> >>>>> >> >> >> > axes = [Axes.X, Axes.Y]
> >>>>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
> >>>>> >> >> >> > config = SCIFIOConfig()
> >>>>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >>>>> >> >> >> >
> >>>>> >> >> >> > opener = ImgOpener()
> >>>>> >> >> >> > imps = opener.openImgs(fname, config)
> >>>>> >> >> >> > imp = imps[0]
> >>>>> >> >> >> >
> >>>>> >> >> >> > saver = ImgSaver()
> >>>>> >> >> >> > saver.saveImg(target, imp)
> >>>>> >> >> >> >
> >>>>> >> >> >> > print('Done')
> >>>>> >> >> >> > ---------------------------------------------------
> >>>>> >> >> >> >
> >>>>> >> >> >> >
> >>>>> >> >> >> > --
> >>>>> >> >> >> > Hadrien Mary
> >>>>> >> >> >> >
> >>>>> >> >> >> >
> >>>>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
> >>>>> >> >> >> > <hadrien.mary at gmail.com>
> >>>>> >> >> >> > wrote:
> >>>>> >> >> >> >> Thanks for the tip (reminder to me: always look for
> example in
> >>>>> >> >> >> >> tests!).
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> Unfortunately crop does not work... I will try to do more
> >>>>> >> >> >> >> tests
> >>>>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> Updated code:
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> from ij import IJ
> >>>>> >> >> >> >> from ij import ImagePlus
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> from io.scif import SCIFIO
> >>>>> >> >> >> >> from io.scif.config import SCIFIOConfig
> >>>>> >> >> >> >> from io.scif.img import ImageRegion
> >>>>> >> >> >> >> from io.scif.img import ImgOpener
> >>>>> >> >> >> >> from io.scif.img import ImgSaver
> >>>>> >> >> >> >> from net.imglib2.meta import Axes
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
> >>>>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> axes = [Axes.X, Axes.Y]
> >>>>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
> >>>>> >> >> >> >> config = SCIFIOConfig()
> >>>>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> opener = ImgOpener()
> >>>>> >> >> >> >> imps = opener.openImgs(fname, config)
> >>>>> >> >> >> >> imp = imps[0]
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> saver = ImgSaver()
> >>>>> >> >> >> >> saver.saveImg(target, imp)
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> print('Done')
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> --
> >>>>> >> >> >> >> Hadrien Mary
> >>>>> >> >> >> >>
> >>>>> >> >> >> >>
> >>>>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
> >>>>> >> >> >> >> <ctrueden at wisc.edu>
> >>>>> >> >> >> >> wrote:
> >>>>> >> >> >> >>> Hi Hadrien,
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>>> I would like to be able to crop a region in X and Y
> while
> >>>>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z,
> T).
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>> Here's some Java:
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
> >>>>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
> >>>>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" +
> maxY
> >>>>> >> >> >> >>> };
> >>>>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes,
> ranges));
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>> Adapted from here:
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>>
> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>> And untested.
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>> HTH,
> >>>>> >> >> >> >>> Curtis
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
> >>>>> >> >> >> >>> <hadrien.mary at gmail.com>
> >>>>> >> >> >> >>> wrote:
> >>>>> >> >> >> >>>>
> >>>>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
> >>>>> >> >> >> >>>> instanciate
> >>>>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help
> me...
> >>>>> >> >> >> >>>> I
> >>>>> >> >> >> >>>> would
> >>>>> >> >> >> >>>> like to be able to crop a region in X and Y while
> keeping
> >>>>> >> >> >> >>>> any
> >>>>> >> >> >> >>>> other
> >>>>> >> >> >> >>>> dimensions which could exist (C, Z, T).
> >>>>> >> >> >> >>>>
> >>>>> >> >> >> >>>> --
> >>>>> >> >> >> >>>> Hadrien Mary
> >>>>> >> >> >> >>>>
> >>>>> >> >> >> >>>>
> >>>>> >> >> >> >>>>
> >>>>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
> >>>>> >> >> >> >>>> <hadrien.mary at gmail.com>
> >>>>> >> >> >> >>>> wrote:
> >>>>> >> >> >> >>>> > Thank you Curtis for the answer.
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > I tried to apply what you told me and the code now
> works
> >>>>> >> >> >> >>>> > without
> >>>>> >> >> >> >>>> > error. However the saved cropped image is not cropped
> >>>>> >> >> >> >>>> > (same
> >>>>> >> >> >> >>>> > size
> >>>>> >> >> >> >>>> > as
> >>>>> >> >> >> >>>> > original) and pixel values are modified).
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > Script:
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
> >>>>> >> >> >> >>>> > from io.scif.img import ImageRegion
> >>>>> >> >> >> >>>> > from io.scif.img import ImgOpener
> >>>>> >> >> >> >>>> > from io.scif.img import ImgSaver
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
> >>>>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > config = SCIFIOConfig()
> >>>>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10,
> height=10))
> >>>>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > opener = ImgOpener()
> >>>>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
> >>>>> >> >> >> >>>> > imp = imps[0]
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > print(imps)
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > saver = ImgSaver()
> >>>>> >> >> >> >>>> > saver.saveImg(target, imp)
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you
> don't
> >>>>> >> >> >> >>>> > have
> >>>>> >> >> >> >>>> > time
> >>>>> >> >> >> >>>> > to
> >>>>> >> >> >> >>>> > write an example.
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > I will be happy to provide some python/scifio
> examples
> >>>>> >> >> >> >>>> > scripts.
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > --
> >>>>> >> >> >> >>>> > Hadrien Mary
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > Ph.D student in Biology
> >>>>> >> >> >> >>>> > Tournier-Gachet Team
> >>>>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
> >>>>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> >
> >>>>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
> >>>>> >> >> >> >>>> > <ctrueden at wisc.edu>
> >>>>> >> >> >> >>>> > wrote:
> >>>>> >> >> >> >>>> >> Hi Hadrien,
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
> disk but
> >>>>> >> >> >> >>>> >>> it
> >>>>> >> >> >> >>>> >>> doesn
> >>>>> >> >> >> >>>> >>> not
> >>>>> >> >> >> >>>> >>> work.
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >> The error you see is because SCIFIO operates on
> ImgLib2
> >>>>> >> >> >> >>>> >> data
> >>>>> >> >> >> >>>> >> structures, not
> >>>>> >> >> >> >>>> >> ImagePlus objects.
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
> setCropRegion
> >>>>> >> >> >> >>>> >>> function
> >>>>> >> >> >> >>>> >>> in
> >>>>> >> >> >> >>>> >>> SCIFIO ?
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
> >>>>> >> >> >> >>>> >> imgOpenerSetRegion
> >>>>> >> >> >> >>>> >> [1]
> >>>>> >> >> >> >>>> >> on
> >>>>> >> >> >> >>>> >> it,
> >>>>> >> >> >> >>>> >> then
> >>>>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get
> back
> >>>>> >> >> >> >>>> >> an
> >>>>> >> >> >> >>>> >> ImgLib2
> >>>>> >> >> >> >>>> >> data
> >>>>> >> >> >> >>>> >> object which can then be fed to the SCIFIO ImgSaver.
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an
> example
> >>>>> >> >> >> >>>> >> for
> >>>>> >> >> >> >>>> >> you
> >>>>> >> >> >> >>>> >> right
> >>>>> >> >> >> >>>> >> now. It
> >>>>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2]
> that use
> >>>>> >> >> >> >>>> >> the
> >>>>> >> >> >> >>>> >> ImgOpener
> >>>>> >> >> >> >>>> >> and
> >>>>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs
> akin to
> >>>>> >> >> >> >>>> >> the
> >>>>> >> >> >> >>>> >> Bio-Formats
> >>>>> >> >> >> >>>> >> "BF"
> >>>>> >> >> >> >>>> >> functionality... please feel welcome to contribute
> some!
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >> Regards,
> >>>>> >> >> >> >>>> >> Curtis
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >> [1]
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>
> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
> >>>>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
> >>>>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
> >>>>> >> >> >> >>>> >> wrote:
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> Hi,
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> I am writing a python macro which iterate over all
> rois
> >>>>> >> >> >> >>>> >>> in
> >>>>> >> >> >> >>>> >>> ROI
> >>>>> >> >> >> >>>> >>> Manager
> >>>>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
> >>>>> >> >> >> >>>> >>> plugin
> >>>>> >> >> >> >>>> >>> to
> >>>>> >> >> >> >>>> >>> open
> >>>>> >> >> >> >>>> >>> a
> >>>>> >> >> >> >>>> >>> cropped region of an image.
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
> disk but
> >>>>> >> >> >> >>>> >>> it
> >>>>> >> >> >> >>>> >>> doesn
> >>>>> >> >> >> >>>> >>> not
> >>>>> >> >> >> >>>> >>> work.
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> Here is my script:
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
> >>>>> >> >> >> >>>> >>> from ij import IJ
> >>>>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> from loci.plugins import BF
> >>>>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
> >>>>> >> >> >> >>>> >>> from loci.common import Region
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> import os
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> # Get current image filename
> >>>>> >> >> >> >>>> >>> imp = IJ.getImage()
> >>>>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
> >>>>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
> >>>>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
> >>>>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>     crop_id = i +1
> >>>>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
> >>>>> >> >> >> >>>> >>> len(rois)))
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>     bounds = roi.getBounds()
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>     x = bounds.x
> >>>>> >> >> >> >>>> >>>     y = bounds.y
> >>>>> >> >> >> >>>> >>>     w = bounds.width
> >>>>> >> >> >> >>>> >>>     h = bounds.height
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>     # Import only cropped region of the image
> >>>>> >> >> >> >>>> >>>     options = ImporterOptions()
> >>>>> >> >> >> >>>> >>>     options.setCrop(True)
> >>>>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
> >>>>> >> >> >> >>>> >>>     options.setId(fname)
> >>>>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>     imp = imps[0]
> >>>>> >> >> >> >>>> >>>     imp.show()
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id,
> f.fileName)
> >>>>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
> >>>>> >> >> >> >>>> >>> crop_basename)
> >>>>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>     # Save image
> >>>>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
> >>>>> >> >> >> >>>> >>>     saver = ImgSaver()
> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> IJ.log('Done')
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> It fails with this error:
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> Traceback (most recent call last):
> >>>>> >> >> >> >>>> >>>   File
> >>>>> >> >> >> >>>> >>>
> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
> >>>>> >> >> >> >>>> >>> line
> >>>>> >> >> >> >>>> >>> 49, in <module>
> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
> >>>>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
> >>>>> >> >> >> >>>> >>> io.scif.Writer,
> >>>>> >> >> >> >>>> >>> String
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
> >>>>> >> >> >> >>>> >>> at
> org.python.core.PyObject.__call__(PyObject.java:422)
> >>>>> >> >> >> >>>> >>> at
> org.python.core.PyObject.__call__(PyObject.java:426)
> >>>>> >> >> >> >>>> >>> at
> org.python.core.PyMethod.__call__(PyMethod.java:139)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> org.python.core.PyTableCode.call(PyTableCode.java:165)
> >>>>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
> >>>>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> java.util.concurrent.FutureTask.run(FutureTask.java:262)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
> >>>>> >> >> >> >>>> >>> at
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>>
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
> >>>>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> Three questions:
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> how can I write cropped image (I need to write
> them as
> >>>>> >> >> >> >>>> >>> OME
> >>>>> >> >> >> >>>> >>> Tiff
> >>>>> >> >> >> >>>> >>> so I
> >>>>> >> >> >> >>>> >>> need BF or SCIFIO).
> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
> setCropRegion
> >>>>> >> >> >> >>>> >>> function
> >>>>> >> >> >> >>>> >>> in
> >>>>> >> >> >> >>>> >>> SCIFIO
> >>>>> >> >> >> >>>> >>> ?
> >>>>> >> >> >> >>>> >>> I am currently using
> >>>>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
> >>>>> >> >> >> >>>> >>> to
> >>>>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a
> ROIManager
> >>>>> >> >> >> >>>> >>> instance
> >>>>> >> >> >> >>>> >>> from
> >>>>> >> >> >> >>>> >>> RoiSet.zip file ?
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> Any help would be very appreciated.
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> Thanks !
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> ?
> >>>>> >> >> >> >>>> >>> Hadrien Mary
> >>>>> >> >> >> >>>> >>>
> >>>>> >> >> >> >>>> >>> _______________________________________________
> >>>>> >> >> >> >>>> >>> ImageJ-devel mailing list
> >>>>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
> >>>>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>> >>
> >>>>> >> >> >> >>>
> >>>>> >> >> >> >>>
> >>>>> >> >> >>
> >>>>> >> >> >> _______________________________________________
> >>>>> >> >> >> ImageJ-devel mailing list
> >>>>> >> >> >> ImageJ-devel at imagej.net
> >>>>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
> >>>>> >> >> >
> >>>>> >> >> >
> >>>>> >> >
> >>>>> >> >
> >>>>> >
> >>>>> >
> >>>>
> >>>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150125/29032a7a/attachment-0001.html>

From hadrien.mary at gmail.com  Sun Jan 25 15:22:19 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Sun, 25 Jan 2015 22:22:19 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CA+B=mGo7ctpasVCQhPNdB3vpOzXauBD92OqSOqdSFByKYhH6OQ@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
	<CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
	<CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>
	<CAEpSnna31YnH6bBxePyxtx7VWypNLYYQ7JwtEczVZy58HgcOfQ@mail.gmail.com>
	<CAEpSnnakWEw11=cpYHxYgq7M1jnB6iXcoJOEtSxYxyfPAFKifw@mail.gmail.com>
	<CA+B=mGo7ctpasVCQhPNdB3vpOzXauBD92OqSOqdSFByKYhH6OQ@mail.gmail.com>
Message-ID: <CAEpSnnaTQUFPqe27epupiQVtWDo8fzBvS8=8mw4c_P6mnxd8VQ@mail.gmail.com>

I am now using 'ij.op().crop()' which works well.

I also test fix-cell branch with my previous code (using SCIFIOConfig
and ImageRegion) which fix the save issue (both with ImgSaver and
DatasetService). However cropped image histogram is very different
from the original.

This issue appears only with my dataset (it works well with Samples >
Track for Trackmate for example).

Please try the following script with this file :
https://arwen.hadim.fr/public.php?service=files&t=0d6a774bdfaeed521156ec8a8f9ccdcf

----------------------------------------------
# @DatasetService data

from ij import IJ
from ij.plugin.frame import RoiManager

from io.scif.config import SCIFIOConfig
from io.scif.img import ImageRegion
from io.scif.img import ImgOpener
from io.scif.img import ImgSaver
from net.imagej.axis import Axes

import os

# Get current image filename
imp = IJ.getImage()
f = imp.getOriginalFileInfo()
fname = os.path.join(f.directory, f.fileName)

IJ.log('Image filename is %s' % fname)

# Iterate over all ROIs from ROI Manager
rois = RoiManager.getInstance().getRoisAsArray()
for i, roi in enumerate(rois):

    crop_id = i +1
    IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))

    # Get ROI bounds
    bounds = roi.getBounds()
    x = bounds.x
    y = bounds.y
    w = bounds.width
    h = bounds.height

    # Import only cropped region of the image
    axes = [Axes.X, Axes.Y]
    ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
    config = SCIFIOConfig()
    config.imgOpenerSetRegion(ImageRegion(axes, ranges))

    opener = ImgOpener()
    imps = opener.openImgs(fname, config)
    imp = imps[0]

    # Get filename and basename of the current cropped image
    crop_basename = "crop%i_%s" % (crop_id, f.fileName)
    crop_fname = os.path.join(f.directory, crop_basename)
    IJ.log("Saving crop to %s" % crop_fname)

    # Create dataset
    ds = data.create(imp)

    # Save cropped image
    data.save(ds, crop_fname)

IJ.log('Done')
------------------------------------------------------------------------

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Sun, Jan 25, 2015 at 9:42 PM, Mark Hiner <hiner at wisc.edu> wrote:
> Hi Hadrien,
>
>>I tried to use another method to save cropped images using DatasetService:
>
> I couldn't reproduce this failure.. it works for me using the
> DatasetService. Do you have any local changes? Did you update your Fiji to
> the latest version? If you're still having problems, you could also copy and
> paste the "Useful information about your system" contents generated by Help
>> Report a Bug.
>
>>    saver.saveImg(crop_fname, imp)
>> at
>> io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
>> java.lang.NullPointerException: java.lang.NullPointerException
>
> Yes! This was definitely a bug - thank you for finding it. I think I have a
> fix here: https://github.com/scifio/scifio/commits/fix-cell
> Would you mind giving it a try locally in your workflow?
>
> Thank you!
> - Mark
>
> On Sat, Jan 24, 2015 at 3:01 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
>>
>> Quick update:
>>
>> I tried to use another method to save cropped images using DatasetService:
>>
>> ---------------------------
>> # Create dataset
>> ds = data.create(imp)
>>
>> # Save cropped image
>> data.save(ds, crop_fname)
>> -------------------------
>>
>> And the error is exactly the same as before.
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Tue, Jan 20, 2015 at 10:17 AM, Hadrien Mary <hadrien.mary at gmail.com>
>> wrote:
>> > Another thing I noticed, it's that histogram is different when
>> > cropping manually inside Fiji (select area and do "Duplicate") or when
>> > it has been cropped with the python script (SCIFIO crop).
>> >
>> > See screenshot attachment.
>> >
>> >
>> >
>> > --
>> > Hadrien Mary
>> >
>> > Ph.D student in Biology
>> > Tournier-Gachet Team
>> > CNRS - LBCMCP - UMR 5088
>> >
>> > Universit? de Toulouse - B?t. 4R3B1
>> > 118, route de Narbonne - 31062 Toulouse
>> >
>> >
>> > On Mon, Jan 19, 2015 at 10:29 AM, Hadrien Mary <hadrien.mary at gmail.com>
>> > wrote:
>> >> Hi again,
>> >>
>> >> The script works well for small images (OME Tiff or normal Tiff) with
>> >> the recent Fiji update. However when I run it on large movies (13GB),
>> >> I have the following error.
>> >>
>> >> ----------------------------------------------------------
>> >> -- Classpath of ClassLoader --
>> >> /home/hadim/local/Fiji.app/plugins/
>> >>
>> >> at org.scijava.Context.inject(Context.java:431)
>> >> at org.scijava.Context.inject(Context.java:363)
>> >> at
>> >> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:237)
>> >> at
>> >> org.scijava.ui.DefaultUIService.discoverUIs(DefaultUIService.java:500)
>> >> at org.scijava.ui.DefaultUIService.uiList(DefaultUIService.java:479)
>> >> at
>> >> org.scijava.ui.DefaultUIService.getAvailableUIs(DefaultUIService.java:231)
>> >> at org.scijava.ui.DefaultUIService.onEvent(DefaultUIService.java:457)
>> >> at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
>> >> at
>> >> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> >> at java.lang.reflect.Method.invoke(Method.java:606)
>> >> at
>> >> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:280)
>> >> at
>> >> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:254)
>> >> at
>> >> org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
>> >> at
>> >> org.scijava.event.DefaultEventBus.access$201(DefaultEventBus.java:56)
>> >> at org.scijava.event.DefaultEventBus$2.run(DefaultEventBus.java:223)
>> >> at
>> >> org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
>> >> at
>> >> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >> at
>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >> at
>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >> at java.lang.Thread.run(Thread.java:745)
>> >> Traceback (most recent call last):
>> >>   File
>> >> "/home/hadim/local/Fiji.app/plugins/Scripts/Plugins/Crop_Multi_Roi.py",
>> >> line 50, in <module>
>> >>     saver.saveImg(crop_fname, imp)
>> >> at
>> >> io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
>> >> at io.scif.img.cell.SCIFIOCellCache.load(SCIFIOCellCache.java:144)
>> >> at
>> >> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:122)
>> >> at
>> >> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:101)
>> >> at net.imglib2.img.list.ListCursor.get(ListCursor.java:80)
>> >> at net.imglib2.img.cell.CellCursor.getCell(CellCursor.java:92)
>> >> at net.imglib2.img.cell.CellCursor.moveToNextCell(CellCursor.java:180)
>> >> at net.imglib2.img.cell.CellCursor.reset(CellCursor.java:150)
>> >> at net.imglib2.img.cell.CellCursor.<init>(CellCursor.java:86)
>> >> at
>> >> net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:113)
>> >> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:47)
>> >> at net.imglib2.img.AbstractImg.firstElement(AbstractImg.java:81)
>> >> at net.imagej.ImgPlus.firstElement(ImgPlus.java:261)
>> >> at io.scif.img.ImgSaver.populateMeta(ImgSaver.java:894)
>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:514)
>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:495)
>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:457)
>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:174)
>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:158)
>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:128)
>> >> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> >> at
>> >> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
>> >> at
>> >> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> >> at java.lang.reflect.Method.invoke(Method.java:606)
>> >>
>> >> java.lang.NullPointerException: java.lang.NullPointerException
>> >> -------------------------------------------------------------------
>> >>
>> >> The associated script is below.
>> >>
>> >>
>> >> ------------------------------------------------------------------------
>> >> from ij import IJ
>> >> from ij.plugin.frame import RoiManager
>> >>
>> >> from io.scif.config import SCIFIOConfig
>> >> from io.scif.img import ImageRegion
>> >> from io.scif.img import ImgOpener
>> >> from io.scif.img import ImgSaver
>> >> from net.imagej.axis import Axes
>> >>
>> >> import os
>> >>
>> >> # Get current image filename
>> >> imp = IJ.getImage()
>> >> f = imp.getOriginalFileInfo()
>> >> fname = os.path.join(f.directory, f.fileName)
>> >>
>> >> IJ.log('Image filename is %s' % fname)
>> >>
>> >> # Iterate over all ROIs from ROI Manager
>> >> rois = RoiManager.getInstance().getRoisAsArray()
>> >> for i, roi in enumerate(rois):
>> >>
>> >>     crop_id = i +1
>> >>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>> >>
>> >>     # Get ROI bounds
>> >>     bounds = roi.getBounds()
>> >>     x = bounds.x
>> >>     y = bounds.y
>> >>     w = bounds.width
>> >>     h = bounds.height
>> >>
>> >>     # Import only cropped region of the image
>> >>     axes = [Axes.X, Axes.Y]
>> >>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
>> >>     config = SCIFIOConfig()
>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >>
>> >>     opener = ImgOpener()
>> >>     imps = opener.openImgs(fname, config)
>> >>     imp = imps[0]
>> >>
>> >>     # Get filename and basename of the current cropped image
>> >>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>> >>     crop_fname = os.path.join(f.directory, crop_basename)
>> >>     IJ.log("Saving crop to %s" % crop_fname)
>> >>
>> >>     # Save cropped image
>> >>     saver = ImgSaver()
>> >>     saver.saveImg(crop_fname, imp)
>> >>
>> >> IJ.log('Done')
>> >>
>> >> ----------------------------------------------------------------------------
>> >>
>> >> Does opener.openImgs() wait for the image to open ? If it does not I
>> >> guess that saver.saveImg() is called on an image that does not exist
>> >> in memory.
>> >>
>> >> Thanks
>> >>
>> >> --
>> >> Hadrien Mary
>> >>
>> >> Ph.D student in Biology
>> >> Tournier-Gachet Team
>> >> CNRS - LBCMCP - UMR 5088
>> >>
>> >> Universit? de Toulouse - B?t. 4R3B1
>> >> 118, route de Narbonne - 31062 Toulouse
>> >>
>> >>
>> >> On Wed, Jan 14, 2015 at 4:35 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> >> wrote:
>> >>> I confirm it works !
>> >>>
>> >>> Thanks again
>> >>>
>> >>> --
>> >>> Hadrien Mary
>> >>>
>> >>> Ph.D student in Biology
>> >>> Tournier-Gachet Team
>> >>> CNRS - LBCMCP - UMR 5088
>> >>>
>> >>> Universit? de Toulouse - B?t. 4R3B1
>> >>> 118, route de Narbonne - 31062 Toulouse
>> >>>
>> >>>
>> >>> On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> >>>> Hi Hadrien,
>> >>>>
>> >>>>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>> >>>>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>> >>>>
>> >>>> Ah sorry - my fault again for responding too quickly. ImageJ.git
>> >>>> doesn't
>> >>>> have a dependency on scifio-ome-xml; it's a dependency in Fiji
>> >>>> itself[1]. So
>> >>>> when you installed ImageJ into your Fiji, it updated all the
>> >>>> dependencies
>> >>>> but didn't actually update scifio-ome-xml.
>> >>>>
>> >>>> You can either manually copy scifio-ome-xml[2] over, or try
>> >>>> installing from
>> >>>> the latest Fiji master[3] which I just updated to have the latest
>> >>>> dependencies.
>> >>>>
>> >>>> [1]
>> >>>>
>> >>>> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
>> >>>> [2]
>> >>>>
>> >>>> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>> >>>> [3]
>> >>>>
>> >>>> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
>> >>>>
>> >>>> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary
>> >>>> <hadrien.mary at gmail.com>
>> >>>> wrote:
>> >>>>>
>> >>>>> Ok it makes sense now !
>> >>>>>
>> >>>>> So I did what you told me about cloning imagej repo, building and
>> >>>>> install it with maven inside my local Fiji.app/. I don't know if
>> >>>>> it's
>> >>>>> a bug or a missing dependency but I am now unable to open OME Tiff
>> >>>>> files (other kind of file works well) wether it is by drag and drop
>> >>>>> or
>> >>>>> with my script. The error is the following:
>> >>>>>
>> >>>>> -------------------------------------------------
>> >>>>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>> >>>>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>> >>>>> at
>> >>>>>
>> >>>>> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
>> >>>>> at
>> >>>>> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
>> >>>>> at
>> >>>>> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
>> >>>>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
>> >>>>> at
>> >>>>>
>> >>>>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
>> >>>>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
>> >>>>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
>> >>>>> at
>> >>>>>
>> >>>>> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
>> >>>>> at
>> >>>>>
>> >>>>> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
>> >>>>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
>> >>>>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
>> >>>>> at java.lang.Thread.run(Thread.java:745)
>> >>>>> -----------------------------------------------
>> >>>>>
>> >>>>> I guess something in scifio has not been updated to use the new
>> >>>>> net.imagej.axis or maybe the update is not built/downloaded when I
>> >>>>> run
>> >>>>> maven on my imagej clone.
>> >>>>>
>> >>>>>
>> >>>>> --
>> >>>>> Hadrien Mary
>> >>>>>
>> >>>>> Ph.D student in Biology
>> >>>>> Tournier-Gachet Team
>> >>>>> CNRS - LBCMCP - UMR 5088
>> >>>>>
>> >>>>> Universit? de Toulouse - B?t. 4R3B1
>> >>>>> 118, route de Narbonne - 31062 Toulouse
>> >>>>>
>> >>>>>
>> >>>>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> >>>>> > Hi Hadrien,
>> >>>>> >
>> >>>>> >>Sorry if it's off topic but I tried to run my script and I got a
>> >>>>> >> python
>> >>>>> >> error
>> >>>>> >
>> >>>>> > Oh no! This is totally my fault. I had to update your script for
>> >>>>> > the new
>> >>>>> > dependencies I mentioned and forgot to paste the new version in my
>> >>>>> > response
>> >>>>> > yesterday:
>> >>>>> >
>> >>>>> >>from net.imglib2.meta import Axes
>> >>>>> >
>> >>>>> > This import needs to change to:
>> >>>>> >
>> >>>>> > from net.imagej.axis import Axes
>> >>>>> >
>> >>>>> > Sorry about that!
>> >>>>> >
>> >>>>> > Best,
>> >>>>> > Mark
>> >>>>> >
>> >>>>> >
>> >>>>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary
>> >>>>> > <hadrien.mary at gmail.com>
>> >>>>> > wrote:
>> >>>>> >>
>> >>>>> >> Thank you Mark !
>> >>>>> >>
>> >>>>> >> Sorry if it's off topic but I tried to run my script and I got a
>> >>>>> >> python error probably related to type difference between python
>> >>>>> >> and
>> >>>>> >> java. It's not the first time I saw this kind of message and I'd
>> >>>>> >> like
>> >>>>> >> to know how to resolve it. Note that for python script I mainly
>> >>>>> >> use
>> >>>>> >> javadoc as documentation.
>> >>>>> >>
>> >>>>> >> The error is below coming from almost the same script as before
>> >>>>> >> in this
>> >>>>> >> thread.
>> >>>>> >>
>> >>>>> >> ********************************
>> >>>>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>> >>>>> >> Traceback (most recent call last):
>> >>>>> >>   File
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>> >>>>> >> line 17, in <module>
>> >>>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >>>>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>> >>>>> >> net.imagej.axis.AxisType[]
>> >>>>> >>
>> >>>>> >> at org.python.core.Py.TypeError(Py.java:235)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
>> >>>>> >> at
>> >>>>> >> org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>> >>>>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>> >>>>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
>> >>>>> >> at org.python.core.PyType.__call__(PyType.java:1548)
>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>> >>>>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >>>>> >> at org.python.core.PyCode.call(PyCode.java:18)
>> >>>>> >> at org.python.core.Py.runCode(Py.java:1275)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >>>>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >>>>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >>>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >>>>> >> at
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >>>>> >> at java.lang.Thread.run(Thread.java:745)
>> >>>>> >> ************************************
>> >>>>> >>
>> >>>>> >> --
>> >>>>> >> Hadrien Mary
>> >>>>> >>
>> >>>>> >> Ph.D student in Biology
>> >>>>> >> Tournier-Gachet Team
>> >>>>> >> CNRS - LBCMCP - UMR 5088
>> >>>>> >>
>> >>>>> >> Universit? de Toulouse - B?t. 4R3B1
>> >>>>> >> 118, route de Narbonne - 31062 Toulouse
>> >>>>> >>
>> >>>>> >>
>> >>>>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu>
>> >>>>> >> wrote:
>> >>>>> >> > Hi Hadrien,
>> >>>>> >> >
>> >>>>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite
>> >>>>> >> > broken.
>> >>>>> >> >
>> >>>>> >> >  It's working for me now, as of the latest SCIFIO[1] and
>> >>>>> >> > SCIFIO-OME-XML[2].
>> >>>>> >> > Note that these libraries have updated dependencies compared to
>> >>>>> >> > what's
>> >>>>> >> > currently on Fiji, so you can't just drop these .jars into your
>> >>>>> >> > Fiji
>> >>>>> >> > installation if you want to test locally; you need to update
>> >>>>> >> > the
>> >>>>> >> > dependencies as well. The easiest way to do this would be to
>> >>>>> >> > just
>> >>>>> >> > clone
>> >>>>> >> > Imagej.git[3] and install it into your Fiji.app directory by
>> >>>>> >> > running:
>> >>>>> >> >
>> >>>>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>> >>>>> >> > -Ddelete.other.versions=true
>> >>>>> >> >
>> >>>>> >> > We'll push these changes up to Fiji this week, and I will find
>> >>>>> >> > or
>> >>>>> >> > write
>> >>>>> >> > better instructions for local testing.
>> >>>>> >> >
>> >>>>> >> > Hope this helps. Let us know if you have any
>> >>>>> >> > questions/problems.
>> >>>>> >> > Thanks
>> >>>>> >> > again for finding this issue!
>> >>>>> >> >
>> >>>>> >> > Best,
>> >>>>> >> > - Mark
>> >>>>> >> >
>> >>>>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>> >>>>> >> > [2]
>> >>>>> >> >
>> >>>>> >> >
>> >>>>> >> >
>> >>>>> >> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>> >>>>> >> > [3] https://github.com/imagej/imagej
>> >>>>> >> >
>> >>>>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
>> >>>>> >> > <hadrien.mary at gmail.com>
>> >>>>> >> > wrote:
>> >>>>> >> >>
>> >>>>> >> >> Ok. Let me know when you want me to test your changes. I also
>> >>>>> >> >> tested
>> >>>>> >> >> fix-writing branch and I didn't notice any changes.
>> >>>>> >> >>
>> >>>>> >> >> --
>> >>>>> >> >> Hadrien Mary
>> >>>>> >> >>
>> >>>>> >> >> Ph.D student in Biology
>> >>>>> >> >> Tournier-Gachet Team
>> >>>>> >> >> CNRS - LBCMCP - UMR 5088
>> >>>>> >> >>
>> >>>>> >> >> Universit? de Toulouse - B?t. 4R3B1
>> >>>>> >> >> 118, route de Narbonne - 31062 Toulouse
>> >>>>> >> >>
>> >>>>> >> >>
>> >>>>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu>
>> >>>>> >> >> wrote:
>> >>>>> >> >> > Hi Hadrien,
>> >>>>> >> >> >
>> >>>>> >> >> > I've identified at least two bugs that could be affecting
>> >>>>> >> >> > you
>> >>>>> >> >> > here.
>> >>>>> >> >> >
>> >>>>> >> >> > First of all, there was a bug in the OME-TIFF format writing
>> >>>>> >> >> > out
>> >>>>> >> >> > multi-dimensional images. That's fixed on a branch but not
>> >>>>> >> >> > uploaded
>> >>>>> >> >> > to
>> >>>>> >> >> > Fiji
>> >>>>> >> >> > yet [1].
>> >>>>> >> >> >
>> >>>>> >> >> > Second, it seems like cropping is restricting pixel reads to
>> >>>>> >> >> > the
>> >>>>> >> >> > correct
>> >>>>> >> >> > region but then doesn't change the image size.
>> >>>>> >> >> >
>> >>>>> >> >> > I'm hoping when I fix the second issue writing cropped
>> >>>>> >> >> > regions
>> >>>>> >> >> > will
>> >>>>> >> >> > be
>> >>>>> >> >> > fixed.
>> >>>>> >> >> >
>> >>>>> >> >> > Thanks for the great feedback!
>> >>>>> >> >> > - Mark
>> >>>>> >> >> >
>> >>>>> >> >> > [1]
>> >>>>> >> >> > https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>> >>>>> >> >> >
>> >>>>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>> >>>>> >> >> > <hadrien.mary at gmail.com>
>> >>>>> >> >> > wrote:
>> >>>>> >> >> >>
>> >>>>> >> >> >> I also confirm the same behaviour when replacing original
>> >>>>> >> >> >> file by
>> >>>>> >> >> >> OME
>> >>>>> >> >> >> sample data :
>> >>>>> >> >> >>
>> >>>>> >> >> >>
>> >>>>> >> >> >>
>> >>>>> >> >> >>
>> >>>>> >> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>> >>>>> >> >> >>
>> >>>>> >> >> >> --
>> >>>>> >> >> >> Hadrien Mary
>> >>>>> >> >> >>
>> >>>>> >> >> >> Ph.D student in Biology
>> >>>>> >> >> >> Tournier-Gachet Team
>> >>>>> >> >> >> CNRS - LBCMCP - UMR 5088
>> >>>>> >> >> >>
>> >>>>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
>> >>>>> >> >> >> 118, route de Narbonne - 31062 Toulouse
>> >>>>> >> >> >>
>> >>>>> >> >> >>
>> >>>>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>> >>>>> >> >> >> <hadrien.mary at gmail.com>
>> >>>>> >> >> >> wrote:
>> >>>>> >> >> >> > After some investigations I think there is a bug with
>> >>>>> >> >> >> > ImgSaver.
>> >>>>> >> >> >> > In
>> >>>>> >> >> >> > the
>> >>>>> >> >> >> > following script, X, Y crop is fine but axes informations
>> >>>>> >> >> >> > (T
>> >>>>> >> >> >> > and
>> >>>>> >> >> >> > Z)
>> >>>>> >> >> >> > are lost and all frames appears on the same axes. Now if
>> >>>>> >> >> >> > I
>> >>>>> >> >> >> > replace
>> >>>>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>> >>>>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
>> >>>>> >> >> >> > cropped
>> >>>>> >> >> >> > image has the same dimensions than original however axes
>> >>>>> >> >> >> > informations
>> >>>>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel
>> >>>>> >> >> >> > values
>> >>>>> >> >> >> > are
>> >>>>> >> >> >> > totally incoherent which is not the case in cropped.tif.
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > Files can be found here :
>> >>>>> >> >> >> >
>> >>>>> >> >> >> >
>> >>>>> >> >> >> >
>> >>>>> >> >> >> >
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>> >>>>> >> >> >> > original.ome.tif.
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > The script:
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > ---------------------------------------------------
>> >>>>> >> >> >> > from io.scif import SCIFIO
>> >>>>> >> >> >> > from io.scif.config import SCIFIOConfig
>> >>>>> >> >> >> > from io.scif.img import ImageRegion
>> >>>>> >> >> >> > from io.scif.img import ImgOpener
>> >>>>> >> >> >> > from io.scif.img import ImgSaver
>> >>>>> >> >> >> > from net.imglib2.meta import Axes
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > fname = "/home/hadim/original.ome.tif"
>> >>>>> >> >> >> > target = "/home/hadim/cropped.tif"
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > axes = [Axes.X, Axes.Y]
>> >>>>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>> >>>>> >> >> >> > config = SCIFIOConfig()
>> >>>>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > opener = ImgOpener()
>> >>>>> >> >> >> > imps = opener.openImgs(fname, config)
>> >>>>> >> >> >> > imp = imps[0]
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > saver = ImgSaver()
>> >>>>> >> >> >> > saver.saveImg(target, imp)
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > print('Done')
>> >>>>> >> >> >> > ---------------------------------------------------
>> >>>>> >> >> >> >
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > --
>> >>>>> >> >> >> > Hadrien Mary
>> >>>>> >> >> >> >
>> >>>>> >> >> >> >
>> >>>>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>> >>>>> >> >> >> > <hadrien.mary at gmail.com>
>> >>>>> >> >> >> > wrote:
>> >>>>> >> >> >> >> Thanks for the tip (reminder to me: always look for
>> >>>>> >> >> >> >> example in
>> >>>>> >> >> >> >> tests!).
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> Unfortunately crop does not work... I will try to do
>> >>>>> >> >> >> >> more
>> >>>>> >> >> >> >> tests
>> >>>>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> Updated code:
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> from ij import IJ
>> >>>>> >> >> >> >> from ij import ImagePlus
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> from io.scif import SCIFIO
>> >>>>> >> >> >> >> from io.scif.config import SCIFIOConfig
>> >>>>> >> >> >> >> from io.scif.img import ImageRegion
>> >>>>> >> >> >> >> from io.scif.img import ImgOpener
>> >>>>> >> >> >> >> from io.scif.img import ImgSaver
>> >>>>> >> >> >> >> from net.imglib2.meta import Axes
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
>> >>>>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> axes = [Axes.X, Axes.Y]
>> >>>>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>> >>>>> >> >> >> >> config = SCIFIOConfig()
>> >>>>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> opener = ImgOpener()
>> >>>>> >> >> >> >> imps = opener.openImgs(fname, config)
>> >>>>> >> >> >> >> imp = imps[0]
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> saver = ImgSaver()
>> >>>>> >> >> >> >> saver.saveImg(target, imp)
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> print('Done')
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> --
>> >>>>> >> >> >> >> Hadrien Mary
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >>
>> >>>>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>> >>>>> >> >> >> >> <ctrueden at wisc.edu>
>> >>>>> >> >> >> >> wrote:
>> >>>>> >> >> >> >>> Hi Hadrien,
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>>> I would like to be able to crop a region in X and Y
>> >>>>> >> >> >> >>>> while
>> >>>>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z,
>> >>>>> >> >> >> >>>> T).
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>> Here's some Java:
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>> >>>>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>> >>>>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" +
>> >>>>> >> >> >> >>> maxY
>> >>>>> >> >> >> >>> };
>> >>>>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes,
>> >>>>> >> >> >> >>> ranges));
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>> Adapted from here:
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>> And untested.
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>> HTH,
>> >>>>> >> >> >> >>> Curtis
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>> >>>>> >> >> >> >>> <hadrien.mary at gmail.com>
>> >>>>> >> >> >> >>> wrote:
>> >>>>> >> >> >> >>>>
>> >>>>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
>> >>>>> >> >> >> >>>> instanciate
>> >>>>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help
>> >>>>> >> >> >> >>>> me...
>> >>>>> >> >> >> >>>> I
>> >>>>> >> >> >> >>>> would
>> >>>>> >> >> >> >>>> like to be able to crop a region in X and Y while
>> >>>>> >> >> >> >>>> keeping
>> >>>>> >> >> >> >>>> any
>> >>>>> >> >> >> >>>> other
>> >>>>> >> >> >> >>>> dimensions which could exist (C, Z, T).
>> >>>>> >> >> >> >>>>
>> >>>>> >> >> >> >>>> --
>> >>>>> >> >> >> >>>> Hadrien Mary
>> >>>>> >> >> >> >>>>
>> >>>>> >> >> >> >>>>
>> >>>>> >> >> >> >>>>
>> >>>>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>> >>>>> >> >> >> >>>> <hadrien.mary at gmail.com>
>> >>>>> >> >> >> >>>> wrote:
>> >>>>> >> >> >> >>>> > Thank you Curtis for the answer.
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > I tried to apply what you told me and the code now
>> >>>>> >> >> >> >>>> > works
>> >>>>> >> >> >> >>>> > without
>> >>>>> >> >> >> >>>> > error. However the saved cropped image is not
>> >>>>> >> >> >> >>>> > cropped
>> >>>>> >> >> >> >>>> > (same
>> >>>>> >> >> >> >>>> > size
>> >>>>> >> >> >> >>>> > as
>> >>>>> >> >> >> >>>> > original) and pixel values are modified).
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > Script:
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
>> >>>>> >> >> >> >>>> > from io.scif.img import ImageRegion
>> >>>>> >> >> >> >>>> > from io.scif.img import ImgOpener
>> >>>>> >> >> >> >>>> > from io.scif.img import ImgSaver
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>> >>>>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > config = SCIFIOConfig()
>> >>>>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10,
>> >>>>> >> >> >> >>>> > height=10))
>> >>>>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > opener = ImgOpener()
>> >>>>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
>> >>>>> >> >> >> >>>> > imp = imps[0]
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > print(imps)
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > saver = ImgSaver()
>> >>>>> >> >> >> >>>> > saver.saveImg(target, imp)
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you
>> >>>>> >> >> >> >>>> > don't
>> >>>>> >> >> >> >>>> > have
>> >>>>> >> >> >> >>>> > time
>> >>>>> >> >> >> >>>> > to
>> >>>>> >> >> >> >>>> > write an example.
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > I will be happy to provide some python/scifio
>> >>>>> >> >> >> >>>> > examples
>> >>>>> >> >> >> >>>> > scripts.
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > --
>> >>>>> >> >> >> >>>> > Hadrien Mary
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > Ph.D student in Biology
>> >>>>> >> >> >> >>>> > Tournier-Gachet Team
>> >>>>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>> >>>>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> >
>> >>>>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>> >>>>> >> >> >> >>>> > <ctrueden at wisc.edu>
>> >>>>> >> >> >> >>>> > wrote:
>> >>>>> >> >> >> >>>> >> Hi Hadrien,
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
>> >>>>> >> >> >> >>>> >>> disk but
>> >>>>> >> >> >> >>>> >>> it
>> >>>>> >> >> >> >>>> >>> doesn
>> >>>>> >> >> >> >>>> >>> not
>> >>>>> >> >> >> >>>> >>> work.
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >> The error you see is because SCIFIO operates on
>> >>>>> >> >> >> >>>> >> ImgLib2
>> >>>>> >> >> >> >>>> >> data
>> >>>>> >> >> >> >>>> >> structures, not
>> >>>>> >> >> >> >>>> >> ImagePlus objects.
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
>> >>>>> >> >> >> >>>> >>> setCropRegion
>> >>>>> >> >> >> >>>> >>> function
>> >>>>> >> >> >> >>>> >>> in
>> >>>>> >> >> >> >>>> >>> SCIFIO ?
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
>> >>>>> >> >> >> >>>> >> imgOpenerSetRegion
>> >>>>> >> >> >> >>>> >> [1]
>> >>>>> >> >> >> >>>> >> on
>> >>>>> >> >> >> >>>> >> it,
>> >>>>> >> >> >> >>>> >> then
>> >>>>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get
>> >>>>> >> >> >> >>>> >> back
>> >>>>> >> >> >> >>>> >> an
>> >>>>> >> >> >> >>>> >> ImgLib2
>> >>>>> >> >> >> >>>> >> data
>> >>>>> >> >> >> >>>> >> object which can then be fed to the SCIFIO
>> >>>>> >> >> >> >>>> >> ImgSaver.
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an
>> >>>>> >> >> >> >>>> >> example
>> >>>>> >> >> >> >>>> >> for
>> >>>>> >> >> >> >>>> >> you
>> >>>>> >> >> >> >>>> >> right
>> >>>>> >> >> >> >>>> >> now. It
>> >>>>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2]
>> >>>>> >> >> >> >>>> >> that use
>> >>>>> >> >> >> >>>> >> the
>> >>>>> >> >> >> >>>> >> ImgOpener
>> >>>>> >> >> >> >>>> >> and
>> >>>>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs
>> >>>>> >> >> >> >>>> >> akin to
>> >>>>> >> >> >> >>>> >> the
>> >>>>> >> >> >> >>>> >> Bio-Formats
>> >>>>> >> >> >> >>>> >> "BF"
>> >>>>> >> >> >> >>>> >> functionality... please feel welcome to contribute
>> >>>>> >> >> >> >>>> >> some!
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >> Regards,
>> >>>>> >> >> >> >>>> >> Curtis
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >> [1]
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>> >>>>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>> >>>>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
>> >>>>> >> >> >> >>>> >> wrote:
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> Hi,
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> I am writing a python macro which iterate over all
>> >>>>> >> >> >> >>>> >>> rois
>> >>>>> >> >> >> >>>> >>> in
>> >>>>> >> >> >> >>>> >>> ROI
>> >>>>> >> >> >> >>>> >>> Manager
>> >>>>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
>> >>>>> >> >> >> >>>> >>> plugin
>> >>>>> >> >> >> >>>> >>> to
>> >>>>> >> >> >> >>>> >>> open
>> >>>>> >> >> >> >>>> >>> a
>> >>>>> >> >> >> >>>> >>> cropped region of an image.
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
>> >>>>> >> >> >> >>>> >>> disk but
>> >>>>> >> >> >> >>>> >>> it
>> >>>>> >> >> >> >>>> >>> doesn
>> >>>>> >> >> >> >>>> >>> not
>> >>>>> >> >> >> >>>> >>> work.
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> Here is my script:
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>> >>>>> >> >> >> >>>> >>> from ij import IJ
>> >>>>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> from loci.plugins import BF
>> >>>>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>> >>>>> >> >> >> >>>> >>> from loci.common import Region
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> import os
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> # Get current image filename
>> >>>>> >> >> >> >>>> >>> imp = IJ.getImage()
>> >>>>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>> >>>>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>> >>>>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>> >>>>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>     crop_id = i +1
>> >>>>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
>> >>>>> >> >> >> >>>> >>> len(rois)))
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>     bounds = roi.getBounds()
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>     x = bounds.x
>> >>>>> >> >> >> >>>> >>>     y = bounds.y
>> >>>>> >> >> >> >>>> >>>     w = bounds.width
>> >>>>> >> >> >> >>>> >>>     h = bounds.height
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>     # Import only cropped region of the image
>> >>>>> >> >> >> >>>> >>>     options = ImporterOptions()
>> >>>>> >> >> >> >>>> >>>     options.setCrop(True)
>> >>>>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>> >>>>> >> >> >> >>>> >>>     options.setId(fname)
>> >>>>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>     imp = imps[0]
>> >>>>> >> >> >> >>>> >>>     imp.show()
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id,
>> >>>>> >> >> >> >>>> >>> f.fileName)
>> >>>>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
>> >>>>> >> >> >> >>>> >>> crop_basename)
>> >>>>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>     # Save image
>> >>>>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>> >>>>> >> >> >> >>>> >>>     saver = ImgSaver()
>> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> IJ.log('Done')
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> It fails with this error:
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> Traceback (most recent call last):
>> >>>>> >> >> >> >>>> >>>   File
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>> >>>>> >> >> >> >>>> >>> line
>> >>>>> >> >> >> >>>> >>> 49, in <module>
>> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>> >>>>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>> >>>>> >> >> >> >>>> >>> io.scif.Writer,
>> >>>>> >> >> >> >>>> >>> String
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>> org.python.core.PyObject.__call__(PyObject.java:422)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>> org.python.core.PyObject.__call__(PyObject.java:426)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>> org.python.core.PyMethod.__call__(PyMethod.java:139)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.python.core.PyTableCode.call(PyTableCode.java:165)
>> >>>>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>> >>>>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> java.util.concurrent.FutureTask.run(FutureTask.java:262)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>> >>>>> >> >> >> >>>> >>> at
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>> >>>>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> Three questions:
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> how can I write cropped image (I need to write
>> >>>>> >> >> >> >>>> >>> them as
>> >>>>> >> >> >> >>>> >>> OME
>> >>>>> >> >> >> >>>> >>> Tiff
>> >>>>> >> >> >> >>>> >>> so I
>> >>>>> >> >> >> >>>> >>> need BF or SCIFIO).
>> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
>> >>>>> >> >> >> >>>> >>> setCropRegion
>> >>>>> >> >> >> >>>> >>> function
>> >>>>> >> >> >> >>>> >>> in
>> >>>>> >> >> >> >>>> >>> SCIFIO
>> >>>>> >> >> >> >>>> >>> ?
>> >>>>> >> >> >> >>>> >>> I am currently using
>> >>>>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>> >>>>> >> >> >> >>>> >>> to
>> >>>>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a
>> >>>>> >> >> >> >>>> >>> ROIManager
>> >>>>> >> >> >> >>>> >>> instance
>> >>>>> >> >> >> >>>> >>> from
>> >>>>> >> >> >> >>>> >>> RoiSet.zip file ?
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> Any help would be very appreciated.
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> Thanks !
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> ?
>> >>>>> >> >> >> >>>> >>> Hadrien Mary
>> >>>>> >> >> >> >>>> >>>
>> >>>>> >> >> >> >>>> >>> _______________________________________________
>> >>>>> >> >> >> >>>> >>> ImageJ-devel mailing list
>> >>>>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
>> >>>>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>> >>
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >> >>>
>> >>>>> >> >> >>
>> >>>>> >> >> >> _______________________________________________
>> >>>>> >> >> >> ImageJ-devel mailing list
>> >>>>> >> >> >> ImageJ-devel at imagej.net
>> >>>>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>> >>>>> >> >> >
>> >>>>> >> >> >
>> >>>>> >> >
>> >>>>> >> >
>> >>>>> >
>> >>>>> >
>> >>>>
>> >>>>
>
>


From hadrien.mary at gmail.com  Mon Jan 26 05:57:47 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Mon, 26 Jan 2015 12:57:47 +0100
Subject: [ImageJ-devel] About memory usage with Fiji/JVM
Message-ID: <CAEpSnnZcSKfGSxiPiFSoegHc0pP=PbMNC9WxaAvGT7xh9LV3Hg@mail.gmail.com>

Hi,

New SCIFIO I/O system in Fiji/IJ2 automatically detects wether virtual
stack is needed according to system memory available and image size
(if I understood correctly).

Virtual stack is fine but it always better to work without when you
can. For example working with timelapse stacks, sliding time is much
faster when image is not a virtual stack (and it makes sense since RAM
memory access is much faster than hard drive memory access...).

Saying that I noticed something: when I close a big image (no virtual
stack because moving time slider is fast), java does not release
memory to system (and it's a normal behaviour according to this
http://stackoverflow.com/questions/22912063/automatically-release-unused-memory-in-imagej-fiji).
Now when I load the same kind of image (same size), the JVM should use
the free memory released by the previously closed image isn't it ? I
have the feeling that it does not because, when I move the time slider
on the second image, it's very slow....

Some numbers:

- image size : 4.6GB
- Fiji memory after start : 0.3GB
- Fiji memory after loading first image: 6.9GiB
- Fiji memory after closing first image: 6.9GiB
- Fiji memory after loading second image: 6.9GiB

My hypothesis is that when loading an image, Fiji/SCIFIO look at free
memory in the system but not in the JVM. Is that possible ? Did you
already noticed that ?

PS: I have attached to this mail some properties of my system.

Best,

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse
-------------- next part --------------
  java.version: 1.7.0_65
  java.vendor: Oracle Corporation
  os.name: Linux
  os.version: 3.16.7-031607-generic
  os.arch: amd64
  file.separator: /
  path.separator: :
  line.separator: <lf>

  user.name: hadim
  user.home: /home/hadim
  user.dir: /home/hadim
  user.country: US
  file.encoding: UTF-8
  java.home: /usr/lib/jvm/java-7-openjdk-amd64/jre
  java.class.path: /home/hadim/local/Fiji.app/jars/imagej-launcher-3.1.6.jar
  java.ext.dirs: /usr/lib/jvm/java-7-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext
  java.io.tmpdir: /tmp

  IJ.getVersion: 2.0.0-rc-23/1.49m
  IJ.getFullVersion: 1.49m99
  IJ.isJava2: true
  IJ.isJava15: true
  IJ.isJava16: true
  IJ.isLinux: true
  IJ.isMacintosh: false
  IJ.isMacOSX: false
  IJ.isWindows: false
  IJ.is64Bit: true

  IJ.getDirectory("imagej"): /home/hadim/local/Fiji.app/
  IJ.getDirectory("home"): /home/hadim/
  IJ.getDirectory("plugins"): /home/hadim/local/Fiji.app/plugins/
  IJ.getDirectory("macros"): /home/hadim/local/Fiji.app/macros/
  IJ.getDirectory("luts"): /home/hadim/local/Fiji.app/luts/
  IJ.getDirectory("current"): /home/hadim/
  IJ.getDirectory("temp"): /tmp/
  IJ.getDirectory("default"): /home/hadim/
  IJ.getDirectory("image"): null

  Menus.getPlugInsPath: /home/hadim/local/Fiji.app/plugins/
  Menus.getMacrosPath: /home/hadim/local/Fiji.app/macros/
  Prefs.getImageJDir: /home/hadim/local/Fiji.app/
  Prefs.getThreads: 16 (16 cores)
  Prefs.open100Percent: false
  Prefs.blackBackground: false
  Prefs.useJFileChooser: false
  Prefs.weightedColor: false
  Prefs.blackCanvas: false
  Prefs.pointAutoMeasure: false
  Prefs.pointAutoNextSlice: false
  Prefs.requireControlKey: false
  Prefs.useInvertingLut: false
  Prefs.antialiasedTools: true
  Prefs.useInvertingLut: false
  Prefs.intelByteOrder: false
  Prefs.doubleBuffer: true
  Prefs.noPointLabels: false
  Prefs.disableUndo: false
  Prefs dir: /home/hadim/.imagej
  Current dir: /home/hadim/
  Sample images dir: http://imagej.nih.gov/ij/images/
  Memory in use: 4475MB of 9585MB (46%)
  Screen size: 1600x1200
  Max window bounds: x=0,y=0,width=1600,height=1200
  Union of bounds: x=0,y=0,width=2880,height=1200
  Monitor1: x=0,y=0,width=1600,height=1200
  Monitor2: x=1600,y=0,width=1280,height=1024

All Java Properties
  ij.dir: /home/hadim/local/Fiji.app
  java.runtime.name: OpenJDK Runtime Environment
  fiji.dir: /home/hadim/local/Fiji.app
  imagej.dir: /home/hadim/local/Fiji.app
  sun.boot.library.path: /usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64
  java.vm.version: 24.65-b04
  fiji.defaultLibPath: lib/amd64/server/libjvm.so
  java.vm.vendor: Oracle Corporation
  java.vendor.url: http://java.oracle.com/
  path.separator: :
  java.vm.name: OpenJDK 64-Bit Server VM
  file.encoding.pkg: sun.io
  user.country: US
  sun.os.patch.level: unknown
  java.vm.specification.name: Java Virtual Machine Specification
  user.dir: /home/hadim
  java.runtime.version: 1.7.0_65-b32
  java.awt.graphicsenv: sun.awt.X11GraphicsEnvironment
  java.endorsed.dirs: /usr/lib/jvm/java-7-openjdk-amd64/jre/lib/endorsed
  os.arch: amd64
  java.io.tmpdir: /tmp
  line.separator: 

  java.vm.specification.vendor: Oracle Corporation
  os.name: Linux
  sun.jnu.encoding: UTF-8
  java.library.path: /home/hadim/local/Fiji.app/lib/linux64:/home/hadim/local/Fiji.app/mm/linux64
  sun.awt.enableExtraMouseButtons: true
  java.specification.name: Java Platform API Specification
  java.class.version: 51.0
  sun.management.compiler: HotSpot 64-Bit Tiered Compilers
  os.version: 3.16.7-031607-generic
  user.home: /home/hadim
  user.timezone: Europe/Paris
  java.awt.printerjob: sun.print.PSPrinterJob
  file.encoding: UTF-8
  java.specification.version: 1.7
  plugins.dir: /home/hadim/local/Fiji.app
  java.class.path: /home/hadim/local/Fiji.app/jars/imagej-launcher-3.1.6.jar
  user.name: hadim
  java.vm.specification.version: 1.7
  java.home: /usr/lib/jvm/java-7-openjdk-amd64/jre
  sun.arch.data.model: 64
  user.language: en
  java.specification.vendor: Oracle Corporation
  awt.toolkit: sun.awt.X11.XToolkit
  java.vm.info: mixed mode
  java.version: 1.7.0_65
  java.ext.dirs: /usr/lib/jvm/java-7-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext
  sun.boot.class.path: /usr/lib/jvm/java-7-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/classes
  java.vendor: Oracle Corporation
  ij.executable: /home/hadim/local/Fiji.app/ImageJ-linux64
  python.cachedir.skip: true
  file.separator: /
  java.vendor.url.bug: http://bugreport.sun.com/bugreport/
  sun.font.fontmanager: sun.awt.X11FontManager
  sun.io.unicode.encoding: UnicodeLittle
  sun.cpu.endian: little
  sun.desktop: gnome
  fiji.executable: /home/hadim/local/Fiji.app/ImageJ-linux64
  sun.cpu.isalist: 

From hadrien.mary at gmail.com  Mon Jan 26 09:37:39 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Mon, 26 Jan 2015 16:37:39 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnaTQUFPqe27epupiQVtWDo8fzBvS8=8mw4c_P6mnxd8VQ@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
	<CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
	<CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>
	<CAEpSnna31YnH6bBxePyxtx7VWypNLYYQ7JwtEczVZy58HgcOfQ@mail.gmail.com>
	<CAEpSnnakWEw11=cpYHxYgq7M1jnB6iXcoJOEtSxYxyfPAFKifw@mail.gmail.com>
	<CA+B=mGo7ctpasVCQhPNdB3vpOzXauBD92OqSOqdSFByKYhH6OQ@mail.gmail.com>
	<CAEpSnnaTQUFPqe27epupiQVtWDo8fzBvS8=8mw4c_P6mnxd8VQ@mail.gmail.com>
Message-ID: <CAEpSnnb32Oz54D3cUnNzAtTQEkL21afBctA=m+BM7du6ij1tjg@mail.gmail.com>

It appears that I have the same behaviour using 'ij.op().crop()'.

So in short, my script works well for croping but saving the cropped
image on disk totally failed. In appearence it works but if you try to
open the image, axes (other than X and Y) are merged and it seems that
only the first image has been saved because all other frames from the
stack are the same.

Looking at the OME XML string of the cropped image, it appears that
attributes of Pixel tag has been all set to 1.0.

Best,

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Sun, Jan 25, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> I am now using 'ij.op().crop()' which works well.
>
> I also test fix-cell branch with my previous code (using SCIFIOConfig
> and ImageRegion) which fix the save issue (both with ImgSaver and
> DatasetService). However cropped image histogram is very different
> from the original.
>
> This issue appears only with my dataset (it works well with Samples >
> Track for Trackmate for example).
>
> Please try the following script with this file :
> https://arwen.hadim.fr/public.php?service=files&t=0d6a774bdfaeed521156ec8a8f9ccdcf
>
> ----------------------------------------------
> # @DatasetService data
>
> from ij import IJ
> from ij.plugin.frame import RoiManager
>
> from io.scif.config import SCIFIOConfig
> from io.scif.img import ImageRegion
> from io.scif.img import ImgOpener
> from io.scif.img import ImgSaver
> from net.imagej.axis import Axes
>
> import os
>
> # Get current image filename
> imp = IJ.getImage()
> f = imp.getOriginalFileInfo()
> fname = os.path.join(f.directory, f.fileName)
>
> IJ.log('Image filename is %s' % fname)
>
> # Iterate over all ROIs from ROI Manager
> rois = RoiManager.getInstance().getRoisAsArray()
> for i, roi in enumerate(rois):
>
>     crop_id = i +1
>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>
>     # Get ROI bounds
>     bounds = roi.getBounds()
>     x = bounds.x
>     y = bounds.y
>     w = bounds.width
>     h = bounds.height
>
>     # Import only cropped region of the image
>     axes = [Axes.X, Axes.Y]
>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
>     config = SCIFIOConfig()
>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>
>     opener = ImgOpener()
>     imps = opener.openImgs(fname, config)
>     imp = imps[0]
>
>     # Get filename and basename of the current cropped image
>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>     crop_fname = os.path.join(f.directory, crop_basename)
>     IJ.log("Saving crop to %s" % crop_fname)
>
>     # Create dataset
>     ds = data.create(imp)
>
>     # Save cropped image
>     data.save(ds, crop_fname)
>
> IJ.log('Done')
> ------------------------------------------------------------------------
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Sun, Jan 25, 2015 at 9:42 PM, Mark Hiner <hiner at wisc.edu> wrote:
>> Hi Hadrien,
>>
>>>I tried to use another method to save cropped images using DatasetService:
>>
>> I couldn't reproduce this failure.. it works for me using the
>> DatasetService. Do you have any local changes? Did you update your Fiji to
>> the latest version? If you're still having problems, you could also copy and
>> paste the "Useful information about your system" contents generated by Help
>>> Report a Bug.
>>
>>>    saver.saveImg(crop_fname, imp)
>>> at
>>> io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
>>> java.lang.NullPointerException: java.lang.NullPointerException
>>
>> Yes! This was definitely a bug - thank you for finding it. I think I have a
>> fix here: https://github.com/scifio/scifio/commits/fix-cell
>> Would you mind giving it a try locally in your workflow?
>>
>> Thank you!
>> - Mark
>>
>> On Sat, Jan 24, 2015 at 3:01 PM, Hadrien Mary <hadrien.mary at gmail.com>
>> wrote:
>>>
>>> Quick update:
>>>
>>> I tried to use another method to save cropped images using DatasetService:
>>>
>>> ---------------------------
>>> # Create dataset
>>> ds = data.create(imp)
>>>
>>> # Save cropped image
>>> data.save(ds, crop_fname)
>>> -------------------------
>>>
>>> And the error is exactly the same as before.
>>>
>>> --
>>> Hadrien Mary
>>>
>>> Ph.D student in Biology
>>> Tournier-Gachet Team
>>> CNRS - LBCMCP - UMR 5088
>>>
>>> Universit? de Toulouse - B?t. 4R3B1
>>> 118, route de Narbonne - 31062 Toulouse
>>>
>>>
>>> On Tue, Jan 20, 2015 at 10:17 AM, Hadrien Mary <hadrien.mary at gmail.com>
>>> wrote:
>>> > Another thing I noticed, it's that histogram is different when
>>> > cropping manually inside Fiji (select area and do "Duplicate") or when
>>> > it has been cropped with the python script (SCIFIO crop).
>>> >
>>> > See screenshot attachment.
>>> >
>>> >
>>> >
>>> > --
>>> > Hadrien Mary
>>> >
>>> > Ph.D student in Biology
>>> > Tournier-Gachet Team
>>> > CNRS - LBCMCP - UMR 5088
>>> >
>>> > Universit? de Toulouse - B?t. 4R3B1
>>> > 118, route de Narbonne - 31062 Toulouse
>>> >
>>> >
>>> > On Mon, Jan 19, 2015 at 10:29 AM, Hadrien Mary <hadrien.mary at gmail.com>
>>> > wrote:
>>> >> Hi again,
>>> >>
>>> >> The script works well for small images (OME Tiff or normal Tiff) with
>>> >> the recent Fiji update. However when I run it on large movies (13GB),
>>> >> I have the following error.
>>> >>
>>> >> ----------------------------------------------------------
>>> >> -- Classpath of ClassLoader --
>>> >> /home/hadim/local/Fiji.app/plugins/
>>> >>
>>> >> at org.scijava.Context.inject(Context.java:431)
>>> >> at org.scijava.Context.inject(Context.java:363)
>>> >> at
>>> >> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:237)
>>> >> at
>>> >> org.scijava.ui.DefaultUIService.discoverUIs(DefaultUIService.java:500)
>>> >> at org.scijava.ui.DefaultUIService.uiList(DefaultUIService.java:479)
>>> >> at
>>> >> org.scijava.ui.DefaultUIService.getAvailableUIs(DefaultUIService.java:231)
>>> >> at org.scijava.ui.DefaultUIService.onEvent(DefaultUIService.java:457)
>>> >> at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
>>> >> at
>>> >> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>> >> at java.lang.reflect.Method.invoke(Method.java:606)
>>> >> at
>>> >> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:280)
>>> >> at
>>> >> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:254)
>>> >> at
>>> >> org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
>>> >> at
>>> >> org.scijava.event.DefaultEventBus.access$201(DefaultEventBus.java:56)
>>> >> at org.scijava.event.DefaultEventBus$2.run(DefaultEventBus.java:223)
>>> >> at
>>> >> org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
>>> >> at
>>> >> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>> >> at
>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>> >> at
>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>> >> at java.lang.Thread.run(Thread.java:745)
>>> >> Traceback (most recent call last):
>>> >>   File
>>> >> "/home/hadim/local/Fiji.app/plugins/Scripts/Plugins/Crop_Multi_Roi.py",
>>> >> line 50, in <module>
>>> >>     saver.saveImg(crop_fname, imp)
>>> >> at
>>> >> io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
>>> >> at io.scif.img.cell.SCIFIOCellCache.load(SCIFIOCellCache.java:144)
>>> >> at
>>> >> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:122)
>>> >> at
>>> >> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:101)
>>> >> at net.imglib2.img.list.ListCursor.get(ListCursor.java:80)
>>> >> at net.imglib2.img.cell.CellCursor.getCell(CellCursor.java:92)
>>> >> at net.imglib2.img.cell.CellCursor.moveToNextCell(CellCursor.java:180)
>>> >> at net.imglib2.img.cell.CellCursor.reset(CellCursor.java:150)
>>> >> at net.imglib2.img.cell.CellCursor.<init>(CellCursor.java:86)
>>> >> at
>>> >> net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:113)
>>> >> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:47)
>>> >> at net.imglib2.img.AbstractImg.firstElement(AbstractImg.java:81)
>>> >> at net.imagej.ImgPlus.firstElement(ImgPlus.java:261)
>>> >> at io.scif.img.ImgSaver.populateMeta(ImgSaver.java:894)
>>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:514)
>>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:495)
>>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:457)
>>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:174)
>>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:158)
>>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:128)
>>> >> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>> >> at
>>> >> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
>>> >> at
>>> >> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>> >> at java.lang.reflect.Method.invoke(Method.java:606)
>>> >>
>>> >> java.lang.NullPointerException: java.lang.NullPointerException
>>> >> -------------------------------------------------------------------
>>> >>
>>> >> The associated script is below.
>>> >>
>>> >>
>>> >> ------------------------------------------------------------------------
>>> >> from ij import IJ
>>> >> from ij.plugin.frame import RoiManager
>>> >>
>>> >> from io.scif.config import SCIFIOConfig
>>> >> from io.scif.img import ImageRegion
>>> >> from io.scif.img import ImgOpener
>>> >> from io.scif.img import ImgSaver
>>> >> from net.imagej.axis import Axes
>>> >>
>>> >> import os
>>> >>
>>> >> # Get current image filename
>>> >> imp = IJ.getImage()
>>> >> f = imp.getOriginalFileInfo()
>>> >> fname = os.path.join(f.directory, f.fileName)
>>> >>
>>> >> IJ.log('Image filename is %s' % fname)
>>> >>
>>> >> # Iterate over all ROIs from ROI Manager
>>> >> rois = RoiManager.getInstance().getRoisAsArray()
>>> >> for i, roi in enumerate(rois):
>>> >>
>>> >>     crop_id = i +1
>>> >>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>> >>
>>> >>     # Get ROI bounds
>>> >>     bounds = roi.getBounds()
>>> >>     x = bounds.x
>>> >>     y = bounds.y
>>> >>     w = bounds.width
>>> >>     h = bounds.height
>>> >>
>>> >>     # Import only cropped region of the image
>>> >>     axes = [Axes.X, Axes.Y]
>>> >>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
>>> >>     config = SCIFIOConfig()
>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>> >>
>>> >>     opener = ImgOpener()
>>> >>     imps = opener.openImgs(fname, config)
>>> >>     imp = imps[0]
>>> >>
>>> >>     # Get filename and basename of the current cropped image
>>> >>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>> >>     crop_fname = os.path.join(f.directory, crop_basename)
>>> >>     IJ.log("Saving crop to %s" % crop_fname)
>>> >>
>>> >>     # Save cropped image
>>> >>     saver = ImgSaver()
>>> >>     saver.saveImg(crop_fname, imp)
>>> >>
>>> >> IJ.log('Done')
>>> >>
>>> >> ----------------------------------------------------------------------------
>>> >>
>>> >> Does opener.openImgs() wait for the image to open ? If it does not I
>>> >> guess that saver.saveImg() is called on an image that does not exist
>>> >> in memory.
>>> >>
>>> >> Thanks
>>> >>
>>> >> --
>>> >> Hadrien Mary
>>> >>
>>> >> Ph.D student in Biology
>>> >> Tournier-Gachet Team
>>> >> CNRS - LBCMCP - UMR 5088
>>> >>
>>> >> Universit? de Toulouse - B?t. 4R3B1
>>> >> 118, route de Narbonne - 31062 Toulouse
>>> >>
>>> >>
>>> >> On Wed, Jan 14, 2015 at 4:35 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>> >> wrote:
>>> >>> I confirm it works !
>>> >>>
>>> >>> Thanks again
>>> >>>
>>> >>> --
>>> >>> Hadrien Mary
>>> >>>
>>> >>> Ph.D student in Biology
>>> >>> Tournier-Gachet Team
>>> >>> CNRS - LBCMCP - UMR 5088
>>> >>>
>>> >>> Universit? de Toulouse - B?t. 4R3B1
>>> >>> 118, route de Narbonne - 31062 Toulouse
>>> >>>
>>> >>>
>>> >>> On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>> >>>> Hi Hadrien,
>>> >>>>
>>> >>>>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>> >>>>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>> >>>>
>>> >>>> Ah sorry - my fault again for responding too quickly. ImageJ.git
>>> >>>> doesn't
>>> >>>> have a dependency on scifio-ome-xml; it's a dependency in Fiji
>>> >>>> itself[1]. So
>>> >>>> when you installed ImageJ into your Fiji, it updated all the
>>> >>>> dependencies
>>> >>>> but didn't actually update scifio-ome-xml.
>>> >>>>
>>> >>>> You can either manually copy scifio-ome-xml[2] over, or try
>>> >>>> installing from
>>> >>>> the latest Fiji master[3] which I just updated to have the latest
>>> >>>> dependencies.
>>> >>>>
>>> >>>> [1]
>>> >>>>
>>> >>>> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
>>> >>>> [2]
>>> >>>>
>>> >>>> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>> >>>> [3]
>>> >>>>
>>> >>>> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
>>> >>>>
>>> >>>> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary
>>> >>>> <hadrien.mary at gmail.com>
>>> >>>> wrote:
>>> >>>>>
>>> >>>>> Ok it makes sense now !
>>> >>>>>
>>> >>>>> So I did what you told me about cloning imagej repo, building and
>>> >>>>> install it with maven inside my local Fiji.app/. I don't know if
>>> >>>>> it's
>>> >>>>> a bug or a missing dependency but I am now unable to open OME Tiff
>>> >>>>> files (other kind of file works well) wether it is by drag and drop
>>> >>>>> or
>>> >>>>> with my script. The error is the following:
>>> >>>>>
>>> >>>>> -------------------------------------------------
>>> >>>>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>> >>>>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>> >>>>> at
>>> >>>>>
>>> >>>>> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
>>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
>>> >>>>> at
>>> >>>>> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
>>> >>>>> at
>>> >>>>> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
>>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
>>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
>>> >>>>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
>>> >>>>> at
>>> >>>>>
>>> >>>>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
>>> >>>>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
>>> >>>>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
>>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
>>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
>>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
>>> >>>>> at
>>> >>>>>
>>> >>>>> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
>>> >>>>> at
>>> >>>>>
>>> >>>>> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
>>> >>>>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
>>> >>>>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
>>> >>>>> at java.lang.Thread.run(Thread.java:745)
>>> >>>>> -----------------------------------------------
>>> >>>>>
>>> >>>>> I guess something in scifio has not been updated to use the new
>>> >>>>> net.imagej.axis or maybe the update is not built/downloaded when I
>>> >>>>> run
>>> >>>>> maven on my imagej clone.
>>> >>>>>
>>> >>>>>
>>> >>>>> --
>>> >>>>> Hadrien Mary
>>> >>>>>
>>> >>>>> Ph.D student in Biology
>>> >>>>> Tournier-Gachet Team
>>> >>>>> CNRS - LBCMCP - UMR 5088
>>> >>>>>
>>> >>>>> Universit? de Toulouse - B?t. 4R3B1
>>> >>>>> 118, route de Narbonne - 31062 Toulouse
>>> >>>>>
>>> >>>>>
>>> >>>>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>> >>>>> > Hi Hadrien,
>>> >>>>> >
>>> >>>>> >>Sorry if it's off topic but I tried to run my script and I got a
>>> >>>>> >> python
>>> >>>>> >> error
>>> >>>>> >
>>> >>>>> > Oh no! This is totally my fault. I had to update your script for
>>> >>>>> > the new
>>> >>>>> > dependencies I mentioned and forgot to paste the new version in my
>>> >>>>> > response
>>> >>>>> > yesterday:
>>> >>>>> >
>>> >>>>> >>from net.imglib2.meta import Axes
>>> >>>>> >
>>> >>>>> > This import needs to change to:
>>> >>>>> >
>>> >>>>> > from net.imagej.axis import Axes
>>> >>>>> >
>>> >>>>> > Sorry about that!
>>> >>>>> >
>>> >>>>> > Best,
>>> >>>>> > Mark
>>> >>>>> >
>>> >>>>> >
>>> >>>>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary
>>> >>>>> > <hadrien.mary at gmail.com>
>>> >>>>> > wrote:
>>> >>>>> >>
>>> >>>>> >> Thank you Mark !
>>> >>>>> >>
>>> >>>>> >> Sorry if it's off topic but I tried to run my script and I got a
>>> >>>>> >> python error probably related to type difference between python
>>> >>>>> >> and
>>> >>>>> >> java. It's not the first time I saw this kind of message and I'd
>>> >>>>> >> like
>>> >>>>> >> to know how to resolve it. Note that for python script I mainly
>>> >>>>> >> use
>>> >>>>> >> javadoc as documentation.
>>> >>>>> >>
>>> >>>>> >> The error is below coming from almost the same script as before
>>> >>>>> >> in this
>>> >>>>> >> thread.
>>> >>>>> >>
>>> >>>>> >> ********************************
>>> >>>>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>>> >>>>> >> Traceback (most recent call last):
>>> >>>>> >>   File
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>>> >>>>> >> line 17, in <module>
>>> >>>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>> >>>>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>>> >>>>> >> net.imagej.axis.AxisType[]
>>> >>>>> >>
>>> >>>>> >> at org.python.core.Py.TypeError(Py.java:235)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
>>> >>>>> >> at
>>> >>>>> >> org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>>> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>>> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>>> >>>>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>>> >>>>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
>>> >>>>> >> at org.python.core.PyType.__call__(PyType.java:1548)
>>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
>>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>>> >>>>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>> >>>>> >> at org.python.core.PyCode.call(PyCode.java:18)
>>> >>>>> >> at org.python.core.Py.runCode(Py.java:1275)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>> >>>>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>> >>>>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>> >>>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>> >>>>> >> at
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>> >>>>> >> at java.lang.Thread.run(Thread.java:745)
>>> >>>>> >> ************************************
>>> >>>>> >>
>>> >>>>> >> --
>>> >>>>> >> Hadrien Mary
>>> >>>>> >>
>>> >>>>> >> Ph.D student in Biology
>>> >>>>> >> Tournier-Gachet Team
>>> >>>>> >> CNRS - LBCMCP - UMR 5088
>>> >>>>> >>
>>> >>>>> >> Universit? de Toulouse - B?t. 4R3B1
>>> >>>>> >> 118, route de Narbonne - 31062 Toulouse
>>> >>>>> >>
>>> >>>>> >>
>>> >>>>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu>
>>> >>>>> >> wrote:
>>> >>>>> >> > Hi Hadrien,
>>> >>>>> >> >
>>> >>>>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite
>>> >>>>> >> > broken.
>>> >>>>> >> >
>>> >>>>> >> >  It's working for me now, as of the latest SCIFIO[1] and
>>> >>>>> >> > SCIFIO-OME-XML[2].
>>> >>>>> >> > Note that these libraries have updated dependencies compared to
>>> >>>>> >> > what's
>>> >>>>> >> > currently on Fiji, so you can't just drop these .jars into your
>>> >>>>> >> > Fiji
>>> >>>>> >> > installation if you want to test locally; you need to update
>>> >>>>> >> > the
>>> >>>>> >> > dependencies as well. The easiest way to do this would be to
>>> >>>>> >> > just
>>> >>>>> >> > clone
>>> >>>>> >> > Imagej.git[3] and install it into your Fiji.app directory by
>>> >>>>> >> > running:
>>> >>>>> >> >
>>> >>>>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>>> >>>>> >> > -Ddelete.other.versions=true
>>> >>>>> >> >
>>> >>>>> >> > We'll push these changes up to Fiji this week, and I will find
>>> >>>>> >> > or
>>> >>>>> >> > write
>>> >>>>> >> > better instructions for local testing.
>>> >>>>> >> >
>>> >>>>> >> > Hope this helps. Let us know if you have any
>>> >>>>> >> > questions/problems.
>>> >>>>> >> > Thanks
>>> >>>>> >> > again for finding this issue!
>>> >>>>> >> >
>>> >>>>> >> > Best,
>>> >>>>> >> > - Mark
>>> >>>>> >> >
>>> >>>>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>>> >>>>> >> > [2]
>>> >>>>> >> >
>>> >>>>> >> >
>>> >>>>> >> >
>>> >>>>> >> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>> >>>>> >> > [3] https://github.com/imagej/imagej
>>> >>>>> >> >
>>> >>>>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
>>> >>>>> >> > <hadrien.mary at gmail.com>
>>> >>>>> >> > wrote:
>>> >>>>> >> >>
>>> >>>>> >> >> Ok. Let me know when you want me to test your changes. I also
>>> >>>>> >> >> tested
>>> >>>>> >> >> fix-writing branch and I didn't notice any changes.
>>> >>>>> >> >>
>>> >>>>> >> >> --
>>> >>>>> >> >> Hadrien Mary
>>> >>>>> >> >>
>>> >>>>> >> >> Ph.D student in Biology
>>> >>>>> >> >> Tournier-Gachet Team
>>> >>>>> >> >> CNRS - LBCMCP - UMR 5088
>>> >>>>> >> >>
>>> >>>>> >> >> Universit? de Toulouse - B?t. 4R3B1
>>> >>>>> >> >> 118, route de Narbonne - 31062 Toulouse
>>> >>>>> >> >>
>>> >>>>> >> >>
>>> >>>>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu>
>>> >>>>> >> >> wrote:
>>> >>>>> >> >> > Hi Hadrien,
>>> >>>>> >> >> >
>>> >>>>> >> >> > I've identified at least two bugs that could be affecting
>>> >>>>> >> >> > you
>>> >>>>> >> >> > here.
>>> >>>>> >> >> >
>>> >>>>> >> >> > First of all, there was a bug in the OME-TIFF format writing
>>> >>>>> >> >> > out
>>> >>>>> >> >> > multi-dimensional images. That's fixed on a branch but not
>>> >>>>> >> >> > uploaded
>>> >>>>> >> >> > to
>>> >>>>> >> >> > Fiji
>>> >>>>> >> >> > yet [1].
>>> >>>>> >> >> >
>>> >>>>> >> >> > Second, it seems like cropping is restricting pixel reads to
>>> >>>>> >> >> > the
>>> >>>>> >> >> > correct
>>> >>>>> >> >> > region but then doesn't change the image size.
>>> >>>>> >> >> >
>>> >>>>> >> >> > I'm hoping when I fix the second issue writing cropped
>>> >>>>> >> >> > regions
>>> >>>>> >> >> > will
>>> >>>>> >> >> > be
>>> >>>>> >> >> > fixed.
>>> >>>>> >> >> >
>>> >>>>> >> >> > Thanks for the great feedback!
>>> >>>>> >> >> > - Mark
>>> >>>>> >> >> >
>>> >>>>> >> >> > [1]
>>> >>>>> >> >> > https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>>> >>>>> >> >> >
>>> >>>>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>>> >>>>> >> >> > <hadrien.mary at gmail.com>
>>> >>>>> >> >> > wrote:
>>> >>>>> >> >> >>
>>> >>>>> >> >> >> I also confirm the same behaviour when replacing original
>>> >>>>> >> >> >> file by
>>> >>>>> >> >> >> OME
>>> >>>>> >> >> >> sample data :
>>> >>>>> >> >> >>
>>> >>>>> >> >> >>
>>> >>>>> >> >> >>
>>> >>>>> >> >> >>
>>> >>>>> >> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>>> >>>>> >> >> >>
>>> >>>>> >> >> >> --
>>> >>>>> >> >> >> Hadrien Mary
>>> >>>>> >> >> >>
>>> >>>>> >> >> >> Ph.D student in Biology
>>> >>>>> >> >> >> Tournier-Gachet Team
>>> >>>>> >> >> >> CNRS - LBCMCP - UMR 5088
>>> >>>>> >> >> >>
>>> >>>>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
>>> >>>>> >> >> >> 118, route de Narbonne - 31062 Toulouse
>>> >>>>> >> >> >>
>>> >>>>> >> >> >>
>>> >>>>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>>> >>>>> >> >> >> <hadrien.mary at gmail.com>
>>> >>>>> >> >> >> wrote:
>>> >>>>> >> >> >> > After some investigations I think there is a bug with
>>> >>>>> >> >> >> > ImgSaver.
>>> >>>>> >> >> >> > In
>>> >>>>> >> >> >> > the
>>> >>>>> >> >> >> > following script, X, Y crop is fine but axes informations
>>> >>>>> >> >> >> > (T
>>> >>>>> >> >> >> > and
>>> >>>>> >> >> >> > Z)
>>> >>>>> >> >> >> > are lost and all frames appears on the same axes. Now if
>>> >>>>> >> >> >> > I
>>> >>>>> >> >> >> > replace
>>> >>>>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>>> >>>>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
>>> >>>>> >> >> >> > cropped
>>> >>>>> >> >> >> > image has the same dimensions than original however axes
>>> >>>>> >> >> >> > informations
>>> >>>>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel
>>> >>>>> >> >> >> > values
>>> >>>>> >> >> >> > are
>>> >>>>> >> >> >> > totally incoherent which is not the case in cropped.tif.
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > Files can be found here :
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>>> >>>>> >> >> >> > original.ome.tif.
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > The script:
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > ---------------------------------------------------
>>> >>>>> >> >> >> > from io.scif import SCIFIO
>>> >>>>> >> >> >> > from io.scif.config import SCIFIOConfig
>>> >>>>> >> >> >> > from io.scif.img import ImageRegion
>>> >>>>> >> >> >> > from io.scif.img import ImgOpener
>>> >>>>> >> >> >> > from io.scif.img import ImgSaver
>>> >>>>> >> >> >> > from net.imglib2.meta import Axes
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > fname = "/home/hadim/original.ome.tif"
>>> >>>>> >> >> >> > target = "/home/hadim/cropped.tif"
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > axes = [Axes.X, Axes.Y]
>>> >>>>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>>> >>>>> >> >> >> > config = SCIFIOConfig()
>>> >>>>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > opener = ImgOpener()
>>> >>>>> >> >> >> > imps = opener.openImgs(fname, config)
>>> >>>>> >> >> >> > imp = imps[0]
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > saver = ImgSaver()
>>> >>>>> >> >> >> > saver.saveImg(target, imp)
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > print('Done')
>>> >>>>> >> >> >> > ---------------------------------------------------
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > --
>>> >>>>> >> >> >> > Hadrien Mary
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> >
>>> >>>>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>>> >>>>> >> >> >> > <hadrien.mary at gmail.com>
>>> >>>>> >> >> >> > wrote:
>>> >>>>> >> >> >> >> Thanks for the tip (reminder to me: always look for
>>> >>>>> >> >> >> >> example in
>>> >>>>> >> >> >> >> tests!).
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> Unfortunately crop does not work... I will try to do
>>> >>>>> >> >> >> >> more
>>> >>>>> >> >> >> >> tests
>>> >>>>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> Updated code:
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> from ij import IJ
>>> >>>>> >> >> >> >> from ij import ImagePlus
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> from io.scif import SCIFIO
>>> >>>>> >> >> >> >> from io.scif.config import SCIFIOConfig
>>> >>>>> >> >> >> >> from io.scif.img import ImageRegion
>>> >>>>> >> >> >> >> from io.scif.img import ImgOpener
>>> >>>>> >> >> >> >> from io.scif.img import ImgSaver
>>> >>>>> >> >> >> >> from net.imglib2.meta import Axes
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
>>> >>>>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> axes = [Axes.X, Axes.Y]
>>> >>>>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>>> >>>>> >> >> >> >> config = SCIFIOConfig()
>>> >>>>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> opener = ImgOpener()
>>> >>>>> >> >> >> >> imps = opener.openImgs(fname, config)
>>> >>>>> >> >> >> >> imp = imps[0]
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> saver = ImgSaver()
>>> >>>>> >> >> >> >> saver.saveImg(target, imp)
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> print('Done')
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> --
>>> >>>>> >> >> >> >> Hadrien Mary
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >>
>>> >>>>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>>> >>>>> >> >> >> >> <ctrueden at wisc.edu>
>>> >>>>> >> >> >> >> wrote:
>>> >>>>> >> >> >> >>> Hi Hadrien,
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>>> I would like to be able to crop a region in X and Y
>>> >>>>> >> >> >> >>>> while
>>> >>>>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z,
>>> >>>>> >> >> >> >>>> T).
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>> Here's some Java:
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>>> >>>>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>>> >>>>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" +
>>> >>>>> >> >> >> >>> maxY
>>> >>>>> >> >> >> >>> };
>>> >>>>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes,
>>> >>>>> >> >> >> >>> ranges));
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>> Adapted from here:
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>> And untested.
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>> HTH,
>>> >>>>> >> >> >> >>> Curtis
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>>> >>>>> >> >> >> >>> <hadrien.mary at gmail.com>
>>> >>>>> >> >> >> >>> wrote:
>>> >>>>> >> >> >> >>>>
>>> >>>>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
>>> >>>>> >> >> >> >>>> instanciate
>>> >>>>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help
>>> >>>>> >> >> >> >>>> me...
>>> >>>>> >> >> >> >>>> I
>>> >>>>> >> >> >> >>>> would
>>> >>>>> >> >> >> >>>> like to be able to crop a region in X and Y while
>>> >>>>> >> >> >> >>>> keeping
>>> >>>>> >> >> >> >>>> any
>>> >>>>> >> >> >> >>>> other
>>> >>>>> >> >> >> >>>> dimensions which could exist (C, Z, T).
>>> >>>>> >> >> >> >>>>
>>> >>>>> >> >> >> >>>> --
>>> >>>>> >> >> >> >>>> Hadrien Mary
>>> >>>>> >> >> >> >>>>
>>> >>>>> >> >> >> >>>>
>>> >>>>> >> >> >> >>>>
>>> >>>>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>>> >>>>> >> >> >> >>>> <hadrien.mary at gmail.com>
>>> >>>>> >> >> >> >>>> wrote:
>>> >>>>> >> >> >> >>>> > Thank you Curtis for the answer.
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > I tried to apply what you told me and the code now
>>> >>>>> >> >> >> >>>> > works
>>> >>>>> >> >> >> >>>> > without
>>> >>>>> >> >> >> >>>> > error. However the saved cropped image is not
>>> >>>>> >> >> >> >>>> > cropped
>>> >>>>> >> >> >> >>>> > (same
>>> >>>>> >> >> >> >>>> > size
>>> >>>>> >> >> >> >>>> > as
>>> >>>>> >> >> >> >>>> > original) and pixel values are modified).
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > Script:
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
>>> >>>>> >> >> >> >>>> > from io.scif.img import ImageRegion
>>> >>>>> >> >> >> >>>> > from io.scif.img import ImgOpener
>>> >>>>> >> >> >> >>>> > from io.scif.img import ImgSaver
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>>> >>>>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > config = SCIFIOConfig()
>>> >>>>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10,
>>> >>>>> >> >> >> >>>> > height=10))
>>> >>>>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > opener = ImgOpener()
>>> >>>>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
>>> >>>>> >> >> >> >>>> > imp = imps[0]
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > print(imps)
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > saver = ImgSaver()
>>> >>>>> >> >> >> >>>> > saver.saveImg(target, imp)
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you
>>> >>>>> >> >> >> >>>> > don't
>>> >>>>> >> >> >> >>>> > have
>>> >>>>> >> >> >> >>>> > time
>>> >>>>> >> >> >> >>>> > to
>>> >>>>> >> >> >> >>>> > write an example.
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > I will be happy to provide some python/scifio
>>> >>>>> >> >> >> >>>> > examples
>>> >>>>> >> >> >> >>>> > scripts.
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > --
>>> >>>>> >> >> >> >>>> > Hadrien Mary
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > Ph.D student in Biology
>>> >>>>> >> >> >> >>>> > Tournier-Gachet Team
>>> >>>>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>>> >>>>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> >
>>> >>>>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>>> >>>>> >> >> >> >>>> > <ctrueden at wisc.edu>
>>> >>>>> >> >> >> >>>> > wrote:
>>> >>>>> >> >> >> >>>> >> Hi Hadrien,
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
>>> >>>>> >> >> >> >>>> >>> disk but
>>> >>>>> >> >> >> >>>> >>> it
>>> >>>>> >> >> >> >>>> >>> doesn
>>> >>>>> >> >> >> >>>> >>> not
>>> >>>>> >> >> >> >>>> >>> work.
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >> The error you see is because SCIFIO operates on
>>> >>>>> >> >> >> >>>> >> ImgLib2
>>> >>>>> >> >> >> >>>> >> data
>>> >>>>> >> >> >> >>>> >> structures, not
>>> >>>>> >> >> >> >>>> >> ImagePlus objects.
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
>>> >>>>> >> >> >> >>>> >>> setCropRegion
>>> >>>>> >> >> >> >>>> >>> function
>>> >>>>> >> >> >> >>>> >>> in
>>> >>>>> >> >> >> >>>> >>> SCIFIO ?
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
>>> >>>>> >> >> >> >>>> >> imgOpenerSetRegion
>>> >>>>> >> >> >> >>>> >> [1]
>>> >>>>> >> >> >> >>>> >> on
>>> >>>>> >> >> >> >>>> >> it,
>>> >>>>> >> >> >> >>>> >> then
>>> >>>>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get
>>> >>>>> >> >> >> >>>> >> back
>>> >>>>> >> >> >> >>>> >> an
>>> >>>>> >> >> >> >>>> >> ImgLib2
>>> >>>>> >> >> >> >>>> >> data
>>> >>>>> >> >> >> >>>> >> object which can then be fed to the SCIFIO
>>> >>>>> >> >> >> >>>> >> ImgSaver.
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an
>>> >>>>> >> >> >> >>>> >> example
>>> >>>>> >> >> >> >>>> >> for
>>> >>>>> >> >> >> >>>> >> you
>>> >>>>> >> >> >> >>>> >> right
>>> >>>>> >> >> >> >>>> >> now. It
>>> >>>>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2]
>>> >>>>> >> >> >> >>>> >> that use
>>> >>>>> >> >> >> >>>> >> the
>>> >>>>> >> >> >> >>>> >> ImgOpener
>>> >>>>> >> >> >> >>>> >> and
>>> >>>>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs
>>> >>>>> >> >> >> >>>> >> akin to
>>> >>>>> >> >> >> >>>> >> the
>>> >>>>> >> >> >> >>>> >> Bio-Formats
>>> >>>>> >> >> >> >>>> >> "BF"
>>> >>>>> >> >> >> >>>> >> functionality... please feel welcome to contribute
>>> >>>>> >> >> >> >>>> >> some!
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >> Regards,
>>> >>>>> >> >> >> >>>> >> Curtis
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >> [1]
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>>> >>>>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>>> >>>>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
>>> >>>>> >> >> >> >>>> >> wrote:
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> Hi,
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> I am writing a python macro which iterate over all
>>> >>>>> >> >> >> >>>> >>> rois
>>> >>>>> >> >> >> >>>> >>> in
>>> >>>>> >> >> >> >>>> >>> ROI
>>> >>>>> >> >> >> >>>> >>> Manager
>>> >>>>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
>>> >>>>> >> >> >> >>>> >>> plugin
>>> >>>>> >> >> >> >>>> >>> to
>>> >>>>> >> >> >> >>>> >>> open
>>> >>>>> >> >> >> >>>> >>> a
>>> >>>>> >> >> >> >>>> >>> cropped region of an image.
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
>>> >>>>> >> >> >> >>>> >>> disk but
>>> >>>>> >> >> >> >>>> >>> it
>>> >>>>> >> >> >> >>>> >>> doesn
>>> >>>>> >> >> >> >>>> >>> not
>>> >>>>> >> >> >> >>>> >>> work.
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> Here is my script:
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>>> >>>>> >> >> >> >>>> >>> from ij import IJ
>>> >>>>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> from loci.plugins import BF
>>> >>>>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>>> >>>>> >> >> >> >>>> >>> from loci.common import Region
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> import os
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> # Get current image filename
>>> >>>>> >> >> >> >>>> >>> imp = IJ.getImage()
>>> >>>>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>>> >>>>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>>> >>>>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>>> >>>>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>     crop_id = i +1
>>> >>>>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
>>> >>>>> >> >> >> >>>> >>> len(rois)))
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>     bounds = roi.getBounds()
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>     x = bounds.x
>>> >>>>> >> >> >> >>>> >>>     y = bounds.y
>>> >>>>> >> >> >> >>>> >>>     w = bounds.width
>>> >>>>> >> >> >> >>>> >>>     h = bounds.height
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>     # Import only cropped region of the image
>>> >>>>> >> >> >> >>>> >>>     options = ImporterOptions()
>>> >>>>> >> >> >> >>>> >>>     options.setCrop(True)
>>> >>>>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>>> >>>>> >> >> >> >>>> >>>     options.setId(fname)
>>> >>>>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>     imp = imps[0]
>>> >>>>> >> >> >> >>>> >>>     imp.show()
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id,
>>> >>>>> >> >> >> >>>> >>> f.fileName)
>>> >>>>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
>>> >>>>> >> >> >> >>>> >>> crop_basename)
>>> >>>>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>     # Save image
>>> >>>>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>>> >>>>> >> >> >> >>>> >>>     saver = ImgSaver()
>>> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> IJ.log('Done')
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> It fails with this error:
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> Traceback (most recent call last):
>>> >>>>> >> >> >> >>>> >>>   File
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>>> >>>>> >> >> >> >>>> >>> line
>>> >>>>> >> >> >> >>>> >>> 49, in <module>
>>> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>> >>>>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>>> >>>>> >> >> >> >>>> >>> io.scif.Writer,
>>> >>>>> >> >> >> >>>> >>> String
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyObject.__call__(PyObject.java:422)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyObject.__call__(PyObject.java:426)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyMethod.__call__(PyMethod.java:139)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.python.core.PyTableCode.call(PyTableCode.java:165)
>>> >>>>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>>> >>>>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>> >>>>> >> >> >> >>>> >>> at
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>> >>>>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> Three questions:
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> how can I write cropped image (I need to write
>>> >>>>> >> >> >> >>>> >>> them as
>>> >>>>> >> >> >> >>>> >>> OME
>>> >>>>> >> >> >> >>>> >>> Tiff
>>> >>>>> >> >> >> >>>> >>> so I
>>> >>>>> >> >> >> >>>> >>> need BF or SCIFIO).
>>> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
>>> >>>>> >> >> >> >>>> >>> setCropRegion
>>> >>>>> >> >> >> >>>> >>> function
>>> >>>>> >> >> >> >>>> >>> in
>>> >>>>> >> >> >> >>>> >>> SCIFIO
>>> >>>>> >> >> >> >>>> >>> ?
>>> >>>>> >> >> >> >>>> >>> I am currently using
>>> >>>>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>>> >>>>> >> >> >> >>>> >>> to
>>> >>>>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a
>>> >>>>> >> >> >> >>>> >>> ROIManager
>>> >>>>> >> >> >> >>>> >>> instance
>>> >>>>> >> >> >> >>>> >>> from
>>> >>>>> >> >> >> >>>> >>> RoiSet.zip file ?
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> Any help would be very appreciated.
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> Thanks !
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> ?
>>> >>>>> >> >> >> >>>> >>> Hadrien Mary
>>> >>>>> >> >> >> >>>> >>>
>>> >>>>> >> >> >> >>>> >>> _______________________________________________
>>> >>>>> >> >> >> >>>> >>> ImageJ-devel mailing list
>>> >>>>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
>>> >>>>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>> >>
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >> >>>
>>> >>>>> >> >> >>
>>> >>>>> >> >> >> _______________________________________________
>>> >>>>> >> >> >> ImageJ-devel mailing list
>>> >>>>> >> >> >> ImageJ-devel at imagej.net
>>> >>>>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>>> >>>>> >> >> >
>>> >>>>> >> >> >
>>> >>>>> >> >
>>> >>>>> >> >
>>> >>>>> >
>>> >>>>> >
>>> >>>>
>>> >>>>
>>
>>


From hadrien.mary at gmail.com  Mon Jan 26 09:48:39 2015
From: hadrien.mary at gmail.com (Hadrien Mary)
Date: Mon, 26 Jan 2015 16:48:39 +0100
Subject: [ImageJ-devel] Save/write image with SCIFIO/BF in python script
In-Reply-To: <CAEpSnnb32Oz54D3cUnNzAtTQEkL21afBctA=m+BM7du6ij1tjg@mail.gmail.com>
References: <CAEpSnnaNWiJ35VRsVbOQHOE4oAKrOMgk+0o0up3zukr_NeS+QA@mail.gmail.com>
	<CADN69y=cverBO1oB1AR+SbJC6sR6s8jKq536iFqsd6Xg5beOvA@mail.gmail.com>
	<CAEpSnnY8FJWPdGAfkHJeiCmoAe_YzPAeTnphNU_0qXBMjHzrqg@mail.gmail.com>
	<CAEpSnnZC9CmGSMKGXwC3S+y=pxV46BmfbCEUPU2A2-LUrH4ovw@mail.gmail.com>
	<CADN69ykm9X+UCxRVYBLW3zPtNKSPqChGHEDCcs9OtGEg=LOz+A@mail.gmail.com>
	<CAEpSnnajJN7o1WRavrasOx6SnFLNTJ3nLvCHLwghzGeMXU3svQ@mail.gmail.com>
	<CAEpSnnYExsf6hM_V90MwEYUzboYBxmangDFqpX22za-FxDAdxA@mail.gmail.com>
	<CAEpSnnb5CTDVBabSDS07uxs=x_52LL0HquJObcXu95V4yQLi5A@mail.gmail.com>
	<CA+B=mGq4UvVx_h1yWDRmrFGEQkAycQiyRHU0jbEOX3WzPsU9ZQ@mail.gmail.com>
	<CAEpSnnYiHx7b4=zCW3hVKPknuaYT9fyPFAaT1xOUqU6CAFgbHw@mail.gmail.com>
	<CA+B=mGpK+r7nqpb-7+ZcNnWWE+OeTau_NjE_Hu6NvSE0nv8pcw@mail.gmail.com>
	<CAEpSnnb-R92kOwwWEaC_7HVsL7vT+vM2f=-dwvLnCCzC+92GMw@mail.gmail.com>
	<CA+B=mGoHBusgxmWKH5wMLBEhr6fQT9S6y0E-GEBeSvXjMM=O8Q@mail.gmail.com>
	<CAEpSnnZ7jZHf2Ft6npc=Y4n4aD4t=smrwijVuL9HYe-no09F=A@mail.gmail.com>
	<CA+B=mGp50V3UydSJo9sN2+g=L37yxfL0yB0WwsD2TivJ9WM7XQ@mail.gmail.com>
	<CAEpSnnYz4TyX4aXSN6LaczM+759ONhWpWtm6y87d605xnEuOpg@mail.gmail.com>
	<CAEpSnna=t=JbuRGDg+CUjoUT1SeDZAJhpirPaP+_9txUUgnx6Q@mail.gmail.com>
	<CAEpSnna31YnH6bBxePyxtx7VWypNLYYQ7JwtEczVZy58HgcOfQ@mail.gmail.com>
	<CAEpSnnakWEw11=cpYHxYgq7M1jnB6iXcoJOEtSxYxyfPAFKifw@mail.gmail.com>
	<CA+B=mGo7ctpasVCQhPNdB3vpOzXauBD92OqSOqdSFByKYhH6OQ@mail.gmail.com>
	<CAEpSnnaTQUFPqe27epupiQVtWDo8fzBvS8=8mw4c_P6mnxd8VQ@mail.gmail.com>
	<CAEpSnnb32Oz54D3cUnNzAtTQEkL21afBctA=m+BM7du6ij1tjg@mail.gmail.com>
Message-ID: <CAEpSnnaPW2HSQ1G2+qTOAng-xzS1ffuGbmqz-pZTWRZy1vKa-Q@mail.gmail.com>

The weird thing is if I manually save the cropped image with BF
exporter. It works, OME XML string is correct and the cropped image
can be easly re-opened (and I don't know why but BF exporter image
size is huge (40MB) for and original image of 1.9MB).

--
Hadrien Mary

Ph.D student in Biology
Tournier-Gachet Team
CNRS - LBCMCP - UMR 5088

Universit? de Toulouse - B?t. 4R3B1
118, route de Narbonne - 31062 Toulouse


On Mon, Jan 26, 2015 at 4:37 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
> It appears that I have the same behaviour using 'ij.op().crop()'.
>
> So in short, my script works well for croping but saving the cropped
> image on disk totally failed. In appearence it works but if you try to
> open the image, axes (other than X and Y) are merged and it seems that
> only the first image has been saved because all other frames from the
> stack are the same.
>
> Looking at the OME XML string of the cropped image, it appears that
> attributes of Pixel tag has been all set to 1.0.
>
> Best,
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Sun, Jan 25, 2015 at 10:22 PM, Hadrien Mary <hadrien.mary at gmail.com> wrote:
>> I am now using 'ij.op().crop()' which works well.
>>
>> I also test fix-cell branch with my previous code (using SCIFIOConfig
>> and ImageRegion) which fix the save issue (both with ImgSaver and
>> DatasetService). However cropped image histogram is very different
>> from the original.
>>
>> This issue appears only with my dataset (it works well with Samples >
>> Track for Trackmate for example).
>>
>> Please try the following script with this file :
>> https://arwen.hadim.fr/public.php?service=files&t=0d6a774bdfaeed521156ec8a8f9ccdcf
>>
>> ----------------------------------------------
>> # @DatasetService data
>>
>> from ij import IJ
>> from ij.plugin.frame import RoiManager
>>
>> from io.scif.config import SCIFIOConfig
>> from io.scif.img import ImageRegion
>> from io.scif.img import ImgOpener
>> from io.scif.img import ImgSaver
>> from net.imagej.axis import Axes
>>
>> import os
>>
>> # Get current image filename
>> imp = IJ.getImage()
>> f = imp.getOriginalFileInfo()
>> fname = os.path.join(f.directory, f.fileName)
>>
>> IJ.log('Image filename is %s' % fname)
>>
>> # Iterate over all ROIs from ROI Manager
>> rois = RoiManager.getInstance().getRoisAsArray()
>> for i, roi in enumerate(rois):
>>
>>     crop_id = i +1
>>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>
>>     # Get ROI bounds
>>     bounds = roi.getBounds()
>>     x = bounds.x
>>     y = bounds.y
>>     w = bounds.width
>>     h = bounds.height
>>
>>     # Import only cropped region of the image
>>     axes = [Axes.X, Axes.Y]
>>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
>>     config = SCIFIOConfig()
>>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>
>>     opener = ImgOpener()
>>     imps = opener.openImgs(fname, config)
>>     imp = imps[0]
>>
>>     # Get filename and basename of the current cropped image
>>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>     crop_fname = os.path.join(f.directory, crop_basename)
>>     IJ.log("Saving crop to %s" % crop_fname)
>>
>>     # Create dataset
>>     ds = data.create(imp)
>>
>>     # Save cropped image
>>     data.save(ds, crop_fname)
>>
>> IJ.log('Done')
>> ------------------------------------------------------------------------
>>
>> --
>> Hadrien Mary
>>
>> Ph.D student in Biology
>> Tournier-Gachet Team
>> CNRS - LBCMCP - UMR 5088
>>
>> Universit? de Toulouse - B?t. 4R3B1
>> 118, route de Narbonne - 31062 Toulouse
>>
>>
>> On Sun, Jan 25, 2015 at 9:42 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>> Hi Hadrien,
>>>
>>>>I tried to use another method to save cropped images using DatasetService:
>>>
>>> I couldn't reproduce this failure.. it works for me using the
>>> DatasetService. Do you have any local changes? Did you update your Fiji to
>>> the latest version? If you're still having problems, you could also copy and
>>> paste the "Useful information about your system" contents generated by Help
>>>> Report a Bug.
>>>
>>>>    saver.saveImg(crop_fname, imp)
>>>> at
>>>> io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
>>>> java.lang.NullPointerException: java.lang.NullPointerException
>>>
>>> Yes! This was definitely a bug - thank you for finding it. I think I have a
>>> fix here: https://github.com/scifio/scifio/commits/fix-cell
>>> Would you mind giving it a try locally in your workflow?
>>>
>>> Thank you!
>>> - Mark
>>>
>>> On Sat, Jan 24, 2015 at 3:01 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>> wrote:
>>>>
>>>> Quick update:
>>>>
>>>> I tried to use another method to save cropped images using DatasetService:
>>>>
>>>> ---------------------------
>>>> # Create dataset
>>>> ds = data.create(imp)
>>>>
>>>> # Save cropped image
>>>> data.save(ds, crop_fname)
>>>> -------------------------
>>>>
>>>> And the error is exactly the same as before.
>>>>
>>>> --
>>>> Hadrien Mary
>>>>
>>>> Ph.D student in Biology
>>>> Tournier-Gachet Team
>>>> CNRS - LBCMCP - UMR 5088
>>>>
>>>> Universit? de Toulouse - B?t. 4R3B1
>>>> 118, route de Narbonne - 31062 Toulouse
>>>>
>>>>
>>>> On Tue, Jan 20, 2015 at 10:17 AM, Hadrien Mary <hadrien.mary at gmail.com>
>>>> wrote:
>>>> > Another thing I noticed, it's that histogram is different when
>>>> > cropping manually inside Fiji (select area and do "Duplicate") or when
>>>> > it has been cropped with the python script (SCIFIO crop).
>>>> >
>>>> > See screenshot attachment.
>>>> >
>>>> >
>>>> >
>>>> > --
>>>> > Hadrien Mary
>>>> >
>>>> > Ph.D student in Biology
>>>> > Tournier-Gachet Team
>>>> > CNRS - LBCMCP - UMR 5088
>>>> >
>>>> > Universit? de Toulouse - B?t. 4R3B1
>>>> > 118, route de Narbonne - 31062 Toulouse
>>>> >
>>>> >
>>>> > On Mon, Jan 19, 2015 at 10:29 AM, Hadrien Mary <hadrien.mary at gmail.com>
>>>> > wrote:
>>>> >> Hi again,
>>>> >>
>>>> >> The script works well for small images (OME Tiff or normal Tiff) with
>>>> >> the recent Fiji update. However when I run it on large movies (13GB),
>>>> >> I have the following error.
>>>> >>
>>>> >> ----------------------------------------------------------
>>>> >> -- Classpath of ClassLoader --
>>>> >> /home/hadim/local/Fiji.app/plugins/
>>>> >>
>>>> >> at org.scijava.Context.inject(Context.java:431)
>>>> >> at org.scijava.Context.inject(Context.java:363)
>>>> >> at
>>>> >> org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:237)
>>>> >> at
>>>> >> org.scijava.ui.DefaultUIService.discoverUIs(DefaultUIService.java:500)
>>>> >> at org.scijava.ui.DefaultUIService.uiList(DefaultUIService.java:479)
>>>> >> at
>>>> >> org.scijava.ui.DefaultUIService.getAvailableUIs(DefaultUIService.java:231)
>>>> >> at org.scijava.ui.DefaultUIService.onEvent(DefaultUIService.java:457)
>>>> >> at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
>>>> >> at
>>>> >> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>> >> at java.lang.reflect.Method.invoke(Method.java:606)
>>>> >> at
>>>> >> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:280)
>>>> >> at
>>>> >> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:254)
>>>> >> at
>>>> >> org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
>>>> >> at
>>>> >> org.scijava.event.DefaultEventBus.access$201(DefaultEventBus.java:56)
>>>> >> at org.scijava.event.DefaultEventBus$2.run(DefaultEventBus.java:223)
>>>> >> at
>>>> >> org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
>>>> >> at
>>>> >> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
>>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>> >> at
>>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>> >> at
>>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>> >> at java.lang.Thread.run(Thread.java:745)
>>>> >> Traceback (most recent call last):
>>>> >>   File
>>>> >> "/home/hadim/local/Fiji.app/plugins/Scripts/Plugins/Crop_Multi_Roi.py",
>>>> >> line 50, in <module>
>>>> >>     saver.saveImg(crop_fname, imp)
>>>> >> at
>>>> >> io.scif.img.cell.loaders.AbstractArrayLoader.loadArray(AbstractArrayLoader.java:156)
>>>> >> at io.scif.img.cell.SCIFIOCellCache.load(SCIFIOCellCache.java:144)
>>>> >> at
>>>> >> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:122)
>>>> >> at
>>>> >> io.scif.img.cell.SCIFIOImgCells$CachedCells.get(SCIFIOImgCells.java:101)
>>>> >> at net.imglib2.img.list.ListCursor.get(ListCursor.java:80)
>>>> >> at net.imglib2.img.cell.CellCursor.getCell(CellCursor.java:92)
>>>> >> at net.imglib2.img.cell.CellCursor.moveToNextCell(CellCursor.java:180)
>>>> >> at net.imglib2.img.cell.CellCursor.reset(CellCursor.java:150)
>>>> >> at net.imglib2.img.cell.CellCursor.<init>(CellCursor.java:86)
>>>> >> at
>>>> >> net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:113)
>>>> >> at net.imglib2.img.cell.AbstractCellImg.cursor(AbstractCellImg.java:47)
>>>> >> at net.imglib2.img.AbstractImg.firstElement(AbstractImg.java:81)
>>>> >> at net.imagej.ImgPlus.firstElement(ImgPlus.java:261)
>>>> >> at io.scif.img.ImgSaver.populateMeta(ImgSaver.java:894)
>>>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:514)
>>>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:495)
>>>> >> at io.scif.img.ImgSaver.writeImg(ImgSaver.java:457)
>>>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:174)
>>>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:158)
>>>> >> at io.scif.img.ImgSaver.saveImg(ImgSaver.java:128)
>>>> >> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>> >> at
>>>> >> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
>>>> >> at
>>>> >> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>> >> at java.lang.reflect.Method.invoke(Method.java:606)
>>>> >>
>>>> >> java.lang.NullPointerException: java.lang.NullPointerException
>>>> >> -------------------------------------------------------------------
>>>> >>
>>>> >> The associated script is below.
>>>> >>
>>>> >>
>>>> >> ------------------------------------------------------------------------
>>>> >> from ij import IJ
>>>> >> from ij.plugin.frame import RoiManager
>>>> >>
>>>> >> from io.scif.config import SCIFIOConfig
>>>> >> from io.scif.img import ImageRegion
>>>> >> from io.scif.img import ImgOpener
>>>> >> from io.scif.img import ImgSaver
>>>> >> from net.imagej.axis import Axes
>>>> >>
>>>> >> import os
>>>> >>
>>>> >> # Get current image filename
>>>> >> imp = IJ.getImage()
>>>> >> f = imp.getOriginalFileInfo()
>>>> >> fname = os.path.join(f.directory, f.fileName)
>>>> >>
>>>> >> IJ.log('Image filename is %s' % fname)
>>>> >>
>>>> >> # Iterate over all ROIs from ROI Manager
>>>> >> rois = RoiManager.getInstance().getRoisAsArray()
>>>> >> for i, roi in enumerate(rois):
>>>> >>
>>>> >>     crop_id = i +1
>>>> >>     IJ.log("Opening crop %i / %i" % (crop_id, len(rois)))
>>>> >>
>>>> >>     # Get ROI bounds
>>>> >>     bounds = roi.getBounds()
>>>> >>     x = bounds.x
>>>> >>     y = bounds.y
>>>> >>     w = bounds.width
>>>> >>     h = bounds.height
>>>> >>
>>>> >>     # Import only cropped region of the image
>>>> >>     axes = [Axes.X, Axes.Y]
>>>> >>     ranges = ["%i-%i" % (x, x+w), "%i-%i" % (y, y+h)]
>>>> >>     config = SCIFIOConfig()
>>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>> >>
>>>> >>     opener = ImgOpener()
>>>> >>     imps = opener.openImgs(fname, config)
>>>> >>     imp = imps[0]
>>>> >>
>>>> >>     # Get filename and basename of the current cropped image
>>>> >>     crop_basename = "crop%i_%s" % (crop_id, f.fileName)
>>>> >>     crop_fname = os.path.join(f.directory, crop_basename)
>>>> >>     IJ.log("Saving crop to %s" % crop_fname)
>>>> >>
>>>> >>     # Save cropped image
>>>> >>     saver = ImgSaver()
>>>> >>     saver.saveImg(crop_fname, imp)
>>>> >>
>>>> >> IJ.log('Done')
>>>> >>
>>>> >> ----------------------------------------------------------------------------
>>>> >>
>>>> >> Does opener.openImgs() wait for the image to open ? If it does not I
>>>> >> guess that saver.saveImg() is called on an image that does not exist
>>>> >> in memory.
>>>> >>
>>>> >> Thanks
>>>> >>
>>>> >> --
>>>> >> Hadrien Mary
>>>> >>
>>>> >> Ph.D student in Biology
>>>> >> Tournier-Gachet Team
>>>> >> CNRS - LBCMCP - UMR 5088
>>>> >>
>>>> >> Universit? de Toulouse - B?t. 4R3B1
>>>> >> 118, route de Narbonne - 31062 Toulouse
>>>> >>
>>>> >>
>>>> >> On Wed, Jan 14, 2015 at 4:35 PM, Hadrien Mary <hadrien.mary at gmail.com>
>>>> >> wrote:
>>>> >>> I confirm it works !
>>>> >>>
>>>> >>> Thanks again
>>>> >>>
>>>> >>> --
>>>> >>> Hadrien Mary
>>>> >>>
>>>> >>> Ph.D student in Biology
>>>> >>> Tournier-Gachet Team
>>>> >>> CNRS - LBCMCP - UMR 5088
>>>> >>>
>>>> >>> Universit? de Toulouse - B?t. 4R3B1
>>>> >>> 118, route de Narbonne - 31062 Toulouse
>>>> >>>
>>>> >>>
>>>> >>> On Wed, Jan 14, 2015 at 3:32 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>> >>>> Hi Hadrien,
>>>> >>>>
>>>> >>>>>Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>>> >>>>>io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>>> >>>>
>>>> >>>> Ah sorry - my fault again for responding too quickly. ImageJ.git
>>>> >>>> doesn't
>>>> >>>> have a dependency on scifio-ome-xml; it's a dependency in Fiji
>>>> >>>> itself[1]. So
>>>> >>>> when you installed ImageJ into your Fiji, it updated all the
>>>> >>>> dependencies
>>>> >>>> but didn't actually update scifio-ome-xml.
>>>> >>>>
>>>> >>>> You can either manually copy scifio-ome-xml[2] over, or try
>>>> >>>> installing from
>>>> >>>> the latest Fiji master[3] which I just updated to have the latest
>>>> >>>> dependencies.
>>>> >>>>
>>>> >>>> [1]
>>>> >>>>
>>>> >>>> https://github.com/fiji/fiji/blob/2bc6266ff5ad5dfa155db9c0631db9baae396062/pom.xml#L608-612
>>>> >>>> [2]
>>>> >>>>
>>>> >>>> https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>>> >>>> [3]
>>>> >>>>
>>>> >>>> https://github.com/fiji/fiji/commit/2bc6266ff5ad5dfa155db9c0631db9baae396062
>>>> >>>>
>>>> >>>> On Wed, Jan 14, 2015 at 7:05 AM, Hadrien Mary
>>>> >>>> <hadrien.mary at gmail.com>
>>>> >>>> wrote:
>>>> >>>>>
>>>> >>>>> Ok it makes sense now !
>>>> >>>>>
>>>> >>>>> So I did what you told me about cloning imagej repo, building and
>>>> >>>>> install it with maven inside my local Fiji.app/. I don't know if
>>>> >>>>> it's
>>>> >>>>> a bug or a missing dependency but I am now unable to open OME Tiff
>>>> >>>>> files (other kind of file works well) wether it is by drag and drop
>>>> >>>>> or
>>>> >>>>> with my script. The error is the following:
>>>> >>>>>
>>>> >>>>> -------------------------------------------------
>>>> >>>>> Exception in thread "DrawAndDrop" java.lang.NoSuchMethodError:
>>>> >>>>> io.scif.ImageMetadata.setAxisLength(Lnet/imglib2/meta/AxisType;J)V
>>>> >>>>> at
>>>> >>>>>
>>>> >>>>> io.scif.ome.formats.OMETIFFFormat$Metadata.populateImageMetadata(OMETIFFFormat.java:273)
>>>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:254)
>>>> >>>>> at
>>>> >>>>> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:609)
>>>> >>>>> at
>>>> >>>>> io.scif.ome.formats.OMETIFFFormat$Parser.parse(OMETIFFFormat.java:552)
>>>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:335)
>>>> >>>>> at io.scif.AbstractParser.parse(AbstractParser.java:52)
>>>> >>>>> at io.scif.AbstractReader.setSource(AbstractReader.java:270)
>>>> >>>>> at
>>>> >>>>>
>>>> >>>>> io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:90)
>>>> >>>>> at io.scif.img.ImgOpener.createReader(ImgOpener.java:542)
>>>> >>>>> at io.scif.img.ImgOpener.openImgs(ImgOpener.java:144)
>>>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:133)
>>>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:109)
>>>> >>>>> at io.scif.io.DatasetIOPlugin.open(DatasetIOPlugin.java:63)
>>>> >>>>> at
>>>> >>>>>
>>>> >>>>> net.imagej.legacy.plugin.DefaultLegacyOpener.open(DefaultLegacyOpener.java:134)
>>>> >>>>> at
>>>> >>>>>
>>>> >>>>> net.imagej.legacy.DefaultLegacyHooks.interceptDragAndDropFile(DefaultLegacyHooks.java:358)
>>>> >>>>> at ij.plugin.DragAndDrop.openFile(DragAndDrop.java)
>>>> >>>>> at ij.plugin.DragAndDrop.run(DragAndDrop.java:152)
>>>> >>>>> at java.lang.Thread.run(Thread.java:745)
>>>> >>>>> -----------------------------------------------
>>>> >>>>>
>>>> >>>>> I guess something in scifio has not been updated to use the new
>>>> >>>>> net.imagej.axis or maybe the update is not built/downloaded when I
>>>> >>>>> run
>>>> >>>>> maven on my imagej clone.
>>>> >>>>>
>>>> >>>>>
>>>> >>>>> --
>>>> >>>>> Hadrien Mary
>>>> >>>>>
>>>> >>>>> Ph.D student in Biology
>>>> >>>>> Tournier-Gachet Team
>>>> >>>>> CNRS - LBCMCP - UMR 5088
>>>> >>>>>
>>>> >>>>> Universit? de Toulouse - B?t. 4R3B1
>>>> >>>>> 118, route de Narbonne - 31062 Toulouse
>>>> >>>>>
>>>> >>>>>
>>>> >>>>> On Wed, Jan 14, 2015 at 12:58 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>>> >>>>> > Hi Hadrien,
>>>> >>>>> >
>>>> >>>>> >>Sorry if it's off topic but I tried to run my script and I got a
>>>> >>>>> >> python
>>>> >>>>> >> error
>>>> >>>>> >
>>>> >>>>> > Oh no! This is totally my fault. I had to update your script for
>>>> >>>>> > the new
>>>> >>>>> > dependencies I mentioned and forgot to paste the new version in my
>>>> >>>>> > response
>>>> >>>>> > yesterday:
>>>> >>>>> >
>>>> >>>>> >>from net.imglib2.meta import Axes
>>>> >>>>> >
>>>> >>>>> > This import needs to change to:
>>>> >>>>> >
>>>> >>>>> > from net.imagej.axis import Axes
>>>> >>>>> >
>>>> >>>>> > Sorry about that!
>>>> >>>>> >
>>>> >>>>> > Best,
>>>> >>>>> > Mark
>>>> >>>>> >
>>>> >>>>> >
>>>> >>>>> > On Tue, Jan 13, 2015 at 3:59 PM, Hadrien Mary
>>>> >>>>> > <hadrien.mary at gmail.com>
>>>> >>>>> > wrote:
>>>> >>>>> >>
>>>> >>>>> >> Thank you Mark !
>>>> >>>>> >>
>>>> >>>>> >> Sorry if it's off topic but I tried to run my script and I got a
>>>> >>>>> >> python error probably related to type difference between python
>>>> >>>>> >> and
>>>> >>>>> >> java. It's not the first time I saw this kind of message and I'd
>>>> >>>>> >> like
>>>> >>>>> >> to know how to resolve it. Note that for python script I mainly
>>>> >>>>> >> use
>>>> >>>>> >> javadoc as documentation.
>>>> >>>>> >>
>>>> >>>>> >> The error is below coming from almost the same script as before
>>>> >>>>> >> in this
>>>> >>>>> >> thread.
>>>> >>>>> >>
>>>> >>>>> >> ********************************
>>>> >>>>> >> Started test_open_save.py at Tue Jan 13 22:54:36 CET 2015
>>>> >>>>> >> Traceback (most recent call last):
>>>> >>>>> >>   File
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> "/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py",
>>>> >>>>> >> line 17, in <module>
>>>> >>>>> >>     config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>> >>>>> >> TypeError: io.scif.img.ImageRegion(): 1st arg can't be coerced to
>>>> >>>>> >> net.imagej.axis.AxisType[]
>>>> >>>>> >>
>>>> >>>>> >> at org.python.core.Py.TypeError(Py.java:235)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.python.core.PyReflectedConstructor.__call__(PyReflectedConstructor.java:176)
>>>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:345)
>>>> >>>>> >> at
>>>> >>>>> >> org.python.core.PyMethod.instancemethod___call__(PyMethod.java:220)
>>>> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:211)
>>>> >>>>> >> at org.python.core.PyMethod.__call__(PyMethod.java:206)
>>>> >>>>> >> at org.python.core.Deriveds.dispatch__init__(Deriveds.java:19)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.python.core.PyObjectDerived.dispatch__init__(PyObjectDerived.java:1057)
>>>> >>>>> >> at org.python.core.PyType.type___call__(PyType.java:1565)
>>>> >>>>> >> at org.python.core.PyType.__call__(PyType.java:1548)
>>>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:404)
>>>> >>>>> >> at org.python.core.PyObject.__call__(PyObject.java:408)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.python.pycode._pyx0.f$0(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py:26)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.python.pycode._pyx0.call_function(/home/hadim/Documents/phd/dev/scripts/imagej_scripts/test_open_save.py)
>>>> >>>>> >> at org.python.core.PyTableCode.call(PyTableCode.java:165)
>>>> >>>>> >> at org.python.core.PyCode.call(PyCode.java:18)
>>>> >>>>> >> at org.python.core.Py.runCode(Py.java:1275)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>>> >>>>> >> at org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>>> >>>>> >> at org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>>> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>> >>>>> >> at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>>> >>>>> >> at java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>> >>>>> >> at
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>> >>>>> >> at java.lang.Thread.run(Thread.java:745)
>>>> >>>>> >> ************************************
>>>> >>>>> >>
>>>> >>>>> >> --
>>>> >>>>> >> Hadrien Mary
>>>> >>>>> >>
>>>> >>>>> >> Ph.D student in Biology
>>>> >>>>> >> Tournier-Gachet Team
>>>> >>>>> >> CNRS - LBCMCP - UMR 5088
>>>> >>>>> >>
>>>> >>>>> >> Universit? de Toulouse - B?t. 4R3B1
>>>> >>>>> >> 118, route de Narbonne - 31062 Toulouse
>>>> >>>>> >>
>>>> >>>>> >>
>>>> >>>>> >> On Tue, Jan 13, 2015 at 10:20 PM, Mark Hiner <hiner at wisc.edu>
>>>> >>>>> >> wrote:
>>>> >>>>> >> > Hi Hadrien,
>>>> >>>>> >> >
>>>> >>>>> >> >  Unsurprisingly, cropping and writing OME-TIFFs was quite
>>>> >>>>> >> > broken.
>>>> >>>>> >> >
>>>> >>>>> >> >  It's working for me now, as of the latest SCIFIO[1] and
>>>> >>>>> >> > SCIFIO-OME-XML[2].
>>>> >>>>> >> > Note that these libraries have updated dependencies compared to
>>>> >>>>> >> > what's
>>>> >>>>> >> > currently on Fiji, so you can't just drop these .jars into your
>>>> >>>>> >> > Fiji
>>>> >>>>> >> > installation if you want to test locally; you need to update
>>>> >>>>> >> > the
>>>> >>>>> >> > dependencies as well. The easiest way to do this would be to
>>>> >>>>> >> > just
>>>> >>>>> >> > clone
>>>> >>>>> >> > Imagej.git[3] and install it into your Fiji.app directory by
>>>> >>>>> >> > running:
>>>> >>>>> >> >
>>>> >>>>> >> > mvn -Dimagej.app.directory=/path/to/Fiji.app/
>>>> >>>>> >> > -Ddelete.other.versions=true
>>>> >>>>> >> >
>>>> >>>>> >> > We'll push these changes up to Fiji this week, and I will find
>>>> >>>>> >> > or
>>>> >>>>> >> > write
>>>> >>>>> >> > better instructions for local testing.
>>>> >>>>> >> >
>>>> >>>>> >> > Hope this helps. Let us know if you have any
>>>> >>>>> >> > questions/problems.
>>>> >>>>> >> > Thanks
>>>> >>>>> >> > again for finding this issue!
>>>> >>>>> >> >
>>>> >>>>> >> > Best,
>>>> >>>>> >> > - Mark
>>>> >>>>> >> >
>>>> >>>>> >> > [1] https://github.com/scifio/scifio/releases/tag/scifio-0.19.0
>>>> >>>>> >> > [2]
>>>> >>>>> >> >
>>>> >>>>> >> >
>>>> >>>>> >> >
>>>> >>>>> >> > https://github.com/scifio/scifio-ome-xml/releases/tag/scifio-ome-xml-0.12.0
>>>> >>>>> >> > [3] https://github.com/imagej/imagej
>>>> >>>>> >> >
>>>> >>>>> >> > On Sat, Jan 10, 2015 at 5:13 AM, Hadrien Mary
>>>> >>>>> >> > <hadrien.mary at gmail.com>
>>>> >>>>> >> > wrote:
>>>> >>>>> >> >>
>>>> >>>>> >> >> Ok. Let me know when you want me to test your changes. I also
>>>> >>>>> >> >> tested
>>>> >>>>> >> >> fix-writing branch and I didn't notice any changes.
>>>> >>>>> >> >>
>>>> >>>>> >> >> --
>>>> >>>>> >> >> Hadrien Mary
>>>> >>>>> >> >>
>>>> >>>>> >> >> Ph.D student in Biology
>>>> >>>>> >> >> Tournier-Gachet Team
>>>> >>>>> >> >> CNRS - LBCMCP - UMR 5088
>>>> >>>>> >> >>
>>>> >>>>> >> >> Universit? de Toulouse - B?t. 4R3B1
>>>> >>>>> >> >> 118, route de Narbonne - 31062 Toulouse
>>>> >>>>> >> >>
>>>> >>>>> >> >>
>>>> >>>>> >> >> On Fri, Jan 9, 2015 at 10:14 PM, Mark Hiner <hiner at wisc.edu>
>>>> >>>>> >> >> wrote:
>>>> >>>>> >> >> > Hi Hadrien,
>>>> >>>>> >> >> >
>>>> >>>>> >> >> > I've identified at least two bugs that could be affecting
>>>> >>>>> >> >> > you
>>>> >>>>> >> >> > here.
>>>> >>>>> >> >> >
>>>> >>>>> >> >> > First of all, there was a bug in the OME-TIFF format writing
>>>> >>>>> >> >> > out
>>>> >>>>> >> >> > multi-dimensional images. That's fixed on a branch but not
>>>> >>>>> >> >> > uploaded
>>>> >>>>> >> >> > to
>>>> >>>>> >> >> > Fiji
>>>> >>>>> >> >> > yet [1].
>>>> >>>>> >> >> >
>>>> >>>>> >> >> > Second, it seems like cropping is restricting pixel reads to
>>>> >>>>> >> >> > the
>>>> >>>>> >> >> > correct
>>>> >>>>> >> >> > region but then doesn't change the image size.
>>>> >>>>> >> >> >
>>>> >>>>> >> >> > I'm hoping when I fix the second issue writing cropped
>>>> >>>>> >> >> > regions
>>>> >>>>> >> >> > will
>>>> >>>>> >> >> > be
>>>> >>>>> >> >> > fixed.
>>>> >>>>> >> >> >
>>>> >>>>> >> >> > Thanks for the great feedback!
>>>> >>>>> >> >> > - Mark
>>>> >>>>> >> >> >
>>>> >>>>> >> >> > [1]
>>>> >>>>> >> >> > https://github.com/scifio/scifio-ome-xml/tree/fix-writing
>>>> >>>>> >> >> >
>>>> >>>>> >> >> > On Fri, Jan 9, 2015 at 11:49 AM, Hadrien Mary
>>>> >>>>> >> >> > <hadrien.mary at gmail.com>
>>>> >>>>> >> >> > wrote:
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >> I also confirm the same behaviour when replacing original
>>>> >>>>> >> >> >> file by
>>>> >>>>> >> >> >> OME
>>>> >>>>> >> >> >> sample data :
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >> http://www.openmicroscopy.org/Schemas/Samples/2013-06/bioformats-artificial/multi-channel-4D-series.ome.tif.zip.
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >> --
>>>> >>>>> >> >> >> Hadrien Mary
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >> Ph.D student in Biology
>>>> >>>>> >> >> >> Tournier-Gachet Team
>>>> >>>>> >> >> >> CNRS - LBCMCP - UMR 5088
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >> Universit? de Toulouse - B?t. 4R3B1
>>>> >>>>> >> >> >> 118, route de Narbonne - 31062 Toulouse
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >> On Fri, Jan 9, 2015 at 6:46 PM, Hadrien Mary
>>>> >>>>> >> >> >> <hadrien.mary at gmail.com>
>>>> >>>>> >> >> >> wrote:
>>>> >>>>> >> >> >> > After some investigations I think there is a bug with
>>>> >>>>> >> >> >> > ImgSaver.
>>>> >>>>> >> >> >> > In
>>>> >>>>> >> >> >> > the
>>>> >>>>> >> >> >> > following script, X, Y crop is fine but axes informations
>>>> >>>>> >> >> >> > (T
>>>> >>>>> >> >> >> > and
>>>> >>>>> >> >> >> > Z)
>>>> >>>>> >> >> >> > are lost and all frames appears on the same axes. Now if
>>>> >>>>> >> >> >> > I
>>>> >>>>> >> >> >> > replace
>>>> >>>>> >> >> >> > "target = "/home/hadim/cropped.tif" by "target =
>>>> >>>>> >> >> >> > "/home/hadim/cropped.ome.tif" on line 9. X, Y crop fails,
>>>> >>>>> >> >> >> > cropped
>>>> >>>>> >> >> >> > image has the same dimensions than original however axes
>>>> >>>>> >> >> >> > informations
>>>> >>>>> >> >> >> > (T and Z) are ok. Note that in cropped.ome.tif, pixel
>>>> >>>>> >> >> >> > values
>>>> >>>>> >> >> >> > are
>>>> >>>>> >> >> >> > totally incoherent which is not the case in cropped.tif.
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > Files can be found here :
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > https://arwen.hadim.fr/public.php?service=files&t=71aa17336dcccb3437d9a3dff789d2c0
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > Archive contains cropped.tif, cropped.ome.tif and
>>>> >>>>> >> >> >> > original.ome.tif.
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > The script:
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > ---------------------------------------------------
>>>> >>>>> >> >> >> > from io.scif import SCIFIO
>>>> >>>>> >> >> >> > from io.scif.config import SCIFIOConfig
>>>> >>>>> >> >> >> > from io.scif.img import ImageRegion
>>>> >>>>> >> >> >> > from io.scif.img import ImgOpener
>>>> >>>>> >> >> >> > from io.scif.img import ImgSaver
>>>> >>>>> >> >> >> > from net.imglib2.meta import Axes
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > fname = "/home/hadim/original.ome.tif"
>>>> >>>>> >> >> >> > target = "/home/hadim/cropped.tif"
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > axes = [Axes.X, Axes.Y]
>>>> >>>>> >> >> >> > ranges = ["%i-%i" % (0, 15), "%i-%i" % (0, 25)]
>>>> >>>>> >> >> >> > config = SCIFIOConfig()
>>>> >>>>> >> >> >> > config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > opener = ImgOpener()
>>>> >>>>> >> >> >> > imps = opener.openImgs(fname, config)
>>>> >>>>> >> >> >> > imp = imps[0]
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > saver = ImgSaver()
>>>> >>>>> >> >> >> > saver.saveImg(target, imp)
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > print('Done')
>>>> >>>>> >> >> >> > ---------------------------------------------------
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > --
>>>> >>>>> >> >> >> > Hadrien Mary
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> >
>>>> >>>>> >> >> >> > On Fri, Jan 9, 2015 at 12:25 AM, Hadrien Mary
>>>> >>>>> >> >> >> > <hadrien.mary at gmail.com>
>>>> >>>>> >> >> >> > wrote:
>>>> >>>>> >> >> >> >> Thanks for the tip (reminder to me: always look for
>>>> >>>>> >> >> >> >> example in
>>>> >>>>> >> >> >> >> tests!).
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> Unfortunately crop does not work... I will try to do
>>>> >>>>> >> >> >> >> more
>>>> >>>>> >> >> >> >> tests
>>>> >>>>> >> >> >> >> tomorrow or wait for you or someone else to have a look.
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> Updated code:
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> from ij import IJ
>>>> >>>>> >> >> >> >> from ij import ImagePlus
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> from io.scif import SCIFIO
>>>> >>>>> >> >> >> >> from io.scif.config import SCIFIOConfig
>>>> >>>>> >> >> >> >> from io.scif.img import ImageRegion
>>>> >>>>> >> >> >> >> from io.scif.img import ImgOpener
>>>> >>>>> >> >> >> >> from io.scif.img import ImgSaver
>>>> >>>>> >> >> >> >> from net.imglib2.meta import Axes
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> fname = "/home/hadim/original.ome.tif"
>>>> >>>>> >> >> >> >> target = "/home/hadim/cropped.ome.tif"
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> axes = [Axes.X, Axes.Y]
>>>> >>>>> >> >> >> >> ranges = ["%i-%i" % (2, 15), "%i-%i" % (2, 25)]
>>>> >>>>> >> >> >> >> config = SCIFIOConfig()
>>>> >>>>> >> >> >> >> config.imgOpenerSetRegion(ImageRegion(axes, ranges))
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> opener = ImgOpener()
>>>> >>>>> >> >> >> >> imps = opener.openImgs(fname, config)
>>>> >>>>> >> >> >> >> imp = imps[0]
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> saver = ImgSaver()
>>>> >>>>> >> >> >> >> saver.saveImg(target, imp)
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> print('Done')
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> --
>>>> >>>>> >> >> >> >> Hadrien Mary
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >>
>>>> >>>>> >> >> >> >> On Fri, Jan 9, 2015 at 12:09 AM, Curtis Rueden
>>>> >>>>> >> >> >> >> <ctrueden at wisc.edu>
>>>> >>>>> >> >> >> >> wrote:
>>>> >>>>> >> >> >> >>> Hi Hadrien,
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>>> I would like to be able to crop a region in X and Y
>>>> >>>>> >> >> >> >>>> while
>>>> >>>>> >> >> >> >>>> keeping any other dimensions which could exist (C, Z,
>>>> >>>>> >> >> >> >>>> T).
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>> Here's some Java:
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>>     int minX = 128, maxX = 255, minY = 128, minY = 255;
>>>> >>>>> >> >> >> >>>     AxisType[] axes = { Axes.X, Axes.Y };
>>>> >>>>> >> >> >> >>>     String[] ranges = { minX + "-" + maxX, minY + "-" +
>>>> >>>>> >> >> >> >>> maxY
>>>> >>>>> >> >> >> >>> };
>>>> >>>>> >> >> >> >>>     config.imgOpenerSetRegion(new ImageRegion(axes,
>>>> >>>>> >> >> >> >>> ranges));
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>> Adapted from here:
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>> https://github.com/scifio/scifio/blob/scifio-0.18.0/src/test/java/io/scif/img/utests/ImgOpenerTest.java#L189-L191
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>> And untested.
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>> HTH,
>>>> >>>>> >> >> >> >>> Curtis
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>> On Thu, Jan 8, 2015 at 4:47 PM, Hadrien Mary
>>>> >>>>> >> >> >> >>> <hadrien.mary at gmail.com>
>>>> >>>>> >> >> >> >>> wrote:
>>>> >>>>> >> >> >> >>>>
>>>> >>>>> >> >> >> >>>> After some investigations, I'm pretty sure I don't
>>>> >>>>> >> >> >> >>>> instanciate
>>>> >>>>> >> >> >> >>>> ImageRegion correctly. Doc and source code didn't help
>>>> >>>>> >> >> >> >>>> me...
>>>> >>>>> >> >> >> >>>> I
>>>> >>>>> >> >> >> >>>> would
>>>> >>>>> >> >> >> >>>> like to be able to crop a region in X and Y while
>>>> >>>>> >> >> >> >>>> keeping
>>>> >>>>> >> >> >> >>>> any
>>>> >>>>> >> >> >> >>>> other
>>>> >>>>> >> >> >> >>>> dimensions which could exist (C, Z, T).
>>>> >>>>> >> >> >> >>>>
>>>> >>>>> >> >> >> >>>> --
>>>> >>>>> >> >> >> >>>> Hadrien Mary
>>>> >>>>> >> >> >> >>>>
>>>> >>>>> >> >> >> >>>>
>>>> >>>>> >> >> >> >>>>
>>>> >>>>> >> >> >> >>>> On Thu, Jan 8, 2015 at 10:22 PM, Hadrien Mary
>>>> >>>>> >> >> >> >>>> <hadrien.mary at gmail.com>
>>>> >>>>> >> >> >> >>>> wrote:
>>>> >>>>> >> >> >> >>>> > Thank you Curtis for the answer.
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > I tried to apply what you told me and the code now
>>>> >>>>> >> >> >> >>>> > works
>>>> >>>>> >> >> >> >>>> > without
>>>> >>>>> >> >> >> >>>> > error. However the saved cropped image is not
>>>> >>>>> >> >> >> >>>> > cropped
>>>> >>>>> >> >> >> >>>> > (same
>>>> >>>>> >> >> >> >>>> > size
>>>> >>>>> >> >> >> >>>> > as
>>>> >>>>> >> >> >> >>>> > original) and pixel values are modified).
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > Script:
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > from io.scif.config import SCIFIOConfig
>>>> >>>>> >> >> >> >>>> > from io.scif.img import ImageRegion
>>>> >>>>> >> >> >> >>>> > from io.scif.img import ImgOpener
>>>> >>>>> >> >> >> >>>> > from io.scif.img import ImgSaver
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > fname = "/home/hadim/original.ome.tif"
>>>> >>>>> >> >> >> >>>> > target = "/home/hadim/cropped.ome.tif"
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > config = SCIFIOConfig()
>>>> >>>>> >> >> >> >>>> > region = ImageRegion(dict(x=2, y=2, width=10,
>>>> >>>>> >> >> >> >>>> > height=10))
>>>> >>>>> >> >> >> >>>> > config.imgOpenerSetRegion(region)
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > opener = ImgOpener()
>>>> >>>>> >> >> >> >>>> > imps = opener.openImgs(fname, config)
>>>> >>>>> >> >> >> >>>> > imp = imps[0]
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > print(imps)
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > saver = ImgSaver()
>>>> >>>>> >> >> >> >>>> > saver.saveImg(target, imp)
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > Thanks again for your time. Don't be sorry if you
>>>> >>>>> >> >> >> >>>> > don't
>>>> >>>>> >> >> >> >>>> > have
>>>> >>>>> >> >> >> >>>> > time
>>>> >>>>> >> >> >> >>>> > to
>>>> >>>>> >> >> >> >>>> > write an example.
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > I will be happy to provide some python/scifio
>>>> >>>>> >> >> >> >>>> > examples
>>>> >>>>> >> >> >> >>>> > scripts.
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > --
>>>> >>>>> >> >> >> >>>> > Hadrien Mary
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > Ph.D student in Biology
>>>> >>>>> >> >> >> >>>> > Tournier-Gachet Team
>>>> >>>>> >> >> >> >>>> > CNRS - LBCMCP - UMR 5088
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > Universit? de Toulouse - B?t. 4R3B1
>>>> >>>>> >> >> >> >>>> > 118, route de Narbonne - 31062 Toulouse
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> >
>>>> >>>>> >> >> >> >>>> > On Thu, Jan 8, 2015 at 9:56 PM, Curtis Rueden
>>>> >>>>> >> >> >> >>>> > <ctrueden at wisc.edu>
>>>> >>>>> >> >> >> >>>> > wrote:
>>>> >>>>> >> >> >> >>>> >> Hi Hadrien,
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
>>>> >>>>> >> >> >> >>>> >>> disk but
>>>> >>>>> >> >> >> >>>> >>> it
>>>> >>>>> >> >> >> >>>> >>> doesn
>>>> >>>>> >> >> >> >>>> >>> not
>>>> >>>>> >> >> >> >>>> >>> work.
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >> The error you see is because SCIFIO operates on
>>>> >>>>> >> >> >> >>>> >> ImgLib2
>>>> >>>>> >> >> >> >>>> >> data
>>>> >>>>> >> >> >> >>>> >> structures, not
>>>> >>>>> >> >> >> >>>> >> ImagePlus objects.
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
>>>> >>>>> >> >> >> >>>> >>> setCropRegion
>>>> >>>>> >> >> >> >>>> >>> function
>>>> >>>>> >> >> >> >>>> >>> in
>>>> >>>>> >> >> >> >>>> >>> SCIFIO ?
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >> Yes: you create a SCIFIOConfig, calling
>>>> >>>>> >> >> >> >>>> >> imgOpenerSetRegion
>>>> >>>>> >> >> >> >>>> >> [1]
>>>> >>>>> >> >> >> >>>> >> on
>>>> >>>>> >> >> >> >>>> >> it,
>>>> >>>>> >> >> >> >>>> >> then
>>>> >>>>> >> >> >> >>>> >> pass it as an argument to the ImgOpener. You'll get
>>>> >>>>> >> >> >> >>>> >> back
>>>> >>>>> >> >> >> >>>> >> an
>>>> >>>>> >> >> >> >>>> >> ImgLib2
>>>> >>>>> >> >> >> >>>> >> data
>>>> >>>>> >> >> >> >>>> >> object which can then be fed to the SCIFIO
>>>> >>>>> >> >> >> >>>> >> ImgSaver.
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >> I'm sorry that I don't have time to whip up an
>>>> >>>>> >> >> >> >>>> >> example
>>>> >>>>> >> >> >> >>>> >> for
>>>> >>>>> >> >> >> >>>> >> you
>>>> >>>>> >> >> >> >>>> >> right
>>>> >>>>> >> >> >> >>>> >> now. It
>>>> >>>>> >> >> >> >>>> >> would be great to add more SCIFIO tutorials [2]
>>>> >>>>> >> >> >> >>>> >> that use
>>>> >>>>> >> >> >> >>>> >> the
>>>> >>>>> >> >> >> >>>> >> ImgOpener
>>>> >>>>> >> >> >> >>>> >> and
>>>> >>>>> >> >> >> >>>> >> ImgSaver, since they are much higher level APIs
>>>> >>>>> >> >> >> >>>> >> akin to
>>>> >>>>> >> >> >> >>>> >> the
>>>> >>>>> >> >> >> >>>> >> Bio-Formats
>>>> >>>>> >> >> >> >>>> >> "BF"
>>>> >>>>> >> >> >> >>>> >> functionality... please feel welcome to contribute
>>>> >>>>> >> >> >> >>>> >> some!
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >> Regards,
>>>> >>>>> >> >> >> >>>> >> Curtis
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >> [1]
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >> http://javadoc.imagej.net/SCIFIO/io/scif/config/SCIFIOConfig.html#imgOpenerSetRegion(io.scif.img.ImageRegion)
>>>> >>>>> >> >> >> >>>> >> [2] https://github.com/scifio/scifio-tutorials
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >> On Thu, Jan 8, 2015 at 2:18 PM, Hadrien Mary
>>>> >>>>> >> >> >> >>>> >> <hadrien.mary at gmail.com>
>>>> >>>>> >> >> >> >>>> >> wrote:
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> Hi,
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> I am writing a python macro which iterate over all
>>>> >>>>> >> >> >> >>>> >>> rois
>>>> >>>>> >> >> >> >>>> >>> in
>>>> >>>>> >> >> >> >>>> >>> ROI
>>>> >>>>> >> >> >> >>>> >>> Manager
>>>> >>>>> >> >> >> >>>> >>> and then use setCropRegion function from bioformat
>>>> >>>>> >> >> >> >>>> >>> plugin
>>>> >>>>> >> >> >> >>>> >>> to
>>>> >>>>> >> >> >> >>>> >>> open
>>>> >>>>> >> >> >> >>>> >>> a
>>>> >>>>> >> >> >> >>>> >>> cropped region of an image.
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> I tried to use SCIFIO to write cropped image on
>>>> >>>>> >> >> >> >>>> >>> disk but
>>>> >>>>> >> >> >> >>>> >>> it
>>>> >>>>> >> >> >> >>>> >>> doesn
>>>> >>>>> >> >> >> >>>> >>> not
>>>> >>>>> >> >> >> >>>> >>> work.
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> (I am using an updated version of Fiji.)
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> Here is my script:
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> from ij.plugin.frame import RoiManager
>>>> >>>>> >> >> >> >>>> >>> from ij import IJ
>>>> >>>>> >> >> >> >>>> >>> from io.scif.img import ImgSaver
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> from loci.plugins import BF
>>>> >>>>> >> >> >> >>>> >>> from loci.plugins.in import ImporterOptions
>>>> >>>>> >> >> >> >>>> >>> from loci.common import Region
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> import os
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> # Get current image filename
>>>> >>>>> >> >> >> >>>> >>> imp = IJ.getImage()
>>>> >>>>> >> >> >> >>>> >>> f = imp.getOriginalFileInfo()
>>>> >>>>> >> >> >> >>>> >>> fname = os.path.join(f.directory, f.fileName)
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> IJ.log('Image filename is %s' % fname)
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> # Iterate over all ROIs from ROI Manager
>>>> >>>>> >> >> >> >>>> >>> rois = RoiManager.getInstance().getRoisAsArray()
>>>> >>>>> >> >> >> >>>> >>> for i, roi in enumerate(rois):
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>     crop_id = i +1
>>>> >>>>> >> >> >> >>>> >>>     IJ.log("Opening crop %i / %i" % (crop_id,
>>>> >>>>> >> >> >> >>>> >>> len(rois)))
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>     bounds = roi.getBounds()
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>     x = bounds.x
>>>> >>>>> >> >> >> >>>> >>>     y = bounds.y
>>>> >>>>> >> >> >> >>>> >>>     w = bounds.width
>>>> >>>>> >> >> >> >>>> >>>     h = bounds.height
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>     # Import only cropped region of the image
>>>> >>>>> >> >> >> >>>> >>>     options = ImporterOptions()
>>>> >>>>> >> >> >> >>>> >>>     options.setCrop(True)
>>>> >>>>> >> >> >> >>>> >>>     options.setCropRegion(0, Region(x, y, w, h))
>>>> >>>>> >> >> >> >>>> >>>     options.setId(fname)
>>>> >>>>> >> >> >> >>>> >>>     imps = BF.openImagePlus(options)
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>     imp = imps[0]
>>>> >>>>> >> >> >> >>>> >>>     imp.show()
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>     crop_basename = "crop%i_%s" % (crop_id,
>>>> >>>>> >> >> >> >>>> >>> f.fileName)
>>>> >>>>> >> >> >> >>>> >>>     crop_fname = os.path.join(f.directory,
>>>> >>>>> >> >> >> >>>> >>> crop_basename)
>>>> >>>>> >> >> >> >>>> >>>     imp.setTitle(crop_basename)
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>     # Save image
>>>> >>>>> >> >> >> >>>> >>>     IJ.log("Saving crop to %s" % crop_fname)
>>>> >>>>> >> >> >> >>>> >>>     saver = ImgSaver()
>>>> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> IJ.log('Done')
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> It fails with this error:
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> Traceback (most recent call last):
>>>> >>>>> >> >> >> >>>> >>>   File
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> "/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py",
>>>> >>>>> >> >> >> >>>> >>> line
>>>> >>>>> >> >> >> >>>> >>> 49, in <module>
>>>> >>>>> >> >> >> >>>> >>>     saver.saveImg(crop_basename, imp)
>>>> >>>>> >> >> >> >>>> >>> TypeError: saveImg(): 1st arg can't be coerced to
>>>> >>>>> >> >> >> >>>> >>> io.scif.Writer,
>>>> >>>>> >> >> >> >>>> >>> String
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> at org.python.core.Py.TypeError(Py.java:235)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:209)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwBadArgError(PyReflectedFunction.java:312)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.throwError(PyReflectedFunction.java:321)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:167)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:204)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyObject.__call__(PyObject.java:422)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyObject.__call__(PyObject.java:426)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyMethod.__call__(PyMethod.java:139)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.f$0(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py:51)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.pycode._pyx7.call_function(/home/hadim/local/Fiji.app/plugins/Crop_Multi_Roi.py)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.python.core.PyTableCode.call(PyTableCode.java:165)
>>>> >>>>> >> >> >> >>>> >>> at org.python.core.PyCode.call(PyCode.java:18)
>>>> >>>>> >> >> >> >>>> >>> at org.python.core.Py.runCode(Py.java:1275)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.scijava.plugins.scripting.jython.JythonScriptEngine.eval(JythonScriptEngine.java:76)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.scijava.script.ScriptModule.run(ScriptModule.java:175)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.run(ModuleRunner.java:167)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:164)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> java.util.concurrent.FutureTask.run(FutureTask.java:262)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
>>>> >>>>> >> >> >> >>>> >>> at
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>>>> >>>>> >> >> >> >>>> >>> at java.lang.Thread.run(Thread.java:745)
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> Three questions:
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> how can I write cropped image (I need to write
>>>> >>>>> >> >> >> >>>> >>> them as
>>>> >>>>> >> >> >> >>>> >>> OME
>>>> >>>>> >> >> >> >>>> >>> Tiff
>>>> >>>>> >> >> >> >>>> >>> so I
>>>> >>>>> >> >> >> >>>> >>> need BF or SCIFIO).
>>>> >>>>> >> >> >> >>>> >>> Is there is any ?easy? alternative to BF
>>>> >>>>> >> >> >> >>>> >>> setCropRegion
>>>> >>>>> >> >> >> >>>> >>> function
>>>> >>>>> >> >> >> >>>> >>> in
>>>> >>>>> >> >> >> >>>> >>> SCIFIO
>>>> >>>>> >> >> >> >>>> >>> ?
>>>> >>>>> >> >> >> >>>> >>> I am currently using
>>>> >>>>> >> >> >> >>>> >>> RoiManager.getInstance().getRoisAsArray()
>>>> >>>>> >> >> >> >>>> >>> to
>>>> >>>>> >> >> >> >>>> >>> retrieve all rois. How can I directly get a
>>>> >>>>> >> >> >> >>>> >>> ROIManager
>>>> >>>>> >> >> >> >>>> >>> instance
>>>> >>>>> >> >> >> >>>> >>> from
>>>> >>>>> >> >> >> >>>> >>> RoiSet.zip file ?
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> Any help would be very appreciated.
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> Thanks !
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> ?
>>>> >>>>> >> >> >> >>>> >>> Hadrien Mary
>>>> >>>>> >> >> >> >>>> >>>
>>>> >>>>> >> >> >> >>>> >>> _______________________________________________
>>>> >>>>> >> >> >> >>>> >>> ImageJ-devel mailing list
>>>> >>>>> >> >> >> >>>> >>> ImageJ-devel at imagej.net
>>>> >>>>> >> >> >> >>>> >>> http://imagej.net/mailman/listinfo/imagej-devel
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>> >>
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >> >>>
>>>> >>>>> >> >> >>
>>>> >>>>> >> >> >> _______________________________________________
>>>> >>>>> >> >> >> ImageJ-devel mailing list
>>>> >>>>> >> >> >> ImageJ-devel at imagej.net
>>>> >>>>> >> >> >> http://imagej.net/mailman/listinfo/imagej-devel
>>>> >>>>> >> >> >
>>>> >>>>> >> >> >
>>>> >>>>> >> >
>>>> >>>>> >> >
>>>> >>>>> >
>>>> >>>>> >
>>>> >>>>
>>>> >>>>
>>>
>>>


From francisobrien2007 at gmail.com  Mon Jan 26 23:38:28 2015
From: francisobrien2007 at gmail.com (Francis OBrien)
Date: Tue, 27 Jan 2015 00:38:28 -0500
Subject: [ImageJ-devel] help with Confidence Interval Autoscale method?
Message-ID: <CAKmFSPdyYsQm3vMb=FB6+zDEjtyB2GefoGxjqrVRnQ8vUk_Pyg@mail.gmail.com>

Hello,

I am a total newbie so I am willing to learn if people can point me in the
right direction. I am trying to get the following code for confidence
interval autoscaling to work but I keep getting the errors in Fiji when I
try to run the code.

https://github.com/imagej/imagej-common/blob/master/src/main/java/net/imagej/autoscale/ConfidenceIntervalAutoscaleMethod.java

 How do I use this code in ImageJ? Is it run as a macro?

 Best,

Francis

-- 
Regards,

Francis

Research graduate,
New York School of Medicine
New York
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150127/b83dd51f/attachment.html>

From saalfelds at janelia.hhmi.org  Wed Jan 28 10:41:31 2015
From: saalfelds at janelia.hhmi.org (Stephan Saalfeld)
Date: Wed, 28 Jan 2015 11:41:31 -0500
Subject: [ImageJ-devel] thinplate spline artifact on maven.imagej.net ?
Message-ID: <1422463291.32446.13.camel@saalfelds-ws1.janelia.priv>

Hi Curtis/ ImageJ developers,

we made a release version of John Bogovic's port of ITK's thin plate
spline transform.  The implementation is small but spans already two
repositories top separate TrakEM2/ ImageJ related code from the core.

The repositories are

core

https://github.com/saalfeldlab/jitk-tps

and TrakEM2

https://github.com/saalfeldlab/trakem2-tps

Is it possible to have both artifacts at maven.imagej.net?

That would be awesome.

Thanks in advance,
Stephan and John






From francisobrien2007 at gmail.com  Wed Jan 28 19:36:41 2015
From: francisobrien2007 at gmail.com (Francis OBrien)
Date: Wed, 28 Jan 2015 20:36:41 -0500
Subject: [ImageJ-devel] Help with Java Code?
Message-ID: <CAKmFSPdhdqjcMC9=KA0MqPtCQbFqUE-+O_utyHM6NsNOvvU+hw@mail.gmail.com>

Hello,

How do I run the following code in ImageJ?

/*
 * #%L
 * ImageJ software for multidimensional image processing and analysis.
 * %%
 * Copyright (C) 2009 - 2015 Board of Regents of the University of
 * Wisconsin-Madison, Broad Institute of MIT and Harvard, and Max Planck
 * Institute of Molecular Cell Biology and Genetics.
 * %%
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * #L%
 */

package net.imagej.autoscale;

import net.imglib2.IterableInterval;
import net.imglib2.histogram.Histogram1d;
import net.imglib2.histogram.Real1dBinMapper;
import net.imglib2.type.numeric.RealType;

import org.scijava.plugin.Parameter;
import org.scijava.plugin.Plugin;

/**
 * Computes a confidence interval containing percentages of the an entire set of
 * values in an {@link IterableInterval}.
 *
 * @author Barry DeZonia
 */
@Plugin(type = AutoscaleMethod.class, name = "Confidence Interval")
public class ConfidenceIntervalAutoscaleMethod<T extends RealType<T>> extends
	AbstractAutoscaleMethod<T>
{

	// -- instance variables --

	private double lowerTail, upperTail;

	@Parameter
	private AutoscaleService autoscaleService;

	// -- ConfidenceIntervalAutoscaleMethod methods --

	/**
	 * Construct a confidence interval that contains 95% of the data range.
	 */
	public ConfidenceIntervalAutoscaleMethod() {
		this(0.025, 0.025); // fit 95% of the data range
	}

	/**
	 * Construct a confidence interval with user specified percentages of the data
	 * range. Ranges are specified as fractions of 1. They must sum to less than
	 * 1.
	 *
	 * @param lowerTailProportion The proportion of the distribution to be treated
	 *          as lower tail values
	 * @param upperTailProportion The proportion of the distribution to be treated
	 *          as upper tail values
	 */
	public ConfidenceIntervalAutoscaleMethod(double lowerTailProportion,
		double upperTailProportion)
	{
		setTailProportions(lowerTailProportion, upperTailProportion);
	}

	/**
	 * Returns the fractional proportion of the distribution to count as in lower
	 * tail.
	 */
	public double getLowerTailProportion() {
		return lowerTail;
	}

	/**
	 * Returns the fractional proportion of the distribution to count as in upper
	 * tail.
	 */
	public double getUpperTailProportion() {
		return upperTail;
	}

	/**
	 * Sets the fractional proportions of the distribution.
	 *
	 * @param lower A fraction of 1 specifying the size of the lower tail
	 * @param upper A fraction of 1 specifying the size of the upper tail
	 */
	public void setTailProportions(double lower, double upper) {
		if (lower < 0 || lower > 1) {
			throw new IllegalArgumentException(
				"lower tail fraction must be between 0 and 1");
		}
		if (upper < 0 || upper > 1) {
			throw new IllegalArgumentException(
				"upper tail fraction must be between 0 and 1");
		}
		if (lower + upper >= 1) {
			throw new IllegalArgumentException("tails must not span whole data range");
		}
		lowerTail = lower;
		upperTail = upper;
	}

	// -- AutoscaleMethod methods --

	@Override
	public DataRange getRange(IterableInterval<T> interval) {
		// pass one through data
		DataRange range = autoscaleService.getDefaultIntervalRange(interval);
		// pass two through data
		Real1dBinMapper<T> mapper =
			new Real1dBinMapper<T>(range.getMin(), range.getMax(), 1000, false);
		Histogram1d<T> histogram = new Histogram1d<T>(mapper);
		histogram.countData(interval);
		// calc some sizes
		long totValues = histogram.distributionCount();
		long lowerSize = (long) Math.floor(lowerTail * totValues);
		long upperSize = (long) Math.floor(upperTail * totValues);
		// determine bin number containing > than lower tail size
		long soFar = 0;
		int bottom = 0;
		while (soFar < lowerSize) {
			soFar += histogram.frequency(bottom++);
		}
		while (histogram.frequency(bottom) == 0) {
			bottom++;
		}
		// determine bin number containing < upper tail size
		soFar = 0;
		int top = 999;
		while (soFar < upperSize) {
			soFar += histogram.frequency(top--);
		}
		while (histogram.frequency(top) == 0) {
			top--;
		}
		// determine approx boundaries
		T approxMin = interval.firstElement().createVariable();
		T approxMax = approxMin.createVariable();
		histogram.getLowerBound(bottom, approxMin);
		histogram.getUpperBound(top, approxMax);
		double min = approxMin.getRealDouble();
		double max = approxMax.getRealDouble();
		// return them
		return new DataRange(min, max);
	}

}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150128/9e469986/attachment.html>

From hiner at wisc.edu  Fri Jan 30 10:33:13 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Fri, 30 Jan 2015 10:33:13 -0600
Subject: [ImageJ-devel] help with Confidence Interval Autoscale method?
In-Reply-To: <CAKmFSPdyYsQm3vMb=FB6+zDEjtyB2GefoGxjqrVRnQ8vUk_Pyg@mail.gmail.com>
References: <CAKmFSPdyYsQm3vMb=FB6+zDEjtyB2GefoGxjqrVRnQ8vUk_Pyg@mail.gmail.com>
Message-ID: <CA+B=mGove_CHAyiYLhf8GigSJ2UabmEyei1tapT5k8CrDR_G9Q@mail.gmail.com>

Hi Francis,

An AutoscaleMethod is a plugin to an AutoscaleService[1], and is either
accessed directly (via getAutoscaleMethod) or indirectly (via
getDefaultMethod or the getDefault...Range metods). To use this code in
ImageJ you would either have to use a command that calls into the
AutoscaleService, or write your own plugin/macro.

Here's an example of a simple python macro that prints the min/max
calculated using the confidence interval method:

------
# @AutoscaleService asService
# @net.imagej.Dataset data

m = asService.getAutoscaleMethod('Confidence Interval')

r = m.getRange(data)

print 'Range min: ', r.getMin(), ', max: ', r.getMax()
----

The first two lines are script parameters[2]. The AutoscaleService is
available by default, but for a Dataset you will have to open an image
either with ImageJ2/SCIFIO enabled (Edit > Options > ImageJ2) or using the
"File > Import > Image..." command directly.

Hope that helps. Let me know if you have any more questions.

Best,
Mark

[1]
https://github.com/imagej/imagej-common/blob/master/src/main/java/net/imagej/autoscale/AutoscaleService.java
[2] http://imagej.net/Script_parameters

On Mon, Jan 26, 2015 at 11:38 PM, Francis OBrien <
francisobrien2007 at gmail.com> wrote:

> Hello,
>
> I am a total newbie so I am willing to learn if people can point me in
> the right direction. I am trying to get the following code for confidence
> interval autoscaling to work but I keep getting the errors in Fiji when I
> try to run the code.
>
>
> https://github.com/imagej/imagej-common/blob/master/src/main/java/net/imagej/autoscale/ConfidenceIntervalAutoscaleMethod.java
>
>  How do I use this code in ImageJ? Is it run as a macro?
>
>  Best,
>
> Francis
>
> --
> Regards,
>
> Francis
>
> Research graduate,
> New York School of Medicine
> New York
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150130/7a78958b/attachment.html>

From hiner at wisc.edu  Fri Jan 30 10:35:01 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Fri, 30 Jan 2015 10:35:01 -0600
Subject: [ImageJ-devel] Help with Java Code?
In-Reply-To: <CAKmFSPdhdqjcMC9=KA0MqPtCQbFqUE-+O_utyHM6NsNOvvU+hw@mail.gmail.com>
References: <CAKmFSPdhdqjcMC9=KA0MqPtCQbFqUE-+O_utyHM6NsNOvvU+hw@mail.gmail.com>
Message-ID: <CA+B=mGpXEEQyaCmSM1vv=KaA7kc+JGR6AAXAUALg2B+50jqAeg@mail.gmail.com>

For the archives, this is answered here:
http://imagej.net/pipermail/imagej-devel/2015-January/002439.html

On Wed, Jan 28, 2015 at 7:36 PM, Francis OBrien <francisobrien2007 at gmail.com
> wrote:

> Hello,
>
> How do I run the following code in ImageJ?
>
> /*
>  * #%L
>  * ImageJ software for multidimensional image processing and analysis.
>  * %%
>  * Copyright (C) 2009 - 2015 Board of Regents of the University of
>  * Wisconsin-Madison, Broad Institute of MIT and Harvard, and Max Planck
>  * Institute of Molecular Cell Biology and Genetics.
>  * %%
>  * Redistribution and use in source and binary forms, with or without
>  * modification, are permitted provided that the following conditions are met:
>  *
>  * 1. Redistributions of source code must retain the above copyright notice,
>  *    this list of conditions and the following disclaimer.
>  * 2. Redistributions in binary form must reproduce the above copyright notice,
>  *    this list of conditions and the following disclaimer in the documentation
>  *    and/or other materials provided with the distribution.
>  *
>  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
>  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
>  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
>  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
>  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
>  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
>  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
>  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
>  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
>  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
>  * POSSIBILITY OF SUCH DAMAGE.
>  * #L%
>  */
>
> package net.imagej.autoscale;
>
> import net.imglib2.IterableInterval;
> import net.imglib2.histogram.Histogram1d;
> import net.imglib2.histogram.Real1dBinMapper;
> import net.imglib2.type.numeric.RealType;
>
> import org.scijava.plugin.Parameter;
> import org.scijava.plugin.Plugin;
>
> /**
>  * Computes a confidence interval containing percentages of the an entire set of
>  * values in an {@link IterableInterval}.
>  *
>  * @author Barry DeZonia
>  */
> @Plugin(type = AutoscaleMethod.class, name = "Confidence Interval")
> public class ConfidenceIntervalAutoscaleMethod<T extends RealType<T>> extends
> 	AbstractAutoscaleMethod<T>
> {
>
> 	// -- instance variables --
>
> 	private double lowerTail, upperTail;
>
> 	@Parameter
> 	private AutoscaleService autoscaleService;
>
> 	// -- ConfidenceIntervalAutoscaleMethod methods --
>
> 	/**
> 	 * Construct a confidence interval that contains 95% of the data range.
> 	 */
> 	public ConfidenceIntervalAutoscaleMethod() {
> 		this(0.025, 0.025); // fit 95% of the data range
> 	}
>
> 	/**
> 	 * Construct a confidence interval with user specified percentages of the data
> 	 * range. Ranges are specified as fractions of 1. They must sum to less than
> 	 * 1.
> 	 *
> 	 * @param lowerTailProportion The proportion of the distribution to be treated
> 	 *          as lower tail values
> 	 * @param upperTailProportion The proportion of the distribution to be treated
> 	 *          as upper tail values
> 	 */
> 	public ConfidenceIntervalAutoscaleMethod(double lowerTailProportion,
> 		double upperTailProportion)
> 	{
> 		setTailProportions(lowerTailProportion, upperTailProportion);
> 	}
>
> 	/**
> 	 * Returns the fractional proportion of the distribution to count as in lower
> 	 * tail.
> 	 */
> 	public double getLowerTailProportion() {
> 		return lowerTail;
> 	}
>
> 	/**
> 	 * Returns the fractional proportion of the distribution to count as in upper
> 	 * tail.
> 	 */
> 	public double getUpperTailProportion() {
> 		return upperTail;
> 	}
>
> 	/**
> 	 * Sets the fractional proportions of the distribution.
> 	 *
> 	 * @param lower A fraction of 1 specifying the size of the lower tail
> 	 * @param upper A fraction of 1 specifying the size of the upper tail
> 	 */
> 	public void setTailProportions(double lower, double upper) {
> 		if (lower < 0 || lower > 1) {
> 			throw new IllegalArgumentException(
> 				"lower tail fraction must be between 0 and 1");
> 		}
> 		if (upper < 0 || upper > 1) {
> 			throw new IllegalArgumentException(
> 				"upper tail fraction must be between 0 and 1");
> 		}
> 		if (lower + upper >= 1) {
> 			throw new IllegalArgumentException("tails must not span whole data range");
> 		}
> 		lowerTail = lower;
> 		upperTail = upper;
> 	}
>
> 	// -- AutoscaleMethod methods --
>
> 	@Override
> 	public DataRange getRange(IterableInterval<T> interval) {
> 		// pass one through data
> 		DataRange range = autoscaleService.getDefaultIntervalRange(interval);
> 		// pass two through data
> 		Real1dBinMapper<T> mapper =
> 			new Real1dBinMapper<T>(range.getMin(), range.getMax(), 1000, false);
> 		Histogram1d<T> histogram = new Histogram1d<T>(mapper);
> 		histogram.countData(interval);
> 		// calc some sizes
> 		long totValues = histogram.distributionCount();
> 		long lowerSize = (long) Math.floor(lowerTail * totValues);
> 		long upperSize = (long) Math.floor(upperTail * totValues);
> 		// determine bin number containing > than lower tail size
> 		long soFar = 0;
> 		int bottom = 0;
> 		while (soFar < lowerSize) {
> 			soFar += histogram.frequency(bottom++);
> 		}
> 		while (histogram.frequency(bottom) == 0) {
> 			bottom++;
> 		}
> 		// determine bin number containing < upper tail size
> 		soFar = 0;
> 		int top = 999;
> 		while (soFar < upperSize) {
> 			soFar += histogram.frequency(top--);
> 		}
> 		while (histogram.frequency(top) == 0) {
> 			top--;
> 		}
> 		// determine approx boundaries
> 		T approxMin = interval.firstElement().createVariable();
> 		T approxMax = approxMin.createVariable();
> 		histogram.getLowerBound(bottom, approxMin);
> 		histogram.getUpperBound(top, approxMax);
> 		double min = approxMin.getRealDouble();
> 		double max = approxMax.getRealDouble();
> 		// return them
> 		return new DataRange(min, max);
> 	}
>
> }
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150130/aa0ae41b/attachment.html>

