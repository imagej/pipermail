From christian.dietz at uni-konstanz.de  Mon Nov  3 13:11:18 2014
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Mon, 03 Nov 2014 20:11:18 +0100
Subject: [ImageJ-devel] Can't build ImageJ-Ops. Missing ImageJ:pom:3.2
Message-ID: <5457D356.5090100@uni-konstanz.de>

Hi all,

I tried to import image-ops and build it with Maven:

[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]
[ERROR]   The project net.imagej:imagej-ops:0.6.1-SNAPSHOT 
(/home/dietzc/devel/repos/imagej-ops/pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Failure to find 
net.imagej:pom-imagej:pom:3.2 in 
http://maven.imagej.net/content/groups/public was cached in the local 
repository, resolution will not be reattempted until the update interval 
of imagej.public has elapsed or updates are forced and 
'parent.relativePath' points at no local POM @ line 5, column 10 -> 
[Help 2]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the 
-e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, 
please read the following articles:
[ERROR] [Help 1] 
http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
[ERROR] [Help 2] 
http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException

I had a look at http://maven.imagej.net/content/groups/public and there 
is no 3.2. There seems to be something wrong.

Thanks,

Christian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141103/bde119f0/attachment.html>

From hiner at wisc.edu  Mon Nov  3 15:10:38 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 3 Nov 2014 15:10:38 -0600
Subject: [ImageJ-devel] Can't build ImageJ-Ops. Missing ImageJ:pom:3.2
In-Reply-To: <5457D356.5090100@uni-konstanz.de>
References: <5457D356.5090100@uni-konstanz.de>
Message-ID: <CA+B=mGqeNRR5fYGj095v4hJrH_=OwcThLnAWUGf6XzcJEgCs6g@mail.gmail.com>

Hi Christian,

 It seems like something went wrong in the deployment process. There is a 3.2
tag <https://github.com/imagej/pom-imagej/releases>, but it didn't make it
to Maven central
<http://search.maven.org/#search|gav|1|g%3A%22net.imagej%22%20AND%20a%3A%22pom-imagej%22>
.

 It's possible that there is ALSO a bug in maven.imagej.net: if you have a
.m2/settings.xml with a <mirrors> block you can try commenting it out.

 Regardless, we're releasing a 3.3 which we hope will fix things.

Thanks,
Mark

On Mon, Nov 3, 2014 at 1:11 PM, Christian Dietz <
christian.dietz at uni-konstanz.de> wrote:

>  Hi all,
>
> I tried to import image-ops and build it with Maven:
>
> [ERROR] The build could not read 1 project -> [Help 1]
> [ERROR]
> [ERROR]   The project net.imagej:imagej-ops:0.6.1-SNAPSHOT
> (/home/dietzc/devel/repos/imagej-ops/pom.xml) has 1 error
> [ERROR]     Non-resolvable parent POM: Failure to find
> net.imagej:pom-imagej:pom:3.2 in
> http://maven.imagej.net/content/groups/public was cached in the local
> repository, resolution will not be reattempted until the update interval of
> imagej.public has elapsed or updates are forced and 'parent.relativePath'
> points at no local POM @ line 5, column 10 -> [Help 2]
> [ERROR]
> [ERROR] To see the full stack trace of the errors, re-run Maven with the
> -e switch.
> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
> [ERROR]
> [ERROR] For more information about the errors and possible solutions,
> please read the following articles:
> [ERROR] [Help 1]
> http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
> [ERROR] [Help 2]
> http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException
>
> I had a look at http://maven.imagej.net/content/groups/public and there
> is no 3.2. There seems to be something wrong.
>
> Thanks,
>
> Christian
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141103/976dd516/attachment.html>

From leek at broadinstitute.org  Wed Nov  5 10:15:58 2014
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 5 Nov 2014 11:15:58 -0500
Subject: [ImageJ-devel] Please don't quit
Message-ID: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>

Hi all,
I had a class (
https://github.com/CellProfiler/CellProfiler/blob/master/java/src/main/java/org/cellprofiler/ijutils/CellProfilerAppEventService.java)
that implemented the deprecated AppEventService whose purpose was to
prevent ImageJ from quitting if a user closed its window by overriding
AppEventService.quit(). Quitting is pretty devastating for CellProfiler
since the process closes when the user's probable intent was to hide the
window.

I'm hoping someone can give me a hint about how to do it now - I thought
I'd cheat by asking instead of figuring it out myself.

Thanks in advance,
--Lee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141105/6b68dcb8/attachment.html>

From leek at broadinstitute.org  Wed Nov  5 10:23:17 2014
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 5 Nov 2014 11:23:17 -0500
Subject: [ImageJ-devel] Please don't quit
In-Reply-To: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>
References: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>
Message-ID: <CAHLFyjdRUhb184cpKV1Ob_SV+o0tpBZwnFAOVLjQo9zJ2+MqAQ@mail.gmail.com>

Oops never mind, what I tried actually worked. AppQuitEvent.consume() did
the trick. Go figure - you guys really threw the whole kitchen sink into
it, didn't you?

@Plugin(type = Service.class, priority = Priority.HIGH_PRIORITY)
public class CellProfilerAppService extends DefaultAppService {
static boolean canQuit = false;
public static void allowQuit() {
canQuit = true;
}
public static void preventQuit() {
canQuit = false;
}
@EventHandler
public void onEvent(final AppQuitEvent event) {
if (canQuit) {
super.onEvent(event);
} else {
final UIService uiService = getContext().getService(UIService.class);
final LogService logService = getContext().getService(LogService.class);
if (uiService.isVisible()) {
UserInterface ui = uiService.getDefaultUI();
logService.info("Quit action: hide the application frame");
ui.getApplicationFrame().setVisible(false);
} else {
logService.info("Quit action: do nothing");
}
event.consume();
}
}

}


On Wed, Nov 5, 2014 at 11:15 AM, Lee Kamentsky <leek at broadinstitute.org>
wrote:

> Hi all,
> I had a class (
> https://github.com/CellProfiler/CellProfiler/blob/master/java/src/main/java/org/cellprofiler/ijutils/CellProfilerAppEventService.java)
> that implemented the deprecated AppEventService whose purpose was to
> prevent ImageJ from quitting if a user closed its window by overriding
> AppEventService.quit(). Quitting is pretty devastating for CellProfiler
> since the process closes when the user's probable intent was to hide the
> window.
>
> I'm hoping someone can give me a hint about how to do it now - I thought
> I'd cheat by asking instead of figuring it out myself.
>
> Thanks in advance,
> --Lee
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141105/1f7f559c/attachment.html>

From ctrueden at wisc.edu  Wed Nov  5 11:33:33 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 5 Nov 2014 11:33:33 -0600
Subject: [ImageJ-devel] Please don't quit
In-Reply-To: <CAHLFyjdRUhb184cpKV1Ob_SV+o0tpBZwnFAOVLjQo9zJ2+MqAQ@mail.gmail.com>
References: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>
	<CAHLFyjdRUhb184cpKV1Ob_SV+o0tpBZwnFAOVLjQo9zJ2+MqAQ@mail.gmail.com>
Message-ID: <CADN69ykx=ypEK8MKg4-PPpOLASU6T2SWRa7gfxXB3z6PpDxnDQ@mail.gmail.com>

Hi Lee,

> Please don't quit

I would suggest avoiding a custom service. There are two other (hopefully
simpler!) ways you can achieve your goal -- see below.

First, a summary of the architecture:

The current DefaultAppService responds to AppQuitEvents as follows:

protected void onEvent(@SuppressWarnings("unused") final AppQuitEvent
event) {
getApp().quit();
}

Which delegates the operation to the App plugin with the highest priority.

The following App plugins ship with net.imagej:imagej:

* org.scijava.app.SciJavaApp [LOW priority] -- bundled with
org.scijava:scijava-common
* io.scif.SCIFIOApp [NORMAL priority] -- bundled with io.scif:scifio
* net.imagej.legacy.LegacyImageJApp [NORMAL priority] - bundled with
net.imagej:imagej-legacy
* net.imagej.app.ImageJApp [HIGH priority] -- bundled with
net.imagej:imagej-common
* net.imagej.app.ToplevelImageJApp [HIGH+1 priority] -- bundled with
net.imagej:imagej

So:
* If net.imagej:imagej is on the classpath, the ToplevelImageJApp will take
precedence.
Otherwise:
* If net.imagej:imagej-common is on the classpath, the ImageJApp takes
precedence.

However, ToplevelImageJApp extends ImageJApp and does not override quit().
So either way, the quit behavior will be the same:

  public void quit() {
    commandService.run(QuitProgram.class, true);
  }

https://github.com/imagej/imagej-common/blob/imagej-common-0.10.1/src/main/java/net/imagej/app/QuitProgram.java#L79-L96

Note that the devastating System.exit(0) is only called when
exitWhenQuitting is set to true. This is part of OptionsMisc:

https://github.com/imagej/imagej-common/blob/imagej-common-0.10.1/src/main/java/net/imagej/options/OptionsMisc.java#L75-L76

So, there are two potential ways I would suggest to achieve your goal:

1) Set the OptionsMisc exitWhenQuitting to false. This is handy if you
don't need a lot of control over exactly what happens when quit() is
called, but you just want to stop the System.exit(0) from firing.

2) Create a CellProfilerApp plugin and set it to a higher priority than
ImageJ. This solution makes the most sense to me because it gives you more
flexibility over the behavior of a couple other operations, too: about()
and prefs().

https://github.com/scijava/scijava-common/blob/scijava-common-2.35.0/src/main/java/org/scijava/app/App.java

Regards,
Curtis

On Wed, Nov 5, 2014 at 10:23 AM, Lee Kamentsky <leek at broadinstitute.org>
wrote:

> Oops never mind, what I tried actually worked. AppQuitEvent.consume() did
> the trick. Go figure - you guys really threw the whole kitchen sink into
> it, didn't you?
>
> @Plugin(type = Service.class, priority = Priority.HIGH_PRIORITY)
> public class CellProfilerAppService extends DefaultAppService {
> static boolean canQuit = false;
> public static void allowQuit() {
> canQuit = true;
> }
> public static void preventQuit() {
> canQuit = false;
> }
> @EventHandler
> public void onEvent(final AppQuitEvent event) {
> if (canQuit) {
> super.onEvent(event);
> } else {
> final UIService uiService = getContext().getService(UIService.class);
> final LogService logService = getContext().getService(LogService.class);
> if (uiService.isVisible()) {
> UserInterface ui = uiService.getDefaultUI();
> logService.info("Quit action: hide the application frame");
> ui.getApplicationFrame().setVisible(false);
> } else {
> logService.info("Quit action: do nothing");
> }
> event.consume();
> }
> }
>
> }
>
>
> On Wed, Nov 5, 2014 at 11:15 AM, Lee Kamentsky <leek at broadinstitute.org>
> wrote:
>
>> Hi all,
>> I had a class (
>> https://github.com/CellProfiler/CellProfiler/blob/master/java/src/main/java/org/cellprofiler/ijutils/CellProfilerAppEventService.java)
>> that implemented the deprecated AppEventService whose purpose was to
>> prevent ImageJ from quitting if a user closed its window by overriding
>> AppEventService.quit(). Quitting is pretty devastating for CellProfiler
>> since the process closes when the user's probable intent was to hide the
>> window.
>>
>> I'm hoping someone can give me a hint about how to do it now - I thought
>> I'd cheat by asking instead of figuring it out myself.
>>
>> Thanks in advance,
>> --Lee
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141105/15046c70/attachment.html>

From leek at broadinstitute.org  Wed Nov  5 11:44:23 2014
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 5 Nov 2014 12:44:23 -0500
Subject: [ImageJ-devel] Please don't quit
In-Reply-To: <CADN69ykx=ypEK8MKg4-PPpOLASU6T2SWRa7gfxXB3z6PpDxnDQ@mail.gmail.com>
References: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>
	<CAHLFyjdRUhb184cpKV1Ob_SV+o0tpBZwnFAOVLjQo9zJ2+MqAQ@mail.gmail.com>
	<CADN69ykx=ypEK8MKg4-PPpOLASU6T2SWRa7gfxXB3z6PpDxnDQ@mail.gmail.com>
Message-ID: <CAHLFyjf+NbAW+BRFGpmeu9QxW_9_mZHD=3eCV=pYSKGhBe7bVw@mail.gmail.com>

Thanks, Curtis:

On Wed, Nov 5, 2014 at 12:33 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Lee,
>
> So, there are two potential ways I would suggest to achieve your goal:
>
> 1) Set the OptionsMisc exitWhenQuitting to false. This is handy if you
> don't need a lot of control over exactly what happens when quit() is
> called, but you just want to stop the System.exit(0) from firing.
>
> I have code to do this, but in the upgrade to the latest, perhaps I'm not
running it and setting exitWhenQuitting to false.

> 2) Create a CellProfilerApp plugin and set it to a higher priority than
> ImageJ. This solution makes the most sense to me because it gives you more
> flexibility over the behavior of a couple other operations, too: about()
> and prefs().
>
It looks like I have to do this, because we don't want to lose the context.
I think that will work out OK.

>
>
> https://github.com/scijava/scijava-common/blob/scijava-common-2.35.0/src/main/java/org/scijava/app/App.java
>
> Regards,
> Curtis
>
> On Wed, Nov 5, 2014 at 10:23 AM, Lee Kamentsky <leek at broadinstitute.org>
> wrote:
>
>> Oops never mind, what I tried actually worked. AppQuitEvent.consume() did
>> the trick. Go figure - you guys really threw the whole kitchen sink into
>> it, didn't you?
>>
>> @Plugin(type = Service.class, priority = Priority.HIGH_PRIORITY)
>> public class CellProfilerAppService extends DefaultAppService {
>> static boolean canQuit = false;
>> public static void allowQuit() {
>> canQuit = true;
>> }
>> public static void preventQuit() {
>> canQuit = false;
>> }
>> @EventHandler
>> public void onEvent(final AppQuitEvent event) {
>> if (canQuit) {
>> super.onEvent(event);
>> } else {
>> final UIService uiService = getContext().getService(UIService.class);
>> final LogService logService = getContext().getService(LogService.class);
>> if (uiService.isVisible()) {
>> UserInterface ui = uiService.getDefaultUI();
>> logService.info("Quit action: hide the application frame");
>> ui.getApplicationFrame().setVisible(false);
>> } else {
>> logService.info("Quit action: do nothing");
>> }
>> event.consume();
>> }
>> }
>>
>> }
>>
>>
>> On Wed, Nov 5, 2014 at 11:15 AM, Lee Kamentsky <leek at broadinstitute.org>
>> wrote:
>>
>>> Hi all,
>>> I had a class (
>>> https://github.com/CellProfiler/CellProfiler/blob/master/java/src/main/java/org/cellprofiler/ijutils/CellProfilerAppEventService.java)
>>> that implemented the deprecated AppEventService whose purpose was to
>>> prevent ImageJ from quitting if a user closed its window by overriding
>>> AppEventService.quit(). Quitting is pretty devastating for CellProfiler
>>> since the process closes when the user's probable intent was to hide the
>>> window.
>>>
>>> I'm hoping someone can give me a hint about how to do it now - I thought
>>> I'd cheat by asking instead of figuring it out myself.
>>>
>>> Thanks in advance,
>>> --Lee
>>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141105/48cc6180/attachment-0001.html>

From ctrueden at wisc.edu  Wed Nov  5 12:01:38 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 5 Nov 2014 12:01:38 -0600
Subject: [ImageJ-devel] Please don't quit
In-Reply-To: <CAHLFyjf+NbAW+BRFGpmeu9QxW_9_mZHD=3eCV=pYSKGhBe7bVw@mail.gmail.com>
References: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>
	<CAHLFyjdRUhb184cpKV1Ob_SV+o0tpBZwnFAOVLjQo9zJ2+MqAQ@mail.gmail.com>
	<CADN69ykx=ypEK8MKg4-PPpOLASU6T2SWRa7gfxXB3z6PpDxnDQ@mail.gmail.com>
	<CAHLFyjf+NbAW+BRFGpmeu9QxW_9_mZHD=3eCV=pYSKGhBe7bVw@mail.gmail.com>
Message-ID: <CADN69y=iXc=rg38JHqhSM4+Umr2nf8i4c__uUK9fXOsfjBH_-w@mail.gmail.com>

Hi Lee,

> > 2) Create a CellProfilerApp plugin
>
> It looks like I have to do this

It is nice for other reasons, too: then CellProfiler will have a "presence"
in the context, so if you run e.g. the SystemInformation command [1], you
will see CellProfiler in the output! :-)

Also, if you didn't see my blog post on quitting a couple of months, that
may be worth a read:

http://imagej.net/2014-07-11_-_Fiji_won't_quit!#Other_complications

Especially the "Other complications" section which explains that there are
multiple very different code paths for quitting.

So depending on what code CellProfiler is invoking -- A) ij.ImageJ#quit()
vs. B) org.scijava.Context#dispose() vs. C) publication of an AppQuitEvent
-- you may experience different behavior.

It has been long enough now that all the details do not spring to mind, but
please reply back with any further questions and we can iron out the
details. I'd _like_ to believe that the quit architecture is as elegant &
configurable as possible now, but feel free to prove me wrong if there are
any roadblocks.

Regards,
Curtis

[1]
https://github.com/scijava/scijava-plugins-commands/blob/scijava-plugins-commands-0.1.7/src/main/java/org/scijava/plugins/commands/debug/SystemInformation.java#L95-L116

On Wed, Nov 5, 2014 at 11:44 AM, Lee Kamentsky <leek at broadinstitute.org>
wrote:

> Thanks, Curtis:
>
> On Wed, Nov 5, 2014 at 12:33 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>> Hi Lee,
>>
>> So, there are two potential ways I would suggest to achieve your goal:
>>
>> 1) Set the OptionsMisc exitWhenQuitting to false. This is handy if you
>> don't need a lot of control over exactly what happens when quit() is
>> called, but you just want to stop the System.exit(0) from firing.
>>
>> I have code to do this, but in the upgrade to the latest, perhaps I'm not
> running it and setting exitWhenQuitting to false.
>
>> 2) Create a CellProfilerApp plugin and set it to a higher priority than
>> ImageJ. This solution makes the most sense to me because it gives you more
>> flexibility over the behavior of a couple other operations, too: about()
>> and prefs().
>>
> It looks like I have to do this, because we don't want to lose the
> context. I think that will work out OK.
>
>>
>>
>> https://github.com/scijava/scijava-common/blob/scijava-common-2.35.0/src/main/java/org/scijava/app/App.java
>>
>> Regards,
>> Curtis
>>
>> On Wed, Nov 5, 2014 at 10:23 AM, Lee Kamentsky <leek at broadinstitute.org>
>> wrote:
>>
>>> Oops never mind, what I tried actually worked. AppQuitEvent.consume()
>>> did the trick. Go figure - you guys really threw the whole kitchen sink
>>> into it, didn't you?
>>>
>>> @Plugin(type = Service.class, priority = Priority.HIGH_PRIORITY)
>>> public class CellProfilerAppService extends DefaultAppService {
>>> static boolean canQuit = false;
>>> public static void allowQuit() {
>>> canQuit = true;
>>> }
>>> public static void preventQuit() {
>>> canQuit = false;
>>> }
>>> @EventHandler
>>> public void onEvent(final AppQuitEvent event) {
>>> if (canQuit) {
>>> super.onEvent(event);
>>> } else {
>>> final UIService uiService = getContext().getService(UIService.class);
>>> final LogService logService = getContext().getService(LogService.class);
>>> if (uiService.isVisible()) {
>>> UserInterface ui = uiService.getDefaultUI();
>>> logService.info("Quit action: hide the application frame");
>>> ui.getApplicationFrame().setVisible(false);
>>> } else {
>>> logService.info("Quit action: do nothing");
>>> }
>>> event.consume();
>>> }
>>> }
>>>
>>> }
>>>
>>>
>>> On Wed, Nov 5, 2014 at 11:15 AM, Lee Kamentsky <leek at broadinstitute.org>
>>> wrote:
>>>
>>>> Hi all,
>>>> I had a class (
>>>> https://github.com/CellProfiler/CellProfiler/blob/master/java/src/main/java/org/cellprofiler/ijutils/CellProfilerAppEventService.java)
>>>> that implemented the deprecated AppEventService whose purpose was to
>>>> prevent ImageJ from quitting if a user closed its window by overriding
>>>> AppEventService.quit(). Quitting is pretty devastating for CellProfiler
>>>> since the process closes when the user's probable intent was to hide the
>>>> window.
>>>>
>>>> I'm hoping someone can give me a hint about how to do it now - I
>>>> thought I'd cheat by asking instead of figuring it out myself.
>>>>
>>>> Thanks in advance,
>>>> --Lee
>>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141105/f315c454/attachment.html>

From leek at broadinstitute.org  Wed Nov  5 13:50:47 2014
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 5 Nov 2014 14:50:47 -0500
Subject: [ImageJ-devel] Please don't quit
In-Reply-To: <CADN69ykx=ypEK8MKg4-PPpOLASU6T2SWRa7gfxXB3z6PpDxnDQ@mail.gmail.com>
References: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>
	<CAHLFyjdRUhb184cpKV1Ob_SV+o0tpBZwnFAOVLjQo9zJ2+MqAQ@mail.gmail.com>
	<CADN69ykx=ypEK8MKg4-PPpOLASU6T2SWRa7gfxXB3z6PpDxnDQ@mail.gmail.com>
Message-ID: <CAHLFyjduxt0uWXnGfqq7LO5ushufBaT=Za02EDzJmFzBo+56fw@mail.gmail.com>

Great Curtis, I even made it say "ImageJ for CellProfiler" in the system
info. So CellProfiler is all caught up, at least it's at 2.0.0 rc 16 -
hopefully largely locked-down from an API perspective.

On Wed, Nov 5, 2014 at 12:33 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Lee,
>
> > Please don't quit
>
> I would suggest avoiding a custom service. There are two other (hopefully
> simpler!) ways you can achieve your goal -- see below.
>
> First, a summary of the architecture:
>
> The current DefaultAppService responds to AppQuitEvents as follows:
>
> protected void onEvent(@SuppressWarnings("unused") final AppQuitEvent
> event) {
> getApp().quit();
> }
>
> Which delegates the operation to the App plugin with the highest priority.
>
> The following App plugins ship with net.imagej:imagej:
>
> * org.scijava.app.SciJavaApp [LOW priority] -- bundled with
> org.scijava:scijava-common
> * io.scif.SCIFIOApp [NORMAL priority] -- bundled with io.scif:scifio
> * net.imagej.legacy.LegacyImageJApp [NORMAL priority] - bundled with
> net.imagej:imagej-legacy
> * net.imagej.app.ImageJApp [HIGH priority] -- bundled with
> net.imagej:imagej-common
> * net.imagej.app.ToplevelImageJApp [HIGH+1 priority] -- bundled with
> net.imagej:imagej
>
> So:
> * If net.imagej:imagej is on the classpath, the ToplevelImageJApp will
> take precedence.
> Otherwise:
> * If net.imagej:imagej-common is on the classpath, the ImageJApp takes
> precedence.
>
> However, ToplevelImageJApp extends ImageJApp and does not override quit().
> So either way, the quit behavior will be the same:
>
>   public void quit() {
>     commandService.run(QuitProgram.class, true);
>   }
>
>
> https://github.com/imagej/imagej-common/blob/imagej-common-0.10.1/src/main/java/net/imagej/app/QuitProgram.java#L79-L96
>
> Note that the devastating System.exit(0) is only called when
> exitWhenQuitting is set to true. This is part of OptionsMisc:
>
>
> https://github.com/imagej/imagej-common/blob/imagej-common-0.10.1/src/main/java/net/imagej/options/OptionsMisc.java#L75-L76
>
> So, there are two potential ways I would suggest to achieve your goal:
>
> 1) Set the OptionsMisc exitWhenQuitting to false. This is handy if you
> don't need a lot of control over exactly what happens when quit() is
> called, but you just want to stop the System.exit(0) from firing.
>
> 2) Create a CellProfilerApp plugin and set it to a higher priority than
> ImageJ. This solution makes the most sense to me because it gives you more
> flexibility over the behavior of a couple other operations, too: about()
> and prefs().
>
>
> https://github.com/scijava/scijava-common/blob/scijava-common-2.35.0/src/main/java/org/scijava/app/App.java
>
> Regards,
> Curtis
>
> On Wed, Nov 5, 2014 at 10:23 AM, Lee Kamentsky <leek at broadinstitute.org>
> wrote:
>
>> Oops never mind, what I tried actually worked. AppQuitEvent.consume() did
>> the trick. Go figure - you guys really threw the whole kitchen sink into
>> it, didn't you?
>>
>> @Plugin(type = Service.class, priority = Priority.HIGH_PRIORITY)
>> public class CellProfilerAppService extends DefaultAppService {
>> static boolean canQuit = false;
>> public static void allowQuit() {
>> canQuit = true;
>> }
>> public static void preventQuit() {
>> canQuit = false;
>> }
>> @EventHandler
>> public void onEvent(final AppQuitEvent event) {
>> if (canQuit) {
>> super.onEvent(event);
>> } else {
>> final UIService uiService = getContext().getService(UIService.class);
>> final LogService logService = getContext().getService(LogService.class);
>> if (uiService.isVisible()) {
>> UserInterface ui = uiService.getDefaultUI();
>> logService.info("Quit action: hide the application frame");
>> ui.getApplicationFrame().setVisible(false);
>> } else {
>> logService.info("Quit action: do nothing");
>> }
>> event.consume();
>> }
>> }
>>
>> }
>>
>>
>> On Wed, Nov 5, 2014 at 11:15 AM, Lee Kamentsky <leek at broadinstitute.org>
>> wrote:
>>
>>> Hi all,
>>> I had a class (
>>> https://github.com/CellProfiler/CellProfiler/blob/master/java/src/main/java/org/cellprofiler/ijutils/CellProfilerAppEventService.java)
>>> that implemented the deprecated AppEventService whose purpose was to
>>> prevent ImageJ from quitting if a user closed its window by overriding
>>> AppEventService.quit(). Quitting is pretty devastating for CellProfiler
>>> since the process closes when the user's probable intent was to hide the
>>> window.
>>>
>>> I'm hoping someone can give me a hint about how to do it now - I thought
>>> I'd cheat by asking instead of figuring it out myself.
>>>
>>> Thanks in advance,
>>> --Lee
>>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141105/659e48bc/attachment-0001.html>

From ctrueden at wisc.edu  Wed Nov  5 13:59:25 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 5 Nov 2014 13:59:25 -0600
Subject: [ImageJ-devel] Please don't quit
In-Reply-To: <CAHLFyjduxt0uWXnGfqq7LO5ushufBaT=Za02EDzJmFzBo+56fw@mail.gmail.com>
References: <CAHLFyje=zC4qVyb5FXq7QZPF2XypEejoXrmNomgxpm86QyPKmQ@mail.gmail.com>
	<CAHLFyjdRUhb184cpKV1Ob_SV+o0tpBZwnFAOVLjQo9zJ2+MqAQ@mail.gmail.com>
	<CADN69ykx=ypEK8MKg4-PPpOLASU6T2SWRa7gfxXB3z6PpDxnDQ@mail.gmail.com>
	<CAHLFyjduxt0uWXnGfqq7LO5ushufBaT=Za02EDzJmFzBo+56fw@mail.gmail.com>
Message-ID: <CADN69ynbFsr3rDWnKJL-zBdFUL=8EoiD8KeXmLbxT3wgP+LM1A@mail.gmail.com>

Hi Lee,

> So CellProfiler is all caught up, at least it's at 2.0.0 rc 16 -

Awesome!

> hopefully largely locked-down from an API perspective.

Yeah, the API is pretty solid at this point -- especially SciJava Common,
which is thoroughly out of beta. The only backwards-incompatible change
planned is a rework of org.scijava.io, but I hope that won't impact most
downstream code.

The other big eventual changes on the ImageJ2 side will be unification of
the net.imglib2.meta and net.imagej data structures, as well as
net.imglib2.ops and net.imagej.ops APIs. If you are a heavy user of
imagej-common or imagej-ops, you may see some disruption there in a few
months' time.

In general, if you see breakages and disruption while keeping things up to
date, you're welcome to complain. Especially if the migration path is not
obvious.

We are going through some related pain on the ImgLib2 front right now, with
imglib2 coming out of beta a couple weeks ago. We still haven't sent the
release announcement because it is not uploaded to the ImageJ update site
yet -- we have to first upgrade all affected Fiji components to the new
version. But after this point the imglib2 API will be extremely stable, so
ultimately it's a good thing.

Regards,
Curtis

On Wed, Nov 5, 2014 at 1:50 PM, Lee Kamentsky <leek at broadinstitute.org>
wrote:

> Great Curtis, I even made it say "ImageJ for CellProfiler" in the system
> info. So CellProfiler is all caught up, at least it's at 2.0.0 rc 16 -
> hopefully largely locked-down from an API perspective.
>
> On Wed, Nov 5, 2014 at 12:33 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>> Hi Lee,
>>
>> > Please don't quit
>>
>> I would suggest avoiding a custom service. There are two other (hopefully
>> simpler!) ways you can achieve your goal -- see below.
>>
>> First, a summary of the architecture:
>>
>> The current DefaultAppService responds to AppQuitEvents as follows:
>>
>> protected void onEvent(@SuppressWarnings("unused") final AppQuitEvent
>> event) {
>> getApp().quit();
>> }
>>
>> Which delegates the operation to the App plugin with the highest priority.
>>
>> The following App plugins ship with net.imagej:imagej:
>>
>> * org.scijava.app.SciJavaApp [LOW priority] -- bundled with
>> org.scijava:scijava-common
>> * io.scif.SCIFIOApp [NORMAL priority] -- bundled with io.scif:scifio
>> * net.imagej.legacy.LegacyImageJApp [NORMAL priority] - bundled with
>> net.imagej:imagej-legacy
>> * net.imagej.app.ImageJApp [HIGH priority] -- bundled with
>> net.imagej:imagej-common
>> * net.imagej.app.ToplevelImageJApp [HIGH+1 priority] -- bundled with
>> net.imagej:imagej
>>
>> So:
>> * If net.imagej:imagej is on the classpath, the ToplevelImageJApp will
>> take precedence.
>> Otherwise:
>> * If net.imagej:imagej-common is on the classpath, the ImageJApp takes
>> precedence.
>>
>> However, ToplevelImageJApp extends ImageJApp and does not override
>> quit(). So either way, the quit behavior will be the same:
>>
>>   public void quit() {
>>     commandService.run(QuitProgram.class, true);
>>   }
>>
>>
>> https://github.com/imagej/imagej-common/blob/imagej-common-0.10.1/src/main/java/net/imagej/app/QuitProgram.java#L79-L96
>>
>> Note that the devastating System.exit(0) is only called when
>> exitWhenQuitting is set to true. This is part of OptionsMisc:
>>
>>
>> https://github.com/imagej/imagej-common/blob/imagej-common-0.10.1/src/main/java/net/imagej/options/OptionsMisc.java#L75-L76
>>
>> So, there are two potential ways I would suggest to achieve your goal:
>>
>> 1) Set the OptionsMisc exitWhenQuitting to false. This is handy if you
>> don't need a lot of control over exactly what happens when quit() is
>> called, but you just want to stop the System.exit(0) from firing.
>>
>> 2) Create a CellProfilerApp plugin and set it to a higher priority than
>> ImageJ. This solution makes the most sense to me because it gives you more
>> flexibility over the behavior of a couple other operations, too: about()
>> and prefs().
>>
>>
>> https://github.com/scijava/scijava-common/blob/scijava-common-2.35.0/src/main/java/org/scijava/app/App.java
>>
>> Regards,
>> Curtis
>>
>> On Wed, Nov 5, 2014 at 10:23 AM, Lee Kamentsky <leek at broadinstitute.org>
>> wrote:
>>
>>> Oops never mind, what I tried actually worked. AppQuitEvent.consume()
>>> did the trick. Go figure - you guys really threw the whole kitchen sink
>>> into it, didn't you?
>>>
>>> @Plugin(type = Service.class, priority = Priority.HIGH_PRIORITY)
>>> public class CellProfilerAppService extends DefaultAppService {
>>> static boolean canQuit = false;
>>> public static void allowQuit() {
>>> canQuit = true;
>>> }
>>> public static void preventQuit() {
>>> canQuit = false;
>>> }
>>> @EventHandler
>>> public void onEvent(final AppQuitEvent event) {
>>> if (canQuit) {
>>> super.onEvent(event);
>>> } else {
>>> final UIService uiService = getContext().getService(UIService.class);
>>> final LogService logService = getContext().getService(LogService.class);
>>> if (uiService.isVisible()) {
>>> UserInterface ui = uiService.getDefaultUI();
>>> logService.info("Quit action: hide the application frame");
>>> ui.getApplicationFrame().setVisible(false);
>>> } else {
>>> logService.info("Quit action: do nothing");
>>> }
>>> event.consume();
>>> }
>>> }
>>>
>>> }
>>>
>>>
>>> On Wed, Nov 5, 2014 at 11:15 AM, Lee Kamentsky <leek at broadinstitute.org>
>>> wrote:
>>>
>>>> Hi all,
>>>> I had a class (
>>>> https://github.com/CellProfiler/CellProfiler/blob/master/java/src/main/java/org/cellprofiler/ijutils/CellProfilerAppEventService.java)
>>>> that implemented the deprecated AppEventService whose purpose was to
>>>> prevent ImageJ from quitting if a user closed its window by overriding
>>>> AppEventService.quit(). Quitting is pretty devastating for CellProfiler
>>>> since the process closes when the user's probable intent was to hide the
>>>> window.
>>>>
>>>> I'm hoping someone can give me a hint about how to do it now - I
>>>> thought I'd cheat by asking instead of figuring it out myself.
>>>>
>>>> Thanks in advance,
>>>> --Lee
>>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141105/3792a3f6/attachment.html>

From christian.dietz at avateam.net  Mon Nov  3 13:09:58 2014
From: christian.dietz at avateam.net (Christian Dietz)
Date: Mon, 03 Nov 2014 20:09:58 +0100
Subject: [ImageJ-devel] Can't build ImageJ-Ops. Missing ImageJ:pom:3.2
Message-ID: <5457D306.4050602@avateam.net>

Hi all,

I tried to import image-ops and build it with Maven:

[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]
[ERROR]   The project net.imagej:imagej-ops:0.6.1-SNAPSHOT 
(/home/dietzc/devel/repos/imagej-ops/pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Failure to find 
net.imagej:pom-imagej:pom:3.2 in 
http://maven.imagej.net/content/groups/public was cached in the local 
repository, resolution will not be reattempted until the update interval 
of imagej.public has elapsed or updates are forced and 
'parent.relativePath' points at no local POM @ line 5, column 10 -> 
[Help 2]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the 
-e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, 
please read the following articles:
[ERROR] [Help 1] 
http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
[ERROR] [Help 2] 
http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException

I had a look at http://maven.imagej.net/content/groups/public and there 
is no 3.2. There seems to be something wrong.

Thanks,

Christian



From ctrueden at wisc.edu  Tue Nov 11 07:10:41 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 11 Nov 2014 07:10:41 -0600
Subject: [ImageJ-devel] Can't build ImageJ-Ops. Missing ImageJ:pom:3.2
In-Reply-To: <5457D306.4050602@avateam.net>
References: <5457D306.4050602@avateam.net>
Message-ID: <CADN69y=1o+Ff5fnbsNV5DYHQ8DWU1dgz0ByP0p050XCaVNh4AA@mail.gmail.com>

Hi Christian,

I thought I fixed that problem on the master branch. Did you pull recently?

Regards,
Curtis
On Nov 11, 2014 6:57 AM, "Christian Dietz" <christian.dietz at avateam.net>
wrote:

> Hi all,
>
> I tried to import image-ops and build it with Maven:
>
> [ERROR] The build could not read 1 project -> [Help 1]
> [ERROR]
> [ERROR]   The project net.imagej:imagej-ops:0.6.1-SNAPSHOT
> (/home/dietzc/devel/repos/imagej-ops/pom.xml) has 1 error
> [ERROR]     Non-resolvable parent POM: Failure to find
> net.imagej:pom-imagej:pom:3.2 in http://maven.imagej.net/
> content/groups/public was cached in the local repository, resolution will
> not be reattempted until the update interval of imagej.public has elapsed
> or updates are forced and 'parent.relativePath' points at no local POM @
> line 5, column 10 -> [Help 2]
> [ERROR]
> [ERROR] To see the full stack trace of the errors, re-run Maven with the
> -e switch.
> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
> [ERROR]
> [ERROR] For more information about the errors and possible solutions,
> please read the following articles:
> [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/
> ProjectBuildingException
> [ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/
> UnresolvableModelException
>
> I had a look at http://maven.imagej.net/content/groups/public and there
> is no 3.2. There seems to be something wrong.
>
> Thanks,
>
> Christian
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141111/62d38828/attachment.html>

From christian.dietz at uni-konstanz.de  Tue Nov 11 07:09:03 2014
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Tue, 11 Nov 2014 14:09:03 +0100
Subject: [ImageJ-devel] Can't build ImageJ-Ops. Missing ImageJ:pom:3.2
In-Reply-To: <CADN69y=1o+Ff5fnbsNV5DYHQ8DWU1dgz0ByP0p050XCaVNh4AA@mail.gmail.com>
References: <5457D306.4050602@avateam.net>
	<CADN69y=1o+Ff5fnbsNV5DYHQ8DWU1dgz0ByP0p050XCaVNh4AA@mail.gmail.com>
Message-ID: <54620A6F.4010507@uni-konstanz.de>

Hi Curtis,

problem is fixed. Thanks!

Christian

PS: I think this mail is just a duplicate of my first mail. don't know 
what happened here.


On 11.11.2014 14:10, Curtis Rueden wrote:
>
> Hi Christian,
>
> I thought I fixed that problem on the master branch. Did you pull 
> recently?
>
> Regards,
> Curtis
>
> On Nov 11, 2014 6:57 AM, "Christian Dietz" 
> <christian.dietz at avateam.net <mailto:christian.dietz at avateam.net>> wrote:
>
>     Hi all,
>
>     I tried to import image-ops and build it with Maven:
>
>     [ERROR] The build could not read 1 project -> [Help 1]
>     [ERROR]
>     [ERROR]   The project net.imagej:imagej-ops:0.6.1-SNAPSHOT
>     (/home/dietzc/devel/repos/imagej-ops/pom.xml) has 1 error
>     [ERROR]     Non-resolvable parent POM: Failure to find
>     net.imagej:pom-imagej:pom:3.2 in
>     http://maven.imagej.net/content/groups/public was cached in the
>     local repository, resolution will not be reattempted until the
>     update interval of imagej.public has elapsed or updates are forced
>     and 'parent.relativePath' points at no local POM @ line 5, column
>     10 -> [Help 2]
>     [ERROR]
>     [ERROR] To see the full stack trace of the errors, re-run Maven
>     with the -e switch.
>     [ERROR] Re-run Maven using the -X switch to enable full debug logging.
>     [ERROR]
>     [ERROR] For more information about the errors and possible
>     solutions, please read the following articles:
>     [ERROR] [Help 1]
>     http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
>     [ERROR] [Help 2]
>     http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException
>
>     I had a look at http://maven.imagej.net/content/groups/public and
>     there is no 3.2. There seems to be something wrong.
>
>     Thanks,
>
>     Christian
>
>
>     _______________________________________________
>     ImageJ-devel mailing list
>     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>     http://imagej.net/mailman/listinfo/imagej-devel
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141111/60245087/attachment.html>

From Johannes.Schindelin at gmx.de  Fri Nov 14 12:27:41 2014
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Fri, 14 Nov 2014 19:27:41 +0100 (CET)
Subject: [ImageJ-devel] On a personal note
Message-ID: <alpine.DEB.1.00.1411132025100.13845@s15462909.onlinehome-server.info>

Dear community,

almost seven years ago, I started the Fiji project to address the need for
a user-friendly distribution of ImageJ with life-science specific plugins
on the one side and for a developer-friendly platform on which new image
processing and analysis components can be built on the other.

A lot happened in the meantime!

- Many useful plugins were added to the Fiji distribution, e.g. the
  Trainable Segmentation (sporting advanced machine learning "hidden"
  behind a very intuitive and easy-to-use graphical user interface) or
  several bleeding-edge plugins to process and analyze light-sheet
  microscopy (SPIM) images.

- We saw that the updater was the singularly most popular feature ? both
  for developers and users, because it made the interaction between these
  two groups of scientists much easier ? and extended its functionality
  e.g. to allow for personal update sites.

- We saw the need for a robust next-generation data processing library and
  came up first with ImgLib, later with the even better ImgLib2.

- We then joined ranks with the ImageJ2 project, lifting the complete Fiji
  project to a new level of professional, industry-grade software
  development.

- During a hackathon with representatives of KNIME, OMERO and Icy, the
  SciJava project was started, identifying commonly needed functionality
  and putting it into highly reusable, robustly developed software
  libraries.

- An incredibly successful paper was published in Nature Methods, cited
  almost a thousand times at the time of writing (according to Google
  Scholar).

- Many development techniques and best practices emerged that now benefit
  the entire developer community.

- Developer and web resources are now provided by LOCI in Madison, WI,
  USA, being much more scalable than our first server.

- The Fiji wiki was transmogrified into the Fiji/ImageJ wiki, with the two
  entry points http://fiji.sc and http://imagej.net being backed by the
  same, community-driven content.

- Fiji development is busier than ever, and the web site access numbers
  have climbed from a humble 4,870 unique visitors in January 2009 to
  320,365 unique visitors in October 2014.

For me personally, Fiji has landed me a job at the MPI-CBG in Dresden,
Germany, getting free reign to work on Fiji for one year, then getting the
opportunity to use Fiji extensively while leading the image processing
facility for two years. I had the flattering invitation to work with Kevin
Eliceiri and Curtis Rueden at the University Wisconsin-Madison originally
intended for two years, then extended to a third year, and I just returned
to Dresden to work with PAvel Tomancak.

The work on Fiji put me in touch with many excellent scientists in all
kinds of exciting places (Barcelona, New York, Paris, San Francisco, and
many more) and while funding was always a concern, I had many an
encouraging feedback from literally hundreds of users.

After such a long time of sustained committment and dedication, it is time
to take a slightly belated sabbatical for me.

The Fiji maintenance will be in good hands, as my good friend and
colleague Curtis Rueden agreed to step in for me; His unquestioned
integrity and skill will undoubtedly keep this project running very
smoothly.

Here's to keeping the community spirit alive!
Johannes

From leek at broadinstitute.org  Fri Nov 14 12:38:57 2014
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Fri, 14 Nov 2014 13:38:57 -0500
Subject: [ImageJ-devel] [fiji-devel] On a personal note
In-Reply-To: <alpine.DEB.1.00.1411132025100.13845@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1411132025100.13845@s15462909.onlinehome-server.info>
Message-ID: <CAHLFyjc1dNnA4SzSZThrZU8Ep9BKKhpnNDMzQXtN0Q9+Kc=jcw@mail.gmail.com>

If I had a bottle of champagne, I'd crack it across the bow of the good
ship Dscho to send it on it's well-deserved way. Thanks for holding things
together for so long, hope to see you refreshed and ready for more when you
pull back into port. If you find your way to Boston, don't be a stranger,
doesn't have to be about work.

On Fri, Nov 14, 2014 at 1:27 PM, Johannes Schindelin <
Johannes.Schindelin at gmx.de> wrote:

> Dear community,
>
> almost seven years ago, I started the Fiji project to address the need for
> a user-friendly distribution of ImageJ with life-science specific plugins
> on the one side and for a developer-friendly platform on which new image
> processing and analysis components can be built on the other.
>
> A lot happened in the meantime!
>
> - Many useful plugins were added to the Fiji distribution, e.g. the
>   Trainable Segmentation (sporting advanced machine learning "hidden"
>   behind a very intuitive and easy-to-use graphical user interface) or
>   several bleeding-edge plugins to process and analyze light-sheet
>   microscopy (SPIM) images.
>
> - We saw that the updater was the singularly most popular feature ? both
>   for developers and users, because it made the interaction between these
>   two groups of scientists much easier ? and extended its functionality
>   e.g. to allow for personal update sites.
>
> - We saw the need for a robust next-generation data processing library and
>   came up first with ImgLib, later with the even better ImgLib2.
>
> - We then joined ranks with the ImageJ2 project, lifting the complete Fiji
>   project to a new level of professional, industry-grade software
>   development.
>
> - During a hackathon with representatives of KNIME, OMERO and Icy, the
>   SciJava project was started, identifying commonly needed functionality
>   and putting it into highly reusable, robustly developed software
>   libraries.
>
> - An incredibly successful paper was published in Nature Methods, cited
>   almost a thousand times at the time of writing (according to Google
>   Scholar).
>
> - Many development techniques and best practices emerged that now benefit
>   the entire developer community.
>
> - Developer and web resources are now provided by LOCI in Madison, WI,
>   USA, being much more scalable than our first server.
>
> - The Fiji wiki was transmogrified into the Fiji/ImageJ wiki, with the two
>   entry points http://fiji.sc and http://imagej.net being backed by the
>   same, community-driven content.
>
> - Fiji development is busier than ever, and the web site access numbers
>   have climbed from a humble 4,870 unique visitors in January 2009 to
>   320,365 unique visitors in October 2014.
>
> For me personally, Fiji has landed me a job at the MPI-CBG in Dresden,
> Germany, getting free reign to work on Fiji for one year, then getting the
> opportunity to use Fiji extensively while leading the image processing
> facility for two years. I had the flattering invitation to work with Kevin
> Eliceiri and Curtis Rueden at the University Wisconsin-Madison originally
> intended for two years, then extended to a third year, and I just returned
> to Dresden to work with PAvel Tomancak.
>
> The work on Fiji put me in touch with many excellent scientists in all
> kinds of exciting places (Barcelona, New York, Paris, San Francisco, and
> many more) and while funding was always a concern, I had many an
> encouraging feedback from literally hundreds of users.
>
> After such a long time of sustained committment and dedication, it is time
> to take a slightly belated sabbatical for me.
>
> The Fiji maintenance will be in good hands, as my good friend and
> colleague Curtis Rueden agreed to step in for me; His unquestioned
> integrity and skill will undoubtedly keep this project running very
> smoothly.
>
> Here's to keeping the community spirit alive!
> Johannes
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141114/ebeeb318/attachment.html>

From hiner at wisc.edu  Mon Nov 17 10:14:22 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 17 Nov 2014 10:14:22 -0600
Subject: [ImageJ-devel] how does -Dscijava.enforce.skip work?
In-Reply-To: <69D166B4-E551-4942-80FA-E7ED30650C24@mpi-cbg.de>
References: <83C3BB5C-C358-42A0-A86E-6725B8EDCB91@mpi-cbg.de>
	<01CFCCF6-A2B6-4043-989B-1920E437F875@mpi-cbg.de>
	<C2C00CA1-90EF-47E5-8C43-1D81C37EF5E4@mpi-cbg.de>
	<CA+B=mGpGXgeoKZZPxAYOz2txYdkofC9FfuFmCaNLYJXy1Uk7rg@mail.gmail.com>
	<69D166B4-E551-4942-80FA-E7ED30650C24@mpi-cbg.de>
Message-ID: <CA+B=mGpZB9QjXwT1MrCb9M9uoR2EWZuqWgQH9gbT4UVcA2SEng@mail.gmail.com>

Hi Tobias,

>I do not understand the reason why RequireReproducibleBuilds must be in
the core rules. Can you elaborate a bit more on this?

So, we wanted the default configuration of RequireReproducibleBuilds to
only fail by default on first party groupIds: pom-scijava tests
org.scijava, pom-imagej adds net.imagej, net.imglib2 and io.scif, and
pom-fiji adds sc.fiji.

Since the intent of this rule is to be configured by project-level poms, I
didn't want to hide that configuration in a profile (and at the time I
wasn't sure how overriding profile xml blocks worked).

>then the -Dscijava.enforce.skip is kind of useless, isn?t it?

There are other rules besides SNAPSHOT checking that are disabled by this
flag, but yes - it is kind of useless and overly clunky. It should have
just been removed in the last release, in favor of -Denforcer.skip.
Basically scijava.enforce.skip failed to provide its original intent:
granular control over individual rules.

scijava.enforce.skip will be removed in the next release. Use enforcer.skip
for local testing in the mean time.

Sorry for the confusion!
- Mark



On Mon, Nov 17, 2014 at 9:20 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
wrote:

> Hi Mark,
>
> thanks for explaining.
>
> I know that I should not release the SNAPSHOT versions. I?m using this (as
> intended, I assume) to figure out things locally while working on several
> projects at the same time. I will bump dependencies to release versions
> when I release all of the stuff in order.
>
> I do not understand the reason why RequireReproducibleBuilds must be in
> the core rules. Can you elaborate a bit more on this?
> If it is in the core rules, then the -Dscijava.enforce.skip is kind of
> useless, isn?t it? Because the RequireReproducibleBuilds will catch anyway
> the stuff that the disabled RequireReleaseDeps would have caught?
>
> best regards,
> Tobias
>
> On 17 Nov 2014, at 15:24, Mark Hiner <hiner at wisc.edu> wrote:
>
> Hi Tobias,
>
>  I apologize for the confusion over enforcer skipping. I wanted to revise
> (and document) its operation last week but decided it wasn't critical to
> block pom-scijava 5.1 and its children.
>
>  In pom-scijava, there is maven-enforcer-plugin configuration in two
> places. The first is in the base <plugins> block. Rules defined in this
> block - let's call them core rules - will ALWAYS run.
>
>  The second definition is in profiles as you saw. These are supplementary
> rules. The profile is disabled if scijava.enforce.skip is set, causing the
> supplementary rules to not run. However, the core rules will still be
> executed.
>
>  enforcer.skip is a property defined in the Maven enforcer:enforce
> <http://maven.apache.org/enforcer/maven-enforcer-plugin/enforce-mojo.html>
> goal itself itself. This completely disables all enforcer activation.
>
>  Last week I created a RequireReproducibleBuilds
> <https://github.com/scijava/scijava-maven-plugin/blob/master/src/main/java/org/scijava/maven/plugin/RequireReproducibleBuilds.java>
> enforcer rule which does more thorough SNAPSHOT checking than the default
> Maven-enforcer rule set. I put its activation in the core rules instead of
> the supplementary, because each child of pom-scijava requires different
> configuration (different groupIds being checked).
>
>
>  I can only speculate that it is possible that the thorough, recursive
> nature of this check caused the additional dependencies to be downloaded. I
> would be interested in cross-checking the results of a "mvn dependency:tree
> -Dverbose" with what was downloaded - to see if unnecessary dependencies
> were some how downloaded.
>
>  Anyway, I assume subsequent runs will/did not require any downloads. The
> requireReproducibleBuilds rule is kind of slow with lots of dependencies,
> even without the downloads, but I will be adding some speed enhancements
> shortly.
>
>  I hope this clarifies the different skip flags for the enforcer
> configuration. That said, *you should not release if you have enforcer
> failures*. The skip flags are only intended for local testing, which is
> one of many reasons we have Jenkins deploy all of our projects
> <http://imagej.net/Fiji_contribution_requirements#Maven_artifacts> - so
> we ensure that these rules are not skipped. These failures indicate that
> the current state of BDV is unreproducible, due to a SNAPSHOT parent and
> direct dependency:
>
> > sc.fiji:spim_data:1.0.0-beta-3-SNAPSHOT
> > sc.fiji:pom-bigdataviewer:1.0.0-SNAPSHOT
>
> I assume something between runs, as your first list of SNAPSHOT
> dependencies was more exhaustive. Note that you did not get the duplicate
> class failure because that rule is declared in the scijava.enforce.skip
> profile.
>
>  Please let us know if anything here is unclear. Happy to Skype as well if
> that's easier.
>
> Best,
> Mark
>
> On Mon, Nov 17, 2014 at 7:27 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
> wrote:
>
>>
>> On 17 Nov 2014, at 14:03, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
>>
>> After browsing the maven enforcer documentation
>> http://maven.apache.org/enforcer/maven-enforcer-plugin/enforce-mojo.html
>> I tried ?mvn -Denforcer.skip" which worked.
>>
>> Then, I tried ?mvn -Dscijava.enforcer.skip? and Maven starts downloading
>> *a lot* of stuff from maven.imagej.net. Absolutely crazy. Looks like
>> maybe everything that is on maven.imagej.net?
>> I?m still waiting for it to finish. I?ll let you know whether it works in
>> the end?
>>
>>
>> Hmm, no.
>> In the end it doesn?t work.
>> Here is the output (also showing the maven.image.net download as far
>> back as my terminal could remember?):
>>
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-api-container/0.8/cargo-core-api-container-0.8.pom
>> (2 KB at 3.1 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-api-module/0.8/cargo-core-api-module-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-api-module/0.8/cargo-core-api-module-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-api-module/0.8/cargo-core-api-module-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-api-module/0.8/cargo-core-api-module-0.8.pom
>> (2 KB at 3.6 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-api-util/0.8/cargo-core-api-util-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-api-util/0.8/cargo-core-api-util-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-api-util/0.8/cargo-core-api-util-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-api-util/0.8/cargo-core-api-util-0.8.pom
>> (837 B at 1.7 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/ant/ant/1.5.4/ant-1.5.4.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/ant/ant/1.5.4/ant-1.5.4.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/ant/ant/1.5.4/ant-1.5.4.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/ant/ant/1.5.4/ant-1.5.4.pom
>> (140 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/xmlunit/xmlunit/1.0/xmlunit-1.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/xmlunit/xmlunit/1.0/xmlunit-1.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/xmlunit/xmlunit/1.0/xmlunit-1.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/xmlunit/xmlunit/1.0/xmlunit-1.0.pom
>> (146 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/geronimo/specs/geronimo-j2ee-deployment_1.1_spec/1.0/geronimo-j2ee-deployment_1.1_spec-1.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/geronimo/specs/geronimo-j2ee-deployment_1.1_spec/1.0/geronimo-j2ee-deployment_1.1_spec-1.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/geronimo/specs/geronimo-j2ee-deployment_1.1_spec/1.0/geronimo-j2ee-deployment_1.1_spec-1.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/geronimo/specs/geronimo-j2ee-deployment_1.1_spec/1.0/geronimo-j2ee-deployment_1.1_spec-1.0.pom
>> (190 B at 0.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-geronimo/0.8/cargo-core-container-geronimo-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-geronimo/0.8/cargo-core-container-geronimo-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-geronimo/0.8/cargo-core-container-geronimo-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-geronimo/0.8/cargo-core-container-geronimo-0.8.pom
>> (703 B at 1.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-containers/0.8/cargo-core-containers-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-containers/0.8/cargo-core-containers-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-containers/0.8/cargo-core-containers-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-containers/0.8/cargo-core-containers-0.8.pom
>> (2 KB at 2.7 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-jboss/0.8/cargo-core-container-jboss-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-jboss/0.8/cargo-core-container-jboss-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-jboss/0.8/cargo-core-container-jboss-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-jboss/0.8/cargo-core-container-jboss-0.8.pom
>> (691 B at 1.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-jetty/0.8/cargo-core-container-jetty-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-jetty/0.8/cargo-core-container-jetty-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-jetty/0.8/cargo-core-container-jetty-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-jetty/0.8/cargo-core-container-jetty-0.8.pom
>> (691 B at 1.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-jo/0.8/cargo-core-container-jo-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-jo/0.8/cargo-core-container-jo-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-jo/0.8/cargo-core-container-jo-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-jo/0.8/cargo-core-container-jo-0.8.pom
>> (681 B at 1.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-resin/0.8/cargo-core-container-resin-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-resin/0.8/cargo-core-container-resin-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-resin/0.8/cargo-core-container-resin-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-resin/0.8/cargo-core-container-resin-0.8.pom
>> (691 B at 1.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-tomcat/0.8/cargo-core-container-tomcat-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-tomcat/0.8/cargo-core-container-tomcat-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-tomcat/0.8/cargo-core-container-tomcat-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-tomcat/0.8/cargo-core-container-tomcat-0.8.pom
>> (695 B at 1.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-orion/0.8/cargo-core-container-orion-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-orion/0.8/cargo-core-container-orion-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-orion/0.8/cargo-core-container-orion-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-orion/0.8/cargo-core-container-orion-0.8.pom
>> (691 B at 1.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-core-container-weblogic/0.8/cargo-core-container-weblogic-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-core-container-weblogic/0.8/cargo-core-container-weblogic-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-weblogic/0.8/cargo-core-container-weblogic-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-core-container-weblogic/0.8/cargo-core-container-weblogic-0.8.pom
>> (703 B at 1.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-ant/0.8/cargo-ant-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-ant/0.8/cargo-ant-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-ant/0.8/cargo-ant-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-ant/0.8/cargo-ant-0.8.pom
>> (626 B at 1.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/cargo/cargo-extensions/0.8/cargo-extensions-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/cargo/cargo-extensions/0.8/cargo-extensions-0.8.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-extensions/0.8/cargo-extensions-0.8.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/cargo/cargo-extensions/0.8/cargo-extensions-0.8.pom
>> (3 KB at 5.6 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/tiles/tiles-jsp/2.0.6/tiles-jsp-2.0.6.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/tiles/tiles-jsp/2.0.6/tiles-jsp-2.0.6.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/tiles/tiles-jsp/2.0.6/tiles-jsp-2.0.6.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/tiles/tiles-jsp/2.0.6/tiles-jsp-2.0.6.pom
>> (6 KB at 10.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.pom
>> (4 KB at 7.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/c3p0/c3p0/0.9.1/c3p0-0.9.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/c3p0/c3p0/0.9.1/c3p0-0.9.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/c3p0/c3p0/0.9.1/c3p0-0.9.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/c3p0/c3p0/0.9.1/c3p0-0.9.1.pom
>> (854 B at 1.8 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/hibernate/hibernate-entitymanager/3.3.2.GA/hibernate-entitymanager-3.3.2.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/hibernate/hibernate-entitymanager/3.3.2.GA/hibernate-entitymanager-3.3.2.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate-entitymanager/3.3.2.GA/hibernate-entitymanager-3.3.2.GA.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate-entitymanager/3.3.2.GA/hibernate-entitymanager-3.3.2.GA.pom
>> (2 KB at 3.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/hibernate/hibernate-annotations/3.3.1.GA/hibernate-annotations-3.3.1.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/hibernate/hibernate-annotations/3.3.1.GA/hibernate-annotations-3.3.1.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate-annotations/3.3.1.GA/hibernate-annotations-3.3.1.GA.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate-annotations/3.3.1.GA/hibernate-annotations-3.3.1.GA.pom
>> (2 KB at 2.6 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/hibernate/hibernate-commons-annotations/3.0.0.ga/hibernate-commons-annotations-3.0.0.ga.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/hibernate/hibernate-commons-annotations/3.0.0.ga/hibernate-commons-annotations-3.0.0.ga.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate-commons-annotations/3.0.0.ga/hibernate-commons-annotations-3.0.0.ga.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/hibernate/hibernate-commons-annotations/3.0.0.ga/hibernate-commons-annotations-3.0.0.ga.pom
>> (2 KB at 2.9 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/hibernate/ejb3-persistence/1.0.1.GA/ejb3-persistence-1.0.1.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/hibernate/ejb3-persistence/1.0.1.GA/ejb3-persistence-1.0.1.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/hibernate/ejb3-persistence/1.0.1.GA/ejb3-persistence-1.0.1.GA.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/hibernate/ejb3-persistence/1.0.1.GA/ejb3-persistence-1.0.1.GA.pom
>> (549 B at 1.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/opensymphony/quartz-all/1.6.0/quartz-all-1.6.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/opensymphony/quartz-all/1.6.0/quartz-all-1.6.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/opensymphony/quartz-all/1.6.0/quartz-all-1.6.0.pom
>> Downloading:
>> http://repo.maven.apache.org/maven2/opensymphony/quartz-all/1.6.0/quartz-all-1.6.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/tomcat/catalina/5.5.23/catalina-5.5.23.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/tomcat/catalina/5.5.23/catalina-5.5.23.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/tomcat/catalina/5.5.23/catalina-5.5.23.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/tomcat/catalina/5.5.23/catalina-5.5.23.pom
>> (5 KB at 10.0 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/tomcat/tomcat-parent/5.5.23/tomcat-parent-5.5.23.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/tomcat/tomcat-parent/5.5.23/tomcat-parent-5.5.23.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/tomcat/tomcat-parent/5.5.23/tomcat-parent-5.5.23.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/tomcat/tomcat-parent/5.5.23/tomcat-parent-5.5.23.pom
>> (898 B at 1.8 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/commons-modeler/commons-modeler/2.0/commons-modeler-2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/commons-modeler/commons-modeler/2.0/commons-modeler-2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/commons-modeler/commons-modeler/2.0/commons-modeler-2.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/commons-modeler/commons-modeler/2.0/commons-modeler-2.0.pom
>> (6 KB at 10.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/commons-digester/commons-digester/1.2/commons-digester-1.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/commons-digester/commons-digester/1.2/commons-digester-1.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/commons-digester/commons-digester/1.2/commons-digester-1.2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/commons-digester/commons-digester/1.2/commons-digester-1.2.pom
>> (164 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/commons-logging/commons-logging-api/1.0.4/commons-logging-api-1.0.4.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/commons-logging/commons-logging-api/1.0.4/commons-logging-api-1.0.4.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/commons-logging/commons-logging-api/1.0.4/commons-logging-api-1.0.4.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/commons-logging/commons-logging-api/1.0.4/commons-logging-api-1.0.4.pom
>> (168 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/mx4j/mx4j-jmx/2.1.1/mx4j-jmx-2.1.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/mx4j/mx4j-jmx/2.1.1/mx4j-jmx-2.1.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/mx4j/mx4j-jmx/2.1.1/mx4j-jmx-2.1.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/mx4j/mx4j-jmx/2.1.1/mx4j-jmx-2.1.1.pom
>> (146 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/velocity/velocity/1.5/velocity-1.5.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/velocity/velocity/1.5/velocity-1.5.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/velocity/velocity/1.5/velocity-1.5.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/velocity/velocity/1.5/velocity-1.5.pom
>> (8 KB at 16.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/logkit/logkit/2.0/logkit-2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/logkit/logkit/2.0/logkit-2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/logkit/logkit/2.0/logkit-2.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/logkit/logkit/2.0/logkit-2.0.pom
>> (144 B at 0.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/ant/ant/1.6/ant-1.6.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/ant/ant/1.6/ant-1.6.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/ant/ant/1.6/ant-1.6.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/ant/ant/1.6/ant-1.6.pom
>> (182 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/werken-xpath/werken-xpath/0.9.4/werken-xpath-0.9.4.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/werken-xpath/werken-xpath/0.9.4/werken-xpath-0.9.4.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/werken-xpath/werken-xpath/0.9.4/werken-xpath-0.9.4.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/werken-xpath/werken-xpath/0.9.4/werken-xpath-0.9.4.pom
>> (159 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/velocity-tools/velocity-tools-generic/1.4/velocity-tools-generic-1.4.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/velocity-tools/velocity-tools-generic/1.4/velocity-tools-generic-1.4.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/velocity-tools/velocity-tools-generic/1.4/velocity-tools-generic-1.4.pom
>> Downloading:
>> http://repo.maven.apache.org/maven2/velocity-tools/velocity-tools-generic/1.4/velocity-tools-generic-1.4.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/velocity-tools/velocity-tools-view/1.4/velocity-tools-view-1.4.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/velocity-tools/velocity-tools-view/1.4/velocity-tools-view-1.4.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/velocity-tools/velocity-tools-view/1.4/velocity-tools-view-1.4.pom
>> Downloading:
>> http://repo.maven.apache.org/maven2/velocity-tools/velocity-tools-view/1.4/velocity-tools-view-1.4.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/hsqldb/hsqldb/1.7.1/hsqldb-1.7.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/hsqldb/hsqldb/1.7.1/hsqldb-1.7.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/hsqldb/hsqldb/1.7.1/hsqldb-1.7.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/hsqldb/hsqldb/1.7.1/hsqldb-1.7.1.pom
>> (147 B at 0.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/jline/jline/1.0/jline-1.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/jline/jline/1.0/jline-1.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/jline/jline/1.0/jline-1.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/jline/jline/1.0/jline-1.0.pom
>> (9 KB at 16.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/com/thoughtworks/xstream/xstream/1.4.2/xstream-1.4.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/com/thoughtworks/xstream/xstream/1.4.2/xstream-1.4.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/com/thoughtworks/xstream/xstream/1.4.2/xstream-1.4.2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/com/thoughtworks/xstream/xstream/1.4.2/xstream-1.4.2.pom
>> (9 KB at 16.8 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/com/thoughtworks/xstream/xstream-parent/1.4.2/xstream-parent-1.4.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/com/thoughtworks/xstream/xstream-parent/1.4.2/xstream-parent-1.4.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/com/thoughtworks/xstream/xstream-parent/1.4.2/xstream-parent-1.4.2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/com/thoughtworks/xstream/xstream-parent/1.4.2/xstream-parent-1.4.2.pom
>> (19 KB at 30.1 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/xerces/xercesImpl/2.6.1/xercesImpl-2.6.1.pom
>> (150 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/jdom/jaxen-core/1.0-FCS/jaxen-core-1.0-FCS.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/jdom/jaxen-core/1.0-FCS/jaxen-core-1.0-FCS.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/jdom/jaxen-core/1.0-FCS/jaxen-core-1.0-FCS.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/jdom/jaxen-core/1.0-FCS/jaxen-core-1.0-FCS.pom
>> (207 B at 0.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/jdom/jaxen-jdom/1.0-FCS/jaxen-jdom-1.0-FCS.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/jdom/jaxen-jdom/1.0-FCS/jaxen-jdom-1.0-FCS.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/jdom/jaxen-jdom/1.0-FCS/jaxen-jdom-1.0-FCS.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/jdom/jaxen-jdom/1.0-FCS/jaxen-jdom-1.0-FCS.pom
>> (207 B at 0.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/jdom/saxpath/1.0-FCS/saxpath-1.0-FCS.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/jdom/saxpath/1.0-FCS/saxpath-1.0-FCS.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/jdom/saxpath/1.0-FCS/saxpath-1.0-FCS.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/jdom/saxpath/1.0-FCS/saxpath-1.0-FCS.pom
>> (201 B at 0.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/xalan/xalan/2.5.D1/xalan-2.5.D1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/xalan/xalan/2.5.D1/xalan-2.5.D1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/xalan/xalan/2.5.D1/xalan-2.5.D1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/xalan/xalan/2.5.D1/xalan-2.5.D1.pom
>> (146 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/joda-time/joda-time/1.6/joda-time-1.6.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/joda-time/joda-time/1.6/joda-time-1.6.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/joda-time/joda-time/1.6/joda-time-1.6.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/joda-time/joda-time/1.6/joda-time-1.6.pom
>> (5 KB at 8.9 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/woodstox/wstx-asl/3.2.7/wstx-asl-3.2.7.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/woodstox/wstx-asl/3.2.7/wstx-asl-3.2.7.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/woodstox/wstx-asl/3.2.7/wstx-asl-3.2.7.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/woodstox/wstx-asl/3.2.7/wstx-asl-3.2.7.pom
>> (2 KB at 2.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/net/sf/kxml/kxml2-min/2.3.0/kxml2-min-2.3.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/net/sf/kxml/kxml2-min/2.3.0/kxml2-min-2.3.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/net/sf/kxml/kxml2-min/2.3.0/kxml2-min-2.3.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/net/sf/kxml/kxml2-min/2.3.0/kxml2-min-2.3.0.pom
>> (2 KB at 3.0 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/net/sf/kxml/kxml2/2.3.0/kxml2-2.3.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/net/sf/kxml/kxml2/2.3.0/kxml2-2.3.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/net/sf/kxml/kxml2/2.3.0/kxml2-2.3.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/net/sf/kxml/kxml2/2.3.0/kxml2-2.3.0.pom
>> (2 KB at 2.6 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/ant/ant/1.6.2/ant-1.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/ant/ant/1.6.2/ant-1.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/ant/ant/1.6.2/ant-1.6.2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/ant/ant/1.6.2/ant-1.6.2.pom
>> (521 B at 1.0 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/xerces/xerces-impl/2.6.2/xerces-impl-2.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/xerces/xerces-impl/2.6.2/xerces-impl-2.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/xerces/xerces-impl/2.6.2/xerces-impl-2.6.2.pom
>> Downloading:
>> http://repo.maven.apache.org/maven2/xerces/xerces-impl/2.6.2/xerces-impl-2.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/xml-apis/xml-apis/2.6.2/xml-apis-2.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/xml-apis/xml-apis/2.6.2/xml-apis-2.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/xml-apis/xml-apis/2.6.2/xml-apis-2.6.2.pom
>> Downloading:
>> http://repo.maven.apache.org/maven2/xml-apis/xml-apis/2.6.2/xml-apis-2.6.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/json/json/20080701/json-20080701.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/json/json/20080701/json-20080701.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/json/json/20080701/json-20080701.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/json/json/20080701/json-20080701.pom
>> (2 KB at 3.1 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/jettison/jettison/1.2/jettison-1.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/jettison/jettison/1.2/jettison-1.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/jettison/jettison/1.2/jettison-1.2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/jettison/jettison/1.2/jettison-1.2.pom
>> (4 KB at 5.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/woodstox/wstx-asl/3.2.2/wstx-asl-3.2.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/woodstox/wstx-asl/3.2.2/wstx-asl-3.2.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/woodstox/wstx-asl/3.2.2/wstx-asl-3.2.2.pom
>> Downloading:
>> http://repo.maven.apache.org/maven2/woodstox/wstx-asl/3.2.2/wstx-asl-3.2.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/gpars/gpars/1.0-beta-2/gpars-1.0-beta-2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/gpars/gpars/1.0-beta-2/gpars-1.0-beta-2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/gpars/gpars/1.0-beta-2/gpars-1.0-beta-2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/gpars/gpars/1.0-beta-2/gpars-1.0-beta-2.pom
>> (2 KB at 3.0 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/jcsp/jcsp/1.1-rc5/jcsp-1.1-rc5.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/jcsp/jcsp/1.1-rc5/jcsp-1.1-rc5.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/jcsp/jcsp/1.1-rc5/jcsp-1.1-rc5.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/jcsp/jcsp/1.1-rc5/jcsp-1.1-rc5.pom
>> (7 KB at 14.6 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/felix/org.osgi.core/1.4.0/org.osgi.core-1.4.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/felix/org.osgi.core/1.4.0/org.osgi.core-1.4.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/org.osgi.core/1.4.0/org.osgi.core-1.4.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/org.osgi.core/1.4.0/org.osgi.core-1.4.0.pom
>> (3 KB at 6.0 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/felix/felix-parent/1.2.0/felix-parent-1.2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/felix/felix-parent/1.2.0/felix-parent-1.2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/felix-parent/1.2.0/felix-parent-1.2.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/felix-parent/1.2.0/felix-parent-1.2.0.pom
>> (15 KB at 19.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/mockito/mockito-all/1.7/mockito-all-1.7.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/mockito/mockito-all/1.7/mockito-all-1.7.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/mockito/mockito-all/1.7/mockito-all-1.7.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/mockito/mockito-all/1.7/mockito-all-1.7.pom
>> (856 B at 1.6 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/codehaus/jsr166-mirror/jsr166y/1.7.0/jsr166y-1.7.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/codehaus/jsr166-mirror/jsr166y/1.7.0/jsr166y-1.7.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/codehaus/jsr166-mirror/jsr166y/1.7.0/jsr166y-1.7.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/codehaus/jsr166-mirror/jsr166y/1.7.0/jsr166y-1.7.0.pom
>> (406 B at 0.8 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/multiverse/multiverse-beta/0.7-RC-1/multiverse-beta-0.7-RC-1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/multiverse/multiverse-beta/0.7-RC-1/multiverse-beta-0.7-RC-1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/multiverse/multiverse-beta/0.7-RC-1/multiverse-beta-0.7-RC-1.pom
>> [WARNING] Checksum validation failed, expected
>> 7c798b9edd7a744e042def51c31eef256556eee6 but is
>> ddc682a2b219fcb896732e8ff3546415d708e12e for
>> http://maven.imagej.net/content/groups/public/org/multiverse/multiverse-beta/0.7-RC-1/multiverse-beta-0.7-RC-1.pom
>> [WARNING] Checksum validation failed, expected
>> 7c798b9edd7a744e042def51c31eef256556eee6 but is
>> ddc682a2b219fcb896732e8ff3546415d708e12e for
>> http://maven.imagej.net/content/groups/public/org/multiverse/multiverse-beta/0.7-RC-1/multiverse-beta-0.7-RC-1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/multiverse/multiverse-beta/0.7-RC-1/multiverse-beta-0.7-RC-1.pom
>> (775 B at 0.9 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/mockito/mockito-all/1.8.2/mockito-all-1.8.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/mockito/mockito-all/1.8.2/mockito-all-1.8.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/mockito/mockito-all/1.8.2/mockito-all-1.8.2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/mockito/mockito-all/1.8.2/mockito-all-1.8.2.pom
>> (858 B at 1.7 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/jboss/netty/netty/3.2.7.Final/netty-3.2.7.Final.pom
>> (26 KB at 34.9 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/jboss/jboss-parent/5/jboss-parent-5.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/jboss/jboss-parent/5/jboss-parent-5.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/jboss/jboss-parent/5/jboss-parent-5.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/jboss/jboss-parent/5/jboss-parent-5.pom
>> (19 KB at 30.4 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/easymock/easymockclassextension/2.2.1/easymockclassextension-2.2.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/easymock/easymockclassextension/2.2.1/easymockclassextension-2.2.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/easymock/easymockclassextension/2.2.1/easymockclassextension-2.2.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/easymock/easymockclassextension/2.2.1/easymockclassextension-2.2.1.pom
>> (2 KB at 2.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/junit/junit/4.1/junit-4.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/junit/junit/4.1/junit-4.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/junit/junit/4.1/junit-4.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/junit/junit/4.1/junit-4.1.pom
>> (583 B at 1.1 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/felix/org.osgi.compendium/1.4.0/org.osgi.compendium-1.4.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/felix/org.osgi.compendium/1.4.0/org.osgi.compendium-1.4.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/org.osgi.compendium/1.4.0/org.osgi.compendium-1.4.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/org.osgi.compendium/1.4.0/org.osgi.compendium-1.4.0.pom
>> (4 KB at 8.5 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/felix/javax.servlet/1.0.0/javax.servlet-1.0.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/felix/javax.servlet/1.0.0/javax.servlet-1.0.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/javax.servlet/1.0.0/javax.servlet-1.0.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/javax.servlet/1.0.0/javax.servlet-1.0.0.pom
>> (5 KB at 9.9 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/felix/felix/1.0.0/felix-1.0.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/felix/felix/1.0.0/felix-1.0.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/felix/1.0.0/felix-1.0.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/felix/1.0.0/felix-1.0.0.pom
>> (12 KB at 7.1 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/easymock/easymock/1.2_Java1.3/easymock-1.2_Java1.3.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/easymock/easymock/1.2_Java1.3/easymock-1.2_Java1.3.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/easymock/easymock/1.2_Java1.3/easymock-1.2_Java1.3.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/easymock/easymock/1.2_Java1.3/easymock-1.2_Java1.3.pom
>> (192 B at 0.3 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/felix/org.osgi.foundation/1.2.0/org.osgi.foundation-1.2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/felix/org.osgi.foundation/1.2.0/org.osgi.foundation-1.2.0.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/org.osgi.foundation/1.2.0/org.osgi.foundation-1.2.0.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/org.osgi.foundation/1.2.0/org.osgi.foundation-1.2.0.pom
>> (2 KB at 3.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/apache/felix/felix/1.0.2/felix-1.0.2.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/apache/felix/felix/1.0.2/felix-1.0.2.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/felix/1.0.2/felix-1.0.2.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/apache/felix/felix/1.0.2/felix-1.0.2.pom
>> (14 KB at 4.7 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/jboss/logging/jboss-logging-spi/2.1.2.GA/jboss-logging-spi-2.1.2.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/jboss/logging/jboss-logging-spi/2.1.2.GA/jboss-logging-spi-2.1.2.GA.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/jboss/logging/jboss-logging-spi/2.1.2.GA/jboss-logging-spi-2.1.2.GA.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/jboss/logging/jboss-logging-spi/2.1.2.GA/jboss-logging-spi-2.1.2.GA.pom
>> (679 B at 1.2 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/log4j/log4j/1.2.16/log4j-1.2.16.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/log4j/log4j/1.2.16/log4j-1.2.16.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/log4j/log4j/1.2.16/log4j-1.2.16.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/log4j/log4j/1.2.16/log4j-1.2.16.pom
>> (20 KB at 32.0 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/javax/mail/mail/1.4.1/mail-1.4.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/javax/mail/mail/1.4.1/mail-1.4.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/javax/mail/mail/1.4.1/mail-1.4.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/javax/mail/mail/1.4.1/mail-1.4.1.pom
>> (995 B at 1.8 KB/sec)
>> Downloading:
>> http://maven.imagej.net/content/repositories/releases/org/easymock/easymock/3.1/easymock-3.1.pom
>> Downloading:
>> http://maven.imagej.net/content/repositories/snapshots/org/easymock/easymock/3.1/easymock-3.1.pom
>> Downloading:
>> http://maven.imagej.net/content/groups/public/org/easymock/easymock/3.1/easymock-3.1.pom
>> Downloaded:
>> http://maven.imagej.net/content/groups/public/org/easymock/easymock/3.1/easymock-3.1.pom
>> (6 KB at 11.2 K
>>
> ...
>
> [Message clipped]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/f437c18a/attachment-0001.html>

From hiner at wisc.edu  Mon Nov 17 10:27:33 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 17 Nov 2014 10:27:33 -0600
Subject: [ImageJ-devel] another enforcer problem
In-Reply-To: <C469D237-0521-4FBE-B754-DC368DE205EC@gmail.com>
References: <C469D237-0521-4FBE-B754-DC368DE205EC@gmail.com>
Message-ID: <CA+B=mGp_1uC+t9e5_tarbKt02po89RxzsgouZ6qrNhi64P_QFQ@mail.gmail.com>

Hi Tobias,

 Argh... I added an exclude for this
<https://github.com/scijava/pom-scijava/commit/0b45545817d29c4ed95897bcc48b96722a6438e7>
in pom-scijava 5.1, which would just make it necessary to release a
pom-imglib2 5.1 and update algorithm-gpl to use it...

 BUT my fix was incomplete because the scijava.enforcer.rules profile also
declares enforceBytecodeVersion excludes, which then destructively
overrides the default configuration.

 This problem will resolve itself when the scijava.enforcer.rules profile
is removed and we just have one master list of excludes for each enforcer
rule.

Best,
Mark

On Mon, Nov 17, 2014 at 9:44 AM, Tobias Pietzsch <tobias.pietzsch at gmail.com>
wrote:

> Hi again,
>
> I just noticed another thing with the enforcer rules, now building
> "imglib2-algorithm-gpl?.
> It makes the build depend on the JDK version used to build:
> With JDK 1.7 I get this error:
>
> pietzsch at tomancak-mac-17:~/workspace/imglib/imglib2-algorithm-gpl
> (master)$ mvn clean install
> [INFO] Scanning for projects...
> [INFO]
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Building ImgLib2 Algorithms (GPL) 0.1.2-SNAPSHOT
> [INFO]
> ------------------------------------------------------------------------
> [INFO]
> [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @
> imglib2-algorithm-gpl ---
> [INFO] Deleting
> /Users/pietzsch/workspace/imglib/imglib2-algorithm-gpl/target
> [INFO]
> [INFO] --- maven-enforcer-plugin:1.3.1:enforce (enforce-rules) @
> imglib2-algorithm-gpl ---
> [INFO] Adding ignorable dependency: null:jcodings:null
> [INFO]   Adding ignore: org/jcodings/*
> [INFO] Adding ignorable dependency: null:jnr-constants:null
> [INFO]   Adding ignore: com/kenai/constantine/*
> [INFO]   Adding ignore: jnr/constants/*
> [INFO] Adding ignorable dependency: null:jnr-ffi:null
> [INFO]   Adding ignore: jnr/ffi/*
> [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system contains
> sun/tools/asm/ArrayData.class targeted to JDK 1.7
> [WARNING] Rule 1: org.apache.maven.plugins.enforcer.EnforceBytecodeVersion
> failed with message:
> Found Banned Dependency: com.sun:tools:jar:1.4.2
> Use 'mvn dependency:tree' to locate the source of the banned dependencies.
> [INFO]
> ------------------------------------------------------------------------
> [INFO] BUILD FAILURE
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Total time: 1.865s
> [INFO] Finished at: Mon Nov 17 16:27:05 CET 2014
> [INFO] Final Memory: 9M/310M
> [INFO]
> ------------------------------------------------------------------------
> [ERROR] Failed to execute goal
> org.apache.maven.plugins:maven-enforcer-plugin:1.3.1:enforce
> (enforce-rules) on project imglib2-algorithm-gpl: Some Enforcer rules have
> failed. Look above for specific messages explaining why the rule failed. ->
> [Help 1]
> [ERROR]
> [ERROR] To see the full stack trace of the errors, re-run Maven with the
> -e switch.
> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
> [ERROR]
> [ERROR] For more information about the errors and possible solutions,
> please read the following articles:
> [ERROR] [Help 1]
> http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
>
> To avoid it, I need to use JDK 1.6 to make it find the ?right?
> com.sun:tools:jar:1.4.2.
> This is very inconvenient because it requires everybody who want?s to
> build it to install JDK 1.6, although JDK 1.7 or 1.8 are perfectly able to
> build for the 1.6 target.
> Is there a way to modify the enforcer setup such that these core jdk jars
> are ignored?
>
> best regards,
> Tobias
>
> PS:
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/1e56fcd4/attachment.html>

From stephan.preibisch at gmx.de  Mon Nov 17 12:06:23 2014
From: stephan.preibisch at gmx.de (Stephan Preibisch)
Date: Mon, 17 Nov 2014 13:06:23 -0500
Subject: [ImageJ-devel] Where do I find the Fiji parent pom?
References: <F05778EC-2589-4E08-919D-EC750C0F1CE8@einstein.yu.edu>
Message-ID: <F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>

Hi,

I think this is maybe a stupid question, but where do I find the parent pom-fiji? The pom.xml in the fiji project itself still defines it as its parent (https://github.com/fiji/fiji/blob/master/pom.xml <https://github.com/fiji/fiji/blob/master/pom.xml>), so I am not sure where to look for it:

<parent>
<groupId>sc.fiji</groupId>
<artifactId>pom-fiji</artifactId>
<version>5.1</version>
<relativePath />
</parent>

Eclipse also says it cannot locate the parent pom when clicking on the icon for that.

The background is that I want to try Bioformats 5.0.6, so I guess the right thing is to overwrite the version tag inherited from fiji-pom. I just wanted to see how it is defined in there to actually overwrite it.

Thanks so much,
Steffi


---

Dr. Stephan Preibisch
HFSP Fellow
Robert H. Singer / Eugene Myers lab

Albert Einstein College of Medicine / HHMI Janelia Farm / MPI-CBG

email: stephan.preibisch at einstein.yu.edu <mailto:stephan.preibisch at einstein.yu.edu> / preibischs at janelia.hhmi.org <mailto:preibischs at janelia.hhmi.org> / preibisch at mpi-cbg.de <mailto:preibisch at mpi-cbg.de>
web: http://www.preibisch.net/ <http://fly.mpi-cbg.de/preibisch>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/578bb973/attachment.html>

From hiner at wisc.edu  Mon Nov 17 12:12:35 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 17 Nov 2014 12:12:35 -0600
Subject: [ImageJ-devel] Where do I find the Fiji parent pom?
In-Reply-To: <F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>
References: <F05778EC-2589-4E08-919D-EC750C0F1CE8@einstein.yu.edu>
	<F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>
Message-ID: <CA+B=mGoTP_kyuUS=KAcHUaxd5FXDsQ1UKRm4n_OdY-nXvSG81w@mail.gmail.com>

Hi Stephan,

>I think this is maybe a stupid question, but where do I find the parent
pom-fiji?

It's always helpful to ask questions on public lists! All of the project
poms (fijji, imagej, scijava, scifio) are in their own repo under their
respective organization. So pom-fiji is:
https://github.com/fiji/pom-fiji

Also, if you go to an individual organization's page (e.g.
https://github.com/fiji/) you can filter the available repositories to look
for any component.

Hope that helps!

- Mark

On Mon, Nov 17, 2014 at 12:06 PM, Stephan Preibisch <
stephan.preibisch at gmx.de> wrote:

> Hi,
>
> I think this is maybe a stupid question, but where do I find the parent
> pom-fiji? The pom.xml in the fiji project itself still defines it as its
> parent (https://github.com/fiji/fiji/blob/master/pom.xml), so I am not
> sure where to look for it:
>
> <parent>
> <groupId>sc.fiji</groupId>
> <artifactId>pom-fiji</artifactId>
> <version>5.1</version>
> <relativePath />
> </parent>
>
> Eclipse also says it cannot locate the parent pom when clicking on the
> icon for that.
>
> The background is that I want to try Bioformats 5.0.6, so I guess the
> right thing is to overwrite the version tag inherited from fiji-pom. I just
> wanted to see how it is defined in there to actually overwrite it.
>
> Thanks so much,
> Steffi
>
>
> ---
>
> Dr. Stephan Preibisch
> HFSP Fellow
> Robert H. Singer / Eugene Myers lab
>
> Albert Einstein College of Medicine / HHMI Janelia Farm / MPI-CBG
>
> email: stephan.preibisch at einstein.yu.edu / preibischs at janelia.hhmi.org /
> preibisch at mpi-cbg.de
> web: http://www.preibisch.net/ <http://fly.mpi-cbg.de/preibisch>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/26687933/attachment.html>

From hiner at wisc.edu  Mon Nov 17 12:17:24 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 17 Nov 2014 12:17:24 -0600
Subject: [ImageJ-devel] Where do I find the Fiji parent pom?
In-Reply-To: <CA+B=mGoTP_kyuUS=KAcHUaxd5FXDsQ1UKRm4n_OdY-nXvSG81w@mail.gmail.com>
References: <F05778EC-2589-4E08-919D-EC750C0F1CE8@einstein.yu.edu>
	<F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>
	<CA+B=mGoTP_kyuUS=KAcHUaxd5FXDsQ1UKRm4n_OdY-nXvSG81w@mail.gmail.com>
Message-ID: <CA+B=mGqWQGYsEnV1X4OiQQCpFpz4ew0PK4Yt1Eac_0tvUAzA0w@mail.gmail.com>

>The background is that I want to try Bioformats 5.0.6, so I guess the
right thing is to overwrite the version tag inherited from fiji-pom. I just
wanted to see how it is defined in there to actually overwrite it.

It would be helpful if I finished reading your complete question.

The Bio-Formats dependencies are managed in pom-scijava
<https://github.com/scijava/pom-scijava>. You'll want to look at the
<properties> and <dependencyManagement> blocks to get a feel how things
work. For testing 5.0.6 locally it's also fine to put a
<bio-formats.version> property in the pom.xml of the project you're testing.

Best,
Mark

On Mon, Nov 17, 2014 at 12:12 PM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Stephan,
>
> >I think this is maybe a stupid question, but where do I find the parent
> pom-fiji?
>
> It's always helpful to ask questions on public lists! All of the project
> poms (fijji, imagej, scijava, scifio) are in their own repo under their
> respective organization. So pom-fiji is:
> https://github.com/fiji/pom-fiji
>
> Also, if you go to an individual organization's page (e.g.
> https://github.com/fiji/) you can filter the available repositories to
> look for any component.
>
> Hope that helps!
>
> - Mark
>
> On Mon, Nov 17, 2014 at 12:06 PM, Stephan Preibisch <
> stephan.preibisch at gmx.de> wrote:
>
>> Hi,
>>
>> I think this is maybe a stupid question, but where do I find the parent
>> pom-fiji? The pom.xml in the fiji project itself still defines it as its
>> parent (https://github.com/fiji/fiji/blob/master/pom.xml), so I am not
>> sure where to look for it:
>>
>> <parent>
>> <groupId>sc.fiji</groupId>
>> <artifactId>pom-fiji</artifactId>
>> <version>5.1</version>
>> <relativePath />
>> </parent>
>>
>> Eclipse also says it cannot locate the parent pom when clicking on the
>> icon for that.
>>
>> The background is that I want to try Bioformats 5.0.6, so I guess the
>> right thing is to overwrite the version tag inherited from fiji-pom. I just
>> wanted to see how it is defined in there to actually overwrite it.
>>
>> Thanks so much,
>> Steffi
>>
>>
>> ---
>>
>> Dr. Stephan Preibisch
>> HFSP Fellow
>> Robert H. Singer / Eugene Myers lab
>>
>> Albert Einstein College of Medicine / HHMI Janelia Farm / MPI-CBG
>>
>> email: stephan.preibisch at einstein.yu.edu / preibischs at janelia.hhmi.org /
>> preibisch at mpi-cbg.de
>> web: http://www.preibisch.net/ <http://fly.mpi-cbg.de/preibisch>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/8d57bc87/attachment.html>

From stephan.preibisch at gmx.de  Mon Nov 17 12:27:05 2014
From: stephan.preibisch at gmx.de (Stephan Preibisch)
Date: Mon, 17 Nov 2014 13:27:05 -0500
Subject: [ImageJ-devel] Where do I find the Fiji parent pom?
In-Reply-To: <CA+B=mGqWQGYsEnV1X4OiQQCpFpz4ew0PK4Yt1Eac_0tvUAzA0w@mail.gmail.com>
References: <F05778EC-2589-4E08-919D-EC750C0F1CE8@einstein.yu.edu>
	<F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>
	<CA+B=mGoTP_kyuUS=KAcHUaxd5FXDsQ1UKRm4n_OdY-nXvSG81w@mail.gmail.com>
	<CA+B=mGqWQGYsEnV1X4OiQQCpFpz4ew0PK4Yt1Eac_0tvUAzA0w@mail.gmail.com>
Message-ID: <49540581-0F17-446E-B575-65B1CC6597D6@gmx.de>

Thanks a lot Mark,

I managed to change the version to 5.0.6.!

Just out of curiosity, I still do not see the bio-formats version being defined in here: https://github.com/fiji/pom-fiji/blob/master/pom.xml <https://github.com/fiji/pom-fiji/blob/master/pom.xml>

Where is the 5.0.3 defined to which it currently points?

Thanks so much,
Stephan

> On Nov 17, 2014, at 13:17 , Mark Hiner <hiner at wisc.edu> wrote:
> 
> >The background is that I want to try Bioformats 5.0.6, so I guess the right thing is to overwrite the version tag inherited from fiji-pom. I just wanted to see how it is defined in there to actually overwrite it.
> 
> It would be helpful if I finished reading your complete question.
> 
> The Bio-Formats dependencies are managed in pom-scijava <https://github.com/scijava/pom-scijava>. You'll want to look at the <properties> and <dependencyManagement> blocks to get a feel how things work. For testing 5.0.6 locally it's also fine to put a <bio-formats.version> property in the pom.xml of the project you're testing.
> 
> Best,
> Mark
> 
> On Mon, Nov 17, 2014 at 12:12 PM, Mark Hiner <hiner at wisc.edu <mailto:hiner at wisc.edu>> wrote:
> Hi Stephan,
> 
> >I think this is maybe a stupid question, but where do I find the parent pom-fiji?
> 
> It's always helpful to ask questions on public lists! All of the project poms (fijji, imagej, scijava, scifio) are in their own repo under their respective organization. So pom-fiji is: 
> https://github.com/fiji/pom-fiji <https://github.com/fiji/pom-fiji>
> 
> Also, if you go to an individual organization's page (e.g. https://github.com/fiji/ <https://github.com/fiji/>) you can filter the available repositories to look for any component.
> 
> Hope that helps!
> 
> - Mark
> 
> On Mon, Nov 17, 2014 at 12:06 PM, Stephan Preibisch <stephan.preibisch at gmx.de <mailto:stephan.preibisch at gmx.de>> wrote:
> Hi,
> 
> I think this is maybe a stupid question, but where do I find the parent pom-fiji? The pom.xml in the fiji project itself still defines it as its parent (https://github.com/fiji/fiji/blob/master/pom.xml <https://github.com/fiji/fiji/blob/master/pom.xml>), so I am not sure where to look for it:
> 
> <parent>
> <groupId>sc.fiji</groupId>
> <artifactId>pom-fiji</artifactId>
> <version>5.1</version>
> <relativePath />
> </parent>
> 
> Eclipse also says it cannot locate the parent pom when clicking on the icon for that.
> 
> The background is that I want to try Bioformats 5.0.6, so I guess the right thing is to overwrite the version tag inherited from fiji-pom. I just wanted to see how it is defined in there to actually overwrite it.
> 
> Thanks so much,
> Steffi
> 
> 
> ---
> 
> Dr. Stephan Preibisch
> HFSP Fellow
> Robert H. Singer / Eugene Myers lab
> 
> Albert Einstein College of Medicine / HHMI Janelia Farm / MPI-CBG
> 
> email: stephan.preibisch at einstein.yu.edu <mailto:stephan.preibisch at einstein.yu.edu> / preibischs at janelia.hhmi.org <mailto:preibischs at janelia.hhmi.org> / preibisch at mpi-cbg.de <mailto:preibisch at mpi-cbg.de>
> web: http://www.preibisch.net/ <http://fly.mpi-cbg.de/preibisch>
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
> http://imagej.net/mailman/listinfo/imagej-devel <http://imagej.net/mailman/listinfo/imagej-devel>
> 
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/5e344fa2/attachment-0001.html>

From hiner at wisc.edu  Mon Nov 17 12:41:09 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 17 Nov 2014 12:41:09 -0600
Subject: [ImageJ-devel] Where do I find the Fiji parent pom?
In-Reply-To: <49540581-0F17-446E-B575-65B1CC6597D6@gmx.de>
References: <F05778EC-2589-4E08-919D-EC750C0F1CE8@einstein.yu.edu>
	<F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>
	<CA+B=mGoTP_kyuUS=KAcHUaxd5FXDsQ1UKRm4n_OdY-nXvSG81w@mail.gmail.com>
	<CA+B=mGqWQGYsEnV1X4OiQQCpFpz4ew0PK4Yt1Eac_0tvUAzA0w@mail.gmail.com>
	<49540581-0F17-446E-B575-65B1CC6597D6@gmx.de>
Message-ID: <CA+B=mGqed6yyJUdGjw88_2yEvuP4JDpCbNDTC0jPrDE2i65E2A@mail.gmail.com>

Hi Stephan,

>Where is the 5.0.3 defined to which it currently points?

Here it is <https://github.com/scijava/pom-scijava/blob/master/pom.xml#L191>!
:) It's in pom-scijava to allow any SciJava project to use a consistent
version of Bio-Formats.

Let me know if you have any more questions!

- Mark

On Mon, Nov 17, 2014 at 12:27 PM, Stephan Preibisch <
stephan.preibisch at gmx.de> wrote:

> Thanks a lot Mark,
>
> I managed to change the version to 5.0.6.!
>
> Just out of curiosity, I still do not see the bio-formats version being
> defined in here: https://github.com/fiji/pom-fiji/blob/master/pom.xml
>
> Where is the 5.0.3 defined to which it currently points?
>
> Thanks so much,
> Stephan
>
> On Nov 17, 2014, at 13:17 , Mark Hiner <hiner at wisc.edu> wrote:
>
> >The background is that I want to try Bioformats 5.0.6, so I guess the
> right thing is to overwrite the version tag inherited from fiji-pom. I just
> wanted to see how it is defined in there to actually overwrite it.
>
> It would be helpful if I finished reading your complete question.
>
> The Bio-Formats dependencies are managed in pom-scijava
> <https://github.com/scijava/pom-scijava>. You'll want to look at the
> <properties> and <dependencyManagement> blocks to get a feel how things
> work. For testing 5.0.6 locally it's also fine to put a
> <bio-formats.version> property in the pom.xml of the project you're testing.
>
> Best,
> Mark
>
> On Mon, Nov 17, 2014 at 12:12 PM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> Hi Stephan,
>>
>> >I think this is maybe a stupid question, but where do I find the parent
>> pom-fiji?
>>
>> It's always helpful to ask questions on public lists! All of the project
>> poms (fijji, imagej, scijava, scifio) are in their own repo under their
>> respective organization. So pom-fiji is:
>> https://github.com/fiji/pom-fiji
>>
>> Also, if you go to an individual organization's page (e.g.
>> https://github.com/fiji/) you can filter the available repositories to
>> look for any component.
>>
>> Hope that helps!
>>
>> - Mark
>>
>> On Mon, Nov 17, 2014 at 12:06 PM, Stephan Preibisch <
>> stephan.preibisch at gmx.de> wrote:
>>
>>> Hi,
>>>
>>> I think this is maybe a stupid question, but where do I find the parent
>>> pom-fiji? The pom.xml in the fiji project itself still defines it as its
>>> parent (https://github.com/fiji/fiji/blob/master/pom.xml), so I am not
>>> sure where to look for it:
>>>
>>> <parent>
>>> <groupId>sc.fiji</groupId>
>>> <artifactId>pom-fiji</artifactId>
>>> <version>5.1</version>
>>> <relativePath />
>>> </parent>
>>>
>>> Eclipse also says it cannot locate the parent pom when clicking on the
>>> icon for that.
>>>
>>> The background is that I want to try Bioformats 5.0.6, so I guess the
>>> right thing is to overwrite the version tag inherited from fiji-pom. I just
>>> wanted to see how it is defined in there to actually overwrite it.
>>>
>>> Thanks so much,
>>> Steffi
>>>
>>>
>>> ---
>>>
>>> Dr. Stephan Preibisch
>>> HFSP Fellow
>>> Robert H. Singer / Eugene Myers lab
>>>
>>> Albert Einstein College of Medicine / HHMI Janelia Farm / MPI-CBG
>>>
>>> email: stephan.preibisch at einstein.yu.edu / preibischs at janelia.hhmi.org
>>>  / preibisch at mpi-cbg.de
>>> web: http://www.preibisch.net/ <http://fly.mpi-cbg.de/preibisch>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/19dbfc06/attachment.html>

From ctrueden at wisc.edu  Mon Nov 17 12:48:25 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 17 Nov 2014 12:48:25 -0600
Subject: [ImageJ-devel] Where do I find the Fiji parent pom?
In-Reply-To: <CA+B=mGqed6yyJUdGjw88_2yEvuP4JDpCbNDTC0jPrDE2i65E2A@mail.gmail.com>
References: <F05778EC-2589-4E08-919D-EC750C0F1CE8@einstein.yu.edu>
	<F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>
	<CA+B=mGoTP_kyuUS=KAcHUaxd5FXDsQ1UKRm4n_OdY-nXvSG81w@mail.gmail.com>
	<CA+B=mGqWQGYsEnV1X4OiQQCpFpz4ew0PK4Yt1Eac_0tvUAzA0w@mail.gmail.com>
	<49540581-0F17-446E-B575-65B1CC6597D6@gmx.de>
	<CA+B=mGqed6yyJUdGjw88_2yEvuP4JDpCbNDTC0jPrDE2i65E2A@mail.gmail.com>
Message-ID: <CADN69ykZx1rb5BMGH_W4phjCHEmts-oHaZZnpn2tW9peOdYLfg@mail.gmail.com>

Hi Steffi,

FWIW, I bumped to BF 5.0.6 just now:
https://github.com/scijava/pom-scijava/commit/931b7add9607d35022432af0f9999cc38661241c

Regards,
Curtis

On Mon, Nov 17, 2014 at 12:41 PM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Stephan,
>
> >Where is the 5.0.3 defined to which it currently points?
>
> Here it is
> <https://github.com/scijava/pom-scijava/blob/master/pom.xml#L191>! :)
> It's in pom-scijava to allow any SciJava project to use a consistent
> version of Bio-Formats.
>
> Let me know if you have any more questions!
>
> - Mark
>
> On Mon, Nov 17, 2014 at 12:27 PM, Stephan Preibisch <
> stephan.preibisch at gmx.de> wrote:
>
>> Thanks a lot Mark,
>>
>> I managed to change the version to 5.0.6.!
>>
>> Just out of curiosity, I still do not see the bio-formats version being
>> defined in here: https://github.com/fiji/pom-fiji/blob/master/pom.xml
>>
>> Where is the 5.0.3 defined to which it currently points?
>>
>> Thanks so much,
>> Stephan
>>
>> On Nov 17, 2014, at 13:17 , Mark Hiner <hiner at wisc.edu> wrote:
>>
>> >The background is that I want to try Bioformats 5.0.6, so I guess the
>> right thing is to overwrite the version tag inherited from fiji-pom. I just
>> wanted to see how it is defined in there to actually overwrite it.
>>
>> It would be helpful if I finished reading your complete question.
>>
>> The Bio-Formats dependencies are managed in pom-scijava
>> <https://github.com/scijava/pom-scijava>. You'll want to look at the
>> <properties> and <dependencyManagement> blocks to get a feel how things
>> work. For testing 5.0.6 locally it's also fine to put a
>> <bio-formats.version> property in the pom.xml of the project you're testing.
>>
>> Best,
>> Mark
>>
>> On Mon, Nov 17, 2014 at 12:12 PM, Mark Hiner <hiner at wisc.edu> wrote:
>>
>>> Hi Stephan,
>>>
>>> >I think this is maybe a stupid question, but where do I find the parent
>>> pom-fiji?
>>>
>>> It's always helpful to ask questions on public lists! All of the project
>>> poms (fijji, imagej, scijava, scifio) are in their own repo under their
>>> respective organization. So pom-fiji is:
>>> https://github.com/fiji/pom-fiji
>>>
>>> Also, if you go to an individual organization's page (e.g.
>>> https://github.com/fiji/) you can filter the available repositories to
>>> look for any component.
>>>
>>> Hope that helps!
>>>
>>> - Mark
>>>
>>> On Mon, Nov 17, 2014 at 12:06 PM, Stephan Preibisch <
>>> stephan.preibisch at gmx.de> wrote:
>>>
>>>> Hi,
>>>>
>>>> I think this is maybe a stupid question, but where do I find the parent
>>>> pom-fiji? The pom.xml in the fiji project itself still defines it as its
>>>> parent (https://github.com/fiji/fiji/blob/master/pom.xml), so I am not
>>>> sure where to look for it:
>>>>
>>>> <parent>
>>>> <groupId>sc.fiji</groupId>
>>>> <artifactId>pom-fiji</artifactId>
>>>> <version>5.1</version>
>>>> <relativePath />
>>>> </parent>
>>>>
>>>> Eclipse also says it cannot locate the parent pom when clicking on the
>>>> icon for that.
>>>>
>>>> The background is that I want to try Bioformats 5.0.6, so I guess the
>>>> right thing is to overwrite the version tag inherited from fiji-pom. I just
>>>> wanted to see how it is defined in there to actually overwrite it.
>>>>
>>>> Thanks so much,
>>>> Steffi
>>>>
>>>>
>>>> ---
>>>>
>>>> Dr. Stephan Preibisch
>>>> HFSP Fellow
>>>> Robert H. Singer / Eugene Myers lab
>>>>
>>>> Albert Einstein College of Medicine / HHMI Janelia Farm / MPI-CBG
>>>>
>>>> email: stephan.preibisch at einstein.yu.edu / preibischs at janelia.hhmi.org
>>>>  / preibisch at mpi-cbg.de
>>>> web: http://www.preibisch.net/ <http://fly.mpi-cbg.de/preibisch>
>>>>
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>>
>>>
>>
>>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/c25ef351/attachment.html>

From ctrueden at wisc.edu  Mon Nov 17 13:39:14 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 17 Nov 2014 13:39:14 -0600
Subject: [ImageJ-devel] Opinion needed: POM parent versioning
Message-ID: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>

Hi everyone,

This is a question for anyone consuming the pom-* parents of the SciJava
software stack.

We want to start versioning these POM parents according to consistent
rules. (Unfortunately, right now, the approach is vague and potentially
inconsistent [1].) We came up with the following two possible schemes, and
would like your feedback on which one you would prefer.

== 1) SemVer ==

Every POM parent has three digits, X.Y.Z.

The X digit is "major" and when incremented indicates a breaking change of
some sort: either A) plugin config changes requiring downstream changes, or
more commonly B) major SemVer dependency version bumps (e.g., managed
scijava-common version updated from 2.35.0 to 3.0.0). This would exclude
0.x and beta components though (so e.g. imglib2-realtransform could go from
2.0.0-beta-27 to 2.0.0-beta-28 without bumping pom-imglib2's X digit).

The Y digit is "minor" and incremented when dependency versions change in a
SemVer-compatible manner, or when plugin configuration is added or improved.

For critical bug-fixes where a given POM parent is somehow compromised or
broken, the third digit Z can be bumped before going to the next Y. (See
e.g. the recent pom-fiji 5.0.Z series of releases.)

== 2) Bread crumb version trail ==

The pom-scijava parent would have a single version digit. The pom-imagej
(which is the next POM down) would have two: the first in lockstep with its
pom-scijava parent, and the second being its dedicated version digit. POMs
which extend pom-imagej (i.e.: pom-scifio, pom-imglib2 and pom-fiji) would
have three digits: the first two in lockstep with pom-imagej and the third
their own. And so on down the line?e.g., pom-trakem2 would need four
digits: the first three matching the pom-fiji parent and the fourth its own.

== Pros and cons ==

Option 1:
[PRO] Semantic meaning. You can reason whether a given POM is somehow
"breaking".
[PRO] Succinctness. Every parent POM has at most three digits at any one
time.
[CON] Lack of provenance. Not obvious which parent POMs go together without
leaning on a tool.

Option 2:
[PRO] Clear provenance. You can trivially derive the chain of parent POM
versions.
[CON] Lack of semantics. Harder to tell which POM parent releases might
break backwards compatibility.
[CON] Aesthetics. More than 3 digits in a version string may not be
desirable.

Note that either way, we are in the process of creating a
scijava-maven-plugin goal to dump all the component version properties
associated with a given parent POM.

Since either scheme is consistent and useful, we want to institute
whichever scheme will annoy everyone less. ;-) So which do people like
better: SemVer or breadcrumbs?

Thanks,
Curtis

[1] The 5.x POM versioning approach was an attempt to achieve _both_
options above, but Mark & I realized today that the two goals are rather
mutually exclusive. That is, we cannot keep POM parent versions fully in
lockstep while also maintaining a SemVer versioning scheme.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/023afd42/attachment-0001.html>

From stephan.preibisch at gmx.de  Mon Nov 17 13:53:39 2014
From: stephan.preibisch at gmx.de (Stephan Preibisch)
Date: Mon, 17 Nov 2014 14:53:39 -0500
Subject: [ImageJ-devel] Where do I find the Fiji parent pom?
In-Reply-To: <CADN69ykZx1rb5BMGH_W4phjCHEmts-oHaZZnpn2tW9peOdYLfg@mail.gmail.com>
References: <F05778EC-2589-4E08-919D-EC750C0F1CE8@einstein.yu.edu>
	<F79C67BD-0FBC-4BB3-A1C1-342B54517C88@gmx.de>
	<CA+B=mGoTP_kyuUS=KAcHUaxd5FXDsQ1UKRm4n_OdY-nXvSG81w@mail.gmail.com>
	<CA+B=mGqWQGYsEnV1X4OiQQCpFpz4ew0PK4Yt1Eac_0tvUAzA0w@mail.gmail.com>
	<49540581-0F17-446E-B575-65B1CC6597D6@gmx.de>
	<CA+B=mGqed6yyJUdGjw88_2yEvuP4JDpCbNDTC0jPrDE2i65E2A@mail.gmail.com>
	<CADN69ykZx1rb5BMGH_W4phjCHEmts-oHaZZnpn2tW9peOdYLfg@mail.gmail.com>
Message-ID: <313D2260-0609-498D-820E-85EF494F4580@gmx.de>

Thanks a lot guys for the explanations. This was very helpful :)

Cheers,
Steffi

> On Nov 17, 2014, at 13:48 , Curtis Rueden <ctrueden at wisc.edu> wrote:
> 
> Hi Steffi,
> 
> FWIW, I bumped to BF 5.0.6 just now:
> https://github.com/scijava/pom-scijava/commit/931b7add9607d35022432af0f9999cc38661241c <https://github.com/scijava/pom-scijava/commit/931b7add9607d35022432af0f9999cc38661241c>
> 
> Regards,
> Curtis
> 
> On Mon, Nov 17, 2014 at 12:41 PM, Mark Hiner <hiner at wisc.edu <mailto:hiner at wisc.edu>> wrote:
> Hi Stephan,
> 
> >Where is the 5.0.3 defined to which it currently points?
> 
> Here it is <https://github.com/scijava/pom-scijava/blob/master/pom.xml#L191>! :) It's in pom-scijava to allow any SciJava project to use a consistent version of Bio-Formats.
> 
> Let me know if you have any more questions!
> 
> - Mark
> 
> On Mon, Nov 17, 2014 at 12:27 PM, Stephan Preibisch <stephan.preibisch at gmx.de <mailto:stephan.preibisch at gmx.de>> wrote:
> Thanks a lot Mark,
> 
> I managed to change the version to 5.0.6.!
> 
> Just out of curiosity, I still do not see the bio-formats version being defined in here: https://github.com/fiji/pom-fiji/blob/master/pom.xml <https://github.com/fiji/pom-fiji/blob/master/pom.xml>
> 
> Where is the 5.0.3 defined to which it currently points?
> 
> Thanks so much,
> Stephan
> 
>> On Nov 17, 2014, at 13:17 , Mark Hiner <hiner at wisc.edu <mailto:hiner at wisc.edu>> wrote:
>> 
>> >The background is that I want to try Bioformats 5.0.6, so I guess the right thing is to overwrite the version tag inherited from fiji-pom. I just wanted to see how it is defined in there to actually overwrite it.
>> 
>> It would be helpful if I finished reading your complete question.
>> 
>> The Bio-Formats dependencies are managed in pom-scijava <https://github.com/scijava/pom-scijava>. You'll want to look at the <properties> and <dependencyManagement> blocks to get a feel how things work. For testing 5.0.6 locally it's also fine to put a <bio-formats.version> property in the pom.xml of the project you're testing.
>> 
>> Best,
>> Mark
>> 
>> On Mon, Nov 17, 2014 at 12:12 PM, Mark Hiner <hiner at wisc.edu <mailto:hiner at wisc.edu>> wrote:
>> Hi Stephan,
>> 
>> >I think this is maybe a stupid question, but where do I find the parent pom-fiji?
>> 
>> It's always helpful to ask questions on public lists! All of the project poms (fijji, imagej, scijava, scifio) are in their own repo under their respective organization. So pom-fiji is: 
>> https://github.com/fiji/pom-fiji <https://github.com/fiji/pom-fiji>
>> 
>> Also, if you go to an individual organization's page (e.g. https://github.com/fiji/ <https://github.com/fiji/>) you can filter the available repositories to look for any component.
>> 
>> Hope that helps!
>> 
>> - Mark
>> 
>> On Mon, Nov 17, 2014 at 12:06 PM, Stephan Preibisch <stephan.preibisch at gmx.de <mailto:stephan.preibisch at gmx.de>> wrote:
>> Hi,
>> 
>> I think this is maybe a stupid question, but where do I find the parent pom-fiji? The pom.xml in the fiji project itself still defines it as its parent (https://github.com/fiji/fiji/blob/master/pom.xml <https://github.com/fiji/fiji/blob/master/pom.xml>), so I am not sure where to look for it:
>> 
>> <parent>
>> <groupId>sc.fiji</groupId>
>> <artifactId>pom-fiji</artifactId>
>> <version>5.1</version>
>> <relativePath />
>> </parent>
>> 
>> Eclipse also says it cannot locate the parent pom when clicking on the icon for that.
>> 
>> The background is that I want to try Bioformats 5.0.6, so I guess the right thing is to overwrite the version tag inherited from fiji-pom. I just wanted to see how it is defined in there to actually overwrite it.
>> 
>> Thanks so much,
>> Steffi
>> 
>> 
>> ---
>> 
>> Dr. Stephan Preibisch
>> HFSP Fellow
>> Robert H. Singer / Eugene Myers lab
>> 
>> Albert Einstein College of Medicine / HHMI Janelia Farm / MPI-CBG
>> 
>> email: stephan.preibisch at einstein.yu.edu <mailto:stephan.preibisch at einstein.yu.edu> / preibischs at janelia.hhmi.org <mailto:preibischs at janelia.hhmi.org> / preibisch at mpi-cbg.de <mailto:preibisch at mpi-cbg.de>
>> web: http://www.preibisch.net/ <http://fly.mpi-cbg.de/preibisch>
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>> http://imagej.net/mailman/listinfo/imagej-devel <http://imagej.net/mailman/listinfo/imagej-devel>
>> 
>> 
>> 
> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
> http://imagej.net/mailman/listinfo/imagej-devel <http://imagej.net/mailman/listinfo/imagej-devel>
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/90fa25ce/attachment.html>

From tobias.pietzsch at gmail.com  Mon Nov 17 14:31:26 2014
From: tobias.pietzsch at gmail.com (Tobias Pietzsch)
Date: Mon, 17 Nov 2014 21:31:26 +0100
Subject: [ImageJ-devel] Opinion needed: POM parent versioning
In-Reply-To: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
References: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
Message-ID: <61168522-AA84-47F0-8CD6-C12C04D6CB7C@gmail.com>

Hi Curtis,

I would prefer SemVer, but mainly because this seems closer to the way its currently done and I?m getting used to that way. So really no strong opinion at all.

What would be nice would be some kind of notification when new pom parents are released. When revisiting some projects I haven?t been working on for a while, I often find myself checking maven.imagej.net to find out, eg, what the latest pom-fiji version is, so that I can use the latest and greatest as a parent. Is there already some mailing-list or similar in place that sends such release notifications?

best regards,
Tobias

On 17 Nov 2014, at 20:39, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi everyone,
> 
> This is a question for anyone consuming the pom-* parents of the SciJava software stack.
> 
> We want to start versioning these POM parents according to consistent rules. (Unfortunately, right now, the approach is vague and potentially inconsistent [1].) We came up with the following two possible schemes, and would like your feedback on which one you would prefer.
> 
> == 1) SemVer ==
> 
> Every POM parent has three digits, X.Y.Z.
> 
> The X digit is "major" and when incremented indicates a breaking change of some sort: either A) plugin config changes requiring downstream changes, or more commonly B) major SemVer dependency version bumps (e.g., managed scijava-common version updated from 2.35.0 to 3.0.0). This would exclude 0.x and beta components though (so e.g. imglib2-realtransform could go from 2.0.0-beta-27 to 2.0.0-beta-28 without bumping pom-imglib2's X digit).
> 
> The Y digit is "minor" and incremented when dependency versions change in a SemVer-compatible manner, or when plugin configuration is added or improved.
> 
> For critical bug-fixes where a given POM parent is somehow compromised or broken, the third digit Z can be bumped before going to the next Y. (See e.g. the recent pom-fiji 5.0.Z series of releases.)
> 
> == 2) Bread crumb version trail ==
> 
> The pom-scijava parent would have a single version digit. The pom-imagej (which is the next POM down) would have two: the first in lockstep with its pom-scijava parent, and the second being its dedicated version digit. POMs which extend pom-imagej (i.e.: pom-scifio, pom-imglib2 and pom-fiji) would have three digits: the first two in lockstep with pom-imagej and the third their own. And so on down the line?e.g., pom-trakem2 would need four digits: the first three matching the pom-fiji parent and the fourth its own.
> 
> == Pros and cons ==
> 
> Option 1:
> [PRO] Semantic meaning. You can reason whether a given POM is somehow "breaking".
> [PRO] Succinctness. Every parent POM has at most three digits at any one time.
> [CON] Lack of provenance. Not obvious which parent POMs go together without leaning on a tool.
> 
> Option 2:
> [PRO] Clear provenance. You can trivially derive the chain of parent POM versions.
> [CON] Lack of semantics. Harder to tell which POM parent releases might break backwards compatibility.
> [CON] Aesthetics. More than 3 digits in a version string may not be desirable.
> 
> Note that either way, we are in the process of creating a scijava-maven-plugin goal to dump all the component version properties associated with a given parent POM.
> 
> Since either scheme is consistent and useful, we want to institute whichever scheme will annoy everyone less. ;-) So which do people like better: SemVer or breadcrumbs?
> 
> Thanks,
> Curtis
> 
> [1] The 5.x POM versioning approach was an attempt to achieve _both_ options above, but Mark & I realized today that the two goals are rather mutually exclusive. That is, we cannot keep POM parent versions fully in lockstep while also maintaining a SemVer versioning scheme.
> 
> -- 
> You received this message because you are subscribed to the Google Groups "scijava" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to scijava+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/62405e6b/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/62405e6b/attachment-0001.pgp>

From hiner at wisc.edu  Mon Nov 17 15:12:42 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 17 Nov 2014 15:12:42 -0600
Subject: [ImageJ-devel] [fiji-devel] Re: Opinion needed: POM parent
	versioning
In-Reply-To: <61168522-AA84-47F0-8CD6-C12C04D6CB7C@gmail.com>
References: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
	<61168522-AA84-47F0-8CD6-C12C04D6CB7C@gmail.com>
Message-ID: <CA+B=mGrF_=b2TLPPnoE1WWNLSwQ7uH6We_r7D-G1UW_AVwnPDw@mail.gmail.com>

Hi Tobias,

>What would be nice would be some kind of notification when new pom parents
are released.

http://status.imagej.net/ reports latest component versions... I actually
thought it reported latest pom, but just realized it does not! We will be
splitting this page by org so it's a bit more readable (e.g.
status.imagej.net/fiji) so that will be a good time to also post the pom
versions.

Further I am working on fleshing out the scijava-maven-plugin
<https://github.com/scijava/scijava-maven-plugin>, to provide more tooling
to ease the management burden of our projects. Curtis and I just talked
about having a "mvn scijava:report" type command that will print out the
pom hierarchy of your current project, and show the version properties
provided by each pom. I'd like to make this tooling also report latest
available versions, and then integrate it into status.imagej.net generation.

Also, you can react to pretty much anything via GitHub's webhook API
<https://developer.github.com/webhooks/>. We currently report activity to
IRC - so there should be records of releases in the chat logs. Having a
nice subscription list for when a new release comes out seems very
plausible, but I couldn't find anything premade with some brief googling.

Best,
Mark

On Mon, Nov 17, 2014 at 2:31 PM, Tobias Pietzsch <tobias.pietzsch at gmail.com>
wrote:

> Hi Curtis,
>
> I would prefer SemVer, but mainly because this seems closer to the way its
> currently done and I?m getting used to that way. So really no strong
> opinion at all.
>
> What would be nice would be some kind of notification when new pom parents
> are released. When revisiting some projects I haven?t been working on for a
> while, I often find myself checking maven.imagej.net to find out, eg,
> what the latest pom-fiji version is, so that I can use the latest and
> greatest as a parent. Is there already some mailing-list or similar in
> place that sends such release notifications?
>
> best regards,
> Tobias
>
> On 17 Nov 2014, at 20:39, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi everyone,
>
> This is a question for anyone consuming the pom-* parents of the SciJava
> software stack.
>
> We want to start versioning these POM parents according to consistent
> rules. (Unfortunately, right now, the approach is vague and potentially
> inconsistent [1].) We came up with the following two possible schemes, and
> would like your feedback on which one you would prefer.
>
> == 1) SemVer ==
>
> Every POM parent has three digits, X.Y.Z.
>
> The X digit is "major" and when incremented indicates a breaking change of
> some sort: either A) plugin config changes requiring downstream changes, or
> more commonly B) major SemVer dependency version bumps (e.g., managed
> scijava-common version updated from 2.35.0 to 3.0.0). This would exclude
> 0.x and beta components though (so e.g. imglib2-realtransform could go from
> 2.0.0-beta-27 to 2.0.0-beta-28 without bumping pom-imglib2's X digit).
>
> The Y digit is "minor" and incremented when dependency versions change in
> a SemVer-compatible manner, or when plugin configuration is added or
> improved.
>
> For critical bug-fixes where a given POM parent is somehow compromised or
> broken, the third digit Z can be bumped before going to the next Y. (See
> e.g. the recent pom-fiji 5.0.Z series of releases.)
>
> == 2) Bread crumb version trail ==
>
> The pom-scijava parent would have a single version digit. The pom-imagej
> (which is the next POM down) would have two: the first in lockstep with its
> pom-scijava parent, and the second being its dedicated version digit. POMs
> which extend pom-imagej (i.e.: pom-scifio, pom-imglib2 and pom-fiji) would
> have three digits: the first two in lockstep with pom-imagej and the third
> their own. And so on down the line?e.g., pom-trakem2 would need four
> digits: the first three matching the pom-fiji parent and the fourth its own.
>
> == Pros and cons ==
>
> Option 1:
> [PRO] Semantic meaning. You can reason whether a given POM is somehow
> "breaking".
> [PRO] Succinctness. Every parent POM has at most three digits at any one
> time.
> [CON] Lack of provenance. Not obvious which parent POMs go together
> without leaning on a tool.
>
> Option 2:
> [PRO] Clear provenance. You can trivially derive the chain of parent POM
> versions.
> [CON] Lack of semantics. Harder to tell which POM parent releases might
> break backwards compatibility.
> [CON] Aesthetics. More than 3 digits in a version string may not be
> desirable.
>
> Note that either way, we are in the process of creating a
> scijava-maven-plugin goal to dump all the component version properties
> associated with a given parent POM.
>
> Since either scheme is consistent and useful, we want to institute
> whichever scheme will annoy everyone less. ;-) So which do people like
> better: SemVer or breadcrumbs?
>
> Thanks,
> Curtis
>
> [1] The 5.x POM versioning approach was an attempt to achieve _both_
> options above, but Mark & I realized today that the two goals are rather
> mutually exclusive. That is, we cannot keep POM parent versions fully in
> lockstep while also maintaining a SemVer versioning scheme.
>
> --
> You received this message because you are subscribed to the Google Groups
> "scijava" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to scijava+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
>
>
>  --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
>
> Mailing list web interface: http://groups.google.com/group/fiji-devel
>
> ---
> You received this message because you are subscribed to the Google Groups
> "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141117/614da424/attachment.html>

From saalfeld at mpi-cbg.de  Mon Nov 17 20:08:20 2014
From: saalfeld at mpi-cbg.de (Stephan Saalfeld)
Date: Mon, 17 Nov 2014 21:08:20 -0500
Subject: [ImageJ-devel] [fiji-devel] Opinion needed: POM parent
	versioning
In-Reply-To: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
References: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
Message-ID: <1416276500.4271.48.camel@saalfeld-helix>

+1 SemVer


On Mon, 2014-11-17 at 13:39 -0600, Curtis Rueden wrote:
> Hi everyone,
> 
> 
> This is a question for anyone consuming the pom-* parents of the
> SciJava software stack.
> 
> 
> We want to start versioning these POM parents according to consistent
> rules. (Unfortunately, right now, the approach is vague and
> potentially inconsistent [1].) We came up with the following two
> possible schemes, and would like your feedback on which one you would
> prefer.
> 
> 
> == 1) SemVer ==
> 
> 
> Every POM parent has three digits, X.Y.Z.
> 
> 
> The X digit is "major" and when incremented indicates a breaking
> change of some sort: either A) plugin config changes requiring
> downstream changes, or more commonly B) major SemVer dependency
> version bumps (e.g., managed scijava-common version updated from
> 2.35.0 to 3.0.0). This would exclude 0.x and beta components though
> (so e.g. imglib2-realtransform could go from 2.0.0-beta-27 to
> 2.0.0-beta-28 without bumping pom-imglib2's X digit).
> 
> 
> The Y digit is "minor" and incremented when dependency versions change
> in a SemVer-compatible manner, or when plugin configuration is added
> or improved.
> 
> 
> 
> For critical bug-fixes where a given POM parent is somehow compromised
> or broken, the third digit Z can be bumped before going to the next Y.
> (See e.g. the recent pom-fiji 5.0.Z series of releases.)
> 
> 
> == 2) Bread crumb version trail ==
> 
> 
> The pom-scijava parent would have a single version digit. The
> pom-imagej (which is the next POM down) would have two: the first in
> lockstep with its pom-scijava parent, and the second being its
> dedicated version digit. POMs which extend pom-imagej (i.e.:
> pom-scifio, pom-imglib2 and pom-fiji) would have three digits: the
> first two in lockstep with pom-imagej and the third their own. And so
> on down the line?e.g., pom-trakem2 would need four digits: the first
> three matching the pom-fiji parent and the fourth its own.
> 
> 
> == Pros and cons ==
> 
> 
> Option 1:
> [PRO] Semantic meaning. You can reason whether a given POM is somehow
> "breaking".
> [PRO] Succinctness. Every parent POM has at most three digits at any
> one time.
> [CON] Lack of provenance. Not obvious which parent POMs go together
> without leaning on a tool.
> 
> 
> Option 2:
> [PRO] Clear provenance. You can trivially derive the chain of parent
> POM versions.
> [CON] Lack of semantics. Harder to tell which POM parent releases
> might break backwards compatibility.
> [CON] Aesthetics. More than 3 digits in a version string may not be
> desirable.
> 
> 
> Note that either way, we are in the process of creating a
> scijava-maven-plugin goal to dump all the component version properties
> associated with a given parent POM.
> 
> 
> Since either scheme is consistent and useful, we want to institute
> whichever scheme will annoy everyone less. ;-) So which do people like
> better: SemVer or breadcrumbs?
> 
> 
> Thanks,
> Curtis
> 
> 
> 
> [1] The 5.x POM versioning approach was an attempt to achieve _both_
> options above, but Mark & I realized today that the two goals are
> rather mutually exclusive. That is, we cannot keep POM parent versions
> fully in lockstep while also maintaining a SemVer versioning scheme.
> -- 
> -- 
> Please avoid top-posting, and please make sure to reply-to-all!
>  
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> --- 
> You received this message because you are subscribed to the Google
> Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send
> an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.



From christian.dietz at uni-konstanz.de  Tue Nov 18 03:04:28 2014
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Tue, 18 Nov 2014 10:04:28 +0100
Subject: [ImageJ-devel] [fiji-devel] Opinion needed: POM parent
	versioning
In-Reply-To: <1416276500.4271.48.camel@saalfeld-helix>
References: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
	<1416276500.4271.48.camel@saalfeld-helix>
Message-ID: <546B0B9C.6070703@uni-konstanz.de>

+1 SemVer. Getting used to it.

On 18.11.2014 03:08, Stephan Saalfeld wrote:
> +1 SemVer
>
>
> On Mon, 2014-11-17 at 13:39 -0600, Curtis Rueden wrote:
>> Hi everyone,
>>
>>
>> This is a question for anyone consuming the pom-* parents of the
>> SciJava software stack.
>>
>>
>> We want to start versioning these POM parents according to consistent
>> rules. (Unfortunately, right now, the approach is vague and
>> potentially inconsistent [1].) We came up with the following two
>> possible schemes, and would like your feedback on which one you would
>> prefer.
>>
>>
>> == 1) SemVer ==
>>
>>
>> Every POM parent has three digits, X.Y.Z.
>>
>>
>> The X digit is "major" and when incremented indicates a breaking
>> change of some sort: either A) plugin config changes requiring
>> downstream changes, or more commonly B) major SemVer dependency
>> version bumps (e.g., managed scijava-common version updated from
>> 2.35.0 to 3.0.0). This would exclude 0.x and beta components though
>> (so e.g. imglib2-realtransform could go from 2.0.0-beta-27 to
>> 2.0.0-beta-28 without bumping pom-imglib2's X digit).
>>
>>
>> The Y digit is "minor" and incremented when dependency versions change
>> in a SemVer-compatible manner, or when plugin configuration is added
>> or improved.
>>
>>
>>
>> For critical bug-fixes where a given POM parent is somehow compromised
>> or broken, the third digit Z can be bumped before going to the next Y.
>> (See e.g. the recent pom-fiji 5.0.Z series of releases.)
>>
>>
>> == 2) Bread crumb version trail ==
>>
>>
>> The pom-scijava parent would have a single version digit. The
>> pom-imagej (which is the next POM down) would have two: the first in
>> lockstep with its pom-scijava parent, and the second being its
>> dedicated version digit. POMs which extend pom-imagej (i.e.:
>> pom-scifio, pom-imglib2 and pom-fiji) would have three digits: the
>> first two in lockstep with pom-imagej and the third their own. And so
>> on down the line?e.g., pom-trakem2 would need four digits: the first
>> three matching the pom-fiji parent and the fourth its own.
>>
>>
>> == Pros and cons ==
>>
>>
>> Option 1:
>> [PRO] Semantic meaning. You can reason whether a given POM is somehow
>> "breaking".
>> [PRO] Succinctness. Every parent POM has at most three digits at any
>> one time.
>> [CON] Lack of provenance. Not obvious which parent POMs go together
>> without leaning on a tool.
>>
>>
>> Option 2:
>> [PRO] Clear provenance. You can trivially derive the chain of parent
>> POM versions.
>> [CON] Lack of semantics. Harder to tell which POM parent releases
>> might break backwards compatibility.
>> [CON] Aesthetics. More than 3 digits in a version string may not be
>> desirable.
>>
>>
>> Note that either way, we are in the process of creating a
>> scijava-maven-plugin goal to dump all the component version properties
>> associated with a given parent POM.
>>
>>
>> Since either scheme is consistent and useful, we want to institute
>> whichever scheme will annoy everyone less. ;-) So which do people like
>> better: SemVer or breadcrumbs?
>>
>>
>> Thanks,
>> Curtis
>>
>>
>>
>> [1] The 5.x POM versioning approach was an attempt to achieve _both_
>> options above, but Mark & I realized today that the two goals are
>> rather mutually exclusive. That is, we cannot keep POM parent versions
>> fully in lockstep while also maintaining a SemVer versioning scheme.
>> -- 
>> -- 
>> Please avoid top-posting, and please make sure to reply-to-all!
>>   
>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>
>> ---
>> You received this message because you are subscribed to the Google
>> Groups "Fiji-devel" group.
>> To unsubscribe from this group and stop receiving emails from it, send
>> an email to fiji-devel+unsubscribe at googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel



From preibisch at mpi-cbg.de  Tue Nov 18 08:08:27 2014
From: preibisch at mpi-cbg.de (Stephan Preibisch)
Date: Tue, 18 Nov 2014 09:08:27 -0500
Subject: [ImageJ-devel] Opinion needed: POM parent versioning
In-Reply-To: <61168522-AA84-47F0-8CD6-C12C04D6CB7C@gmail.com>
References: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
	<61168522-AA84-47F0-8CD6-C12C04D6CB7C@gmail.com>
Message-ID: <C6F3CD0A-CAAF-48EB-9B85-9A6A1577FDFC@mpi-cbg.de>

I also vote for SemVer, we got used to it :)

> On Nov 17, 2014, at 15:31 , Tobias Pietzsch <tobias.pietzsch at gmail.com> wrote:
> 
> Hi Curtis,
> 
> I would prefer SemVer, but mainly because this seems closer to the way its currently done and I?m getting used to that way. So really no strong opinion at all.
> 
> What would be nice would be some kind of notification when new pom parents are released. When revisiting some projects I haven?t been working on for a while, I often find myself checking maven.imagej.net <http://maven.imagej.net/> to find out, eg, what the latest pom-fiji version is, so that I can use the latest and greatest as a parent. Is there already some mailing-list or similar in place that sends such release notifications?
> 
> best regards,
> Tobias
> 
> On 17 Nov 2014, at 20:39, Curtis Rueden <ctrueden at wisc.edu <mailto:ctrueden at wisc.edu>> wrote:
> 
>> Hi everyone,
>> 
>> This is a question for anyone consuming the pom-* parents of the SciJava software stack.
>> 
>> We want to start versioning these POM parents according to consistent rules. (Unfortunately, right now, the approach is vague and potentially inconsistent [1].) We came up with the following two possible schemes, and would like your feedback on which one you would prefer.
>> 
>> == 1) SemVer ==
>> 
>> Every POM parent has three digits, X.Y.Z.
>> 
>> The X digit is "major" and when incremented indicates a breaking change of some sort: either A) plugin config changes requiring downstream changes, or more commonly B) major SemVer dependency version bumps (e.g., managed scijava-common version updated from 2.35.0 to 3.0.0). This would exclude 0.x and beta components though (so e.g. imglib2-realtransform could go from 2.0.0-beta-27 to 2.0.0-beta-28 without bumping pom-imglib2's X digit).
>> 
>> The Y digit is "minor" and incremented when dependency versions change in a SemVer-compatible manner, or when plugin configuration is added or improved.
>> 
>> For critical bug-fixes where a given POM parent is somehow compromised or broken, the third digit Z can be bumped before going to the next Y. (See e.g. the recent pom-fiji 5.0.Z series of releases.)
>> 
>> == 2) Bread crumb version trail ==
>> 
>> The pom-scijava parent would have a single version digit. The pom-imagej (which is the next POM down) would have two: the first in lockstep with its pom-scijava parent, and the second being its dedicated version digit. POMs which extend pom-imagej (i.e.: pom-scifio, pom-imglib2 and pom-fiji) would have three digits: the first two in lockstep with pom-imagej and the third their own. And so on down the line?e.g., pom-trakem2 would need four digits: the first three matching the pom-fiji parent and the fourth its own.
>> 
>> == Pros and cons ==
>> 
>> Option 1:
>> [PRO] Semantic meaning. You can reason whether a given POM is somehow "breaking".
>> [PRO] Succinctness. Every parent POM has at most three digits at any one time.
>> [CON] Lack of provenance. Not obvious which parent POMs go together without leaning on a tool.
>> 
>> Option 2:
>> [PRO] Clear provenance. You can trivially derive the chain of parent POM versions.
>> [CON] Lack of semantics. Harder to tell which POM parent releases might break backwards compatibility.
>> [CON] Aesthetics. More than 3 digits in a version string may not be desirable.
>> 
>> Note that either way, we are in the process of creating a scijava-maven-plugin goal to dump all the component version properties associated with a given parent POM.
>> 
>> Since either scheme is consistent and useful, we want to institute whichever scheme will annoy everyone less. ;-) So which do people like better: SemVer or breadcrumbs?
>> 
>> Thanks,
>> Curtis
>> 
>> [1] The 5.x POM versioning approach was an attempt to achieve _both_ options above, but Mark & I realized today that the two goals are rather mutually exclusive. That is, we cannot keep POM parent versions fully in lockstep while also maintaining a SemVer versioning scheme.
>> 
>> -- 
>> You received this message because you are subscribed to the Google Groups "scijava" group.
>> To unsubscribe from this group and stop receiving emails from it, send an email to scijava+unsubscribe at googlegroups.com <mailto:scijava+unsubscribe at googlegroups.com>.
>> For more options, visit https://groups.google.com/d/optout <https://groups.google.com/d/optout>.
> 
> 
> -- 
> You received this message because you are subscribed to the Google Groups "scijava" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to scijava+unsubscribe at googlegroups.com <mailto:scijava+unsubscribe at googlegroups.com>.
> For more options, visit https://groups.google.com/d/optout <https://groups.google.com/d/optout>.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141118/65cbe4c5/attachment-0001.html>

From stephan.preibisch at gmx.de  Tue Nov 18 08:28:07 2014
From: stephan.preibisch at gmx.de (Stephan Preibisch)
Date: Tue, 18 Nov 2014 09:28:07 -0500
Subject: [ImageJ-devel] Uploading SPIM Reconstruction to Fiji?
Message-ID: <79D19EEE-1B32-42A4-8C79-F50617052C45@gmx.de>

Hi guys,

I was just wondering if this is currently a good idea? I am asking because I did some changes to the SPIM Reconstruction to take into the account the number of threads as specified in the ImageJ Dialog. Currently, it apparently blocks the cluster of the MPI-CBG and this would change it - not sure how bad it really is.

However, SPIM Reconstruction does not build right now on Jenkins (SPIM_Registration using imglib-algorithm-0.1.1 and BigDataViewer using ImgLib-algorithms-beta-26), while Fiji itself still contains the ImgLib-algorithms-beta-26.jar. I am not sure if it is a good idea to upload anything using updater during the current state of reorganization. It can also wait a bit I think, this problem of the cluster was there for quite some time.

Tobias, when do you think will the migration of BigDataViewer to a non-snapshot version be done?

Thanks so much,
Steffi






From ctrueden at wisc.edu  Wed Nov 19 16:33:46 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 19 Nov 2014 16:33:46 -0600
Subject: [ImageJ-devel] [fiji-devel] Re: Opinion needed: POM parent
	versioning
In-Reply-To: <CAE=G8NSJhOtmeFnD2iKvNcM2+00jrYSMpC9ST6qiPqkGuQ09Xw@mail.gmail.com>
References: <CADN69ynmE2eD_T2Ls7jYzCdrWBrgS2mu-hr-co+v0hRFuJFvPw@mail.gmail.com>
	<61168522-AA84-47F0-8CD6-C12C04D6CB7C@gmail.com>
	<C6F3CD0A-CAAF-48EB-9B85-9A6A1577FDFC@mpi-cbg.de>
	<CAE=G8NSJhOtmeFnD2iKvNcM2+00jrYSMpC9ST6qiPqkGuQ09Xw@mail.gmail.com>
Message-ID: <CADN69y=JGcizaJPmM16UBe=h9HsjxQf40RQW=5WWTWaXTegPrg@mail.gmail.com>

Hi everyone,

Thank you for the feedback. We will transition to SemVer for parent POMs as
new versions are released.

Today I have released pom-fiji version 6.0.0 to commemorate the occasion
(and because a release was needed anyway in preparation for the impending
Big Upload). It does not have any breaking changes per se, but I thought it
best to start the SemVersioning at a new major digit. Also, I wanted to
distance it from its pom-imagej parent a bit, which is still at 5.1 for
now. (And given this scheme, it will not be possible for pom-imagej to ever
"catch up" to pom-fiji?whenever pom-imagej has a major version bump, the
downstream pom-fiji will, too.)

Regards,
Curtis

On Tue, Nov 18, 2014 at 12:49 PM, Ignacio Arganda-Carreras <
iargandacarreras at gmail.com> wrote:

> Me too. +1 SemVer
>
> On Tue, Nov 18, 2014 at 9:08 AM, Stephan Preibisch <preibisch at mpi-cbg.de>
> wrote:
>
>> I also vote for SemVer, we got used to it :)
>>
>> On Nov 17, 2014, at 15:31 , Tobias Pietzsch <tobias.pietzsch at gmail.com>
>> wrote:
>>
>> Hi Curtis,
>>
>> I would prefer SemVer, but mainly because this seems closer to the way
>> its currently done and I?m getting used to that way. So really no strong
>> opinion at all.
>>
>> What would be nice would be some kind of notification when new pom
>> parents are released. When revisiting some projects I haven?t been working
>> on for a while, I often find myself checking maven.imagej.net to find
>> out, eg, what the latest pom-fiji version is, so that I can use the latest
>> and greatest as a parent. Is there already some mailing-list or similar in
>> place that sends such release notifications?
>>
>> best regards,
>> Tobias
>>
>> On 17 Nov 2014, at 20:39, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>
>> Hi everyone,
>>
>> This is a question for anyone consuming the pom-* parents of the SciJava
>> software stack.
>>
>> We want to start versioning these POM parents according to consistent
>> rules. (Unfortunately, right now, the approach is vague and potentially
>> inconsistent [1].) We came up with the following two possible schemes, and
>> would like your feedback on which one you would prefer.
>>
>> == 1) SemVer ==
>>
>> Every POM parent has three digits, X.Y.Z.
>>
>> The X digit is "major" and when incremented indicates a breaking change
>> of some sort: either A) plugin config changes requiring downstream changes,
>> or more commonly B) major SemVer dependency version bumps (e.g., managed
>> scijava-common version updated from 2.35.0 to 3.0.0). This would exclude
>> 0.x and beta components though (so e.g. imglib2-realtransform could go from
>> 2.0.0-beta-27 to 2.0.0-beta-28 without bumping pom-imglib2's X digit).
>>
>> The Y digit is "minor" and incremented when dependency versions change in
>> a SemVer-compatible manner, or when plugin configuration is added or
>> improved.
>>
>> For critical bug-fixes where a given POM parent is somehow compromised or
>> broken, the third digit Z can be bumped before going to the next Y. (See
>> e.g. the recent pom-fiji 5.0.Z series of releases.)
>>
>> == 2) Bread crumb version trail ==
>>
>> The pom-scijava parent would have a single version digit. The pom-imagej
>> (which is the next POM down) would have two: the first in lockstep with its
>> pom-scijava parent, and the second being its dedicated version digit. POMs
>> which extend pom-imagej (i.e.: pom-scifio, pom-imglib2 and pom-fiji) would
>> have three digits: the first two in lockstep with pom-imagej and the third
>> their own. And so on down the line?e.g., pom-trakem2 would need four
>> digits: the first three matching the pom-fiji parent and the fourth its own.
>>
>> == Pros and cons ==
>>
>> Option 1:
>> [PRO] Semantic meaning. You can reason whether a given POM is somehow
>> "breaking".
>> [PRO] Succinctness. Every parent POM has at most three digits at any one
>> time.
>> [CON] Lack of provenance. Not obvious which parent POMs go together
>> without leaning on a tool.
>>
>> Option 2:
>> [PRO] Clear provenance. You can trivially derive the chain of parent POM
>> versions.
>> [CON] Lack of semantics. Harder to tell which POM parent releases might
>> break backwards compatibility.
>> [CON] Aesthetics. More than 3 digits in a version string may not be
>> desirable.
>>
>> Note that either way, we are in the process of creating a
>> scijava-maven-plugin goal to dump all the component version properties
>> associated with a given parent POM.
>>
>> Since either scheme is consistent and useful, we want to institute
>> whichever scheme will annoy everyone less. ;-) So which do people like
>> better: SemVer or breadcrumbs?
>>
>> Thanks,
>> Curtis
>>
>> [1] The 5.x POM versioning approach was an attempt to achieve _both_
>> options above, but Mark & I realized today that the two goals are rather
>> mutually exclusive. That is, we cannot keep POM parent versions fully in
>> lockstep while also maintaining a SemVer versioning scheme.
>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "scijava" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to scijava+unsubscribe at googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>>
>>
>>
>> --
>> You received this message because you are subscribed to the Google Groups
>> "scijava" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to scijava+unsubscribe at googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>>
>>
>>  --
>> --
>> Please avoid top-posting, and please make sure to reply-to-all!
>>
>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>
>> ---
>> You received this message because you are subscribed to the Google Groups
>> "Fiji-devel" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to fiji-devel+unsubscribe at googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>>
>
>
>
> --
> Ignacio Arganda-Carreras, Ph.D.
> Institut Jean-Pierre Bourgin, UMR1318 INRA-AgroParisTech
> B?timent 2
> INRA Centre de Versailles-Grignon
> Route de St-Cyr (RD10)
> 78026 Versailles Cedex France
>
> Tel : +33 (0)1 30 83 30 00 - fax : +33 (0)1 30 83 33 19
> Website: http://sites.google.com/site/iargandacarreras/
> <http://biocomp.cnb.csic.es/~iarganda/index_EN.html>
>
> --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
>
> Mailing list web interface: http://groups.google.com/group/fiji-devel
>
> ---
> You received this message because you are subscribed to the Google Groups
> "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to fiji-devel+unsubscribe at googlegroups.com.
>
> For more options, visit https://groups.google.com/d/optout.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141119/2680b0d3/attachment.html>

From ctrueden at wisc.edu  Wed Nov 19 17:40:56 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 19 Nov 2014 17:40:56 -0600
Subject: [ImageJ-devel] Impending Big Upload,
	and first Fiji "release candidate"
Message-ID: <CADN69y=gRAM_eyOSo=SSXmQWXc3AJLo+r4-jzWx6R0qkQEp87w@mail.gmail.com>

Hi everyone,

There will soon be a Big Upload of many updated ImageJ and Fiji components
to the update sites. Before going live, let's test everything for a couple
of days.

The first "release candidate" is now available for people to test:

    http://curtis.imagej.net/Fiji-New-20141119.zip

There are still some loose ends to address [1]. Nonetheless, if you could
give your favorite plugins a try and report back any new issues you find,
it would be much appreciated!

Regards,
Curtis

P.S. When the time comes, we will also create a new "Life-Line" version of
Fiji from just before the Big Upload.

[1] The bundle is getting close, but still has the following known issues:

1) Four components are still at old SNAPSHOT versions:

- TrakEM2_ 1.0b-SNAPSHOT
- Descriptor_based_registration 2.0.0-SNAPSHOT
- SPIM_Registration 2.0.0-SNAPSHOT
- blockmatching_ 2.0.0-SNAPSHOT

2) The bundle erroneously downgrades four components:

- AnalyzeSkeleton_ 2.0.0 (downgraded from 2.0.2)
- Auto_Threshold 1.15.1 (downgraded from 1.16-SNAPSHOT)
- IJ_Robot 1.0.1 (downgraded from 2.0.0-SNAPSHOT)
- jzlib 1.0.7 (downgraded from 1.1.2)

Tomorrow, I will fix these known issues, and send out another bundle link
when it is ready.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141119/95182ce7/attachment-0001.html>

From ctrueden at wisc.edu  Fri Nov 21 12:52:42 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Nov 2014 12:52:42 -0600
Subject: [ImageJ-devel] Uploading SPIM Reconstruction to Fiji?
In-Reply-To: <79D19EEE-1B32-42A4-8C79-F50617052C45@gmx.de>
References: <79D19EEE-1B32-42A4-8C79-F50617052C45@gmx.de>
Message-ID: <CADN69yn+mMZkMS8dCpDn4FnVfioKO+8Q6PvTGmnPtcCYSDW8SA@mail.gmail.com>

Hi everyone,

I'm replying back mostly for the archives.

> Uploading SPIM Reconstruction to Fiji?

The updated SPIM Registration will be part of the Big Fiji Upload; for
details, see:
    http://imagej.net/pipermail/imagej-devel/2014-November/002328.html

> SPIM Reconstruction does not build right now on Jenkins

Was fixed on Tuesday.

> the migration of BigDataViewer to a non-snapshot version

Is done:
https://github.com/tpietzsch/bigdataviewer-core/releases/tag/bigdataviewer-core-1.0.0

Regards,
Curtis

On Tue, Nov 18, 2014 at 8:28 AM, Stephan Preibisch <stephan.preibisch at gmx.de
> wrote:

> Hi guys,
>
> I was just wondering if this is currently a good idea? I am asking because
> I did some changes to the SPIM Reconstruction to take into the account the
> number of threads as specified in the ImageJ Dialog. Currently, it
> apparently blocks the cluster of the MPI-CBG and this would change it - not
> sure how bad it really is.
>
> However, SPIM Reconstruction does not build right now on Jenkins
> (SPIM_Registration using imglib-algorithm-0.1.1 and BigDataViewer using
> ImgLib-algorithms-beta-26), while Fiji itself still contains the
> ImgLib-algorithms-beta-26.jar. I am not sure if it is a good idea to upload
> anything using updater during the current state of reorganization. It can
> also wait a bit I think, this problem of the cluster was there for quite
> some time.
>
> Tobias, when do you think will the migration of BigDataViewer to a
> non-snapshot version be done?
>
> Thanks so much,
> Steffi
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141121/0c44b720/attachment.html>

From ctrueden at wisc.edu  Fri Nov 21 14:12:43 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Nov 2014 14:12:43 -0600
Subject: [ImageJ-devel] Parameter decorator and supported classes
In-Reply-To: <EAE4379B-D632-42AD-B4E5-B338252B0B6E@unifr.ch>
References: <93DD924F-9900-4D09-AB0C-ED7134233056@unifr.ch>
	<CADN69ynzFnzjJRVvm+UYtqQTOwndPvo8Mx0sVcLWBrkyMsBG6w@mail.gmail.com>
	<EAE4379B-D632-42AD-B4E5-B338252B0B6E@unifr.ch>
Message-ID: <CADN69ykNU3O8vQYf+5rkDcDc_+piA5C7rdgYbZrdRRwaOe_4yg@mail.gmail.com>

Hi Felix,

> java.lang.NullPointerException
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:532)

FWIW, I made a couple of fixes to avoid this problem:
*
https://github.com/scijava/scijava-common/commit/bce7b69391791f39b5019dca14bf110816c97265
*
https://github.com/scijava/scijava-common/commit/93c340f472401567dee50f2edbb70abbff261749

These fixes made it into the scijava-common-2.35.1 release [1]. Give it a
try if you have a chance.

However, the fact that there were nulls involved there at all suggests
another possible bug lurking elsewhere. I have not yet had time to
investigate further, unfortunately.

Regards,
Curtis

On Fri, Oct 31, 2014 at 6:17 AM, MEYENHOFER Felix <felix.meyenhofer at unifr.ch
> wrote:

>  Hi Curtis
>
>  thanks for getting back to me. From a short look at the recent mails, it
> looks like you guys went through a considerable pile of work so you I am
> fully understanding this delay.
>
>  The option ?Use SCIFIO when opening files? was checked in my case?
> However I went ahead and tried to use a ImagePlus as input parameter. But
> the message dialog "An ImgPlus is required, but none exists? persists.
> Now when I open some image first, I get the following warning.
> [WARNING] No widget found for input: imp
>
>  I should probably mention that when launching ImageJ (2.47) with the
> following lines:
> final ImageJ ij = net.imagej.Main.launch(args);
> ij.command().run(Sanbox.class, true);
>
>  I get the error below:
>
> [ERROR] Exception during event handling:
> [Event] org.scijava.module.event.ModulesUpdatedEvent
> context = org.scijava.Context at 71d382ab
> consumed = false
> items[0] = label='About ImageJ...',
> iconPath='/icons/commands/information.png', priority=0.0, enabled=true,
> pluginType=Command
> items[1] = label='Preferences', priority=0.0, enabled=true,
> pluginType=Command
> items[2] = label='Quit', iconPath='/icons/commands/door_in.png',
> priority=0.0, enabled=true, pluginType=Command
> [Subscriber] org.scijava.menu.DefaultMenuService [priority = 0.0]
> [Method] protected void
> org.scijava.menu.DefaultMenuService.onEvent(org.scijava.module.event.ModulesUpdatedEvent)
> java.lang.NullPointerException
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:532)
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:529)
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:529)
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:529)
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:529)
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:529)
> at org.scijava.menu.ShadowMenu.addChild(ShadowMenu.java:529)
> at org.scijava.menu.ShadowMenu.addInternal(ShadowMenu.java:478)
> at org.scijava.menu.ShadowMenu.addAll(ShadowMenu.java:351)
> at org.scijava.menu.ShadowMenu.<init>(ShadowMenu.java:117)
> at
> org.scijava.menu.DefaultMenuService.addModules(DefaultMenuService.java:154)
> at
> org.scijava.menu.DefaultMenuService.rootMenus(DefaultMenuService.java:179)
> at org.scijava.menu.DefaultMenuService.onEvent(DefaultMenuService.java:118)
> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> at java.lang.reflect.Method.invoke(Method.java:597)
> at
> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:278)
> at
> org.scijava.event.DefaultEventService$ProxySubscriber.onEvent(DefaultEventService.java:252)
> at
> org.bushe.swing.event.ThreadSafeEventService.publish(ThreadSafeEventService.java:971)
> at org.scijava.event.DefaultEventBus.access$101(DefaultEventBus.java:56)
> at org.scijava.event.DefaultEventBus$1.run(DefaultEventBus.java:197)
> at
> org.scijava.thread.DefaultThreadService$1.run(DefaultThreadService.java:147)
> at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:199)
> at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:715)
> at java.awt.EventQueue.access$400(EventQueue.java:82)
> at java.awt.EventQueue$2.run(EventQueue.java:676)
> at java.awt.EventQueue$2.run(EventQueue.java:674)
> at java.security.AccessController.doPrivileged(Native Method)
> at
> java.security.AccessControlContext$1.doIntersectionPrivilege(AccessControlContext.java:86)
> at java.awt.EventQueue.dispatchEvent(EventQueue.java:685)
> at
> java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:296)
> at
> java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:211)
> at
> java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:201)
> at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:196)
> at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:188)
> at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)
>
>  Sorry for throwing this stack-trace half investigated at you, but being
> a newbie in these matters, my hope i that you might tell me that I
> overlooked something obvious, before I go off looking at the wrong place to
> resolve the issue at hand.
>
>
>  Best, regards,
>
>  Felix
>
>  On 30 Oct 2014, at 18:51 , Curtis Rueden <ctrueden at WISC.EDU> wrote:
>
>  Hi Felix,
>
>  Apologies for the delay in reply. Due to work surrounding the ImgLib2
> release, this is an exceptionally busy time.
>
>  > An ImgPlus is required, but none exists
>
>  The issue is that ImageJ2 uses the ImgPlus and Dataset classes for
> images, but ImageJ1 uses ij.ImagePlus. And the automatic conversion between
> these types is currently incomplete. The "Enable ImageJ2 data structures"
> option of Edit > Options > ImageJ2 is intended to toggle this
> auto-conversion, but it currently has performance problems, so is off by
> default.
>
>  We have a plan to address these issues, but it will be some time before
> the work can be completed.
>
>  Some related issues in the issue tracker:
> * https://github.com/imagej/imagej-legacy/issues/95
>  * https://github.com/imagej/imagej-legacy/issues/86
>  * https://github.com/imagej/imagej-legacy/issues/31
>  * https://github.com/imagej/imagej-legacy/issues/22
>
>  In the meantime, it may be easier to use ImageJ 1.x's image data
> structure:
>
>     @Parameter
>    ImagePlus imp;
>
>  Instead of the IJ2/ImgLib2 ones.
>
>  Regards,
> Curtis
>
> On Wed, Oct 15, 2014 at 8:52 AM, MEYENHOFER Felix <
> felix.meyenhofer at unifr.ch> wrote:
>
>> Hi
>>
>> during my first attempts of implementing a ij2 plugin I realised that the
>> following point is not clear to me:
>> thanks to the widget demo of the imagej-tutorials I managed to define my
>> UI in the ij2-way. Now during my further research to find a way to easily
>> define an image input and getting the dialog with the Parameter decorator I
>> found examples like
>>
>>         @Parameter(type = ItemIO.INPUT)
>>         private ImgPlus<FloatType> img;
>> or
>>         @Parameter(type = ItemIO.INPUT)
>>         private Dataset ds;
>>
>> but when running such code I get a warning-dialog saying; ?An ImgPlus is
>> required, but none exists?
>> So I open an image and run  the plugin again. The same dialog appears
>> again.
>> All the other types work well (String, File, etc.). Is this a bug or am I
>> missing something.
>>
>> Best regards,
>>
>> Felix
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141121/4c87bb7f/attachment-0001.html>

