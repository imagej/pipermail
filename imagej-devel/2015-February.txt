From ctrueden at wisc.edu  Mon Feb  2 15:29:05 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 2 Feb 2015 15:29:05 -0600
Subject: [ImageJ-devel] thinplate spline artifact on maven.imagej.net ?
In-Reply-To: <1422463291.32446.13.camel@saalfelds-ws1.janelia.priv>
References: <1422463291.32446.13.camel@saalfelds-ws1.janelia.priv>
Message-ID: <CADN69ymrZX-5CEk2xkAJxfS3ya_u=kpaR4vB6XCw4jcDPjcoMA@mail.gmail.com>

Hi Stephan,

> Is it possible to have both artifacts at maven.imagej.net?

http://maven.imagej.net/index.html#nexus-search;quick~jitk-tps
http://maven.imagej.net/index.html#nexus-search;quick~trakem2-tps
http://jenkins.imagej.net/job/jitk-tps/
http://jenkins.imagej.net/job/trakem2-tps/

Cheers,
Curtis

On Wed, Jan 28, 2015 at 10:41 AM, Stephan Saalfeld <
saalfelds at janelia.hhmi.org> wrote:

> Hi Curtis/ ImageJ developers,
>
> we made a release version of John Bogovic's port of ITK's thin plate
> spline transform.  The implementation is small but spans already two
> repositories top separate TrakEM2/ ImageJ related code from the core.
>
> The repositories are
>
> core
>
> https://github.com/saalfeldlab/jitk-tps
>
> and TrakEM2
>
> https://github.com/saalfeldlab/trakem2-tps
>
> Is it possible to have both artifacts at maven.imagej.net?
>
> That would be awesome.
>
> Thanks in advance,
> Stephan and John
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150202/1e1e161f/attachment.html>

From saalfelds at janelia.hhmi.org  Mon Feb  2 21:41:51 2015
From: saalfelds at janelia.hhmi.org (Stephan Saalfeld)
Date: Mon, 2 Feb 2015 22:41:51 -0500
Subject: [ImageJ-devel] thinplate spline artifact on maven.imagej.net ?
In-Reply-To: <CADN69ymrZX-5CEk2xkAJxfS3ya_u=kpaR4vB6XCw4jcDPjcoMA@mail.gmail.com>
References: <1422463291.32446.13.camel@saalfelds-ws1.janelia.priv>
	<CADN69ymrZX-5CEk2xkAJxfS3ya_u=kpaR4vB6XCw4jcDPjcoMA@mail.gmail.com>
Message-ID: <1422934911.6977.20.camel@saalfeld-thinkpad>

Thanks so much!



On Mon, 2015-02-02 at 15:29 -0600, Curtis Rueden wrote: 
> Hi Stephan,
> 
> 
> > Is it possible to have both artifacts at maven.imagej.net?
> 
> 
> http://maven.imagej.net/index.html#nexus-search;quick~jitk-tps
> 
> http://maven.imagej.net/index.html#nexus-search;quick~trakem2-tps
> 
> http://jenkins.imagej.net/job/jitk-tps/
> 
> http://jenkins.imagej.net/job/trakem2-tps/
> 
> 
> 
> Cheers,
> Curtis
> 
> On Wed, Jan 28, 2015 at 10:41 AM, Stephan Saalfeld
> <saalfelds at janelia.hhmi.org> wrote:
>         Hi Curtis/ ImageJ developers,
>         
>         we made a release version of John Bogovic's port of ITK's thin
>         plate
>         spline transform.  The implementation is small but spans
>         already two
>         repositories top separate TrakEM2/ ImageJ related code from
>         the core.
>         
>         The repositories are
>         
>         core
>         
>         https://github.com/saalfeldlab/jitk-tps
>         
>         and TrakEM2
>         
>         https://github.com/saalfeldlab/trakem2-tps
>         
>         Is it possible to have both artifacts at maven.imagej.net?
>         
>         That would be awesome.
>         
>         Thanks in advance,
>         Stephan and John
>         
>         
>         
>         
> 
> 



From pietzsch at mpi-cbg.de  Wed Feb 11 09:46:29 2015
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Wed, 11 Feb 2015 16:46:29 +0100
Subject: [ImageJ-devel] mvn javadoc problem with java 8
Message-ID: <18496510-8CE1-43E1-ACB7-F5B216A5C14B@mpi-cbg.de>

Hi,

when I try to build fiji project (specifically bigdataviewer-core) on the command line with

mvn clean install

I get the following errors when running with java 8
...
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.9.1:jar (attach-javadocs) on project bigdataviewer-core: MavenReportException: Error while creating archive:
[ERROR] Exit code: 1 - javadoc: warning - Error fetching URL: http://jenkins.imagej.net/view/Fiji/job/Saalfeld-MPICBG-Maven/javadoc/
[ERROR] /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-core/src/main/java/bdv/viewer/Source.java:57: error: reference not found
[ERROR] * Get the transform from the {@link #getSource(long) source} at timepoint
[ERROR] ^
?

Works fine with java 7 and java 6.

Is this a known problem?

I saw that I can disable javadoc-plugin by setting
	<properties>
		<javadoc.skip>true</javadoc.skip>
	</properties>
in my pom. Is this the recommended workaround?

best regards,
Tobias
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150211/872074ca/attachment.pgp>

From pietzsch at mpi-cbg.de  Wed Feb 11 09:58:50 2015
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Wed, 11 Feb 2015 16:58:50 +0100
Subject: [ImageJ-devel] Maven puzzle
Message-ID: <35E51487-6129-4DA0-9518-DB4090C9FD38@mpi-cbg.de>

Hi,

maybe one of the maven experts can shed some light on the following behaviour?

In my bigdataviewer-server pom.xml file (https://github.com/bigdataviewer/bigdataviewer-server/blob/84b6724ccdefbdcf787f4896a102bc39d415063a/pom.xml)
I want to set source compatibility to 1.7.
I tried to do this by specifying
	<properties>
		<scijava.jvm.version>1.7</scijava.jvm.version>
	</properties>
Strangely, this alone does not solve the problem. mvn on the command line says:
...
INFO] -------------------------------------------------------------
[ERROR] COMPILATION ERROR :
[INFO] -------------------------------------------------------------
[ERROR] /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-server/src/main/java/bdv/server/BigDataServer.java:[248,46] multi-catch statement is not supported in -source 1.5
  (use -source 7 or higher to enable multi-catch statement)
?

I can fix it by additionally putting this snippet:
 	<build>
		<plugins>
	        <plugin>
	          <artifactId>maven-compiler-plugin</artifactId>
	          <configuration>
	            <source>1.7</source>
	            <target>1.7</target>
	          </configuration>
	        </plugin>
		</plugins>
	</build>
into the pom file.
However, shouldn?t this be already automatically done by setting scijava.jvm.version=1.7???
At least Eclipse seems to think so: I fact, the above snippet to configure maven-compiler-plugin I just copied from the ?Effective POM? shown in Eclipse (for the pom without explicitly having the snippet of course?)

Does anyone have an explanation? Is this a maven bug?

all the best,
Tobias
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150211/94f06f7b/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150211/94f06f7b/attachment.pgp>

From ctrueden at wisc.edu  Wed Feb 11 10:31:52 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 11 Feb 2015 10:31:52 -0600
Subject: [ImageJ-devel] mvn javadoc problem with java 8
In-Reply-To: <18496510-8CE1-43E1-ACB7-F5B216A5C14B@mpi-cbg.de>
References: <18496510-8CE1-43E1-ACB7-F5B216A5C14B@mpi-cbg.de>
Message-ID: <CADN69ymY+rtirS+ee_Rjwp2QRPb0pnfvCZt=b6Nt3auoqC4GYQ@mail.gmail.com>

Hi Tobias,

> I get the following errors when running with java 8
> ...
>
> Works fine with java 7 and java 6.
>
> Is this a known problem?

Java 8's javadoc tool is much more stringent than previously, due to the
addition of doclint checks [1].

I am ambivalent about making it easy to disable the doclint, because I
think many of the new checks are valuable. However, some of the checks will
take a lot of work to bring our code up to snuff -- e.g., the fact that
@param, @return and @throws seem to be required now.

You can certainly disable it locally by passing "-Djavadoc.skip=true" to
Maven from the CLI.

Please do not disable javadoc in the properties, because then Jenkins will
fail to deploy the -javadoc artifact to the Maven repository.

Regards,
Curtis

[1] http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html

On Wed, Feb 11, 2015 at 9:46 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
wrote:

> Hi,
>
> when I try to build fiji project (specifically bigdataviewer-core) on the
> command line with
>
> mvn clean install
>
> I get the following errors when running with java 8
> ...
> [ERROR] Failed to execute goal
> org.apache.maven.plugins:maven-javadoc-plugin:2.9.1:jar (attach-javadocs)
> on project bigdataviewer-core: MavenReportException: Error while creating
> archive:
> [ERROR] Exit code: 1 - javadoc: warning - Error fetching URL:
> http://jenkins.imagej.net/view/Fiji/job/Saalfeld-MPICBG-Maven/javadoc/
> [ERROR]
> /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-core/src/main/java/bdv/viewer/Source.java:57:
> error: reference not found
> [ERROR] * Get the transform from the {@link #getSource(long) source} at
> timepoint
> [ERROR] ^
> ?
>
> Works fine with java 7 and java 6.
>
> Is this a known problem?
>
> I saw that I can disable javadoc-plugin by setting
>         <properties>
>                 <javadoc.skip>true</javadoc.skip>
>         </properties>
> in my pom. Is this the recommended workaround?
>
> best regards,
> Tobias
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150211/c09e6e60/attachment.html>

From johannes.schindelin at gmx.de  Wed Feb 11 10:36:19 2015
From: johannes.schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 11 Feb 2015 17:36:19 +0100
Subject: [ImageJ-devel] mvn javadoc problem with java 8
In-Reply-To: <CADN69ymY+rtirS+ee_Rjwp2QRPb0pnfvCZt=b6Nt3auoqC4GYQ@mail.gmail.com>
References: <18496510-8CE1-43E1-ACB7-F5B216A5C14B@mpi-cbg.de>
	<CADN69ymY+rtirS+ee_Rjwp2QRPb0pnfvCZt=b6Nt3auoqC4GYQ@mail.gmail.com>
Message-ID: <d69ac7a4723ad8b26269c3f310f489c0@www.dscho.org>

Hi Curtis,

On 2015-02-11 17:31, Curtis Rueden wrote:

>> I get the following errors when running with java 8
>> ...
>> 
>> Works fine with java 7 and java 6.
>> 
>> Is this a known problem?
> 
> Java 8's javadoc tool is much more stringent than previously, due to 
> the
> addition of doclint checks [1].

Curtis, you forgot to say that the `#getSource(long)` probably needs to 
be replaced by a `#getSource(int, int)` because the class has only a 
`getSource` method with the latter signature.

But I agree that Javadocs that are obviously wrong should be fixed 
rather than switching off Javadoc generation in the Maven configuration.

Ciao,
Dscho


From ctrueden at wisc.edu  Wed Feb 11 10:45:45 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 11 Feb 2015 10:45:45 -0600
Subject: [ImageJ-devel] Maven puzzle
In-Reply-To: <35E51487-6129-4DA0-9518-DB4090C9FD38@mpi-cbg.de>
References: <35E51487-6129-4DA0-9518-DB4090C9FD38@mpi-cbg.de>
Message-ID: <CADN69ymO=cRRSxCPXL259VNTBsNEug+au5omBJsfqkLh4cghWQ@mail.gmail.com>

Hi Tobi,

> [ERROR]
>
/Users/pietzsch/workspace/BigDataViewer/bigdataviewer-server/src/main/java/bdv/server/BigDataServer.java:[248,46]
> multi-catch statement is not supported in -source 1.5
>
> However, shouldn?t this be already automatically done by setting
scijava.jvm.version=1.7???

Whoa, strange. Especially since it says *1.5*, which is the Maven default...

Furthermore, I cannot reproduce this problem on my system. Building with
Java 6, Java 7 or Java 8 (with JAVA_HOME set accordingly), and with only
the scijava.jvm.version set to 1.7, I am able to build the project
successfully.

I pushed some changes to master, so that we can see whether Jenkins has a
problem with it.

Regards,
Curtis

On Wed, Feb 11, 2015 at 9:58 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
wrote:

> Hi,
>
> maybe one of the maven experts can shed some light on the following
> behaviour?
>
> In my bigdataviewer-server pom.xml file (
> https://github.com/bigdataviewer/bigdataviewer-server/blob/84b6724ccdefbdcf787f4896a102bc39d415063a/pom.xml
> )
> I want to set source compatibility to 1.7.
> I tried to do this by specifying
> <properties>
> <scijava.jvm.version>1.7</scijava.jvm.version>
> </properties>
> Strangely, this alone does not solve the problem. mvn on the command line
> says:
> ...
> INFO] -------------------------------------------------------------
> [ERROR] COMPILATION ERROR :
> [INFO] -------------------------------------------------------------
> [ERROR]
> /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-server/src/main/java/bdv/server/BigDataServer.java:[248,46]
> multi-catch statement is not supported in -source 1.5
>   (use -source 7 or higher to enable multi-catch statement)
> ?
>
> I can fix it by additionally putting this snippet:
>   <build>
> <plugins>
>         <plugin>
>           <artifactId>maven-compiler-plugin</artifactId>
>           <configuration>
>             <source>1.7</source>
>             <target>1.7</target>
>           </configuration>
>         </plugin>
> </plugins>
> </build>
> into the pom file.
> However, shouldn?t this be already automatically done by setting
> scijava.jvm.version=1.7???
> At least Eclipse seems to think so: I fact, the above snippet to configure
> maven-compiler-plugin I just copied from the ?Effective POM? shown in
> Eclipse (for the pom without explicitly having the snippet of course?)
>
> Does anyone have an explanation? Is this a maven bug?
>
> all the best,
> Tobias
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150211/e2a9c70a/attachment-0001.html>

From ctrueden at wisc.edu  Wed Feb 11 10:49:23 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 11 Feb 2015 10:49:23 -0600
Subject: [ImageJ-devel] mvn javadoc problem with java 8
In-Reply-To: <d69ac7a4723ad8b26269c3f310f489c0@www.dscho.org>
References: <18496510-8CE1-43E1-ACB7-F5B216A5C14B@mpi-cbg.de>
	<CADN69ymY+rtirS+ee_Rjwp2QRPb0pnfvCZt=b6Nt3auoqC4GYQ@mail.gmail.com>
	<d69ac7a4723ad8b26269c3f310f489c0@www.dscho.org>
Message-ID: <CADN69ykjVvdLPC3Sq80VdKVEU6GNWyJmRct3ucheXP6b-W9f2w@mail.gmail.com>

Hi Dscho,

> Curtis, you forgot to say that the `#getSource(long)` probably needs
> to be replaced by a `#getSource(int, int)` because the class has only
> a `getSource` method with the latter signature.

Yeah, my reply's first draft basically said "just fix the invalid javadoc".
Then I actually tried compiling with Java 8 and looked at what would need
to be fixed. Over 100 errors, due to things like missing @param and @return
and @throws. Fixing all of those things would actually be quite involved,
especially across all 200+ repositories, so I begin to see the wisdom of
working around it for now.

> But I agree that Javadocs that are obviously wrong should be fixed
> rather than switching off Javadoc generation in the Maven
> configuration.

Right, we definitely do not want to switch of javadoc generation. However,
there is another way: <additionalparams>-D:doclint:none</additionalparams>.
But it would need to go in a Java-8-specific profile. And again, I am
ambivalent about doing it because in the long term, especially after we
fully switch over to Java 8 some day, I would not want those checks
disabled by default.

Regards,
Curtis

On Wed, Feb 11, 2015 at 10:36 AM, Johannes Schindelin <
johannes.schindelin at gmx.de> wrote:

> Hi Curtis,
>
> On 2015-02-11 17:31, Curtis Rueden wrote:
>
>  I get the following errors when running with java 8
>>> ...
>>>
>>> Works fine with java 7 and java 6.
>>>
>>> Is this a known problem?
>>>
>>
>> Java 8's javadoc tool is much more stringent than previously, due to the
>> addition of doclint checks [1].
>>
>
> Curtis, you forgot to say that the `#getSource(long)` probably needs to be
> replaced by a `#getSource(int, int)` because the class has only a
> `getSource` method with the latter signature.
>
> But I agree that Javadocs that are obviously wrong should be fixed rather
> than switching off Javadoc generation in the Maven configuration.
>
> Ciao,
> Dscho
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150211/ba20cd2b/attachment.html>

From pietzsch at mpi-cbg.de  Thu Feb 12 18:51:23 2015
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Fri, 13 Feb 2015 01:51:23 +0100
Subject: [ImageJ-devel] mvn javadoc problem with java 8
In-Reply-To: <CADN69ykjVvdLPC3Sq80VdKVEU6GNWyJmRct3ucheXP6b-W9f2w@mail.gmail.com>
References: <18496510-8CE1-43E1-ACB7-F5B216A5C14B@mpi-cbg.de>
	<CADN69ymY+rtirS+ee_Rjwp2QRPb0pnfvCZt=b6Nt3auoqC4GYQ@mail.gmail.com>
	<d69ac7a4723ad8b26269c3f310f489c0@www.dscho.org>
	<CADN69ykjVvdLPC3Sq80VdKVEU6GNWyJmRct3ucheXP6b-W9f2w@mail.gmail.com>
Message-ID: <52226191-7028-4969-BD11-6ED8DD61C6C1@mpi-cbg.de>

Hi guys,

thanks for the comments!
I?ll just fix the javadoc, then.

best regards,
Tobias

On 11 Feb 2015, at 17:49, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Dscho,
> 
> > Curtis, you forgot to say that the `#getSource(long)` probably needs
> > to be replaced by a `#getSource(int, int)` because the class has only
> > a `getSource` method with the latter signature.
> 
> Yeah, my reply's first draft basically said "just fix the invalid javadoc". Then I actually tried compiling with Java 8 and looked at what would need to be fixed. Over 100 errors, due to things like missing @param and @return and @throws. Fixing all of those things would actually be quite involved, especially across all 200+ repositories, so I begin to see the wisdom of working around it for now.
> 
> > But I agree that Javadocs that are obviously wrong should be fixed
> > rather than switching off Javadoc generation in the Maven
> > configuration.
> 
> Right, we definitely do not want to switch of javadoc generation. However, there is another way: <additionalparams>-D:doclint:none</additionalparams>. But it would need to go in a Java-8-specific profile. And again, I am ambivalent about doing it because in the long term, especially after we fully switch over to Java 8 some day, I would not want those checks disabled by default.
> 
> Regards,
> Curtis
> 
> On Wed, Feb 11, 2015 at 10:36 AM, Johannes Schindelin <johannes.schindelin at gmx.de> wrote:
> Hi Curtis,
> 
> On 2015-02-11 17:31, Curtis Rueden wrote:
> 
> I get the following errors when running with java 8
> ...
> 
> Works fine with java 7 and java 6.
> 
> Is this a known problem?
> 
> Java 8's javadoc tool is much more stringent than previously, due to the
> addition of doclint checks [1].
> 
> Curtis, you forgot to say that the `#getSource(long)` probably needs to be replaced by a `#getSource(int, int)` because the class has only a `getSource` method with the latter signature.
> 
> But I agree that Javadocs that are obviously wrong should be fixed rather than switching off Javadoc generation in the Maven configuration.
> 
> Ciao,
> Dscho
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150213/8ece44b6/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150213/8ece44b6/attachment.pgp>

From schier at utia.cas.cz  Fri Feb 13 06:45:57 2015
From: schier at utia.cas.cz (Jan Schier)
Date: Fri, 13 Feb 2015 13:45:57 +0100
Subject: [ImageJ-devel] Confusion about SubsampleIntervalView,
	HyperSliceImgPlus, etc.
Message-ID: <54DDF205.5080505@utia.cas.cz>

Hi,

Excuse me perhaps naive questions for this list. I have, say, reasonable 
experience with Java coding for ImageJ1, and now I have tried to touch 
ImageJ2 and ImgLib2

I have written some code using Haar wavelets on 3D images last year, 
using HyperSliceImgPlus.fixChannelAxis() to select the channel and then 
SubsampleIntervalView etc. to get the sampling for wavelet computation.

Essentially, I have used something like

final ImgPlus<T> input = (ImgPlus<T>)dataset.getImgPlus();	
final Img<T> viewChan = HyperSliceImgPlus.fixChannelAxis(input, 1L);

and then I was using Img<T> for subsampling and further processing.
With this code, I run into conflict between net.imglib2.meta.ImgPlus<T> 
and net.imagej.ImgPlus<T> now.

I wanted to extend it now, but things have changed a lot with ops. I 
assume that my approach of working on Img<T> is incorrect now.

- how should I replace the above construct for channel selection now?

- what should I use for the subsampling operations to do it properly? I 
assume I should stay at the Dataset or ImgPlus level?

Many thanks for any hint,

Jan


From pietzsch at mpi-cbg.de  Fri Feb 13 09:26:46 2015
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Fri, 13 Feb 2015 16:26:46 +0100
Subject: [ImageJ-devel] Maven puzzle
In-Reply-To: <CADN69ymO=cRRSxCPXL259VNTBsNEug+au5omBJsfqkLh4cghWQ@mail.gmail.com>
References: <35E51487-6129-4DA0-9518-DB4090C9FD38@mpi-cbg.de>
	<CADN69ymO=cRRSxCPXL259VNTBsNEug+au5omBJsfqkLh4cghWQ@mail.gmail.com>
Message-ID: <EDD6C357-0B69-4E38-B4F1-240FE7A2A931@mpi-cbg.de>

Hi Curtis 

On 11 Feb 2015, at 17:45, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Tobi,
> 
> > [ERROR]
> > /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-server/src/main/java/bdv/server/BigDataServer.java:[248,46]
> > multi-catch statement is not supported in -source 1.5
> >
> > However, shouldn?t this be already automatically done by setting scijava.jvm.version=1.7???
> 
> Whoa, strange. Especially since it says *1.5*, which is the Maven default...
> 
> Furthermore, I cannot reproduce this problem on my system. Building with Java 6, Java 7 or Java 8 (with JAVA_HOME set accordingly), and with only the scijava.jvm.version set to 1.7, I am able to build the project successfully.
> 
> I pushed some changes to master, so that we can see whether Jenkins has a problem with it.

It turns out, that Jenkins has a problem with it:
http://jenkins.imagej.net/view/BigDataViewer/job/bigdataviewer-server/8/
has the error I reported earlier.
Adding int the maven-compiler-plugin snippet fixed it.
(http://jenkins.imagej.net/view/BigDataViewer/job/bigdataviewer-server/9/)
Probably there was no code to trigger the behaviour on master before.

all the best,
Tobias

> 
> Regards,
> Curtis
> 
> On Wed, Feb 11, 2015 at 9:58 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
> Hi,
> 
> maybe one of the maven experts can shed some light on the following behaviour?
> 
> In my bigdataviewer-server pom.xml file (https://github.com/bigdataviewer/bigdataviewer-server/blob/84b6724ccdefbdcf787f4896a102bc39d415063a/pom.xml)
> I want to set source compatibility to 1.7.
> I tried to do this by specifying
> 	<properties>
> 		<scijava.jvm.version>1.7</scijava.jvm.version>
> 	</properties>
> Strangely, this alone does not solve the problem. mvn on the command line says:
> ...
> INFO] -------------------------------------------------------------
> [ERROR] COMPILATION ERROR :
> [INFO] -------------------------------------------------------------
> [ERROR] /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-server/src/main/java/bdv/server/BigDataServer.java:[248,46] multi-catch statement is not supported in -source 1.5
>   (use -source 7 or higher to enable multi-catch statement)
> ?
> 
> I can fix it by additionally putting this snippet:
>  	<build>
> 		<plugins>
> 	        <plugin>
> 	          <artifactId>maven-compiler-plugin</artifactId>
> 	          <configuration>
> 	            <source>1.7</source>
> 	            <target>1.7</target>
> 	          </configuration>
> 	        </plugin>
> 		</plugins>
> 	</build>
> into the pom file.
> However, shouldn?t this be already automatically done by setting scijava.jvm.version=1.7???
> At least Eclipse seems to think so: I fact, the above snippet to configure maven-compiler-plugin I just copied from the ?Effective POM? shown in Eclipse (for the pom without explicitly having the snippet of course?)
> 
> Does anyone have an explanation? Is this a maven bug?
> 
> all the best,
> Tobias
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150213/a5921950/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150213/a5921950/attachment.pgp>

From ctrueden at wisc.edu  Fri Feb 13 10:07:58 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 13 Feb 2015 10:07:58 -0600
Subject: [ImageJ-devel] Release-Version job complains about source level
	1.7
In-Reply-To: <CA+B=mGoUwQ-J5O4H=GeKjhRcCt_EE0VJyDrmUSN3BrUt5WjaCw@mail.gmail.com>
References: <6DFE79DB-91A1-4099-A911-7055895009DD@mpi-cbg.de>
	<CA+B=mGoUwQ-J5O4H=GeKjhRcCt_EE0VJyDrmUSN3BrUt5WjaCw@mail.gmail.com>
Message-ID: <CADN69ymztg1gv5+COL461pU9v9UBpvEcn29xaVet5gviLAVxxw@mail.gmail.com>

Hi Mark & Tobi,

> I was thinking a separate Release_Version job, as opposed to
> configuration in the current job, to avoid accidentally releasing
> artifacts compiled with Java 7 that need to be Java 6 compatible...

Indeed, the problem is that the Release-Version job is configured to use
Java 6 to build and deploy. The BigDataViewer-server job is successful is
because I set it to use Java 7.

We could configure the Release-Version job to use a different Java version
depending on the selected artifact, but it would probably not be worth the
hassle. As Mark suggests, easier will be to create a Release-Version-Java7
job for the Java7-based jobs.

I am out of the office today, but maybe one of you guys could create that
job. Or else I can do it when I return to the office on Tuesday.

> for you to release something against java 7 we would need to ensure
> it's installed and exposed to Release-Version

Note that dev _does_ already have Java 7 installed. It's just not the
default for Jenkins. But it's available in the list of JVMs.

Regards,
Curtis

On Fri, Feb 13, 2015 at 9:51 AM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Tobias,
>
> On Fri, Feb 13, 2015 at 9:36 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
> wrote:
>
>> invalid target release: 1.7
>
>
>
> See http://stackoverflow.com/questions/19891423/invalid-target-release-1-7
>
> java -version is 1.6.0_45 for dev. So for you to release something against
> java 7 we would need to ensure it's installed and exposed to Release-Version
>
> Curtis - do you have a preference on how to handle Java 7 releases? I was
> thinking a separate Release_Version job, as opposed to configuration in the
> current job, to avoid accidentally releasing artifacts compiled with Java 7
> that need to be Java 6 compatible...
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150213/cb3170a0/attachment-0001.html>

From ctrueden at wisc.edu  Fri Feb 13 10:37:29 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 13 Feb 2015 10:37:29 -0600
Subject: [ImageJ-devel] Maven puzzle
In-Reply-To: <EDD6C357-0B69-4E38-B4F1-240FE7A2A931@mpi-cbg.de>
References: <35E51487-6129-4DA0-9518-DB4090C9FD38@mpi-cbg.de>
	<CADN69ymO=cRRSxCPXL259VNTBsNEug+au5omBJsfqkLh4cghWQ@mail.gmail.com>
	<EDD6C357-0B69-4E38-B4F1-240FE7A2A931@mpi-cbg.de>
Message-ID: <CADN69ynG-cPcui71ezRXLTAj_JxQhHc2pTMuG4L5SZ6g_xntUA@mail.gmail.com>

Hi Tobi,

> It turns out, that Jenkins has a problem with it

I see: I could not reproduce because the new "try/catch with resources"
code was not yet on the master branch.

I share your surprise that somehow overriding the scijava.jvm.version
property is not enough. I have run into similar subtle issues with property
overrides for dependency versions, but more recently was unable to
reproduce them. It probably has something to do with how the POMs are
resolved, and would be worth our time to understand better so that we avoid
similar issues in the future.

Regards,
Curtis

On Fri, Feb 13, 2015 at 9:26 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
wrote:

> Hi Curtis
>
> On 11 Feb 2015, at 17:45, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi Tobi,
>
> > [ERROR]
> >
> /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-server/src/main/java/bdv/server/BigDataServer.java:[248,46]
> > multi-catch statement is not supported in -source 1.5
> >
> > However, shouldn?t this be already automatically done by setting
> scijava.jvm.version=1.7???
>
> Whoa, strange. Especially since it says *1.5*, which is the Maven
> default...
>
> Furthermore, I cannot reproduce this problem on my system. Building with
> Java 6, Java 7 or Java 8 (with JAVA_HOME set accordingly), and with only
> the scijava.jvm.version set to 1.7, I am able to build the project
> successfully.
>
>
> I pushed some changes to master, so that we can see whether Jenkins has a
> problem with it.
>
>
> It turns out, that Jenkins has a problem with it:
> http://jenkins.imagej.net/view/BigDataViewer/job/bigdataviewer-server/8/
> has the error I reported earlier.
> Adding int the maven-compiler-plugin snippet fixed it.
> (http://jenkins.imagej.net/view/BigDataViewer/job/bigdataviewer-server/9/)
> Probably there was no code to trigger the behaviour on master before.
>
> all the best,
> Tobias
>
>
> Regards,
> Curtis
>
> On Wed, Feb 11, 2015 at 9:58 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
> wrote:
>
>> Hi,
>>
>> maybe one of the maven experts can shed some light on the following
>> behaviour?
>>
>> In my bigdataviewer-server pom.xml file (
>> https://github.com/bigdataviewer/bigdataviewer-server/blob/84b6724ccdefbdcf787f4896a102bc39d415063a/pom.xml
>> )
>> I want to set source compatibility to 1.7.
>> I tried to do this by specifying
>> <properties>
>> <scijava.jvm.version>1.7</scijava.jvm.version>
>> </properties>
>> Strangely, this alone does not solve the problem. mvn on the command line
>> says:
>> ...
>> INFO] -------------------------------------------------------------
>> [ERROR] COMPILATION ERROR :
>> [INFO] -------------------------------------------------------------
>> [ERROR]
>> /Users/pietzsch/workspace/BigDataViewer/bigdataviewer-server/src/main/java/bdv/server/BigDataServer.java:[248,46]
>> multi-catch statement is not supported in -source 1.5
>>   (use -source 7 or higher to enable multi-catch statement)
>> ?
>>
>> I can fix it by additionally putting this snippet:
>>   <build>
>> <plugins>
>>         <plugin>
>>           <artifactId>maven-compiler-plugin</artifactId>
>>           <configuration>
>>             <source>1.7</source>
>>             <target>1.7</target>
>>           </configuration>
>>         </plugin>
>> </plugins>
>> </build>
>> into the pom file.
>> However, shouldn?t this be already automatically done by setting
>> scijava.jvm.version=1.7???
>> At least Eclipse seems to think so: I fact, the above snippet to
>> configure maven-compiler-plugin I just copied from the ?Effective POM?
>> shown in Eclipse (for the pom without explicitly having the snippet of
>> course?)
>>
>> Does anyone have an explanation? Is this a maven bug?
>>
>> all the best,
>> Tobias
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150213/88ecad2c/attachment.html>

From hiner at wisc.edu  Mon Feb 23 13:16:20 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 23 Feb 2015 13:16:20 -0600
Subject: [ImageJ-devel] Release-Version job complains about source level
	1.7
In-Reply-To: <CADN69ymztg1gv5+COL461pU9v9UBpvEcn29xaVet5gviLAVxxw@mail.gmail.com>
References: <6DFE79DB-91A1-4099-A911-7055895009DD@mpi-cbg.de>
	<CA+B=mGoUwQ-J5O4H=GeKjhRcCt_EE0VJyDrmUSN3BrUt5WjaCw@mail.gmail.com>
	<CADN69ymztg1gv5+COL461pU9v9UBpvEcn29xaVet5gviLAVxxw@mail.gmail.com>
Message-ID: <CA+B=mGrSotyNFS1N7JJcQ+qSO+TMiR4NN=6MEajy8r01FivLcg@mail.gmail.com>

Hi Tobias,

There is now a Release-Version-Java7 job. I moved bigdataviewer_server to
this new job. Let us know if there are any problems.

Best,
Mark

On Fri, Feb 13, 2015 at 10:07 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Mark & Tobi,
>
> > I was thinking a separate Release_Version job, as opposed to
> > configuration in the current job, to avoid accidentally releasing
> > artifacts compiled with Java 7 that need to be Java 6 compatible...
>
> Indeed, the problem is that the Release-Version job is configured to use
> Java 6 to build and deploy. The BigDataViewer-server job is successful is
> because I set it to use Java 7.
>
> We could configure the Release-Version job to use a different Java version
> depending on the selected artifact, but it would probably not be worth the
> hassle. As Mark suggests, easier will be to create a Release-Version-Java7
> job for the Java7-based jobs.
>
> I am out of the office today, but maybe one of you guys could create that
> job. Or else I can do it when I return to the office on Tuesday.
>
> > for you to release something against java 7 we would need to ensure
> > it's installed and exposed to Release-Version
>
> Note that dev _does_ already have Java 7 installed. It's just not the
> default for Jenkins. But it's available in the list of JVMs.
>
> Regards,
> Curtis
>
> On Fri, Feb 13, 2015 at 9:51 AM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> Hi Tobias,
>>
>> On Fri, Feb 13, 2015 at 9:36 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
>> wrote:
>>
>>> invalid target release: 1.7
>>
>>
>>
>> See
>> http://stackoverflow.com/questions/19891423/invalid-target-release-1-7
>>
>> java -version is 1.6.0_45 for dev. So for you to release something
>> against java 7 we would need to ensure it's installed and exposed to
>> Release-Version
>>
>> Curtis - do you have a preference on how to handle Java 7 releases? I was
>> thinking a separate Release_Version job, as opposed to configuration in the
>> current job, to avoid accidentally releasing artifacts compiled with Java 7
>> that need to be Java 6 compatible...
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150223/c4358d0c/attachment.html>

From ctrueden at wisc.edu  Mon Feb 23 16:44:58 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 23 Feb 2015 16:44:58 -0600
Subject: [ImageJ-devel] Confusion about SubsampleIntervalView,
 HyperSliceImgPlus, etc.
In-Reply-To: <54DDF205.5080505@utia.cas.cz>
References: <54DDF205.5080505@utia.cas.cz>
Message-ID: <CADN69yna6YUMVKfftpiy8vK7dCZMaMQOkgJDMOpEANx+f+dzHw@mail.gmail.com>

Hi Jan,

Apologies for the delay in reply.

> I run into conflict between net.imglib2.meta.ImgPlus<T> and
> net.imagej.ImgPlus<T> now.

That suggests a clash of dependencies. The "net.imglib2.meta.ImgPlus" is
gone, in favor of (for the time being [1]) net.imagej.ImgPlus.

Everything should work if you update your POM to extend the newest
pom-imagej (5.10.0 at the time of this writing), and purge all "import
net.imglib2.meta" lines from your imports in favor of the new "import
net.imagej" class instead.  The HyperSliceImgPlus, though deprecated, was
updated to use net.imagej.ImgPlus, so hopefully this will work for you.

> what should I use for the subsampling operations to do it properly?

The API for doing this is still under development. The Views.interpolate
method [2] is probably a good starting point, though it is rather low
level. If what you want is to resample an image, we should create an op for
that in the ImageJ OPS project (I don't think one exists yet).

Regards,
Curtis

[1] In case you are curious: the ImgPlus class really needs a better
interface-driven type hierarchy, which has been a long time in coming. It
is planned to rework the ImageJ2 data model a bit along these lines later
this year.

[2]
http://javadoc.imagej.net/ImgLib2/net/imglib2/view/Views.html#interpolate(F,%20net.imglib2.interpolation.InterpolatorFactory)

On Fri, Feb 13, 2015 at 6:45 AM, Jan Schier <schier at utia.cas.cz> wrote:

> Hi,
>
> Excuse me perhaps naive questions for this list. I have, say, reasonable
> experience with Java coding for ImageJ1, and now I have tried to touch
> ImageJ2 and ImgLib2
>
> I have written some code using Haar wavelets on 3D images last year, using
> HyperSliceImgPlus.fixChannelAxis() to select the channel and then
> SubsampleIntervalView etc. to get the sampling for wavelet computation.
>
> Essentially, I have used something like
>
> final ImgPlus<T> input = (ImgPlus<T>)dataset.getImgPlus();
> final Img<T> viewChan = HyperSliceImgPlus.fixChannelAxis(input, 1L);
>
> and then I was using Img<T> for subsampling and further processing.
> With this code, I run into conflict between net.imglib2.meta.ImgPlus<T>
> and net.imagej.ImgPlus<T> now.
>
> I wanted to extend it now, but things have changed a lot with ops. I
> assume that my approach of working on Img<T> is incorrect now.
>
> - how should I replace the above construct for channel selection now?
>
> - what should I use for the subsampling operations to do it properly? I
> assume I should stay at the Dataset or ImgPlus level?
>
> Many thanks for any hint,
>
> Jan
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150223/98c07789/attachment.html>

From ctrueden at wisc.edu  Tue Feb 24 14:49:03 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 24 Feb 2015 14:49:03 -0600
Subject: [ImageJ-devel] Fiji error when loading ObjectJ projects ending
	with .ojj
In-Reply-To: <06B25DBB-40C1-4F37-ADD4-0C674A02003D@science.uva.nl>
References: <06B25DBB-40C1-4F37-ADD4-0C674A02003D@science.uva.nl>
Message-ID: <CADN69ynZBOzMFkDHrfvSyBGj1+xpAdgsNm-9wKsKAWVKO1Szkg@mail.gmail.com>

Hi Norbert,

> when using Fiji in combination with SCIFIO, I get the error:
>         "No supported format found"
> after loading an ObjectJ project file with ".ojj" extension.

I tried opening a .ojj file using an update-to-date Fiji, and I get:

   Plugin or class not found: "ObjectJ_"
   (java.lang.ClassNotFoundException: ObjectJ_)

Which makes sense since I don't have ObjectJ installed.

I get this message with SCIFIO enabled or disabled ("Use SCIFIO when
opening files" in Edit > Options > ImageJ2).

Are you saying that when you do have ObjectJ installed, you see the "No
supported format found" error?

Regards,
Curtis

On Fri, Jan 16, 2015 at 5:39 PM, Norbert Vischer <vischer at science.uva.nl>
wrote:

> Hi Curtis,
>
>
> when using Fiji in combination with SCIFIO, I get the error:
>         "No supported format found"
> after loading an ObjectJ project file with ".ojj" extension.
>
> I think it would be enough if FIJI (legacy)
> would suppress any error messages if the file ends with .ojj,
>
> as ImageJ1 handles .ojj files correctly:
>
>         https://github.com/imagej/imagej1/search?utf8=?&q=ojj
>
>
> best regards (and thanks four your previous reply about drag&drop .jar
> files),
>
> Norbert
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150224/4f947a24/attachment.html>

From schier at utia.cas.cz  Wed Feb 25 04:39:57 2015
From: schier at utia.cas.cz (Jan Schier)
Date: Wed, 25 Feb 2015 11:39:57 +0100
Subject: [ImageJ-devel] Confusion about SubsampleIntervalView,
 HyperSliceImgPlus, etc.
In-Reply-To: <CADN69yna6YUMVKfftpiy8vK7dCZMaMQOkgJDMOpEANx+f+dzHw@mail.gmail.com>
References: <54DDF205.5080505@utia.cas.cz>
	<CADN69yna6YUMVKfftpiy8vK7dCZMaMQOkgJDMOpEANx+f+dzHw@mail.gmail.com>
Message-ID: <54EDA67D.1060904@utia.cas.cz>

> Hi Jan,
>
> Apologies for the delay in reply.

no problem, many thank for your reply!

>  > I run into conflict between net.imglib2.meta.ImgPlus<T> and
>  > net.imagej.ImgPlus<T> now.
>
> That suggests a clash of dependencies. The "net.imglib2.meta.ImgPlus" is
> gone, in favor of (for the time being [1]) net.imagej.ImgPlus.
>
> Everything should work if you update your POM to extend the newest
> pom-imagej (5.10.0 at the time of this writing), and purge all "import
> net.imglib2.meta" lines from your imports in favor of the new "import
> net.imagej" class instead.  The HyperSliceImgPlus, though deprecated,
> was updated to use net.imagej.ImgPlus, so hopefully this will work for you.

OK, thanks, I will check this.

>
>  > what should I use for the subsampling operations to do it properly?
>
> The API for doing this is still under development. The Views.interpolate
> method [2] is probably a good starting point, though it is rather low
> level. If what you want is to resample an image, we should create an op
> for that in the ImageJ OPS project (I don't think one exists yet).

I was using Views.subsample in my old code (all I needed was an integer 
subsampling), but was going to "rather low level" probably way too 
early. Thanks for the hint.

For the moment, I just took the algorithm and reimplemented it in 
ImageJ1 - I am much more familiar there and really needed to get the job 
done.

I will try to play with OPS and definitely, I will keep eye on its 
development  - it really looks great and evolves pretty quickly.

 > [1] In case you are curious: the ImgPlus class really needs a better
 > interface-driven type hierarchy, which has been a long time in coming.
 > It is planned to rework the ImageJ2 data model a bit along these lines
 > later this year.

This will for sure be interesting to follow!

Thanks again,

Jan


From ctrueden at wisc.edu  Thu Feb 26 15:09:03 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 26 Feb 2015 15:09:03 -0600
Subject: [ImageJ-devel] Fiji error when loading ObjectJ projects ending
	with .ojj
In-Reply-To: <1C959882-924D-45C7-8B79-ED5DE0458104@science.uva.nl>
References: <06B25DBB-40C1-4F37-ADD4-0C674A02003D@science.uva.nl>
	<CADN69ynZBOzMFkDHrfvSyBGj1+xpAdgsNm-9wKsKAWVKO1Szkg@mail.gmail.com>
	<1C959882-924D-45C7-8B79-ED5DE0458104@science.uva.nl>
Message-ID: <CADN69y=-TGQnZfHsf9yuc0kZje8cu6Mzb71j_9jTHGT+BEfhEA@mail.gmail.com>

Hi Norbert,

> At the time when I sent you the email, there appeared an error message
> similar to: "SCIFIO does not recognize this file type", but then the
> file was passed correctly to ImageJ. The user could continue to work,
> but the error message was misleading, so I suggested to remove it.
> Later, the misleading message did not occur anymore, and I thought
> you or someone else had fixed this without notice.

Actually, yes, I spoke to Mark Hiner and we vaguely recall a bug very much
like that getting fixed.

In any case: glad it works as expected now!

Regards,
Curtis

On Thu, Feb 26, 2015 at 2:40 PM, Norbert Vischer <vischer at science.uva.nl>
wrote:

> Hi Curtis
>
> > I tried opening a .ojj file using an update-to-date Fiji, and I get:
> >
> >    Plugin or class not found: "ObjectJ_"
> >    (java.lang.ClassNotFoundException: ObjectJ_)
> >
> > Which makes sense since I don't have ObjectJ installed.
> >
> > I get this message with SCIFIO enabled or disabled ("Use SCIFIO when
> opening files" in Edit > Options > ImageJ2).
> >
>
>
> Meanwhile, everything works ok.
>
> At the time when I sent you the email, there appeared an error message
> similar to: "SCIFIO does not recognize this file type", but then the file
> was passed correctly to ImageJ. The user could continue to work, but the
> error message was misleading, so I suggested to remove it.
> Later, the misleading message did not occur anymore, and I thought you or
> someone else had fixed this without notice. Thank you in any case for
> caring!
>
> Best regards, Norbert
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150226/6ba31c30/attachment.html>

