From ctrueden at wisc.edu  Thu Oct  3 17:37:33 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 3 Oct 2013 17:37:33 -0500
Subject: [ImageJ-devel] Nonlinear axes work nearly complete
Message-ID: <CADN69y=NLzAwxthCmFqJrFkdFmk1ueAb0tzd0tkr0pHBSN9DcQ@mail.gmail.com>

Hi ImageJ / ImgLib2 / SCIFIO developers (mostly core developers),

We recently merged the 'nonlinear-goodies' branch of imglib.git to master.
This adds support for nonlinear calibrations in addition to linear ones:

https://github.com/imagej/imglib/commit/3ffc0bec00bb7e71d3395a75caaa9c3460b02d75

We tried to maintain backwards compatibility as much as possible,
deprecating obsolete methods and classes. They will stay there through the
next release (2.0.0-beta-17) and then get removed afterwards, to make
migrating to the new API easier.

We are working on updating SCIFIO and ImageJ2 to use the new API as well.
Work can be seen at:
https://github.com/imagej/imagej/compare/nonlinear-axes
https://github.com/imagej/imagej/compare/nonlinear-goodies
https://github.com/scifio/scifio/compare/nonlinear-calibration-update

Unfortunately I will be out of the office tomorrow, so completion of this
work will have to wait till Monday.

For those of you who were in the office physically or the #imagejdev chat
room: we finally fixed the bug with duplicate X and Y axes:
https://github.com/imagej/imagej/commit/0876338d24b2a4ffea805def141d36edb5acdf1b

So Mark and Barry: no need to dig into anything further here.

I verified that ImageJ2 is now behaving reasonably well against ImgLib2
master now. That means the next steps (for me on Monday) are:

1) Update SCIFIO master to work with latest ImgLib2 code.

2) Cut the 2.0.0-beta-17 release of ImgLib2.

3) Finalize SCIFIO's nonlinear-calibration-update branch to use the beta-17
release and merge it to master once working.

4) Cut a new release of SCIFIO.

4) Update ImageJ2's nonlinear-axes branch to use the ImgLib2 beta-17
release and new SICFIO release.

5) Cherry-pick relevant changes from nonlinear-goodies branch to
nonlinear-axes branch (dividing changes into conceptually related commits).

6) Merge nonlinear-axes branch to ImageJ2 master once fully complete.

In the meantime, please note that the duplicate X/Y axis bug lingers on
ImageJ2 master as things stand. It will not be fixed until ImageJ2 is
pinned against a new release of ImgLib2. (Even if you cherry-picked that
fix to AbstractData above, it does not fully fix the problem without
another fix to ImgLib2's Axes.get method too.)

If anyone has any questions about this, feel free to reply. But mostly this
is just a status update to let everyone know that I'll take care of it, and
asking for others to just let things lie until Monday (though unrelated
pushes to master, in the meantime, are fine).

Thanks,
Curtis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131003/2fdd804a/attachment.html>

From Johannes.Schindelin at gmx.de  Mon Oct  7 04:45:46 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Mon, 7 Oct 2013 11:45:46 +0200 (CEST)
Subject: [ImageJ-devel] Interesting: Machine Learning in Python
Message-ID: <alpine.DEB.1.00.1310071144230.1191@s15462909.onlinehome-server.info>

Hi Lee,

I just stumbled over this:

http://amueller.github.io/sklearn_tutorial

Might be interesting for you?

Ciao,
Johannes


From bdezonia at gmail.com  Mon Oct  7 10:15:29 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Mon, 7 Oct 2013 10:15:29 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
Message-ID: <CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>

Merged


On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:

> I submitted a patch to scijava-common with the changes.
>
> https://github.com/scijava/scijava-common/pull/13
>
>
>
>
> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> A proposed fix would be good Lee. I'd like to test the async status
>> update code for responsiveness (i.e. when opening a large image let's say).
>> Let me know when your fix is in place. Thanks.
>>
>>
>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>
>>> Thanks Barry, the email was a little rushed - finished it while going
>>> out the door. What do you think about sending the status messages
>>> asynchronously? It looks to me like the AWT event processing will display
>>> them in the order received, so that makes sure that a "Finished" message
>>> will be seen after a "% complete" message. Status reporting is such a
>>> common thing - it'd be a shame for all the worker threads to stall because
>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>> their batch job was running.
>>>
>>> I think I'll submit a patch to DefaultStatusService for asynch reporting
>>> and maybe Curtis or you could look it over and accept it. If you reject, NP.
>>>
>>> --Lee
>>>
>>>
>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> Hi Lee,
>>>>
>>>> I added the synchronized keyword yesterday to fix a bug. We can undo
>>>> that change. I can work around the problem in another fashion if necessary.
>>>>
>>>>
>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT event
>>>>> queue thread tries to get a lock within DefaultDatasetView.getColor and
>>>>> when DefaultStatusService.showStatus on a worker thread tries to publish a
>>>>> synchronous request for status display after taking the
>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>
>>>>> The bug is somewhat debatable. Possible candidates: It's a little
>>>>> drastic for DefaultDatasetView.getColor to synchronize on the view itself.
>>>>> Maybe some proxy for the color system could have a synchronizing object.
>>>>> The other candidate is DefaultEventService.showStatus which could use
>>>>> EventService.publishLater - I don't think there's much need for status
>>>>> publishers to wait around for the status to show on the screen.
>>>>>
>>>>> The two stack traces:
>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>> method on DefaultDatasetView
>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent) line: 184
>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not
>>>>> available [native method]
>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>> Method.invoke(Object, Object...) line: 597
>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>> List, List, StackTraceElement[]) line: 1
>>>>> DefaultEventBus$1.run() line: 201
>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>> StackTraceElement[]) line: 195
>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>> DefaultEventService.publish(E) line: 95
>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not
>>>>> available [native method]
>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>> Method.invoke(Object, Object...) line: 597
>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>> List, List, StackTraceElement[]) line: 1
>>>>> DefaultEventBus$1.run() line: 201
>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>> StackTraceElement[]) line: 195
>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>> DefaultEventService.publish(E) line: 95
>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line: 1877
>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent) line: 274
>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4630
>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>> AWTEvent) line: 1850
>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component, AWTEvent)
>>>>> line: 910
>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4502
>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>> line: 55
>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>> line: 183
>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent) line:
>>>>> 210
>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4502
>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>> SequencedEvent.dispatch() line: 101
>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>> EventFilter) line: 184
>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>> Component) line: 174
>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>  EventDispatchThread.run() line: 122
>>>>>
>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>  Object.wait(long) line: not available [native method]
>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting for
>>>>> AWT event thread to read invocation request.
>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>> StackTraceElement[]) line: 195
>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>  DefaultEventService.publish(E) line: 95
>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line: 70
>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>> line: 97
>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>> line: 105
>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the DefaultDatasetView
>>>>> lock.
>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>) line:
>>>>> 148
>>>>>  TurboRegRegister.run() line: 144
>>>>> CommandModule.run() line: 196
>>>>>  ModuleRunner.run() line: 168
>>>>> ModuleRunner.call() line: 129
>>>>>  ModuleRunner.call() line: 1
>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>  FutureTask<V>.run() line: 138
>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>> Thread.run() line: 662
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131007/9790c16c/attachment-0001.html>

From Johannes.Schindelin at gmx.de  Mon Oct  7 10:21:35 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Mon, 7 Oct 2013 17:21:35 +0200 (CEST)
Subject: [ImageJ-devel] A fast JVM based on LuaJIT
Message-ID: <alpine.DEB.1.00.1310071718390.1191@s15462909.onlinehome-server.info>

Hi all (in particular, the ImgLib2 developers),

the site https://cowlark.com/luje/doc/stable/doc/index.wiki claims that
their JVM which converts Java bytecode into Lua bytecode and runs it in
LuaJIT sometimes outperforms hotspot.

Unfortunately, it does not support AWT (yet) so there is no good way for
me to test things, but maybe one of the ImgLib2 guys wants to try it?

Ciao,
Dscho


From markehammons at gmail.com  Tue Oct  8 09:20:06 2013
From: markehammons at gmail.com (Mark Hammons)
Date: Tue, 8 Oct 2013 16:20:06 +0200
Subject: [ImageJ-devel] Trying to integrate imagej-legacy into openmole...
Message-ID: <CA+Qhayr8RUhXS9eOoVFntEvPVo=JAuZ5nqsnjq-JQ9yvji7sdA@mail.gmail.com>

So, I was curious, how do I start imagej in headless mode when i'm
embedding it into another program?

-- 
Mark Edgar Hammons II - Research Engineer at the ISCPIF | Contributor to
OpenMOLE <http://www.openmole.org/>

Cell - +33 06 03 69 56 56 | + 1 405 928 8206
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131008/4b36f14b/attachment.html>

From Johannes.Schindelin at gmx.de  Tue Oct  8 10:08:27 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Tue, 8 Oct 2013 17:08:27 +0200 (CEST)
Subject: [ImageJ-devel] Trying to integrate imagej-legacy into
 openmole...
In-Reply-To: <CA+Qhayr8RUhXS9eOoVFntEvPVo=JAuZ5nqsnjq-JQ9yvji7sdA@mail.gmail.com>
References: <CA+Qhayr8RUhXS9eOoVFntEvPVo=JAuZ5nqsnjq-JQ9yvji7sdA@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1310081641220.1191@s15462909.onlinehome-server.info>

Hi Mark,

On Tue, 8 Oct 2013, Mark Hammons wrote:

> So, I was curious, how do I start imagej in headless mode when i'm
> embedding it into another program?

To put that into context: we just met at the EuBIAS conference (Mark is a
developer of OpenMole, a software facilitating grid computing). The
question was how to call ImageJ1 macros in a headless manner.

In principle, after calling net.imagej.DefaultLegacyService.preinit()
(contained in ij-legacy.jar [*1*]) you can call IJ.runMacro(String) or
IJ.runMacroFile(String) [sic!] to evaluate macros even in headless mode:
the preinit() method will make sure that the headless mode is activated,
which lets quite a few plugins run in headless mode.

When chatting to you (how about Cc:ing your colleagues into this
conversation?), it became clear that you will need support for OSGi and
are willing to help us with that... Great! Thank you!

It also became apparent that you will need to call ImageJ 1.x macros in a
massively parallel way. So I promised that I will implement a function
that lets you call ImageJ 1.x macros via the LegacyService that
uses separate class loaders so that the ImageJ 1.x "instances" cannot
interfere with each other.

Hopefully I will be able to show you tangible code at most in a few weeks.
Feel free to bug me if you do not hear any progress record from me in the
next few days!

In the longer run, you will want to run scripts and macros via the
ScriptService of ImageJ2, but for that, I think we will need our "macro"
recorder which is still a bit off in the future.

Ciao,
Johannes

Footnote *1*: To be precise, "ij-legacy.jar" is my shortcut to "the
artifact of the Maven project hosted on http://maven.imagej.net/ (releases
are in content/repositories/releases/, snapshots in .../snapshots/)
identified by the GA net.imagej:ij-legacy. Currently, the latest release
version is 2.0.0-beta-7.3 while the snapshot version 2.0.0-SNAPSHOT is
"released" continously by our trusty Jenkins.


From leek at broadinstitute.org  Wed Oct  9 01:38:36 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 9 Oct 2013 08:38:36 +0200
Subject: [ImageJ-devel] Interesting: Machine Learning in Python
In-Reply-To: <alpine.DEB.1.00.1310071144230.1191@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1310071144230.1191@s15462909.onlinehome-server.info>
Message-ID: <CAHLFyjfdGV7wjj1P=_Ca9um-ocdoxe-FRua2MDxiBMokVvkN1Q@mail.gmail.com>

Thanks, Johannes,
Our statisticians use sklearn all the time. It's really well-constructed
and wraps a number of well-known C libraries.


On Mon, Oct 7, 2013 at 11:45 AM, Johannes Schindelin <
Johannes.Schindelin at gmx.de> wrote:

> Hi Lee,
>
> I just stumbled over this:
>
> http://amueller.github.io/sklearn_tutorial
>
> Might be interesting for you?
>
> Ciao,
> Johannes
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131009/789dc19e/attachment.html>

From Johannes.Schindelin at gmx.de  Wed Oct  9 02:19:08 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 9 Oct 2013 09:19:08 +0200 (CEST)
Subject: [ImageJ-devel] Interesting: Machine Learning in Python
In-Reply-To: <CAHLFyjfdGV7wjj1P=_Ca9um-ocdoxe-FRua2MDxiBMokVvkN1Q@mail.gmail.com>
References: <alpine.DEB.1.00.1310071144230.1191@s15462909.onlinehome-server.info>
	<CAHLFyjfdGV7wjj1P=_Ca9um-ocdoxe-FRua2MDxiBMokVvkN1Q@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1310090915590.1191@s15462909.onlinehome-server.info>

Hi Lee,

On Wed, 9 Oct 2013, Lee Kamentsky wrote:

> Our statisticians use sklearn all the time. It's really well-constructed
> and wraps a number of well-known C libraries.

I should have suspected that you know it already! At least now I know that
not only the tutorial looks awesome, but also that the thing is really
worth having a look at...

Ciao,
Dscho


From Johannes.Schindelin at gmx.de  Wed Oct  9 05:49:37 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 9 Oct 2013 12:49:37 +0200 (CEST)
Subject: [ImageJ-devel] Trying to integrate imagej-legacy into
 openmole...
In-Reply-To: <CA+QhaypQWqzX0JJ8-OjEZq6yJDpMUtgi4Xf4cxUzkt0rmNg8vA@mail.gmail.com>
References: <CA+Qhayr8RUhXS9eOoVFntEvPVo=JAuZ5nqsnjq-JQ9yvji7sdA@mail.gmail.com>
	<alpine.DEB.1.00.1310081641220.1191@s15462909.onlinehome-server.info>
	<CA+QhaypQWqzX0JJ8-OjEZq6yJDpMUtgi4Xf4cxUzkt0rmNg8vA@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1310091248490.1191@s15462909.onlinehome-server.info>

Hi,

On Wed, 9 Oct 2013, Mark Hammons wrote:

> On Tue, Oct 8, 2013 at 5:08 PM, Johannes Schindelin <
> Johannes.Schindelin at gmx.de> wrote:
> 
> > On Tue, 8 Oct 2013, Mark Hammons wrote:
> >
> > > So, I was curious, how do I start imagej in headless mode when i'm
> > > embedding it into another program?
> >
> > To put that into context: we just met at the EuBIAS conference (Mark
> > is a developer of OpenMole, a software facilitating grid computing).
> > The question was how to call ImageJ1 macros in a headless manner.
> >
> > In principle, after calling net.imagej.DefaultLegacyService.preinit()
> > (contained in ij-legacy.jar [*1*]) you can call IJ.runMacro(String) or
> > IJ.runMacroFile(String) [sic!] to evaluate macros even in headless
> > mode: the preinit() method will make sure that the headless mode is
> > activated, which lets quite a few plugins run in headless mode.
> >
> > When chatting to you (how about Cc:ing your colleagues into this
> > conversation?), it became clear that you will need support for OSGi
> > and are willing to help us with that... Great! Thank you!
> >
> > It also became apparent that you will need to call ImageJ 1.x macros
> > in a massively parallel way. So I promised that I will implement a
> > function that lets you call ImageJ 1.x macros via the LegacyService
> > that uses separate class loaders so that the ImageJ 1.x "instances"
> > cannot interfere with each other.
> >
> > Hopefully I will be able to show you tangible code at most in a few
> > weeks.  Feel free to bug me if you do not hear any progress record
> > from me in the next few days!
> >
> > In the longer run, you will want to run scripts and macros via the
> > ScriptService of ImageJ2, but for that, I think we will need our
> > "macro" recorder which is still a bit off in the future.
> >
> > Footnote *1*: To be precise, "ij-legacy.jar" is my shortcut to "the
> > artifact of the Maven project hosted on http://maven.imagej.net/
> > (releases are in content/repositories/releases/, snapshots in
> > .../snapshots/) identified by the GA net.imagej:ij-legacy. Currently,
> > the latest release version is 2.0.0-beta-7.3 while the snapshot
> > version 2.0.0-SNAPSHOT is "released" continously by our trusty
> > Jenkins.
>
> Ok, I'll give this a try in a few days. I'm going on vacation :)

Enjoy your vacation!
Dscho


From Johannes.Schindelin at gmx.de  Thu Oct 10 05:34:27 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 10 Oct 2013 12:34:27 +0200 (CEST)
Subject: [ImageJ-devel] Documentation for KNIME
Message-ID: <alpine.DEB.1.00.1310101222090.1191@s15462909.onlinehome-server.info>

Hi Martin,

in the discussions at the EuBIAS 2013 meeting, you said that there is no
web documentation for KNIP (KNIME Image Processing), that all the
documentation is available inside KNIME, and that some of the
documentation is even generated on the fly.

So I had this idea: how about making a custom node that just accumulates
all the nodes' documentation and export it into a directory of .html
files? That should also help visibility on Google...

Ciao,
Dscho


From Martin.Horn at uni-konstanz.de  Thu Oct 10 05:45:22 2013
From: Martin.Horn at uni-konstanz.de (Martin Horn)
Date: Thu, 10 Oct 2013 12:45:22 +0200
Subject: [ImageJ-devel] Documentation for KNIME
In-Reply-To: <alpine.DEB.1.00.1310101222090.1191@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1310101222090.1191@s15462909.onlinehome-server.info>
Message-ID: <52568542.8030606@uni-konstanz.de>

We are already in contact with the KNIME developers to make that happen.

Thanks for the suggestion.

On 10/10/2013 12:34 PM, Johannes Schindelin wrote:
> Hi Martin,
>
> in the discussions at the EuBIAS 2013 meeting, you said that there is no
> web documentation for KNIP (KNIME Image Processing), that all the
> documentation is available inside KNIME, and that some of the
> documentation is even generated on the fly.
>
> So I had this idea: how about making a custom node that just accumulates
> all the nodes' documentation and export it into a directory of .html
> files? That should also help visibility on Google...
>
> Ciao,
> Dscho
>

-- 
Martin Horn
Nycomed Chair for Bioinformatics
and Information Mining
University of Konstanz

fax: +49 (0)7531 88-5132
phone: +49 (0)7531 88-5017




From bdezonia at gmail.com  Wed Oct 16 13:15:21 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Wed, 16 Oct 2013 13:15:21 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
Message-ID: <CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>

Lee did you see I reopened ticket #1992 (http://trac.imagej.net/ticket/1992)
that was related to this code change?


On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com> wrote:

> Merged
>
>
> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>
>> I submitted a patch to scijava-common with the changes.
>>
>> https://github.com/scijava/scijava-common/pull/13
>>
>>
>>
>>
>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> A proposed fix would be good Lee. I'd like to test the async status
>>> update code for responsiveness (i.e. when opening a large image let's say).
>>> Let me know when your fix is in place. Thanks.
>>>
>>>
>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>>
>>>> Thanks Barry, the email was a little rushed - finished it while going
>>>> out the door. What do you think about sending the status messages
>>>> asynchronously? It looks to me like the AWT event processing will display
>>>> them in the order received, so that makes sure that a "Finished" message
>>>> will be seen after a "% complete" message. Status reporting is such a
>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>> their batch job was running.
>>>>
>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>> reject, NP.
>>>>
>>>> --Lee
>>>>
>>>>
>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> Hi Lee,
>>>>>
>>>>> I added the synchronized keyword yesterday to fix a bug. We can undo
>>>>> that change. I can work around the problem in another fashion if necessary.
>>>>>
>>>>>
>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>> leek at broadinstitute.org> wrote:
>>>>>
>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT event
>>>>>> queue thread tries to get a lock within DefaultDatasetView.getColor and
>>>>>> when DefaultStatusService.showStatus on a worker thread tries to publish a
>>>>>> synchronous request for status display after taking the
>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>
>>>>>> The bug is somewhat debatable. Possible candidates: It's a little
>>>>>> drastic for DefaultDatasetView.getColor to synchronize on the view itself.
>>>>>> Maybe some proxy for the color system could have a synchronizing object.
>>>>>> The other candidate is DefaultEventService.showStatus which could use
>>>>>> EventService.publishLater - I don't think there's much need for status
>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>
>>>>>> The two stack traces:
>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>> method on DefaultDatasetView
>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent) line:
>>>>>> 184
>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>> not available [native method]
>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>>> List, List, StackTraceElement[]) line: 1
>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>> StackTraceElement[]) line: 195
>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>> not available [native method]
>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>>> List, List, StackTraceElement[]) line: 1
>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>> StackTraceElement[]) line: 195
>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line: 1877
>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent) line: 274
>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4630
>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>> AWTEvent) line: 1850
>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component, AWTEvent)
>>>>>> line: 910
>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4502
>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>> line: 55
>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>> line: 183
>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent) line:
>>>>>> 210
>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4502
>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>> EventFilter) line: 184
>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>> Component) line: 174
>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>  EventDispatchThread.run() line: 122
>>>>>>
>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>  Object.wait(long) line: not available [native method]
>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting for
>>>>>> AWT event thread to read invocation request.
>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>> StackTraceElement[]) line: 195
>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line: 70
>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>> line: 97
>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>> line: 105
>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the DefaultDatasetView
>>>>>> lock.
>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>) line:
>>>>>> 148
>>>>>>  TurboRegRegister.run() line: 144
>>>>>> CommandModule.run() line: 196
>>>>>>  ModuleRunner.run() line: 168
>>>>>> ModuleRunner.call() line: 129
>>>>>>  ModuleRunner.call() line: 1
>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>  FutureTask<V>.run() line: 138
>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>> Thread.run() line: 662
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> ImageJ-devel mailing list
>>>>>> ImageJ-devel at imagej.net
>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/84113485/attachment-0001.html>

From leek at broadinstitute.org  Wed Oct 16 13:19:36 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 16 Oct 2013 14:19:36 -0400
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
Message-ID: <CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>

Sorry, I missed it. I'll see if I can take a look at it,


On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> Lee did you see I reopened ticket #1992 (
> http://trac.imagej.net/ticket/1992) that was related to this code change?
>
>
> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> Merged
>>
>>
>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>
>>> I submitted a patch to scijava-common with the changes.
>>>
>>> https://github.com/scijava/scijava-common/pull/13
>>>
>>>
>>>
>>>
>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> A proposed fix would be good Lee. I'd like to test the async status
>>>> update code for responsiveness (i.e. when opening a large image let's say).
>>>> Let me know when your fix is in place. Thanks.
>>>>
>>>>
>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> Thanks Barry, the email was a little rushed - finished it while going
>>>>> out the door. What do you think about sending the status messages
>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>> their batch job was running.
>>>>>
>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>> reject, NP.
>>>>>
>>>>> --Lee
>>>>>
>>>>>
>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> Hi Lee,
>>>>>>
>>>>>> I added the synchronized keyword yesterday to fix a bug. We can undo
>>>>>> that change. I can work around the problem in another fashion if necessary.
>>>>>>
>>>>>>
>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT event
>>>>>>> queue thread tries to get a lock within DefaultDatasetView.getColor and
>>>>>>> when DefaultStatusService.showStatus on a worker thread tries to publish a
>>>>>>> synchronous request for status display after taking the
>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>
>>>>>>> The bug is somewhat debatable. Possible candidates: It's a little
>>>>>>> drastic for DefaultDatasetView.getColor to synchronize on the view itself.
>>>>>>> Maybe some proxy for the color system could have a synchronizing object.
>>>>>>> The other candidate is DefaultEventService.showStatus which could use
>>>>>>> EventService.publishLater - I don't think there's much need for status
>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>
>>>>>>> The two stack traces:
>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>> method on DefaultDatasetView
>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent) line:
>>>>>>> 184
>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>> not available [native method]
>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>>>> List, List, StackTraceElement[]) line: 1
>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>> StackTraceElement[]) line: 195
>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>> not available [native method]
>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>>>> List, List, StackTraceElement[]) line: 1
>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>> StackTraceElement[]) line: 195
>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line: 1877
>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent) line:
>>>>>>> 274
>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>> 4630
>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>> AWTEvent) line: 1850
>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component, AWTEvent)
>>>>>>> line: 910
>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4502
>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>> 2099
>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>> line: 55
>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>> line: 183
>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent) line:
>>>>>>> 210
>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>> 4502
>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>> EventFilter) line: 184
>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>> Component) line: 174
>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>
>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting for
>>>>>>> AWT event thread to read invocation request.
>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>> StackTraceElement[]) line: 195
>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line: 70
>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>> line: 97
>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>> line: 105
>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>> DefaultDatasetView lock.
>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>) line:
>>>>>>> 148
>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>> CommandModule.run() line: 196
>>>>>>>  ModuleRunner.run() line: 168
>>>>>>> ModuleRunner.call() line: 129
>>>>>>>  ModuleRunner.call() line: 1
>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>> Thread.run() line: 662
>>>>>>>
>>>>>>>
>>>>>>> _______________________________________________
>>>>>>> ImageJ-devel mailing list
>>>>>>> ImageJ-devel at imagej.net
>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/ca82c925/attachment-0001.html>

From bdezonia at gmail.com  Wed Oct 16 13:44:37 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Wed, 16 Oct 2013 13:44:37 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
Message-ID: <CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>

Thanks. I also updated the ticket a bit a few minutes ago. In my second
example problem (closing app with sample image open) it looks like the
original open samples legacy command was not finishing its run. Not sure if
this is related to your event processing changes.


On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:

> Sorry, I missed it. I'll see if I can take a look at it,
>
>
> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> Lee did you see I reopened ticket #1992 (
>> http://trac.imagej.net/ticket/1992) that was related to this code change?
>>
>>
>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> Merged
>>>
>>>
>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>>
>>>> I submitted a patch to scijava-common with the changes.
>>>>
>>>> https://github.com/scijava/scijava-common/pull/13
>>>>
>>>>
>>>>
>>>>
>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> A proposed fix would be good Lee. I'd like to test the async status
>>>>> update code for responsiveness (i.e. when opening a large image let's say).
>>>>> Let me know when your fix is in place. Thanks.
>>>>>
>>>>>
>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>> leek at broadinstitute.org> wrote:
>>>>>
>>>>>> Thanks Barry, the email was a little rushed - finished it while going
>>>>>> out the door. What do you think about sending the status messages
>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>> their batch job was running.
>>>>>>
>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>> reject, NP.
>>>>>>
>>>>>> --Lee
>>>>>>
>>>>>>
>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>
>>>>>>> Hi Lee,
>>>>>>>
>>>>>>> I added the synchronized keyword yesterday to fix a bug. We can undo
>>>>>>> that change. I can work around the problem in another fashion if necessary.
>>>>>>>
>>>>>>>
>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>
>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT
>>>>>>>> event queue thread tries to get a lock within DefaultDatasetView.getColor
>>>>>>>> and when DefaultStatusService.showStatus on a worker thread tries to
>>>>>>>> publish a synchronous request for status display after taking the
>>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>
>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a little
>>>>>>>> drastic for DefaultDatasetView.getColor to synchronize on the view itself.
>>>>>>>> Maybe some proxy for the color system could have a synchronizing object.
>>>>>>>> The other candidate is DefaultEventService.showStatus which could use
>>>>>>>> EventService.publishLater - I don't think there's much need for status
>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>
>>>>>>>> The two stack traces:
>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>> method on DefaultDatasetView
>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent) line:
>>>>>>>> 184
>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>>> not available [native method]
>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>>>>> List, List, StackTraceElement[]) line: 1
>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>>> not available [native method]
>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String, Object,
>>>>>>>> List, List, StackTraceElement[]) line: 1
>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line:
>>>>>>>> 1877
>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent) line:
>>>>>>>> 274
>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>> 4630
>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>> AWTEvent) line: 1850
>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>> AWTEvent) line: 910
>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line: 4502
>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>> 2099
>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>> line: 55
>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>> line: 183
>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)
>>>>>>>> line: 210
>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>> 4502
>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line: 2099
>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>> EventFilter) line: 184
>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>> Component) line: 174
>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>
>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting for
>>>>>>>> AWT event thread to read invocation request.
>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line: 70
>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>> line: 97
>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>> line: 105
>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>> DefaultDatasetView lock.
>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>)
>>>>>>>> line: 148
>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>> CommandModule.run() line: 196
>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>> Thread.run() line: 662
>>>>>>>>
>>>>>>>>
>>>>>>>> _______________________________________________
>>>>>>>> ImageJ-devel mailing list
>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/47a34e87/attachment-0001.html>

From leek at broadinstitute.org  Wed Oct 16 14:13:57 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 16 Oct 2013 15:13:57 -0400
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
Message-ID: <CAHLFyjcOU6mmgWVrixWNjbf6U7F6=3xrOCexGKr56JBC4aCxng@mail.gmail.com>

I am guessing that it is a concurrency problem, but it might need to be
fixed by a defensive coding check for the null pointer. It looks like
someone is trying to set up the appearance of that icon and it's happening
asynchronously and by the time it's handled, the icon isn't there any more.
Can't see any refererence to the status service.


On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> Thanks. I also updated the ticket a bit a few minutes ago. In my second
> example problem (closing app with sample image open) it looks like the
> original open samples legacy command was not finishing its run. Not sure if
> this is related to your event processing changes.
>
>
> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>
>> Sorry, I missed it. I'll see if I can take a look at it,
>>
>>
>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> Lee did you see I reopened ticket #1992 (
>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>> change?
>>>
>>>
>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> Merged
>>>>
>>>>
>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> I submitted a patch to scijava-common with the changes.
>>>>>
>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> A proposed fix would be good Lee. I'd like to test the async status
>>>>>> update code for responsiveness (i.e. when opening a large image let's say).
>>>>>> Let me know when your fix is in place. Thanks.
>>>>>>
>>>>>>
>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> Thanks Barry, the email was a little rushed - finished it while
>>>>>>> going out the door. What do you think about sending the status messages
>>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>>> their batch job was running.
>>>>>>>
>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>> reject, NP.
>>>>>>>
>>>>>>> --Lee
>>>>>>>
>>>>>>>
>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> Hi Lee,
>>>>>>>>
>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We can
>>>>>>>> undo that change. I can work around the problem in another fashion if
>>>>>>>> necessary.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>
>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT
>>>>>>>>> event queue thread tries to get a lock within DefaultDatasetView.getColor
>>>>>>>>> and when DefaultStatusService.showStatus on a worker thread tries to
>>>>>>>>> publish a synchronous request for status display after taking the
>>>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>
>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a little
>>>>>>>>> drastic for DefaultDatasetView.getColor to synchronize on the view itself.
>>>>>>>>> Maybe some proxy for the color system could have a synchronizing object.
>>>>>>>>> The other candidate is DefaultEventService.showStatus which could use
>>>>>>>>> EventService.publishLater - I don't think there's much need for status
>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>
>>>>>>>>> The two stack traces:
>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>> line: 184
>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>>>> not available [native method]
>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>>>> not available [native method]
>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line:
>>>>>>>>> 1877
>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent) line:
>>>>>>>>> 274
>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 4630
>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 2099
>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 4502
>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 2099
>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>> line: 55
>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>> line: 183
>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)
>>>>>>>>> line: 210
>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 4502
>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 2099
>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>> EventFilter) line: 184
>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>> Component) line: 174
>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>
>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line: 70
>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>> line: 97
>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>> line: 105
>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>)
>>>>>>>>> line: 148
>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>> Thread.run() line: 662
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/4562fc39/attachment-0001.html>

From leek at broadinstitute.org  Wed Oct 16 14:25:46 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 16 Oct 2013 15:25:46 -0400
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
Message-ID: <CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>

I have a very simple fix in scijava-common, but it seems that the head of
the scijava-common master branch is not going to build with the head of the
imagej master branch. How should I proceed? I could branch off off
scijava-common-2.2.0 I suppose.


On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> Thanks. I also updated the ticket a bit a few minutes ago. In my second
> example problem (closing app with sample image open) it looks like the
> original open samples legacy command was not finishing its run. Not sure if
> this is related to your event processing changes.
>
>
> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>
>> Sorry, I missed it. I'll see if I can take a look at it,
>>
>>
>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> Lee did you see I reopened ticket #1992 (
>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>> change?
>>>
>>>
>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> Merged
>>>>
>>>>
>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> I submitted a patch to scijava-common with the changes.
>>>>>
>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> A proposed fix would be good Lee. I'd like to test the async status
>>>>>> update code for responsiveness (i.e. when opening a large image let's say).
>>>>>> Let me know when your fix is in place. Thanks.
>>>>>>
>>>>>>
>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> Thanks Barry, the email was a little rushed - finished it while
>>>>>>> going out the door. What do you think about sending the status messages
>>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>>> their batch job was running.
>>>>>>>
>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>> reject, NP.
>>>>>>>
>>>>>>> --Lee
>>>>>>>
>>>>>>>
>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> Hi Lee,
>>>>>>>>
>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We can
>>>>>>>> undo that change. I can work around the problem in another fashion if
>>>>>>>> necessary.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>
>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT
>>>>>>>>> event queue thread tries to get a lock within DefaultDatasetView.getColor
>>>>>>>>> and when DefaultStatusService.showStatus on a worker thread tries to
>>>>>>>>> publish a synchronous request for status display after taking the
>>>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>
>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a little
>>>>>>>>> drastic for DefaultDatasetView.getColor to synchronize on the view itself.
>>>>>>>>> Maybe some proxy for the color system could have a synchronizing object.
>>>>>>>>> The other candidate is DefaultEventService.showStatus which could use
>>>>>>>>> EventService.publishLater - I don't think there's much need for status
>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>
>>>>>>>>> The two stack traces:
>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>> line: 184
>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>>>> not available [native method]
>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line:
>>>>>>>>> not available [native method]
>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line:
>>>>>>>>> 1877
>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent) line:
>>>>>>>>> 274
>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 4630
>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 2099
>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 4502
>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 2099
>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>> line: 55
>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>> line: 183
>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)
>>>>>>>>> line: 210
>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 4502
>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>> 2099
>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>> EventFilter) line: 184
>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>> Component) line: 174
>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>
>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line: 70
>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>> line: 97
>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>> line: 105
>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>)
>>>>>>>>> line: 148
>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>> Thread.run() line: 662
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> _______________________________________________
>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/816bd180/attachment-0001.html>

From bdezonia at gmail.com  Wed Oct 16 14:45:02 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Wed, 16 Oct 2013 14:45:02 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
Message-ID: <CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>

I'm not having any problems building scijava-common master against IJ2
master.


On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:

> I have a very simple fix in scijava-common, but it seems that the head of
> the scijava-common master branch is not going to build with the head of the
> imagej master branch. How should I proceed? I could branch off off
> scijava-common-2.2.0 I suppose.
>
>
> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> Thanks. I also updated the ticket a bit a few minutes ago. In my second
>> example problem (closing app with sample image open) it looks like the
>> original open samples legacy command was not finishing its run. Not sure if
>> this is related to your event processing changes.
>>
>>
>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>
>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>
>>>
>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> Lee did you see I reopened ticket #1992 (
>>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>>> change?
>>>>
>>>>
>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> Merged
>>>>>
>>>>>
>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>> leek at broadinstitute.org> wrote:
>>>>>
>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>
>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>
>>>>>>> A proposed fix would be good Lee. I'd like to test the async status
>>>>>>> update code for responsiveness (i.e. when opening a large image let's say).
>>>>>>> Let me know when your fix is in place. Thanks.
>>>>>>>
>>>>>>>
>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>
>>>>>>>> Thanks Barry, the email was a little rushed - finished it while
>>>>>>>> going out the door. What do you think about sending the status messages
>>>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>>>> their batch job was running.
>>>>>>>>
>>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>>> reject, NP.
>>>>>>>>
>>>>>>>> --Lee
>>>>>>>>
>>>>>>>>
>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> Hi Lee,
>>>>>>>>>
>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We can
>>>>>>>>> undo that change. I can work around the problem in another fashion if
>>>>>>>>> necessary.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>
>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT
>>>>>>>>>> event queue thread tries to get a lock within DefaultDatasetView.getColor
>>>>>>>>>> and when DefaultStatusService.showStatus on a worker thread tries to
>>>>>>>>>> publish a synchronous request for status display after taking the
>>>>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>
>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a little
>>>>>>>>>> drastic for DefaultDatasetView.getColor to synchronize on the view itself.
>>>>>>>>>> Maybe some proxy for the color system could have a synchronizing object.
>>>>>>>>>> The other candidate is DefaultEventService.showStatus which could use
>>>>>>>>>> EventService.publishLater - I don't think there's much need for status
>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>
>>>>>>>>>> The two stack traces:
>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>> line: 184
>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>> line: not available [native method]
>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>> line: not available [native method]
>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object, String,
>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line:
>>>>>>>>>> 1877
>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>> line: 274
>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 4630
>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 2099
>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 2478
>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 4502
>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 2099
>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>> line: 55
>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>> line: 183
>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)
>>>>>>>>>> line: 210
>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 4502
>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 2099
>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>> 2478
>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>>> EventFilter) line: 184
>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>>> Component) line: 174
>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>
>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line: 70
>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>> line: 97
>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>> line: 105
>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>)
>>>>>>>>>> line: 148
>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> _______________________________________________
>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/efe35b44/attachment-0001.html>

From leek at broadinstitute.org  Wed Oct 16 14:46:45 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 16 Oct 2013 15:46:45 -0400
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
Message-ID: <CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>

Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT version of
scijava-common?


On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> I'm not having any problems building scijava-common master against IJ2
> master.
>
>
> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>
>> I have a very simple fix in scijava-common, but it seems that the head of
>> the scijava-common master branch is not going to build with the head of the
>> imagej master branch. How should I proceed? I could branch off off
>> scijava-common-2.2.0 I suppose.
>>
>>
>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> Thanks. I also updated the ticket a bit a few minutes ago. In my second
>>> example problem (closing app with sample image open) it looks like the
>>> original open samples legacy command was not finishing its run. Not sure if
>>> this is related to your event processing changes.
>>>
>>>
>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>>
>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> Lee did you see I reopened ticket #1992 (
>>>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>>>> change?
>>>>>
>>>>>
>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> Merged
>>>>>>
>>>>>>
>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>
>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> A proposed fix would be good Lee. I'd like to test the async status
>>>>>>>> update code for responsiveness (i.e. when opening a large image let's say).
>>>>>>>> Let me know when your fix is in place. Thanks.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>
>>>>>>>>> Thanks Barry, the email was a little rushed - finished it while
>>>>>>>>> going out the door. What do you think about sending the status messages
>>>>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>>>>> their batch job was running.
>>>>>>>>>
>>>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>>>> reject, NP.
>>>>>>>>>
>>>>>>>>> --Lee
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <bdezonia at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> Hi Lee,
>>>>>>>>>>
>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We can
>>>>>>>>>> undo that change. I can work around the problem in another fashion if
>>>>>>>>>> necessary.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>
>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT
>>>>>>>>>>> event queue thread tries to get a lock within DefaultDatasetView.getColor
>>>>>>>>>>> and when DefaultStatusService.showStatus on a worker thread tries to
>>>>>>>>>>> publish a synchronous request for status display after taking the
>>>>>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>
>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a
>>>>>>>>>>> little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>
>>>>>>>>>>> The two stack traces:
>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>> line: 184
>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent) line:
>>>>>>>>>>> 1877
>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>> line: 274
>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>> line: 4630
>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>> 2099
>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>> 2478
>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>> 4502
>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>> line: 2099
>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line: 2478
>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>> 4460
>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>> line: 55
>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>> line: 183
>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)
>>>>>>>>>>> line: 210
>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>> line: 4502
>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>> 2099
>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>> 2478
>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>>>> EventFilter) line: 184
>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>>>> Component) line: 174
>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>
>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line:
>>>>>>>>>>> 70
>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>> line: 97
>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>> line: 105
>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>)
>>>>>>>>>>> line: 148
>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> _______________________________________________
>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/32ccc6cf/attachment-0001.html>

From bdezonia at gmail.com  Wed Oct 16 14:54:21 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Wed, 16 Oct 2013 14:54:21 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
Message-ID: <CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>

In imagej/pom.xml I added:

 <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>

in the <properties> section


On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:

> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT version of
> scijava-common?
>
>
> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> I'm not having any problems building scijava-common master against IJ2
>> master.
>>
>>
>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>
>>> I have a very simple fix in scijava-common, but it seems that the head
>>> of the scijava-common master branch is not going to build with the head of
>>> the imagej master branch. How should I proceed? I could branch off off
>>> scijava-common-2.2.0 I suppose.
>>>
>>>
>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my second
>>>> example problem (closing app with sample image open) it looks like the
>>>> original open samples legacy command was not finishing its run. Not sure if
>>>> this is related to your event processing changes.
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>>>>> change?
>>>>>>
>>>>>>
>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>
>>>>>>> Merged
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>
>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>
>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> A proposed fix would be good Lee. I'd like to test the async
>>>>>>>>> status update code for responsiveness (i.e. when opening a large image
>>>>>>>>> let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>
>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it while
>>>>>>>>>> going out the door. What do you think about sending the status messages
>>>>>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>>>>>> their batch job was running.
>>>>>>>>>>
>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>>>>> reject, NP.
>>>>>>>>>>
>>>>>>>>>> --Lee
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>
>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>
>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We can
>>>>>>>>>>> undo that change. I can work around the problem in another fashion if
>>>>>>>>>>> necessary.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT
>>>>>>>>>>>> event queue thread tries to get a lock within DefaultDatasetView.getColor
>>>>>>>>>>>> and when DefaultStatusService.showStatus on a worker thread tries to
>>>>>>>>>>>> publish a synchronous request for status display after taking the
>>>>>>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>
>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a
>>>>>>>>>>>> little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>
>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>> line: 184
>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line: 94
>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>> line: 274
>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>> line: 4630
>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>> 2099
>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>> 2478
>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>> 4502
>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>> line: 2099
>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>> 2478
>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>> 4460
>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>> line: 55
>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>> line: 183
>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)
>>>>>>>>>>>> line: 210
>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>> line: 4502
>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>> 2099
>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>> 2478
>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line: 4460
>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>>>>> EventFilter) line: 184
>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>>>>> Component) line: 174
>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>
>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>) line:
>>>>>>>>>>>> 70
>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>> line: 97
>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>> line: 105
>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>)
>>>>>>>>>>>> line: 148
>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/92b098ca/attachment-0001.html>

From leek at broadinstitute.org  Wed Oct 16 15:04:01 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 16 Oct 2013 16:04:01 -0400
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
Message-ID: <CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>

Maybe I wasn't patient enough about refreshing everything.... will submit
patch momentarily, but have only tested it on a modified version of the
scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.


On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> In imagej/pom.xml I added:
>
>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>
> in the <properties> section
>
>
> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>
>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT version of
>> scijava-common?
>>
>>
>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> I'm not having any problems building scijava-common master against IJ2
>>> master.
>>>
>>>
>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>>
>>>> I have a very simple fix in scijava-common, but it seems that the head
>>>> of the scijava-common master branch is not going to build with the head of
>>>> the imagej master branch. How should I proceed? I could branch off off
>>>> scijava-common-2.2.0 I suppose.
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my
>>>>> second example problem (closing app with sample image open) it looks like
>>>>> the original open samples legacy command was not finishing its run. Not
>>>>> sure if this is related to your event processing changes.
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>> leek at broadinstitute.org> wrote:
>>>>>
>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>
>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>>>>>> change?
>>>>>>>
>>>>>>>
>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> Merged
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>
>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>
>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <bdezonia at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the async
>>>>>>>>>> status update code for responsiveness (i.e. when opening a large image
>>>>>>>>>> let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>
>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it while
>>>>>>>>>>> going out the door. What do you think about sending the status messages
>>>>>>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>>>>>>> their batch job was running.
>>>>>>>>>>>
>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>>>>>> reject, NP.
>>>>>>>>>>>
>>>>>>>>>>> --Lee
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>
>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We can
>>>>>>>>>>>> undo that change. I can work around the problem in another fashion if
>>>>>>>>>>>> necessary.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the AWT
>>>>>>>>>>>>> event queue thread tries to get a lock within DefaultDatasetView.getColor
>>>>>>>>>>>>> and when DefaultStatusService.showStatus on a worker thread tries to
>>>>>>>>>>>>> publish a synchronous request for status display after taking the
>>>>>>>>>>>>> DefaultDatasetView's lock in DefaultDatasetView.rebuild. It happens
>>>>>>>>>>>>> periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>
>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a
>>>>>>>>>>>>> little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>
>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>> 25
>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>> 25
>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List, List,
>>>>>>>>>>>>> StackTraceElement[]) line: 195
>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line:
>>>>>>>>>>>>> 94
>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>>> 2478
>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 409
>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>>> 2478
>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>> 4460
>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component, AWTEvent)
>>>>>>>>>>>>> line: 210
>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>>> 2478
>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>>>>>> EventFilter) line: 184
>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>>>>>> Component) line: 174
>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>
>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay, List<Overlay>)
>>>>>>>>>>>>> line: 148
>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/519754d1/attachment-0001.html>

From bdezonia at gmail.com  Wed Oct 16 15:25:47 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Wed, 16 Oct 2013 15:25:47 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
	<CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
Message-ID: <CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>

Lee,

Using your patch I have an error. Open program and exit and I get this:

java.lang.IllegalStateException: Context already injected:
org.scijava.AbstractContextual#context

at org.scijava.Context.inject(Context.java:281)

at org.scijava.AbstractContextual.setContext(AbstractContextual.java:66)

at org.scijava.event.DefaultEventService.publishLater(
DefaultEventService.java:100)

at org.scijava.app.DefaultStatusService.publish(
DefaultStatusService.java:123)

at org.scijava.app.DefaultStatusService.showStatus(
DefaultStatusService.java:76)

at imagej.module.ModuleRunner.run(ModuleRunner.java:155)

at imagej.module.ModuleRunner.call(ModuleRunner.java:129)

at imagej.module.ModuleRunner.call(ModuleRunner.java:1)

at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)

at java.util.concurrent.FutureTask.run(FutureTask.java:138)

at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(
ThreadPoolExecutor.java:895)

at java.util.concurrent.ThreadPoolExecutor$Worker.run(
ThreadPoolExecutor.java:918)

at java.lang.Thread.run(Thread.java:680)


Plus said patch will not affect the open sample image and then exit
crashes. But that may need to be filed as a separate bug.


On Wed, Oct 16, 2013 at 3:04 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:

> Maybe I wasn't patient enough about refreshing everything.... will submit
> patch momentarily, but have only tested it on a modified version of the
> scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.
>
>
> On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> In imagej/pom.xml I added:
>>
>>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>>
>> in the <properties> section
>>
>>
>> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>
>>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT version of
>>> scijava-common?
>>>
>>>
>>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> I'm not having any problems building scijava-common master against IJ2
>>>> master.
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> I have a very simple fix in scijava-common, but it seems that the head
>>>>> of the scijava-common master branch is not going to build with the head of
>>>>> the imagej master branch. How should I proceed? I could branch off off
>>>>> scijava-common-2.2.0 I suppose.
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my
>>>>>> second example problem (closing app with sample image open) it looks like
>>>>>> the original open samples legacy command was not finishing its run. Not
>>>>>> sure if this is related to your event processing changes.
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>>>>>>> change?
>>>>>>>>
>>>>>>>>
>>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> Merged
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>
>>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>>
>>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <
>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>
>>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the async
>>>>>>>>>>> status update code for responsiveness (i.e. when opening a large image
>>>>>>>>>>> let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it while
>>>>>>>>>>>> going out the door. What do you think about sending the status messages
>>>>>>>>>>>> asynchronously? It looks to me like the AWT event processing will display
>>>>>>>>>>>> them in the order received, so that makes sure that a "Finished" message
>>>>>>>>>>>> will be seen after a "% complete" message. Status reporting is such a
>>>>>>>>>>>> common thing - it'd be a shame for all the worker threads to stall because
>>>>>>>>>>>> a user was using ImageJ to watch a movie of a cat falling off a TV while
>>>>>>>>>>>> their batch job was running.
>>>>>>>>>>>>
>>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>>>>>>> reject, NP.
>>>>>>>>>>>>
>>>>>>>>>>>> --Lee
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>>
>>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We
>>>>>>>>>>>>> can undo that change. I can work around the problem in another fashion if
>>>>>>>>>>>>> necessary.
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the
>>>>>>>>>>>>>> AWT event queue thread tries to get a lock within
>>>>>>>>>>>>>> DefaultDatasetView.getColor and when DefaultStatusService.showStatus on a
>>>>>>>>>>>>>> worker thread tries to publish a synchronous request for status display
>>>>>>>>>>>>>> after taking the DefaultDatasetView's lock in DefaultDatasetView.rebuild.
>>>>>>>>>>>>>> It happens periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a
>>>>>>>>>>>>>> little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>>> 25
>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line: 129
>>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>>> 25
>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line: 1
>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent) line:
>>>>>>>>>>>>>> 94
>>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>> 409
>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>>>> 2478
>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component,
>>>>>>>>>>>>>> AWTEvent) line: 210
>>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>>>>>>> EventFilter) line: 184
>>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>>>>>>> Component) line: 174
>>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay,
>>>>>>>>>>>>>> List<Overlay>) line: 148
>>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/b2257fe8/attachment-0001.html>

From leek at broadinstitute.org  Wed Oct 16 15:43:00 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Wed, 16 Oct 2013 16:43:00 -0400
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
	<CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
	<CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>
Message-ID: <CAHLFyjeAGwQTdacvgRPBddwYxvPtfcEv=1TZf3AKOuAyc5SqEA@mail.gmail.com>

Strange, I've cherrypicked the patch to my master branch of scijava-common
and have successfully run it against the master branch of imagej and I
don't see your error message when I close.

The patch is general and solves the case where you open a sample image and
close - both cases catch the error. I could implement Curtis's suggestion
and mark the status service as closed after dispatch - that's probably the
correct way to do it, but this is pretty robust and does something useful
with status messages sent during shutdown.


On Wed, Oct 16, 2013 at 4:25 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> Lee,
>
> Using your patch I have an error. Open program and exit and I get this:
>
> java.lang.IllegalStateException: Context already injected:
> org.scijava.AbstractContextual#context
>
> at org.scijava.Context.inject(Context.java:281)
>
> at org.scijava.AbstractContextual.setContext(AbstractContextual.java:66)
>
> at org.scijava.event.DefaultEventService.publishLater(
> DefaultEventService.java:100)
>
> at org.scijava.app.DefaultStatusService.publish(
> DefaultStatusService.java:123)
>
> at org.scijava.app.DefaultStatusService.showStatus(
> DefaultStatusService.java:76)
>
> at imagej.module.ModuleRunner.run(ModuleRunner.java:155)
>
> at imagej.module.ModuleRunner.call(ModuleRunner.java:129)
>
> at imagej.module.ModuleRunner.call(ModuleRunner.java:1)
>
> at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>
> at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>
> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(
> ThreadPoolExecutor.java:895)
>
> at java.util.concurrent.ThreadPoolExecutor$Worker.run(
> ThreadPoolExecutor.java:918)
>
> at java.lang.Thread.run(Thread.java:680)
>
>
> Plus said patch will not affect the open sample image and then exit
> crashes. But that may need to be filed as a separate bug.
>
>
> On Wed, Oct 16, 2013 at 3:04 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>
>> Maybe I wasn't patient enough about refreshing everything.... will submit
>> patch momentarily, but have only tested it on a modified version of the
>> scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.
>>
>>
>> On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> In imagej/pom.xml I added:
>>>
>>>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>>>
>>> in the <properties> section
>>>
>>>
>>> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>>
>>>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT version
>>>> of scijava-common?
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> I'm not having any problems building scijava-common master against IJ2
>>>>> master.
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <
>>>>> leek at broadinstitute.org> wrote:
>>>>>
>>>>>> I have a very simple fix in scijava-common, but it seems that the
>>>>>> head of the scijava-common master branch is not going to build with the
>>>>>> head of the imagej master branch. How should I proceed? I could branch off
>>>>>> off scijava-common-2.2.0 I suppose.
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>
>>>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my
>>>>>>> second example problem (closing app with sample image open) it looks like
>>>>>>> the original open samples legacy command was not finishing its run. Not
>>>>>>> sure if this is related to your event processing changes.
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>
>>>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this code
>>>>>>>>> change?
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> Merged
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>
>>>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>>>
>>>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <
>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the async
>>>>>>>>>>>> status update code for responsiveness (i.e. when opening a large image
>>>>>>>>>>>> let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it
>>>>>>>>>>>>> while going out the door. What do you think about sending the status
>>>>>>>>>>>>> messages asynchronously? It looks to me like the AWT event processing will
>>>>>>>>>>>>> display them in the order received, so that makes sure that a "Finished"
>>>>>>>>>>>>> message will be seen after a "% complete" message. Status reporting is such
>>>>>>>>>>>>> a common thing - it'd be a shame for all the worker threads to stall
>>>>>>>>>>>>> because a user was using ImageJ to watch a movie of a cat falling off a TV
>>>>>>>>>>>>> while their batch job was running.
>>>>>>>>>>>>>
>>>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for asynch
>>>>>>>>>>>>> reporting and maybe Curtis or you could look it over and accept it. If you
>>>>>>>>>>>>> reject, NP.
>>>>>>>>>>>>>
>>>>>>>>>>>>> --Lee
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We
>>>>>>>>>>>>>> can undo that change. I can work around the problem in another fashion if
>>>>>>>>>>>>>> necessary.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the
>>>>>>>>>>>>>>> AWT event queue thread tries to get a lock within
>>>>>>>>>>>>>>> DefaultDatasetView.getColor and when DefaultStatusService.showStatus on a
>>>>>>>>>>>>>>> worker thread tries to publish a synchronous request for status display
>>>>>>>>>>>>>>> after taking the DefaultDatasetView's lock in DefaultDatasetView.rebuild.
>>>>>>>>>>>>>>> It happens periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a
>>>>>>>>>>>>>>> little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line:
>>>>>>>>>>>>>>> 1
>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line:
>>>>>>>>>>>>>>> 129
>>>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object, Object[])
>>>>>>>>>>>>>>> line: not available [native method]
>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line: 282
>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object) line:
>>>>>>>>>>>>>>> 1
>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent)
>>>>>>>>>>>>>>> line: 94
>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>> 409
>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent) line:
>>>>>>>>>>>>>>> 2478
>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component,
>>>>>>>>>>>>>>> AWTEvent) line: 210
>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line: 286
>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>>>>>>>> EventFilter) line: 184
>>>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int, Conditional,
>>>>>>>>>>>>>>> Component) line: 174
>>>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay,
>>>>>>>>>>>>>>> List<Overlay>) line: 148
>>>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/bf2dcbbf/attachment-0001.html>

From ctrueden at wisc.edu  Wed Oct 16 15:53:10 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 16 Oct 2013 15:53:10 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAHLFyjeAGwQTdacvgRPBddwYxvPtfcEv=1TZf3AKOuAyc5SqEA@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
	<CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
	<CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>
	<CAHLFyjeAGwQTdacvgRPBddwYxvPtfcEv=1TZf3AKOuAyc5SqEA@mail.gmail.com>
Message-ID: <CADN69ymJKKkdCW6sagUrYC1NbmWQDUGffzMWSbS5=2aykBS-Pw@mail.gmail.com>

> I could implement Curtis's suggestion and mark the status service as
> closed after dispatch

Well, intuitively, the EventService, StatusService, ThreadService, etc.,
once dispose() is called on them, shouldn't be hanging around anywhere
else. That is, any services that use them should have already been disposed
too, and no longer trying to publish anything. So something seems fishy to
me here. But I admit I have spent zero time looking into it.

-Curtis


On Wed, Oct 16, 2013 at 3:43 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:

> Strange, I've cherrypicked the patch to my master branch of scijava-common
> and have successfully run it against the master branch of imagej and I
> don't see your error message when I close.
>
> The patch is general and solves the case where you open a sample image and
> close - both cases catch the error. I could implement Curtis's suggestion
> and mark the status service as closed after dispatch - that's probably the
> correct way to do it, but this is pretty robust and does something useful
> with status messages sent during shutdown.
>
>
> On Wed, Oct 16, 2013 at 4:25 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> Lee,
>>
>> Using your patch I have an error. Open program and exit and I get this:
>>
>> java.lang.IllegalStateException: Context already injected:
>> org.scijava.AbstractContextual#context
>>
>> at org.scijava.Context.inject(Context.java:281)
>>
>> at org.scijava.AbstractContextual.setContext(AbstractContextual.java:66)
>>
>> at org.scijava.event.DefaultEventService.publishLater(
>> DefaultEventService.java:100)
>>
>> at org.scijava.app.DefaultStatusService.publish(
>> DefaultStatusService.java:123)
>>
>> at org.scijava.app.DefaultStatusService.showStatus(
>> DefaultStatusService.java:76)
>>
>> at imagej.module.ModuleRunner.run(ModuleRunner.java:155)
>>
>> at imagej.module.ModuleRunner.call(ModuleRunner.java:129)
>>
>> at imagej.module.ModuleRunner.call(ModuleRunner.java:1)
>>
>> at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>
>> at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>
>> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(
>> ThreadPoolExecutor.java:895)
>>
>> at java.util.concurrent.ThreadPoolExecutor$Worker.run(
>> ThreadPoolExecutor.java:918)
>>
>> at java.lang.Thread.run(Thread.java:680)
>>
>>
>> Plus said patch will not affect the open sample image and then exit
>> crashes. But that may need to be filed as a separate bug.
>>
>>
>> On Wed, Oct 16, 2013 at 3:04 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>
>>> Maybe I wasn't patient enough about refreshing everything.... will
>>> submit patch momentarily, but have only tested it on a modified version of
>>> the scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.
>>>
>>>
>>> On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> In imagej/pom.xml I added:
>>>>
>>>>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>>>>
>>>> in the <properties> section
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT version
>>>>> of scijava-common?
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> I'm not having any problems building scijava-common master against
>>>>>> IJ2 master.
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> I have a very simple fix in scijava-common, but it seems that the
>>>>>>> head of the scijava-common master branch is not going to build with the
>>>>>>> head of the imagej master branch. How should I proceed? I could branch off
>>>>>>> off scijava-common-2.2.0 I suppose.
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my
>>>>>>>> second example problem (closing app with sample image open) it looks like
>>>>>>>> the original open samples legacy command was not finishing its run. Not
>>>>>>>> sure if this is related to your event processing changes.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>
>>>>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <bdezonia at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this
>>>>>>>>>> code change?
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <
>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>
>>>>>>>>>>> Merged
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>>>>
>>>>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <
>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the async
>>>>>>>>>>>>> status update code for responsiveness (i.e. when opening a large image
>>>>>>>>>>>>> let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it
>>>>>>>>>>>>>> while going out the door. What do you think about sending the status
>>>>>>>>>>>>>> messages asynchronously? It looks to me like the AWT event processing will
>>>>>>>>>>>>>> display them in the order received, so that makes sure that a "Finished"
>>>>>>>>>>>>>> message will be seen after a "% complete" message. Status reporting is such
>>>>>>>>>>>>>> a common thing - it'd be a shame for all the worker threads to stall
>>>>>>>>>>>>>> because a user was using ImageJ to watch a movie of a cat falling off a TV
>>>>>>>>>>>>>> while their batch job was running.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for
>>>>>>>>>>>>>> asynch reporting and maybe Curtis or you could look it over and accept it.
>>>>>>>>>>>>>> If you reject, NP.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> --Lee
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We
>>>>>>>>>>>>>>> can undo that change. I can work around the problem in another fashion if
>>>>>>>>>>>>>>> necessary.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the
>>>>>>>>>>>>>>>> AWT event queue thread tries to get a lock within
>>>>>>>>>>>>>>>> DefaultDatasetView.getColor and when DefaultStatusService.showStatus on a
>>>>>>>>>>>>>>>> worker thread tries to publish a synchronous request for status display
>>>>>>>>>>>>>>>> after taking the DefaultDatasetView's lock in DefaultDatasetView.rebuild.
>>>>>>>>>>>>>>>> It happens periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a
>>>>>>>>>>>>>>>> little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line:
>>>>>>>>>>>>>>>> 282
>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line:
>>>>>>>>>>>>>>>> 129
>>>>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line:
>>>>>>>>>>>>>>>> 282
>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object, String,
>>>>>>>>>>>>>>>> Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent)
>>>>>>>>>>>>>>>> line: 94
>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line: 1823
>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>>> 409
>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component,
>>>>>>>>>>>>>>>> AWTEvent) line: 210
>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>>> 286
>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>>> 4460
>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int, Conditional,
>>>>>>>>>>>>>>>> EventFilter) line: 184
>>>>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int,
>>>>>>>>>>>>>>>> Conditional, Component) line: 174
>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line: 169
>>>>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay,
>>>>>>>>>>>>>>>> List<Overlay>) line: 148
>>>>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131016/90a0ec32/attachment-0001.html>

From Johannes.Schindelin at gmx.de  Wed Oct 16 19:28:47 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 17 Oct 2013 02:28:47 +0200 (CEST)
Subject: [ImageJ-devel] Avian VM and Bio-Formats
Message-ID: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>

Hi Ullrich,

a little background information for everybody else: Ullrich is the
inventor and maintainer of VIGRA, an incredibly powerful C++ library to
process and analyze images. Its design was the most important source of
inspiration for ImgLib2. As a consequence, I was really delighted to meet
Ullrich at the EuBIAS meeting in Barcelona last week. Among other things,
we talked extensively about ways to interoperate between ImgLib2 and
VIGRA, and the lack of support in VIGRA to read file formats via the
Bio-Formats library.

Also at that meeting, I got into contact with the OpenMole project, and in
particular with Mark Hammons who not only explained patiently the benefits
of the Scala language to me, but also pointed out the existence of the
Avian VM, a small, embeddable, BSD-licensed Java Virtual Machine written
in C++, with a tiny Just-In-Time compiler, just enough to make it a
practical choice for running limited Java inside a C++ program/library:
http://oss.readytalk.com/avian/

It is actually very, very, *very* limited, as I found out when I tried to
get it to run the bfconvert tool of Bio-Formats.

But I did get it to run bfconvert. To be precise, in my hands, the 5MB
executable compiled from my fork of Avian was able to run my
(minimally-diverging) Bio-Formats v4.4.8 fork's
loci.formats.tools.ImageConverter class to convert Fiji's icon.png (my
standard example) to a .tiff file (although the colors are off, but
running the same example with plain Java results in a byte-identical
file).

Although it is too early for proper benchmarking, things seem to be
comparable between Java and Avian: while Java is slightly faster in what
time(1) calls "real" time (~0.54s vs ~0.72s), in terms of "user" time
roles are reversed (~0.70s vs ~0.63s). Roughly the same holds true for the
dynamic Avian executable (which is only 11K and links to Avian's libjvm.so
weighing in with a whopping 1.2M). The major benefit will most likely be
space: linking to libjvm.so should be enough, the standard Java classes
are included therein. So you can get Java support in VIGRA (or any other
C++ project) by adding a library that is slightly larger than one
megabyte.

Now to some more detailed explanations about the challenges I faced, for
the technically-inclined.

On the Bio-Formats side, there are two major and one minor (and one micro)
issue:

- to enable logging, Bio-Formats uses a cute hack called
  ReflectedUniverse, which is basically a scripting language for Java
  itself. However, it uses regular expressions, something that Avian's
  class library does not yet support.

- Bio-Formats uses a concurrent hashmap in loci.common.Location.
  Concurrency (JSR-166) is not supported by Avian's class library yet.

- in loci.formats.gui.LegacyQTTools, the value of the java.library.path
  property is used without checking whether the property is null (unset).

- some debug logging in Bio-Formats uses String.format() (not yet
  supported by Avian's class library).

All of these issues could be worked around in the code calling
Bio-Formats: there is no need to use the ImageConverter class (which
enables the logging), the concurrent hashmap could be faked by extending
the non-concurrent hashmap (and just not bothering with the concurrency
because we will most likely instantiate one VM per Bio-Formats call), the
java.library.path property could be initialized to a dummy value and the
logging could be switched off completely.

On the Avian side, I am happy to report that I only had to extend the
class library (apart from one bug fix that I will contribute upstream
later this week). In particular, I had to

- make RandomAccessFile support writing

- provide three dummy AWT classes because Bio-Formats actually links to
  them, but does not use them by default

- provide a couple of interfaces and exceptions that were not yet included
  in Avian

- implement a minimal java.io.DataOutputStream

- provide a FileChannel for RandomAccessFiles (i.e. implement getChannel)

- implement java.lang.Boolean's parse(String) method

- implement java.lang.Character's isISOControl(char) method

- implement fake byte order methods for ByteBuffers (they are hardcoded to
  big endian, but that is what Bio-Formats required in my test)

- provide a dummy SimpleDateFormat which actually does not work, but does
  not need to

- add toString(long[]) to java.util.Arrays

- teach Avian's pseudo regular expressions about "\\", i.e. the backslash

For the moment, all of these changes are contained in hodge podge
work-in-progress commits which I will clean up over the next few days. You
can see them here (the linked pages will update whenever I get around to
clean up the commits):

https://github.com/dscho/avian/compare/bio-formats
https://github.com/dscho/bioformats/compare/v4.4.8...avian

Since VIGRA and ImgLib2 share design concepts, and since SCIFIO supports
ImgLib2 natively, I think that my plan to extend the test to SCIFIO after
cleaning up my Avian fork is sound.

Once that is done, I will add unit tests that our trusty Jenkins will run
whenever SCIFIO (or Avian) changes, to ensure that things continue to
work. These unit tests will be extended as needed, e.g. when someone finds
out that an important use case requires more changes in Avian, still.

This way to call Bio-Formats and SCIFIO could become the default C++ entry
point into those libraries.

Summary: I showed that Bio-Formats/SCIFIO support for VIGRA and other C++
libraries is feasible through the BSD-licensed embeddable Java virtual
machine "Avian". I am confident that I can clean up my patches this week
still, to be contributed to the Avian project.

Ciao,
Johannes


From Johannes.Schindelin at gmx.de  Thu Oct 17 12:25:58 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 17 Oct 2013 19:25:58 +0200 (CEST)
Subject: [ImageJ-devel] [VIGRA] Avian VM and Bio-Formats
In-Reply-To: <52600288.1050509@iwr.uni-heidelberg.de>
References: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
	<52600288.1050509@iwr.uni-heidelberg.de>
Message-ID: <alpine.DEB.1.00.1310171922080.1191@s15462909.onlinehome-server.info>

Hi Ulli,

On Thu, 17 Oct 2013, Ullrich Koethe wrote:

> thank you for this very encouraging effort! Do I understand correctly
> that you achieved the following:
> 
> * embed Avian in a C++ program
> * call BioFormats via the embedded Avian to convert a file into another
> format

Yes, that is essentially what I did. Except that the C++ program was
Avian's default one.

> but you didn't yet try to use Avian/BioFormats to read the data directly
> into a C++ data structure (such as vigra::MultiArray)? Is this latter
> step easy to achieve using standard JNI tools once the embedding/running
> of BioFormats works?

That would be the next step after cleaning up my Avian patches and trying
to read files via SCIFIO.

Once I can call a Java class that uses SCIFIO to read a file, it should be
very, very easy to access the read data via C++. Of course, the ultimate
goal would be to let SCIFIO read the data *directly* into VIGRA's data
structures, something I hope ImgLib2 makes easy: I would simply wrap the
C++ arrays in an ImgLib2-compatible container and ask SCIFIO to use that
as the destination.

Step by step ;-)
Johannes


From bdezonia at gmail.com  Thu Oct 17 14:00:09 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Thu, 17 Oct 2013 14:00:09 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CADN69ymJKKkdCW6sagUrYC1NbmWQDUGffzMWSbS5=2aykBS-Pw@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
	<CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
	<CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>
	<CAHLFyjeAGwQTdacvgRPBddwYxvPtfcEv=1TZf3AKOuAyc5SqEA@mail.gmail.com>
	<CADN69ymJKKkdCW6sagUrYC1NbmWQDUGffzMWSbS5=2aykBS-Pw@mail.gmail.com>
Message-ID: <CAKcvfuS0nASJtfuJ82TJyV6NOVq7Sr5DxfK82kZVhSVQeaY=Yw@mail.gmail.com>

I think that we should not need to make these changes. Curtis is right in
that the services should shut down in an orderly fashion. I think the real
problem is the services aren't shutting down in an expected order. One can
print which services are getting disposed in what order and can see that
they are nowhere near to the original initialization order. The
ThreadService is terminating very early and then active threads associated
with its executor become invalid. The ThreadService should be one of the
last things to dispose but it is one of the first.


On Wed, Oct 16, 2013 at 3:53 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> > I could implement Curtis's suggestion and mark the status service as
> > closed after dispatch
>
> Well, intuitively, the EventService, StatusService, ThreadService, etc.,
> once dispose() is called on them, shouldn't be hanging around anywhere
> else. That is, any services that use them should have already been disposed
> too, and no longer trying to publish anything. So something seems fishy to
> me here. But I admit I have spent zero time looking into it.
>
> -Curtis
>
>
> On Wed, Oct 16, 2013 at 3:43 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>
>> Strange, I've cherrypicked the patch to my master branch of
>> scijava-common and have successfully run it against the master branch of
>> imagej and I don't see your error message when I close.
>>
>> The patch is general and solves the case where you open a sample image
>> and close - both cases catch the error. I could implement Curtis's
>> suggestion and mark the status service as closed after dispatch - that's
>> probably the correct way to do it, but this is pretty robust and does
>> something useful with status messages sent during shutdown.
>>
>>
>> On Wed, Oct 16, 2013 at 4:25 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> Lee,
>>>
>>> Using your patch I have an error. Open program and exit and I get this:
>>>
>>> java.lang.IllegalStateException: Context already injected:
>>> org.scijava.AbstractContextual#context
>>>
>>> at org.scijava.Context.inject(Context.java:281)
>>>
>>> at org.scijava.AbstractContextual.setContext(AbstractContextual.java:66)
>>>
>>> at org.scijava.event.DefaultEventService.publishLater(
>>> DefaultEventService.java:100)
>>>
>>> at org.scijava.app.DefaultStatusService.publish(
>>> DefaultStatusService.java:123)
>>>
>>> at org.scijava.app.DefaultStatusService.showStatus(
>>> DefaultStatusService.java:76)
>>>
>>> at imagej.module.ModuleRunner.run(ModuleRunner.java:155)
>>>
>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:129)
>>>
>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:1)
>>>
>>> at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>
>>> at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>
>>> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(
>>> ThreadPoolExecutor.java:895)
>>>
>>> at java.util.concurrent.ThreadPoolExecutor$Worker.run(
>>> ThreadPoolExecutor.java:918)
>>>
>>> at java.lang.Thread.run(Thread.java:680)
>>>
>>>
>>> Plus said patch will not affect the open sample image and then exit
>>> crashes. But that may need to be filed as a separate bug.
>>>
>>>
>>> On Wed, Oct 16, 2013 at 3:04 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>>
>>>> Maybe I wasn't patient enough about refreshing everything.... will
>>>> submit patch momentarily, but have only tested it on a modified version of
>>>> the scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> In imagej/pom.xml I added:
>>>>>
>>>>>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>>>>>
>>>>> in the <properties> section
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <
>>>>> leek at broadinstitute.org> wrote:
>>>>>
>>>>>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT version
>>>>>> of scijava-common?
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>
>>>>>>> I'm not having any problems building scijava-common master against
>>>>>>> IJ2 master.
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <
>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>
>>>>>>>> I have a very simple fix in scijava-common, but it seems that the
>>>>>>>> head of the scijava-common master branch is not going to build with the
>>>>>>>> head of the imagej master branch. How should I proceed? I could branch off
>>>>>>>> off scijava-common-2.2.0 I suppose.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my
>>>>>>>>> second example problem (closing app with sample image open) it looks like
>>>>>>>>> the original open samples legacy command was not finishing its run. Not
>>>>>>>>> sure if this is related to your event processing changes.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>
>>>>>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <
>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>
>>>>>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this
>>>>>>>>>>> code change?
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <
>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> Merged
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>>>>>
>>>>>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <
>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the async
>>>>>>>>>>>>>> status update code for responsiveness (i.e. when opening a large image
>>>>>>>>>>>>>> let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it
>>>>>>>>>>>>>>> while going out the door. What do you think about sending the status
>>>>>>>>>>>>>>> messages asynchronously? It looks to me like the AWT event processing will
>>>>>>>>>>>>>>> display them in the order received, so that makes sure that a "Finished"
>>>>>>>>>>>>>>> message will be seen after a "% complete" message. Status reporting is such
>>>>>>>>>>>>>>> a common thing - it'd be a shame for all the worker threads to stall
>>>>>>>>>>>>>>> because a user was using ImageJ to watch a movie of a cat falling off a TV
>>>>>>>>>>>>>>> while their batch job was running.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for
>>>>>>>>>>>>>>> asynch reporting and maybe Curtis or you could look it over and accept it.
>>>>>>>>>>>>>>> If you reject, NP.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> --Lee
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug. We
>>>>>>>>>>>>>>>> can undo that change. I can work around the problem in another fashion if
>>>>>>>>>>>>>>>> necessary.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when the
>>>>>>>>>>>>>>>>> AWT event queue thread tries to get a lock within
>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor and when DefaultStatusService.showStatus on a
>>>>>>>>>>>>>>>>> worker thread tries to publish a synchronous request for status display
>>>>>>>>>>>>>>>>> after taking the DefaultDatasetView's lock in DefaultDatasetView.rebuild.
>>>>>>>>>>>>>>>>> It happens periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's a
>>>>>>>>>>>>>>>>> little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line:
>>>>>>>>>>>>>>>>> 282
>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>) line:
>>>>>>>>>>>>>>>>> 129
>>>>>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line:
>>>>>>>>>>>>>>>>> 282
>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent)
>>>>>>>>>>>>>>>>> line: 94
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line:
>>>>>>>>>>>>>>>>> 1823
>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>> line: 409
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component,
>>>>>>>>>>>>>>>>> AWTEvent) line: 210
>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>>>> 286
>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int,
>>>>>>>>>>>>>>>>> Conditional, EventFilter) line: 184
>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int,
>>>>>>>>>>>>>>>>> Conditional, Component) line: 174
>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line:
>>>>>>>>>>>>>>>>> 169
>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay,
>>>>>>>>>>>>>>>>> List<Overlay>) line: 148
>>>>>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131017/fc7aee8b/attachment-0001.html>

From bdezonia at gmail.com  Thu Oct 17 14:03:39 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Thu, 17 Oct 2013 14:03:39 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuS0nASJtfuJ82TJyV6NOVq7Sr5DxfK82kZVhSVQeaY=Yw@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
	<CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
	<CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>
	<CAHLFyjeAGwQTdacvgRPBddwYxvPtfcEv=1TZf3AKOuAyc5SqEA@mail.gmail.com>
	<CADN69ymJKKkdCW6sagUrYC1NbmWQDUGffzMWSbS5=2aykBS-Pw@mail.gmail.com>
	<CAKcvfuS0nASJtfuJ82TJyV6NOVq7Sr5DxfK82kZVhSVQeaY=Yw@mail.gmail.com>
Message-ID: <CAKcvfuTHVdnT4vG=OD3wCdeOL+4b6+nC7KVyJ=c-7o32dimzyQ@mail.gmail.com>

Still I guess that the thread running the QuitProgram plugin will always
still be running while QuitProgram is disposing the context. So in addition
maybe the context dispose code should be like a time bomb that is set, the
QuitProgram plugin completes, and then the bomb goes off shutting all
services down.


On Thu, Oct 17, 2013 at 2:00 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> I think that we should not need to make these changes. Curtis is right in
> that the services should shut down in an orderly fashion. I think the real
> problem is the services aren't shutting down in an expected order. One can
> print which services are getting disposed in what order and can see that
> they are nowhere near to the original initialization order. The
> ThreadService is terminating very early and then active threads associated
> with its executor become invalid. The ThreadService should be one of the
> last things to dispose but it is one of the first.
>
>
> On Wed, Oct 16, 2013 at 3:53 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>> > I could implement Curtis's suggestion and mark the status service as
>> > closed after dispatch
>>
>> Well, intuitively, the EventService, StatusService, ThreadService, etc.,
>> once dispose() is called on them, shouldn't be hanging around anywhere
>> else. That is, any services that use them should have already been disposed
>> too, and no longer trying to publish anything. So something seems fishy to
>> me here. But I admit I have spent zero time looking into it.
>>
>> -Curtis
>>
>>
>> On Wed, Oct 16, 2013 at 3:43 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>
>>> Strange, I've cherrypicked the patch to my master branch of
>>> scijava-common and have successfully run it against the master branch of
>>> imagej and I don't see your error message when I close.
>>>
>>> The patch is general and solves the case where you open a sample image
>>> and close - both cases catch the error. I could implement Curtis's
>>> suggestion and mark the status service as closed after dispatch - that's
>>> probably the correct way to do it, but this is pretty robust and does
>>> something useful with status messages sent during shutdown.
>>>
>>>
>>> On Wed, Oct 16, 2013 at 4:25 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>
>>>> Lee,
>>>>
>>>> Using your patch I have an error. Open program and exit and I get this:
>>>>
>>>> java.lang.IllegalStateException: Context already injected:
>>>> org.scijava.AbstractContextual#context
>>>>
>>>> at org.scijava.Context.inject(Context.java:281)
>>>>
>>>> at org.scijava.AbstractContextual.setContext(AbstractContextual.java:66
>>>> )
>>>>
>>>> at org.scijava.event.DefaultEventService.publishLater(
>>>> DefaultEventService.java:100)
>>>>
>>>> at org.scijava.app.DefaultStatusService.publish(
>>>> DefaultStatusService.java:123)
>>>>
>>>> at org.scijava.app.DefaultStatusService.showStatus(
>>>> DefaultStatusService.java:76)
>>>>
>>>> at imagej.module.ModuleRunner.run(ModuleRunner.java:155)
>>>>
>>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:129)
>>>>
>>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:1)
>>>>
>>>> at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>>
>>>> at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>>
>>>> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(
>>>> ThreadPoolExecutor.java:895)
>>>>
>>>> at java.util.concurrent.ThreadPoolExecutor$Worker.run(
>>>> ThreadPoolExecutor.java:918)
>>>>
>>>> at java.lang.Thread.run(Thread.java:680)
>>>>
>>>>
>>>> Plus said patch will not affect the open sample image and then exit
>>>> crashes. But that may need to be filed as a separate bug.
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 3:04 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> Maybe I wasn't patient enough about refreshing everything.... will
>>>>> submit patch momentarily, but have only tested it on a modified version of
>>>>> the scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> In imagej/pom.xml I added:
>>>>>>
>>>>>>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>>>>>>
>>>>>> in the <properties> section
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT
>>>>>>> version of scijava-common?
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> I'm not having any problems building scijava-common master against
>>>>>>>> IJ2 master.
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <
>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>
>>>>>>>>> I have a very simple fix in scijava-common, but it seems that the
>>>>>>>>> head of the scijava-common master branch is not going to build with the
>>>>>>>>> head of the imagej master branch. How should I proceed? I could branch off
>>>>>>>>> off scijava-common-2.2.0 I suppose.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <bdezonia at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my
>>>>>>>>>> second example problem (closing app with sample image open) it looks like
>>>>>>>>>> the original open samples legacy command was not finishing its run. Not
>>>>>>>>>> sure if this is related to your event processing changes.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>
>>>>>>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <
>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this
>>>>>>>>>>>> code change?
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <
>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> Merged
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <
>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the async
>>>>>>>>>>>>>>> status update code for responsiveness (i.e. when opening a large image
>>>>>>>>>>>>>>> let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it
>>>>>>>>>>>>>>>> while going out the door. What do you think about sending the status
>>>>>>>>>>>>>>>> messages asynchronously? It looks to me like the AWT event processing will
>>>>>>>>>>>>>>>> display them in the order received, so that makes sure that a "Finished"
>>>>>>>>>>>>>>>> message will be seen after a "% complete" message. Status reporting is such
>>>>>>>>>>>>>>>> a common thing - it'd be a shame for all the worker threads to stall
>>>>>>>>>>>>>>>> because a user was using ImageJ to watch a movie of a cat falling off a TV
>>>>>>>>>>>>>>>> while their batch job was running.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for
>>>>>>>>>>>>>>>> asynch reporting and maybe Curtis or you could look it over and accept it.
>>>>>>>>>>>>>>>> If you reject, NP.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> --Lee
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug.
>>>>>>>>>>>>>>>>> We can undo that change. I can work around the problem in another fashion
>>>>>>>>>>>>>>>>> if necessary.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when
>>>>>>>>>>>>>>>>>> the AWT event queue thread tries to get a lock within
>>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor and when DefaultStatusService.showStatus on a
>>>>>>>>>>>>>>>>>> worker thread tries to publish a synchronous request for status display
>>>>>>>>>>>>>>>>>> after taking the DefaultDatasetView's lock in DefaultDatasetView.rebuild.
>>>>>>>>>>>>>>>>>> It happens periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's
>>>>>>>>>>>>>>>>>> a little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line:
>>>>>>>>>>>>>>>>>> 282
>>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>)
>>>>>>>>>>>>>>>>>> line: 129
>>>>>>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line: 247
>>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
>>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E) line:
>>>>>>>>>>>>>>>>>> 282
>>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent)
>>>>>>>>>>>>>>>>>> line: 94
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line:
>>>>>>>>>>>>>>>>>> 1823
>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 409
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component,
>>>>>>>>>>>>>>>>>> AWTEvent) line: 210
>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent) line:
>>>>>>>>>>>>>>>>>> 286
>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int,
>>>>>>>>>>>>>>>>>> Conditional, EventFilter) line: 184
>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int,
>>>>>>>>>>>>>>>>>> Conditional, Component) line: 174
>>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line:
>>>>>>>>>>>>>>>>>> 169
>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object,
>>>>>>>>>>>>>>>>>> List, List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line: 77
>>>>>>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay,
>>>>>>>>>>>>>>>>>> List<Overlay>) line: 148
>>>>>>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131017/d939babb/attachment-0001.html>

From leek at broadinstitute.org  Thu Oct 17 14:17:44 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Thu, 17 Oct 2013 15:17:44 -0400
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAKcvfuTHVdnT4vG=OD3wCdeOL+4b6+nC7KVyJ=c-7o32dimzyQ@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
	<CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
	<CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>
	<CAHLFyjeAGwQTdacvgRPBddwYxvPtfcEv=1TZf3AKOuAyc5SqEA@mail.gmail.com>
	<CADN69ymJKKkdCW6sagUrYC1NbmWQDUGffzMWSbS5=2aykBS-Pw@mail.gmail.com>
	<CAKcvfuS0nASJtfuJ82TJyV6NOVq7Sr5DxfK82kZVhSVQeaY=Yw@mail.gmail.com>
	<CAKcvfuTHVdnT4vG=OD3wCdeOL+4b6+nC7KVyJ=c-7o32dimzyQ@mail.gmail.com>
Message-ID: <CAHLFyjepx9cJEcoYVa=EiKwm1s96_pDDJ5BM=V3m1J3FUVyHdA@mail.gmail.com>

It does sound like the best thing to do would be for the QuitProgram plugin
to post (= publishLater) a quit event that could be subscribed by something
deeper inside scijava. Perhaps two events are needed - a QuitVeto event
that is published and that can be vetoed by any subscribers (e.g - a script
editor with an unsaved script) and, once everyone has committed to
quitting, the actual Quit event which can be posted and handled in the
event thread.


On Thu, Oct 17, 2013 at 3:03 PM, Barry DeZonia <bdezonia at gmail.com> wrote:

> Still I guess that the thread running the QuitProgram plugin will always
> still be running while QuitProgram is disposing the context. So in addition
> maybe the context dispose code should be like a time bomb that is set, the
> QuitProgram plugin completes, and then the bomb goes off shutting all
> services down.
>
>
> On Thu, Oct 17, 2013 at 2:00 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> I think that we should not need to make these changes. Curtis is right in
>> that the services should shut down in an orderly fashion. I think the real
>> problem is the services aren't shutting down in an expected order. One can
>> print which services are getting disposed in what order and can see that
>> they are nowhere near to the original initialization order. The
>> ThreadService is terminating very early and then active threads associated
>> with its executor become invalid. The ThreadService should be one of the
>> last things to dispose but it is one of the first.
>>
>>
>> On Wed, Oct 16, 2013 at 3:53 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>
>>> > I could implement Curtis's suggestion and mark the status service as
>>> > closed after dispatch
>>>
>>> Well, intuitively, the EventService, StatusService, ThreadService, etc.,
>>> once dispose() is called on them, shouldn't be hanging around anywhere
>>> else. That is, any services that use them should have already been disposed
>>> too, and no longer trying to publish anything. So something seems fishy to
>>> me here. But I admit I have spent zero time looking into it.
>>>
>>> -Curtis
>>>
>>>
>>> On Wed, Oct 16, 2013 at 3:43 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:
>>>
>>>> Strange, I've cherrypicked the patch to my master branch of
>>>> scijava-common and have successfully run it against the master branch of
>>>> imagej and I don't see your error message when I close.
>>>>
>>>> The patch is general and solves the case where you open a sample image
>>>> and close - both cases catch the error. I could implement Curtis's
>>>> suggestion and mark the status service as closed after dispatch - that's
>>>> probably the correct way to do it, but this is pretty robust and does
>>>> something useful with status messages sent during shutdown.
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 4:25 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>
>>>>> Lee,
>>>>>
>>>>> Using your patch I have an error. Open program and exit and I get this:
>>>>>
>>>>> java.lang.IllegalStateException: Context already injected:
>>>>> org.scijava.AbstractContextual#context
>>>>>
>>>>> at org.scijava.Context.inject(Context.java:281)
>>>>>
>>>>> at org.scijava.AbstractContextual.setContext(
>>>>> AbstractContextual.java:66)
>>>>>
>>>>> at org.scijava.event.DefaultEventService.publishLater(
>>>>> DefaultEventService.java:100)
>>>>>
>>>>> at org.scijava.app.DefaultStatusService.publish(
>>>>> DefaultStatusService.java:123)
>>>>>
>>>>> at org.scijava.app.DefaultStatusService.showStatus(
>>>>> DefaultStatusService.java:76)
>>>>>
>>>>> at imagej.module.ModuleRunner.run(ModuleRunner.java:155)
>>>>>
>>>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:129)
>>>>>
>>>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:1)
>>>>>
>>>>> at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>>>
>>>>> at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>>>
>>>>> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(
>>>>> ThreadPoolExecutor.java:895)
>>>>>
>>>>> at java.util.concurrent.ThreadPoolExecutor$Worker.run(
>>>>> ThreadPoolExecutor.java:918)
>>>>>
>>>>> at java.lang.Thread.run(Thread.java:680)
>>>>>
>>>>>
>>>>> Plus said patch will not affect the open sample image and then exit
>>>>> crashes. But that may need to be filed as a separate bug.
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 3:04 PM, Lee Kamentsky <
>>>>> leek at broadinstitute.org> wrote:
>>>>>
>>>>>> Maybe I wasn't patient enough about refreshing everything.... will
>>>>>> submit patch momentarily, but have only tested it on a modified version of
>>>>>> the scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>
>>>>>>> In imagej/pom.xml I added:
>>>>>>>
>>>>>>>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>>>>>>>
>>>>>>> in the <properties> section
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <
>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>
>>>>>>>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT
>>>>>>>> version of scijava-common?
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>>
>>>>>>>>> I'm not having any problems building scijava-common master against
>>>>>>>>> IJ2 master.
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <
>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>
>>>>>>>>>> I have a very simple fix in scijava-common, but it seems that the
>>>>>>>>>> head of the scijava-common master branch is not going to build with the
>>>>>>>>>> head of the imagej master branch. How should I proceed? I could branch off
>>>>>>>>>> off scijava-common-2.2.0 I suppose.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <
>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>
>>>>>>>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In my
>>>>>>>>>>> second example problem (closing app with sample image open) it looks like
>>>>>>>>>>> the original open samples legacy command was not finishing its run. Not
>>>>>>>>>>> sure if this is related to your event processing changes.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <
>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this
>>>>>>>>>>>>> code change?
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <
>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Merged
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <
>>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the
>>>>>>>>>>>>>>>> async status update code for responsiveness (i.e. when opening a large
>>>>>>>>>>>>>>>> image let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it
>>>>>>>>>>>>>>>>> while going out the door. What do you think about sending the status
>>>>>>>>>>>>>>>>> messages asynchronously? It looks to me like the AWT event processing will
>>>>>>>>>>>>>>>>> display them in the order received, so that makes sure that a "Finished"
>>>>>>>>>>>>>>>>> message will be seen after a "% complete" message. Status reporting is such
>>>>>>>>>>>>>>>>> a common thing - it'd be a shame for all the worker threads to stall
>>>>>>>>>>>>>>>>> because a user was using ImageJ to watch a movie of a cat falling off a TV
>>>>>>>>>>>>>>>>> while their batch job was running.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for
>>>>>>>>>>>>>>>>> asynch reporting and maybe Curtis or you could look it over and accept it.
>>>>>>>>>>>>>>>>> If you reject, NP.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> --Lee
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug.
>>>>>>>>>>>>>>>>>> We can undo that change. I can work around the problem in another fashion
>>>>>>>>>>>>>>>>>> if necessary.
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when
>>>>>>>>>>>>>>>>>>> the AWT event queue thread tries to get a lock within
>>>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor and when DefaultStatusService.showStatus on a
>>>>>>>>>>>>>>>>>>> worker thread tries to publish a synchronous request for status display
>>>>>>>>>>>>>>>>>>> after taking the DefaultDatasetView's lock in DefaultDatasetView.rebuild.
>>>>>>>>>>>>>>>>>>> It happens periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates: It's
>>>>>>>>>>>>>>>>>>> a little drastic for DefaultDatasetView.getColor to synchronize on the view
>>>>>>>>>>>>>>>>>>> itself. Maybe some proxy for the color system could have a synchronizing
>>>>>>>>>>>>>>>>>>> object. The other candidate is DefaultEventService.showStatus which could
>>>>>>>>>>>>>>>>>>> use EventService.publishLater - I don't think there's much need for status
>>>>>>>>>>>>>>>>>>> publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>>>>>>>> 39
>>>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E)
>>>>>>>>>>>>>>>>>>> line: 282
>>>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>)
>>>>>>>>>>>>>>>>>>> line: 129
>>>>>>>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line:
>>>>>>>>>>>>>>>>>>> 247
>>>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>>>>>>>> 39
>>>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E)
>>>>>>>>>>>>>>>>>>> line: 282
>>>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object, List,
>>>>>>>>>>>>>>>>>>> List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent)
>>>>>>>>>>>>>>>>>>> line: 94
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line:
>>>>>>>>>>>>>>>>>>> 1823
>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 409
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component,
>>>>>>>>>>>>>>>>>>> AWTEvent) line: 210
>>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 286
>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line: 269
>>>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int,
>>>>>>>>>>>>>>>>>>> Conditional, EventFilter) line: 184
>>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int,
>>>>>>>>>>>>>>>>>>> Conditional, Component) line: 174
>>>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional) line:
>>>>>>>>>>>>>>>>>>> 169
>>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object,
>>>>>>>>>>>>>>>>>>> List, List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line:
>>>>>>>>>>>>>>>>>>> 77
>>>>>>>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay,
>>>>>>>>>>>>>>>>>>> List<Overlay>) line: 148
>>>>>>>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131017/aaab98d1/attachment-0001.html>

From bdezonia at gmail.com  Thu Oct 17 15:06:02 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Thu, 17 Oct 2013 15:06:02 -0500
Subject: [ImageJ-devel] Deadlock: DefaultStatusService.showStatus calls
 EventService.publish / AbstractColorTool.drawIcon gets active dataset view
In-Reply-To: <CAHLFyjepx9cJEcoYVa=EiKwm1s96_pDDJ5BM=V3m1J3FUVyHdA@mail.gmail.com>
References: <CAHLFyjemO+EB+kP-G4XqU15FQTJ7jyzBgVLYJE=QnstGCzo7Yg@mail.gmail.com>
	<CAKcvfuQXKTCZc+rJbDVKfKMS+MC2TRN7fOQNYHRpYSpUQYh_Ng@mail.gmail.com>
	<CAHLFyjf9P4zviAD8A0zbEk2DJPVVExG+HU4m12x0w07dTb2DQg@mail.gmail.com>
	<CAKcvfuS7XPs3=SbqerF7oqdyx_eC125M3wv9RQQ-Vg-dsvoNDw@mail.gmail.com>
	<CAHLFyjdWd4oaBvT8R81g3a-x11_o=BUvQKfks8YiQDnL14TTqg@mail.gmail.com>
	<CAKcvfuSogwix_zKmteCNkeNkESK-7+S6gB78FezQc=KbbSVr9g@mail.gmail.com>
	<CAKcvfuRgtWHyCn8bK2B32EwSUSOeHCXB8N5Y082Fs134EZVQ3A@mail.gmail.com>
	<CAHLFyjfQTD+0NMBr1C+Kk3hAOEpdwOYoiFBbB_ZZyqiJth9=xw@mail.gmail.com>
	<CAKcvfuSiuO3TBzJGZfMgfZQwm8qGm6Yi3XuQ14=AeOymCuLZfw@mail.gmail.com>
	<CAHLFyjc-xZ7TJJtOzHUqAZg8N7EhxwnwzSF9=p6G0pOcESfBaw@mail.gmail.com>
	<CAKcvfuRNKrPsPhFnjYK6YmrPt1jHx1RxBO0yfr_oBzs3NNxjbg@mail.gmail.com>
	<CAHLFyjeZhQjWoszVCP5pMTKmPp4D+EWdwzB3LOhHeEPDh2PfaQ@mail.gmail.com>
	<CAKcvfuRxoXOnmGi6O+5a3H-CGhSexQOzG_BFBnV51zAWcy5F2Q@mail.gmail.com>
	<CAHLFyjeYX9TmfrAHDrNOrjbDRxssBvk79gwPBLzAGSu0Z8Ezuw@mail.gmail.com>
	<CAKcvfuQkn6Qhu5xbTtGybDje6FfAJAB63RyqAtDL8WHDki68Ew@mail.gmail.com>
	<CAHLFyjeAGwQTdacvgRPBddwYxvPtfcEv=1TZf3AKOuAyc5SqEA@mail.gmail.com>
	<CADN69ymJKKkdCW6sagUrYC1NbmWQDUGffzMWSbS5=2aykBS-Pw@mail.gmail.com>
	<CAKcvfuS0nASJtfuJ82TJyV6NOVq7Sr5DxfK82kZVhSVQeaY=Yw@mail.gmail.com>
	<CAKcvfuTHVdnT4vG=OD3wCdeOL+4b6+nC7KVyJ=c-7o32dimzyQ@mail.gmail.com>
	<CAHLFyjepx9cJEcoYVa=EiKwm1s96_pDDJ5BM=V3m1J3FUVyHdA@mail.gmail.com>
Message-ID: <CAKcvfuRySCipDUHJKzmF0a8MN14fvThOUNwYWd8VmdCminaEQw@mail.gmail.com>

I've created this ticket to track this issue:

http://trac.imagej.net/ticket/2013


On Thu, Oct 17, 2013 at 2:17 PM, Lee Kamentsky <leek at broadinstitute.org>wrote:

> It does sound like the best thing to do would be for the QuitProgram
> plugin to post (= publishLater) a quit event that could be subscribed by
> something deeper inside scijava. Perhaps two events are needed - a QuitVeto
> event that is published and that can be vetoed by any subscribers (e.g - a
> script editor with an unsaved script) and, once everyone has committed to
> quitting, the actual Quit event which can be posted and handled in the
> event thread.
>
>
> On Thu, Oct 17, 2013 at 3:03 PM, Barry DeZonia <bdezonia at gmail.com> wrote:
>
>> Still I guess that the thread running the QuitProgram plugin will always
>> still be running while QuitProgram is disposing the context. So in addition
>> maybe the context dispose code should be like a time bomb that is set, the
>> QuitProgram plugin completes, and then the bomb goes off shutting all
>> services down.
>>
>>
>> On Thu, Oct 17, 2013 at 2:00 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>
>>> I think that we should not need to make these changes. Curtis is right
>>> in that the services should shut down in an orderly fashion. I think the
>>> real problem is the services aren't shutting down in an expected order. One
>>> can print which services are getting disposed in what order and can see
>>> that they are nowhere near to the original initialization order. The
>>> ThreadService is terminating very early and then active threads associated
>>> with its executor become invalid. The ThreadService should be one of the
>>> last things to dispose but it is one of the first.
>>>
>>>
>>> On Wed, Oct 16, 2013 at 3:53 PM, Curtis Rueden <ctrueden at wisc.edu>wrote:
>>>
>>>> > I could implement Curtis's suggestion and mark the status service as
>>>> > closed after dispatch
>>>>
>>>> Well, intuitively, the EventService, StatusService, ThreadService,
>>>> etc., once dispose() is called on them, shouldn't be hanging around
>>>> anywhere else. That is, any services that use them should have already been
>>>> disposed too, and no longer trying to publish anything. So something seems
>>>> fishy to me here. But I admit I have spent zero time looking into it.
>>>>
>>>> -Curtis
>>>>
>>>>
>>>> On Wed, Oct 16, 2013 at 3:43 PM, Lee Kamentsky <leek at broadinstitute.org
>>>> > wrote:
>>>>
>>>>> Strange, I've cherrypicked the patch to my master branch of
>>>>> scijava-common and have successfully run it against the master branch of
>>>>> imagej and I don't see your error message when I close.
>>>>>
>>>>> The patch is general and solves the case where you open a sample image
>>>>> and close - both cases catch the error. I could implement Curtis's
>>>>> suggestion and mark the status service as closed after dispatch - that's
>>>>> probably the correct way to do it, but this is pretty robust and does
>>>>> something useful with status messages sent during shutdown.
>>>>>
>>>>>
>>>>> On Wed, Oct 16, 2013 at 4:25 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>
>>>>>> Lee,
>>>>>>
>>>>>> Using your patch I have an error. Open program and exit and I get
>>>>>> this:
>>>>>>
>>>>>> java.lang.IllegalStateException: Context already injected:
>>>>>> org.scijava.AbstractContextual#context
>>>>>>
>>>>>> at org.scijava.Context.inject(Context.java:281)
>>>>>>
>>>>>> at org.scijava.AbstractContextual.setContext(
>>>>>> AbstractContextual.java:66)
>>>>>>
>>>>>> at org.scijava.event.DefaultEventService.publishLater(
>>>>>> DefaultEventService.java:100)
>>>>>>
>>>>>> at org.scijava.app.DefaultStatusService.publish(
>>>>>> DefaultStatusService.java:123)
>>>>>>
>>>>>> at org.scijava.app.DefaultStatusService.showStatus(
>>>>>> DefaultStatusService.java:76)
>>>>>>
>>>>>> at imagej.module.ModuleRunner.run(ModuleRunner.java:155)
>>>>>>
>>>>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:129)
>>>>>>
>>>>>> at imagej.module.ModuleRunner.call(ModuleRunner.java:1)
>>>>>>
>>>>>> at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>>>>
>>>>>> at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>>>>
>>>>>> at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(
>>>>>> ThreadPoolExecutor.java:895)
>>>>>>
>>>>>> at java.util.concurrent.ThreadPoolExecutor$Worker.run(
>>>>>> ThreadPoolExecutor.java:918)
>>>>>>
>>>>>> at java.lang.Thread.run(Thread.java:680)
>>>>>>
>>>>>>
>>>>>> Plus said patch will not affect the open sample image and then exit
>>>>>> crashes. But that may need to be filed as a separate bug.
>>>>>>
>>>>>>
>>>>>> On Wed, Oct 16, 2013 at 3:04 PM, Lee Kamentsky <
>>>>>> leek at broadinstitute.org> wrote:
>>>>>>
>>>>>>> Maybe I wasn't patient enough about refreshing everything.... will
>>>>>>> submit patch momentarily, but have only tested it on a modified version of
>>>>>>> the scijava-common-2.2.0 branch. I'd appreciate you merging and trying it.
>>>>>>>
>>>>>>>
>>>>>>> On Wed, Oct 16, 2013 at 3:54 PM, Barry DeZonia <bdezonia at gmail.com>wrote:
>>>>>>>
>>>>>>>> In imagej/pom.xml I added:
>>>>>>>>
>>>>>>>>  <scijava-common.version>2.2.1-SNAPSHOT</scijava-common.version>
>>>>>>>>
>>>>>>>> in the <properties> section
>>>>>>>>
>>>>>>>>
>>>>>>>> On Wed, Oct 16, 2013 at 2:46 PM, Lee Kamentsky <
>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>
>>>>>>>>> Are you editing one of the POMs to pick up the 2.2.1-SNAPSHOT
>>>>>>>>> version of scijava-common?
>>>>>>>>>
>>>>>>>>>
>>>>>>>>> On Wed, Oct 16, 2013 at 3:45 PM, Barry DeZonia <bdezonia at gmail.com
>>>>>>>>> > wrote:
>>>>>>>>>
>>>>>>>>>> I'm not having any problems building scijava-common master
>>>>>>>>>> against IJ2 master.
>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>> On Wed, Oct 16, 2013 at 2:25 PM, Lee Kamentsky <
>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>
>>>>>>>>>>> I have a very simple fix in scijava-common, but it seems that
>>>>>>>>>>> the head of the scijava-common master branch is not going to build with the
>>>>>>>>>>> head of the imagej master branch. How should I proceed? I could branch off
>>>>>>>>>>> off scijava-common-2.2.0 I suppose.
>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>> On Wed, Oct 16, 2013 at 2:44 PM, Barry DeZonia <
>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>
>>>>>>>>>>>> Thanks. I also updated the ticket a bit a few minutes ago. In
>>>>>>>>>>>> my second example problem (closing app with sample image open) it looks
>>>>>>>>>>>> like the original open samples legacy command was not finishing its run.
>>>>>>>>>>>> Not sure if this is related to your event processing changes.
>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>> On Wed, Oct 16, 2013 at 1:19 PM, Lee Kamentsky <
>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>
>>>>>>>>>>>>> Sorry, I missed it. I'll see if I can take a look at it,
>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>> On Wed, Oct 16, 2013 at 2:15 PM, Barry DeZonia <
>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>
>>>>>>>>>>>>>> Lee did you see I reopened ticket #1992 (
>>>>>>>>>>>>>> http://trac.imagej.net/ticket/1992) that was related to this
>>>>>>>>>>>>>> code change?
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>> On Mon, Oct 7, 2013 at 10:15 AM, Barry DeZonia <
>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> Merged
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>> On Mon, Sep 30, 2013 at 2:34 PM, Lee Kamentsky <
>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> I submitted a patch to scijava-common with the changes.
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> https://github.com/scijava/scijava-common/pull/13
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>> On Mon, Sep 30, 2013 at 3:32 PM, Barry DeZonia <
>>>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> A proposed fix would be good Lee. I'd like to test the
>>>>>>>>>>>>>>>>> async status update code for responsiveness (i.e. when opening a large
>>>>>>>>>>>>>>>>> image let's say). Let me know when your fix is in place. Thanks.
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>> On Fri, Sep 27, 2013 at 6:54 AM, Lee Kamentsky <
>>>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> Thanks Barry, the email was a little rushed - finished it
>>>>>>>>>>>>>>>>>> while going out the door. What do you think about sending the status
>>>>>>>>>>>>>>>>>> messages asynchronously? It looks to me like the AWT event processing will
>>>>>>>>>>>>>>>>>> display them in the order received, so that makes sure that a "Finished"
>>>>>>>>>>>>>>>>>> message will be seen after a "% complete" message. Status reporting is such
>>>>>>>>>>>>>>>>>> a common thing - it'd be a shame for all the worker threads to stall
>>>>>>>>>>>>>>>>>> because a user was using ImageJ to watch a movie of a cat falling off a TV
>>>>>>>>>>>>>>>>>> while their batch job was running.
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> I think I'll submit a patch to DefaultStatusService for
>>>>>>>>>>>>>>>>>> asynch reporting and maybe Curtis or you could look it over and accept it.
>>>>>>>>>>>>>>>>>> If you reject, NP.
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> --Lee
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 7:53 PM, Barry DeZonia <
>>>>>>>>>>>>>>>>>> bdezonia at gmail.com> wrote:
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> Hi Lee,
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> I added the synchronized keyword yesterday to fix a bug.
>>>>>>>>>>>>>>>>>>> We can undo that change. I can work around the problem in another fashion
>>>>>>>>>>>>>>>>>>> if necessary.
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>> On Thu, Sep 26, 2013 at 3:57 PM, Lee Kamentsky <
>>>>>>>>>>>>>>>>>>> leek at broadinstitute.org> wrote:
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>> Hi all, I'm getting a deadly embrace that happens when
>>>>>>>>>>>>>>>>>>>> the AWT event queue thread tries to get a lock within
>>>>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor and when DefaultStatusService.showStatus on a
>>>>>>>>>>>>>>>>>>>> worker thread tries to publish a synchronous request for status display
>>>>>>>>>>>>>>>>>>>> after taking the DefaultDatasetView's lock in DefaultDatasetView.rebuild.
>>>>>>>>>>>>>>>>>>>> It happens periodically, but it's timing-dependent, so not so reproducible.
>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>> The bug is somewhat debatable. Possible candidates:
>>>>>>>>>>>>>>>>>>>> It's a little drastic for DefaultDatasetView.getColor to synchronize on the
>>>>>>>>>>>>>>>>>>>> view itself. Maybe some proxy for the color system could have a
>>>>>>>>>>>>>>>>>>>> synchronizing object. The other candidate is DefaultEventService.showStatus
>>>>>>>>>>>>>>>>>>>> which could use EventService.publishLater - I don't think there's much need
>>>>>>>>>>>>>>>>>>>> for status publishers to wait around for the status to show on the screen.
>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>> The two stack traces:
>>>>>>>>>>>>>>>>>>>> Thread [AWT-EventQueue-0] (Suspended)
>>>>>>>>>>>>>>>>>>>> DefaultDatasetView.getColor(ChannelCollection) line: 261 Synchronized
>>>>>>>>>>>>>>>>>>>> method on DefaultDatasetView
>>>>>>>>>>>>>>>>>>>>  FgColorTool(AbstractColorTool).drawIcon() line: 175
>>>>>>>>>>>>>>>>>>>> FgColorTool(AbstractColorTool).onEvent(DisplayActivatedEvent)
>>>>>>>>>>>>>>>>>>>> line: 184
>>>>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>>>>>>>>> 39
>>>>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E)
>>>>>>>>>>>>>>>>>>>> line: 282
>>>>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object,
>>>>>>>>>>>>>>>>>>>> List, List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>>>  DefaultDisplayService.setActiveDisplay(Display<?>)
>>>>>>>>>>>>>>>>>>>> line: 129
>>>>>>>>>>>>>>>>>>>> DefaultDisplayService.onEvent(WinActivatedEvent) line:
>>>>>>>>>>>>>>>>>>>> 247
>>>>>>>>>>>>>>>>>>>>  NativeMethodAccessorImpl.invoke0(Method, Object,
>>>>>>>>>>>>>>>>>>>> Object[]) line: not available [native method]
>>>>>>>>>>>>>>>>>>>> NativeMethodAccessorImpl.invoke(Object, Object[]) line:
>>>>>>>>>>>>>>>>>>>> 39
>>>>>>>>>>>>>>>>>>>>  DelegatingMethodAccessorImpl.invoke(Object, Object[])
>>>>>>>>>>>>>>>>>>>> line: 25
>>>>>>>>>>>>>>>>>>>> Method.invoke(Object, Object...) line: 597
>>>>>>>>>>>>>>>>>>>>  DefaultEventService$ProxySubscriber<E>.onEvent(E)
>>>>>>>>>>>>>>>>>>>> line: 282
>>>>>>>>>>>>>>>>>>>> DefaultEventService$ProxySubscriber<E>.onEvent(Object)
>>>>>>>>>>>>>>>>>>>> line: 1
>>>>>>>>>>>>>>>>>>>>  DefaultEventBus(ThreadSafeEventService).publish(Object,
>>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 971
>>>>>>>>>>>>>>>>>>>>  DefaultEventBus.access$1(DefaultEventBus, Object,
>>>>>>>>>>>>>>>>>>>> String, Object, List, List, StackTraceElement[]) line: 1
>>>>>>>>>>>>>>>>>>>> DefaultEventBus$1.run() line: 201
>>>>>>>>>>>>>>>>>>>>  DefaultThreadService.invoke(Runnable) line: 91
>>>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object, String, Object,
>>>>>>>>>>>>>>>>>>>> List, List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>>>> DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>>>  AWTWindowEventDispatcher.windowActivated(WindowEvent)
>>>>>>>>>>>>>>>>>>>> line: 94
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>>>>> line: 1877
>>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(JFrame).processWindowEvent(WindowEvent)
>>>>>>>>>>>>>>>>>>>> line: 274
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).processEvent(AWTEvent) line:
>>>>>>>>>>>>>>>>>>>> 1823
>>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 4630
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager(KeyboardFocusManager).redispatchEvent(Component,
>>>>>>>>>>>>>>>>>>>> AWTEvent) line: 1850
>>>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.typeAheadAssertions(Component,
>>>>>>>>>>>>>>>>>>>> AWTEvent) line: 910
>>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 409
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>>> EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent(SentEvent).dispatch()
>>>>>>>>>>>>>>>>>>>> line: 55
>>>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager$DefaultKeyboardFocusManagerSentEvent.dispatch()
>>>>>>>>>>>>>>>>>>>> line: 183
>>>>>>>>>>>>>>>>>>>>  DefaultKeyboardFocusManager.sendMessage(Component,
>>>>>>>>>>>>>>>>>>>> AWTEvent) line: 210
>>>>>>>>>>>>>>>>>>>> DefaultKeyboardFocusManager.dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 286
>>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Component).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 4502
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Container).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 2099
>>>>>>>>>>>>>>>>>>>>  SwingDisplayWindow(Window).dispatchEventImpl(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 2478
>>>>>>>>>>>>>>>>>>>> SwingDisplayWindow(Component).dispatchEvent(AWTEvent)
>>>>>>>>>>>>>>>>>>>> line: 4460
>>>>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 599
>>>>>>>>>>>>>>>>>>>> SequencedEvent.dispatch() line: 101
>>>>>>>>>>>>>>>>>>>>  EventQueue.dispatchEvent(AWTEvent) line: 597
>>>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpOneEventForFilters(int) line:
>>>>>>>>>>>>>>>>>>>> 269
>>>>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEventsForFilter(int,
>>>>>>>>>>>>>>>>>>>> Conditional, EventFilter) line: 184
>>>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEventsForHierarchy(int,
>>>>>>>>>>>>>>>>>>>> Conditional, Component) line: 174
>>>>>>>>>>>>>>>>>>>>  EventDispatchThread.pumpEvents(int, Conditional)
>>>>>>>>>>>>>>>>>>>> line: 169
>>>>>>>>>>>>>>>>>>>> EventDispatchThread.pumpEvents(Conditional) line: 161
>>>>>>>>>>>>>>>>>>>>  EventDispatchThread.run() line: 122
>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>> Thread [SciJava-4b2922f6-Thread-27] (Suspended)
>>>>>>>>>>>>>>>>>>>>  Object.wait(long) line: not available [native method]
>>>>>>>>>>>>>>>>>>>> EventQueue$1AWTInvocationLock(Object).wait() line: 485 Waiting
>>>>>>>>>>>>>>>>>>>> for AWT event thread to read invocation request.
>>>>>>>>>>>>>>>>>>>>  EventQueue.invokeAndWait(Runnable) line: 993
>>>>>>>>>>>>>>>>>>>> DefaultThreadService.invoke(Runnable) line: 95
>>>>>>>>>>>>>>>>>>>>  DefaultEventBus.publishNow(Object, String, Object,
>>>>>>>>>>>>>>>>>>>> List, List, StackTraceElement[]) line: 195
>>>>>>>>>>>>>>>>>>>> DefaultEventBus.publishNow(Object) line: 86
>>>>>>>>>>>>>>>>>>>>  DefaultEventService.publish(E) line: 95
>>>>>>>>>>>>>>>>>>>> DefaultStatusService.showStatus(int, int, String) line:
>>>>>>>>>>>>>>>>>>>> 77
>>>>>>>>>>>>>>>>>>>>  DefaultMinMaxMethod<T>.report() line: 296
>>>>>>>>>>>>>>>>>>>> DefaultMinMaxMethod<T>.process() line: 155
>>>>>>>>>>>>>>>>>>>>  DefaultAutoscaleMethod<T>.getRange(IterableInterval<T>)
>>>>>>>>>>>>>>>>>>>> line: 70
>>>>>>>>>>>>>>>>>>>> DefaultAutoscaleService.getDefaultIntervalRange(IterableInterval<RealType<?>>)
>>>>>>>>>>>>>>>>>>>> line: 97
>>>>>>>>>>>>>>>>>>>>  DefaultAutoscaleService.getDefaultRandomAccessRange(RandomAccessibleInterval<RealType<?>>)
>>>>>>>>>>>>>>>>>>>> line: 105
>>>>>>>>>>>>>>>>>>>>  DefaultDatasetView.autoscale(int) line: 176
>>>>>>>>>>>>>>>>>>>> DefaultDatasetView.initializeView(boolean) line: 499
>>>>>>>>>>>>>>>>>>>>  DefaultDatasetView.rebuild() line: 383 Takes the
>>>>>>>>>>>>>>>>>>>> DefaultDatasetView lock.
>>>>>>>>>>>>>>>>>>>> DefaultImageDisplay.rebuild() line: 140
>>>>>>>>>>>>>>>>>>>>  DefaultImageDisplay.display(Object) line: 273
>>>>>>>>>>>>>>>>>>>> DefaultOverlayService.addOverlays(ImageDisplay,
>>>>>>>>>>>>>>>>>>>> List<Overlay>) line: 148
>>>>>>>>>>>>>>>>>>>>  TurboRegRegister.run() line: 144
>>>>>>>>>>>>>>>>>>>> CommandModule.run() line: 196
>>>>>>>>>>>>>>>>>>>>  ModuleRunner.run() line: 168
>>>>>>>>>>>>>>>>>>>> ModuleRunner.call() line: 129
>>>>>>>>>>>>>>>>>>>>  ModuleRunner.call() line: 1
>>>>>>>>>>>>>>>>>>>> FutureTask$Sync.innerRun() line: 303
>>>>>>>>>>>>>>>>>>>>  FutureTask<V>.run() line: 138
>>>>>>>>>>>>>>>>>>>> ThreadPoolExecutor$Worker.runTask(Runnable) line: 886
>>>>>>>>>>>>>>>>>>>>  ThreadPoolExecutor$Worker.run() line: 908
>>>>>>>>>>>>>>>>>>>> Thread.run() line: 662
>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>> _______________________________________________
>>>>>>>>>>>>>>>>>>>> ImageJ-devel mailing list
>>>>>>>>>>>>>>>>>>>> ImageJ-devel at imagej.net
>>>>>>>>>>>>>>>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>>
>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>>>>>>>>>>
>>>>>>>>>>>
>>>>>>>>>>
>>>>>>>>>
>>>>>>>>
>>>>>>>
>>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131017/976fb56c/attachment-0001.html>

From r.leigh at dundee.ac.uk  Fri Oct 18 08:35:50 2013
From: r.leigh at dundee.ac.uk (Roger Leigh)
Date: Fri, 18 Oct 2013 14:35:50 +0100
Subject: [ImageJ-devel] [ome-devel] Avian VM and Bio-Formats
In-Reply-To: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
Message-ID: <52613936.9030007@dundee.ac.uk>

On 17/10/2013 01:28, Johannes Schindelin wrote:

> Also at that meeting, I got into contact with the OpenMole project, and in
> particular with Mark Hammons who not only explained patiently the benefits
> of the Scala language to me, but also pointed out the existence of the
> Avian VM, a small, embeddable, BSD-licensed Java Virtual Machine written
> in C++, with a tiny Just-In-Time compiler, just enough to make it a
> practical choice for running limited Java inside a C++ program/library:
> http://oss.readytalk.com/avian/
>
> It is actually very, very, *very* limited, as I found out when I tried to
> get it to run the bfconvert tool of Bio-Formats.
>
> But I did get it to run bfconvert. To be precise, in my hands, the 5MB
> executable compiled from my fork of Avian was able to run my
> (minimally-diverging) Bio-Formats v4.4.8 fork's
> loci.formats.tools.ImageConverter class to convert Fiji's icon.png (my
> standard example) to a .tiff file (although the colors are off, but
> running the same example with plain Java results in a byte-identical
> file).

Hi Johannes,

This looks very intereresting.  Do you think this could replace the
existing use of JACE to provide C++ bindings, or would we still require
something like JACE to provide all the bindings/entry points into the
Avian VM?  I assume you will still need C++ headers/wrapper proxies
generating somehow?

On a related note, over the last few weeks, the first parts of the
native Bio-Formats C++ implementation have been staged.  This includes
shared libraries for the OME-XML data model and bioformats, though more
work is pending review; it's not yet complete.  In terms of the work
done, this includes all the basic infrastructure (cmake, platform
compatibility code), generated data model, and base model
interfaces/classes.  The metadata store classes are pending, and once
those are done we'll have all the needed bits for native
OME-XML/OME-TIFF reading and writing.

It may be the case that something like the Avian VM would be very useful
in providing support for readers and writers which do not have a native
C++ implementation.


Regards,
Roger

--
Dr Roger Leigh -- Open Microscopy Environment
Wellcome Trust Centre for Gene Regulation and Expression,
College of Life Sciences, University of Dundee, Dow Street,
Dundee DD1 5EH Scotland UK   Tel: (01382) 386364

The University of Dundee is a registered Scottish Charity, No: SC015096


From ctrueden at wisc.edu  Fri Oct 18 10:08:46 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 18 Oct 2013 10:08:46 -0500
Subject: [ImageJ-devel] Removing obsolete Bio-Formats GitHub forks
Message-ID: <CADN69y=zEVnwMMrbT8sOP-Nsh4fzLBD+WTCo+BVtKBBgP1Bjrg@mail.gmail.com>

Hi everyone (especially Dscho),

The Fiji and ImageJ namespaces on GitHub each have a fork of
openmicroscopy/bioformats. This was done so that we could have a special
branch ("fiji" in the case of fiji, and "imagej" in the case of imagej)
that point to the version of Bio-Formats artifacts currently distributed on
the Fiji and ImageJ update sites, respectively.

However, those branches are now obsolete: starting with 4.4.9 we always
ship the stable release version of Bio-Formats with Fiji. And we do not
ship any Bio-Formats artifacts at all with ImageJ2. The Bio-Formats page on
the Fiji wiki page also no longer references these GitHub forks at all.

Users who want the latest and greatest bugfixes can now enable the
"Bio-Formats daily builds" update site as described at
http://fiji.sc/Bio-Formats#Daily_builds.

Hence, I already deleted the "fiji" and "imagej" branches from those source
forks. But I would actually like to completely remove the forks themselves,
to avoid confusion. The fiji fork has no topic branches and I believe is
safe to be deleted. The imagej fork has one topic branch called
"performance" created by dscho. But dscho also has his own project fork in
his namespace too. So Dscho: are you OK with migrating that topic branch
there instead?

Any objections to this plan?

Thanks,
Curtis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131018/f390e398/attachment.html>

From ullrich.koethe at iwr.uni-heidelberg.de  Fri Oct 18 03:18:12 2013
From: ullrich.koethe at iwr.uni-heidelberg.de (Ullrich Koethe)
Date: Fri, 18 Oct 2013 10:18:12 +0200
Subject: [ImageJ-devel] [VIGRA] Avian VM and Bio-Formats
In-Reply-To: <alpine.DEB.1.00.1310171922080.1191@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
	<52600288.1050509@iwr.uni-heidelberg.de>
	<alpine.DEB.1.00.1310171922080.1191@s15462909.onlinehome-server.info>
Message-ID: <5260EEC4.8060600@iwr.uni-heidelberg.de>

Hi Johannes,

>> Is this latter
>> step easy to achieve using standard JNI tools once the embedding/running
>> of BioFormats works?
>
> That would be the next step after cleaning up my Avian patches and trying
> to read files via SCIFIO.
>

Please let me know if you need any help from my side. I'll be happy to 
include your solution into VIGRA.

Best regards
Ulli


From Johannes.Schindelin at gmx.de  Fri Oct 18 11:53:44 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Fri, 18 Oct 2013 18:53:44 +0200 (CEST)
Subject: [ImageJ-devel] Removing obsolete Bio-Formats GitHub forks
In-Reply-To: <CADN69y=zEVnwMMrbT8sOP-Nsh4fzLBD+WTCo+BVtKBBgP1Bjrg@mail.gmail.com>
References: <CADN69y=zEVnwMMrbT8sOP-Nsh4fzLBD+WTCo+BVtKBBgP1Bjrg@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1310181852170.1191@s15462909.onlinehome-server.info>

HI Curtis,

On Fri, 18 Oct 2013, Curtis Rueden wrote:

> The Fiji and ImageJ namespaces on GitHub each have a fork of
> openmicroscopy/bioformats. This was done so that we could have a special
> branch ("fiji" in the case of fiji, and "imagej" in the case of imagej)
> that point to the version of Bio-Formats artifacts currently distributed on
> the Fiji and ImageJ update sites, respectively.
> 
> However, those branches are now obsolete: starting with 4.4.9 we always
> ship the stable release version of Bio-Formats with Fiji. And we do not
> ship any Bio-Formats artifacts at all with ImageJ2. The Bio-Formats page on
> the Fiji wiki page also no longer references these GitHub forks at all.
> 
> Users who want the latest and greatest bugfixes can now enable the
> "Bio-Formats daily builds" update site as described at
> http://fiji.sc/Bio-Formats#Daily_builds.
> 
> Hence, I already deleted the "fiji" and "imagej" branches from those source
> forks. But I would actually like to completely remove the forks themselves,
> to avoid confusion. The fiji fork has no topic branches and I believe is
> safe to be deleted. The imagej fork has one topic branch called
> "performance" created by dscho. But dscho also has his own project fork in
> his namespace too. So Dscho: are you OK with migrating that topic branch
> there instead?
> 
> Any objections to this plan?

The only objection I have is that we referenced some of those commits in
fiji.git's history... So by removing the topic branches, we also removed
the documentation from what source we used to build certain revisions of
our bio-formats submodule.

Not a big thing, though. I can easily hold those things in my personal
fork.

Ciao,
Dscho


From ctrueden at wisc.edu  Fri Oct 18 12:30:51 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 18 Oct 2013 12:30:51 -0500
Subject: [ImageJ-devel] Removing obsolete Bio-Formats GitHub forks
In-Reply-To: <alpine.DEB.1.00.1310181852170.1191@s15462909.onlinehome-server.info>
References: <CADN69y=zEVnwMMrbT8sOP-Nsh4fzLBD+WTCo+BVtKBBgP1Bjrg@mail.gmail.com>
	<alpine.DEB.1.00.1310181852170.1191@s15462909.onlinehome-server.info>
Message-ID: <CADN69ynbaZJ+DTa-baTpx_oKieHrD0TXJAGiDE=HuOEswjjigQ@mail.gmail.com>

Hi Dscho,

> So by removing the topic branches, we also removed the documentation
> from what source we used to build certain revisions of our bio-formats
> submodule.

If you think this is a problem, I am fine with reinstating the branches. I
still have the local branch pointers and can easily push them back if
that's what you want.

Personally I just thought the benefits of simplification outweighed
preserving such (minor) history. My thinking is that many more people will
be looking at the list of repos in those namespaces and potentially
wondering why we keep a fork of the project, versus the likely extremely
small number (potentially zero) of developers digging through the git
history and cross-checking against the given links, etc.

Regards,
Curtis


On Fri, Oct 18, 2013 at 11:53 AM, Johannes Schindelin <
Johannes.Schindelin at gmx.de> wrote:

> HI Curtis,
>
> On Fri, 18 Oct 2013, Curtis Rueden wrote:
>
> > The Fiji and ImageJ namespaces on GitHub each have a fork of
> > openmicroscopy/bioformats. This was done so that we could have a special
> > branch ("fiji" in the case of fiji, and "imagej" in the case of imagej)
> > that point to the version of Bio-Formats artifacts currently distributed
> on
> > the Fiji and ImageJ update sites, respectively.
> >
> > However, those branches are now obsolete: starting with 4.4.9 we always
> > ship the stable release version of Bio-Formats with Fiji. And we do not
> > ship any Bio-Formats artifacts at all with ImageJ2. The Bio-Formats page
> on
> > the Fiji wiki page also no longer references these GitHub forks at all.
> >
> > Users who want the latest and greatest bugfixes can now enable the
> > "Bio-Formats daily builds" update site as described at
> > http://fiji.sc/Bio-Formats#Daily_builds.
> >
> > Hence, I already deleted the "fiji" and "imagej" branches from those
> source
> > forks. But I would actually like to completely remove the forks
> themselves,
> > to avoid confusion. The fiji fork has no topic branches and I believe is
> > safe to be deleted. The imagej fork has one topic branch called
> > "performance" created by dscho. But dscho also has his own project fork
> in
> > his namespace too. So Dscho: are you OK with migrating that topic branch
> > there instead?
> >
> > Any objections to this plan?
>
> The only objection I have is that we referenced some of those commits in
> fiji.git's history... So by removing the topic branches, we also removed
> the documentation from what source we used to build certain revisions of
> our bio-formats submodule.
>
> Not a big thing, though. I can easily hold those things in my personal
> fork.
>
> Ciao,
> Dscho
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131018/ec585288/attachment.html>

From Johannes.Schindelin at gmx.de  Fri Oct 18 15:53:47 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Fri, 18 Oct 2013 22:53:47 +0200 (CEST)
Subject: [ImageJ-devel] Removing obsolete Bio-Formats GitHub forks
In-Reply-To: <CADN69ynbaZJ+DTa-baTpx_oKieHrD0TXJAGiDE=HuOEswjjigQ@mail.gmail.com>
References: <CADN69y=zEVnwMMrbT8sOP-Nsh4fzLBD+WTCo+BVtKBBgP1Bjrg@mail.gmail.com>
	<alpine.DEB.1.00.1310181852170.1191@s15462909.onlinehome-server.info>
	<CADN69ynbaZJ+DTa-baTpx_oKieHrD0TXJAGiDE=HuOEswjjigQ@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1310182251210.1191@s15462909.onlinehome-server.info>

Hi Curtis,

On Fri, 18 Oct 2013, Curtis Rueden wrote:

> > So by removing the topic branches, we also removed the documentation
> > from what source we used to build certain revisions of our bio-formats
> > submodule.
> 
> If you think this is a problem, I am fine with reinstating the branches.
> I still have the local branch pointers and can easily push them back if
> that's what you want.
> 
> Personally I just thought the benefits of simplification outweighed
> preserving such (minor) history. My thinking is that many more people will
> be looking at the list of repos in those namespaces and potentially
> wondering why we keep a fork of the project, versus the likely extremely
> small number (potentially zero) of developers digging through the git
> history and cross-checking against the given links, etc.

I guess you're right and it is not really worth preserving because all of
our changes basically made it back into the 'master' branch somehow.

Ciao,
Dscho


From panovr at gmail.com  Sat Oct 19 04:13:51 2013
From: panovr at gmail.com (Yili Zhao)
Date: Sat, 19 Oct 2013 17:13:51 +0800
Subject: [ImageJ-devel] Avian VM and Bio-Formats
In-Reply-To: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
Message-ID: <CAHC=qdAvRHgKtUJWuzarhcW8LY=9Fay8c35b7N8AUy=wn_26wQ@mail.gmail.com>

Hi,
  >> Its design was the most important source of inspiration for ImgLib2.
  Thanks for this information.
  When I read ImgLib2, I have a impression that its design has some similar
with other library.
  Now I know this library is VIGRA :)

  By the way, I can not access
http://hci.iwr.uni-heidelberg.de/vigra<http://hci.iwr.uni-heidelberg.de/vigra/%E2%80%8E>/
currently.
Do others have this problem?


2013/10/17 Johannes Schindelin <Johannes.Schindelin at gmx.de>

> Hi Ullrich,
>
> a little background information for everybody else: Ullrich is the
> inventor and maintainer of VIGRA, an incredibly powerful C++ library to
> process and analyze images. Its design was the most important source of
> inspiration for ImgLib2. As a consequence, I was really delighted to meet
> Ullrich at the EuBIAS meeting in Barcelona last week. Among other things,
> we talked extensively about ways to interoperate between ImgLib2 and
> VIGRA, and the lack of support in VIGRA to read file formats via the
> Bio-Formats library.
>
> Also at that meeting, I got into contact with the OpenMole project, and in
> particular with Mark Hammons who not only explained patiently the benefits
> of the Scala language to me, but also pointed out the existence of the
> Avian VM, a small, embeddable, BSD-licensed Java Virtual Machine written
> in C++, with a tiny Just-In-Time compiler, just enough to make it a
> practical choice for running limited Java inside a C++ program/library:
> http://oss.readytalk.com/avian/
>
> It is actually very, very, *very* limited, as I found out when I tried to
> get it to run the bfconvert tool of Bio-Formats.
>
> But I did get it to run bfconvert. To be precise, in my hands, the 5MB
> executable compiled from my fork of Avian was able to run my
> (minimally-diverging) Bio-Formats v4.4.8 fork's
> loci.formats.tools.ImageConverter class to convert Fiji's icon.png (my
> standard example) to a .tiff file (although the colors are off, but
> running the same example with plain Java results in a byte-identical
> file).
>
> Although it is too early for proper benchmarking, things seem to be
> comparable between Java and Avian: while Java is slightly faster in what
> time(1) calls "real" time (~0.54s vs ~0.72s), in terms of "user" time
> roles are reversed (~0.70s vs ~0.63s). Roughly the same holds true for the
> dynamic Avian executable (which is only 11K and links to Avian's libjvm.so
> weighing in with a whopping 1.2M). The major benefit will most likely be
> space: linking to libjvm.so should be enough, the standard Java classes
> are included therein. So you can get Java support in VIGRA (or any other
> C++ project) by adding a library that is slightly larger than one
> megabyte.
>
> Now to some more detailed explanations about the challenges I faced, for
> the technically-inclined.
>
> On the Bio-Formats side, there are two major and one minor (and one micro)
> issue:
>
> - to enable logging, Bio-Formats uses a cute hack called
>   ReflectedUniverse, which is basically a scripting language for Java
>   itself. However, it uses regular expressions, something that Avian's
>   class library does not yet support.
>
> - Bio-Formats uses a concurrent hashmap in loci.common.Location.
>   Concurrency (JSR-166) is not supported by Avian's class library yet.
>
> - in loci.formats.gui.LegacyQTTools, the value of the java.library.path
>   property is used without checking whether the property is null (unset).
>
> - some debug logging in Bio-Formats uses String.format() (not yet
>   supported by Avian's class library).
>
> All of these issues could be worked around in the code calling
> Bio-Formats: there is no need to use the ImageConverter class (which
> enables the logging), the concurrent hashmap could be faked by extending
> the non-concurrent hashmap (and just not bothering with the concurrency
> because we will most likely instantiate one VM per Bio-Formats call), the
> java.library.path property could be initialized to a dummy value and the
> logging could be switched off completely.
>
> On the Avian side, I am happy to report that I only had to extend the
> class library (apart from one bug fix that I will contribute upstream
> later this week). In particular, I had to
>
> - make RandomAccessFile support writing
>
> - provide three dummy AWT classes because Bio-Formats actually links to
>   them, but does not use them by default
>
> - provide a couple of interfaces and exceptions that were not yet included
>   in Avian
>
> - implement a minimal java.io.DataOutputStream
>
> - provide a FileChannel for RandomAccessFiles (i.e. implement getChannel)
>
> - implement java.lang.Boolean's parse(String) method
>
> - implement java.lang.Character's isISOControl(char) method
>
> - implement fake byte order methods for ByteBuffers (they are hardcoded to
>   big endian, but that is what Bio-Formats required in my test)
>
> - provide a dummy SimpleDateFormat which actually does not work, but does
>   not need to
>
> - add toString(long[]) to java.util.Arrays
>
> - teach Avian's pseudo regular expressions about "\\", i.e. the backslash
>
> For the moment, all of these changes are contained in hodge podge
> work-in-progress commits which I will clean up over the next few days. You
> can see them here (the linked pages will update whenever I get around to
> clean up the commits):
>
> https://github.com/dscho/avian/compare/bio-formats
> https://github.com/dscho/bioformats/compare/v4.4.8...avian
>
> Since VIGRA and ImgLib2 share design concepts, and since SCIFIO supports
> ImgLib2 natively, I think that my plan to extend the test to SCIFIO after
> cleaning up my Avian fork is sound.
>
> Once that is done, I will add unit tests that our trusty Jenkins will run
> whenever SCIFIO (or Avian) changes, to ensure that things continue to
> work. These unit tests will be extended as needed, e.g. when someone finds
> out that an important use case requires more changes in Avian, still.
>
> This way to call Bio-Formats and SCIFIO could become the default C++ entry
> point into those libraries.
>
> Summary: I showed that Bio-Formats/SCIFIO support for VIGRA and other C++
> libraries is feasible through the BSD-licensed embeddable Java virtual
> machine "Avian". I am confident that I can clean up my patches this week
> still, to be contributed to the Avian project.
>
> Ciao,
> Johannes
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>



-- 
Yili Zhao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131019/c9023eac/attachment.html>

From saalfeld at mpi-cbg.de  Sat Oct 19 07:43:23 2013
From: saalfeld at mpi-cbg.de (Stephan Saalfeld)
Date: Sat, 19 Oct 2013 14:43:23 +0200
Subject: [ImageJ-devel] Avian VM and Bio-Formats
In-Reply-To: <CAHC=qdAvRHgKtUJWuzarhcW8LY=9Fay8c35b7N8AUy=wn_26wQ@mail.gmail.com>
References: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
	<CAHC=qdAvRHgKtUJWuzarhcW8LY=9Fay8c35b7N8AUy=wn_26wQ@mail.gmail.com>
Message-ID: <1382186603.15382.48.camel@saalfeld-thinkpad>

Hi Yili,

that is you didn't read beyond the first paragraph of the introduction:

http://bioinformatics.oxfordjournals.org/content/28/22/3009.full

, or the first paragraph of the conclusion in the ImgLib1 workshop
paper:

http://fly.mpi-cbg.de/~preibisch/pubs/imagejpaper2010.pdf

?  Depressing for the authors ;).

The other significant source of inspiration is ITK, if you don't know it
yet, check it out, also very cool stuff:

http://www.itk.org/

Best,
Stephan




On Sat, 2013-10-19 at 17:13 +0800, Yili Zhao wrote: 
> Hi,
>   >> Its design was the most important source of inspiration for ImgLib2.
>   Thanks for this information.
>   When I read ImgLib2, I have a impression that its design has some similar
> with other library.
>   Now I know this library is VIGRA :)
> 
>   By the way, I can not access
> http://hci.iwr.uni-heidelberg.de/vigra<http://hci.iwr.uni-heidelberg.de/vigra/%E2%80%8E>/
> currently.
> Do others have this problem?
> 
> 
> 2013/10/17 Johannes Schindelin <Johannes.Schindelin at gmx.de>
> 
> > Hi Ullrich,
> >
> > a little background information for everybody else: Ullrich is the
> > inventor and maintainer of VIGRA, an incredibly powerful C++ library to
> > process and analyze images. Its design was the most important source of
> > inspiration for ImgLib2. As a consequence, I was really delighted to meet
> > Ullrich at the EuBIAS meeting in Barcelona last week. Among other things,
> > we talked extensively about ways to interoperate between ImgLib2 and
> > VIGRA, and the lack of support in VIGRA to read file formats via the
> > Bio-Formats library.
> >
> > Also at that meeting, I got into contact with the OpenMole project, and in
> > particular with Mark Hammons who not only explained patiently the benefits
> > of the Scala language to me, but also pointed out the existence of the
> > Avian VM, a small, embeddable, BSD-licensed Java Virtual Machine written
> > in C++, with a tiny Just-In-Time compiler, just enough to make it a
> > practical choice for running limited Java inside a C++ program/library:
> > http://oss.readytalk.com/avian/
> >
> > It is actually very, very, *very* limited, as I found out when I tried to
> > get it to run the bfconvert tool of Bio-Formats.
> >
> > But I did get it to run bfconvert. To be precise, in my hands, the 5MB
> > executable compiled from my fork of Avian was able to run my
> > (minimally-diverging) Bio-Formats v4.4.8 fork's
> > loci.formats.tools.ImageConverter class to convert Fiji's icon.png (my
> > standard example) to a .tiff file (although the colors are off, but
> > running the same example with plain Java results in a byte-identical
> > file).
> >
> > Although it is too early for proper benchmarking, things seem to be
> > comparable between Java and Avian: while Java is slightly faster in what
> > time(1) calls "real" time (~0.54s vs ~0.72s), in terms of "user" time
> > roles are reversed (~0.70s vs ~0.63s). Roughly the same holds true for the
> > dynamic Avian executable (which is only 11K and links to Avian's libjvm.so
> > weighing in with a whopping 1.2M). The major benefit will most likely be
> > space: linking to libjvm.so should be enough, the standard Java classes
> > are included therein. So you can get Java support in VIGRA (or any other
> > C++ project) by adding a library that is slightly larger than one
> > megabyte.
> >
> > Now to some more detailed explanations about the challenges I faced, for
> > the technically-inclined.
> >
> > On the Bio-Formats side, there are two major and one minor (and one micro)
> > issue:
> >
> > - to enable logging, Bio-Formats uses a cute hack called
> >   ReflectedUniverse, which is basically a scripting language for Java
> >   itself. However, it uses regular expressions, something that Avian's
> >   class library does not yet support.
> >
> > - Bio-Formats uses a concurrent hashmap in loci.common.Location.
> >   Concurrency (JSR-166) is not supported by Avian's class library yet.
> >
> > - in loci.formats.gui.LegacyQTTools, the value of the java.library.path
> >   property is used without checking whether the property is null (unset).
> >
> > - some debug logging in Bio-Formats uses String.format() (not yet
> >   supported by Avian's class library).
> >
> > All of these issues could be worked around in the code calling
> > Bio-Formats: there is no need to use the ImageConverter class (which
> > enables the logging), the concurrent hashmap could be faked by extending
> > the non-concurrent hashmap (and just not bothering with the concurrency
> > because we will most likely instantiate one VM per Bio-Formats call), the
> > java.library.path property could be initialized to a dummy value and the
> > logging could be switched off completely.
> >
> > On the Avian side, I am happy to report that I only had to extend the
> > class library (apart from one bug fix that I will contribute upstream
> > later this week). In particular, I had to
> >
> > - make RandomAccessFile support writing
> >
> > - provide three dummy AWT classes because Bio-Formats actually links to
> >   them, but does not use them by default
> >
> > - provide a couple of interfaces and exceptions that were not yet included
> >   in Avian
> >
> > - implement a minimal java.io.DataOutputStream
> >
> > - provide a FileChannel for RandomAccessFiles (i.e. implement getChannel)
> >
> > - implement java.lang.Boolean's parse(String) method
> >
> > - implement java.lang.Character's isISOControl(char) method
> >
> > - implement fake byte order methods for ByteBuffers (they are hardcoded to
> >   big endian, but that is what Bio-Formats required in my test)
> >
> > - provide a dummy SimpleDateFormat which actually does not work, but does
> >   not need to
> >
> > - add toString(long[]) to java.util.Arrays
> >
> > - teach Avian's pseudo regular expressions about "\\", i.e. the backslash
> >
> > For the moment, all of these changes are contained in hodge podge
> > work-in-progress commits which I will clean up over the next few days. You
> > can see them here (the linked pages will update whenever I get around to
> > clean up the commits):
> >
> > https://github.com/dscho/avian/compare/bio-formats
> > https://github.com/dscho/bioformats/compare/v4.4.8...avian
> >
> > Since VIGRA and ImgLib2 share design concepts, and since SCIFIO supports
> > ImgLib2 natively, I think that my plan to extend the test to SCIFIO after
> > cleaning up my Avian fork is sound.
> >
> > Once that is done, I will add unit tests that our trusty Jenkins will run
> > whenever SCIFIO (or Avian) changes, to ensure that things continue to
> > work. These unit tests will be extended as needed, e.g. when someone finds
> > out that an important use case requires more changes in Avian, still.
> >
> > This way to call Bio-Formats and SCIFIO could become the default C++ entry
> > point into those libraries.
> >
> > Summary: I showed that Bio-Formats/SCIFIO support for VIGRA and other C++
> > libraries is feasible through the BSD-licensed embeddable Java virtual
> > machine "Avian". I am confident that I can clean up my patches this week
> > still, to be contributed to the Avian project.
> >
> > Ciao,
> > Johannes
> >
> > _______________________________________________
> > ImageJ-devel mailing list
> > ImageJ-devel at imagej.net
> > http://imagej.net/mailman/listinfo/imagej-devel
> >
> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel



From ctrueden at wisc.edu  Sat Oct 19 11:19:54 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Sat, 19 Oct 2013 11:19:54 -0500
Subject: [ImageJ-devel] Latest ImageJ2 release is broken
Message-ID: <CADN69ykq49ZXE0GsqCwBLodO-Hqwmyaq39uootiFcau0VeF_ww@mail.gmail.com>

Hi all,

Just a quick note that the latest ImageJ2 release, 2.0.0-beta-7.4, has a
critical bug which prevents images from opening properly. We will release
2.0.0-beta-7.5 later this weekend to address the issue. Thanks for your
patience.

In the meantime, Fiji should still be working fine in its default ImageJ
1.x mode. (The bug only affects Fiji if you use Help > Switch to Modern
Mode to test out ImageJ2.)

Regards,
Curtis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131019/6d25c748/attachment.html>

From Yelena.Botanova at arpansa.gov.au  Mon Oct 21 00:47:31 2013
From: Yelena.Botanova at arpansa.gov.au (Yelena Botanova)
Date: Mon, 21 Oct 2013 05:47:31 +0000
Subject: [ImageJ-devel] neutron trucks [SEC=UNCLASSIFIED]
Message-ID: <70AB6388B5A8CA4DB1793B6CA9D6D6A3231DFA0A@VIC-EXCH-MB1.arpansa.local>

Dear All,


I am trying to recognize and count oval shaped objects of particular size with flare inside them (neutron trucks) using Image J. How do I substract round objects or lines, or count ovals only?

I'd be grateful for any help or advice you can give.

Thanks for your time,

Best Regards,

Yelena.



***********************************************************************************
Important: This email (including any attachments) is intended only for the use of the
addressee and may contain confidential and / or privileged information.  
If you are not the intended addressee, you are prohibited from relaying on, distributing, disclosing, 
copying or in any other way using any information in this email. If you have received this email in error, 
please notify the sender immediately and erase all copies.
Any opinions expressed in this email are not necessarily held or authorised by Australian Radiation 
Protection And Nuclear Safety Agency (ARPANSA).
Whilst ARPANSA has taken all reasonable steps to ensure this is email is virus free,
it accepts no responsibility and makes no warranty. The recipient should take its own steps to ensure
there is no virus and bears full responsibility for any use.

Australian Radiation Protection And Nuclear Safety Agency
***********************************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131021/a92707d5/attachment.html>

From Yelena.Botanova at arpansa.gov.au  Mon Oct 21 00:47:54 2013
From: Yelena.Botanova at arpansa.gov.au (Yelena Botanova)
Date: Mon, 21 Oct 2013 05:47:54 +0000
Subject: [ImageJ-devel] nutron trucks [SEC=UNCLASSIFIED]
Message-ID: <70AB6388B5A8CA4DB1793B6CA9D6D6A3231DFA12@VIC-EXCH-MB1.arpansa.local>

Dear All,


I am trying to recognize and count oval shaped objects of particular size with flare inside them (neutron trucks) using ImageJ. How do I substract round objects or lines, or count ovals only?

I'd be grateful for any help or advice you can give.

Thanks for your time,


Best Regards,


Yelena.



***********************************************************************************
Important: This email (including any attachments) is intended only for the use of the
addressee and may contain confidential and / or privileged information.  
If you are not the intended addressee, you are prohibited from relaying on, distributing, disclosing, 
copying or in any other way using any information in this email. If you have received this email in error, 
please notify the sender immediately and erase all copies.
Any opinions expressed in this email are not necessarily held or authorised by Australian Radiation 
Protection And Nuclear Safety Agency (ARPANSA).
Whilst ARPANSA has taken all reasonable steps to ensure this is email is virus free,
it accepts no responsibility and makes no warranty. The recipient should take its own steps to ensure
there is no virus and bears full responsibility for any use.

Australian Radiation Protection And Nuclear Safety Agency
***********************************************************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131021/9fa3866e/attachment.html>

From ctrueden at wisc.edu  Tue Oct 22 09:07:26 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 22 Oct 2013 09:07:26 -0500
Subject: [ImageJ-devel] ImageJ2 Headless Question
In-Reply-To: <BLU0-SMTP13364002A89657404B7DA42C02C0@phx.gbl>
References: <BLU0-SMTP13364002A89657404B7DA42C02C0@phx.gbl>
Message-ID: <CADN69yn5ruS1-cDgr0btXattq+veVw+rW1o-KKFG0o1e+5bhyg@mail.gmail.com>

Hi Joe,

Very sorry for the delay in reply.

> I'm using the complete snapshot all jar and maybe this is the cause?

Definitely; the "all" JAR was busted. I was able to reproduce this issue,
and pushed a fix to master last night.

The latest build of imagej-2.0.0-SNAPSHOT-all.jar should start up properly
now, although there is another outstanding bug on master when quitting
ImageJ (https://github.com/scijava/scijava-common/pull/14).

That said, I will second Johannes's suggestion to set up a Maven project
with a dependency on ImageJ Maven artifact(s). The easiest is to extend the
latest version of pom-scijava as parent, and add this dependency:

  <dependency>
    <groupId>net.imagej</groupId>
    <artifactId>ij-app</artifactId>
    <version>${imagej.version}</version>
  </dependency>

That will pull in all the ImageJ2 code transitively for you to use. If you
are a stickler you can add individual direct dependencies to the components
you are using, but it is not necessary.

> I've looked at the tutorials for ImageJ2 and I've tried the dataset
example

So, the ImageJ tutorials are already set up to work this way. Just use File
> Import > Existing Maven Projects and point it at your imagej-tutorials
checkout. You'll get all the projects in Eclipse, managed by M2E, with no
extra work needed. You definitely should *not* need to use the uber-JAR,
nor ever explicitly manage your classpath in Eclipse. Just edit the Maven
POM then refresh the project in Eclipse and it will update the "Maven
dependencies" accordingly.

Regards,
Curtis


On Sun, Sep 22, 2013 at 12:30 AM, Joe Falconer <
joseph.falconer at lincolnuni.ac.nz> wrote:

> Hi,
>
> Hope I'm posting to the correct location.
>
> I'm trying to do something that appears quite simple using ImageJ2 - read
> in a pgm file in headless mode and iterate over and analyse the pixel data
> in the image.
>
> I've looked at the tutorials for ImageJ2 and I've tried the dataset
> example but I'm having some issues. I'm having Maven connector issues in
> Eclipse Kepler so I'm using the complete snapshot all jar and maybe this is
> the cause? This is my trace when running the dataset example :
>
> WARN: Ignoring non-Maven build directory: C:\Documents and
> Settings\Joe\ImagingWorkspace\IJ2Test\bin
> Exception in thread "main" java.lang.IllegalArgumentException: Invalid
> service: imagej.console.DefaultConsoleService
>
> I've also tried the ImgLib2 examples on the fiji site referred to from the
> tutorials page but I've had trouble getting them to run without raising "No
> compatible service: io.scif.SCIFIOService" exception.
>
> I'm guessing I have some build/dependency issues - any suggestions?
>
> thanks for any help
>
> Joe
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131022/a7d6b69c/attachment-0001.html>

From luc at miprosoft.com  Tue Oct 22 10:30:38 2013
From: luc at miprosoft.com (Luc Deschenaux)
Date: Tue, 22 Oct 2013 17:30:38 +0200
Subject: [ImageJ-devel] Accessing metadata from C
Message-ID: <52669A1E.5080207@miprosoft.com>

Hi,

I cannot figure out how to access metadata('Info') in a TIFF file, 
without launching ImageJ in batch mode to call getMetadata('Info') ...

Is it possible with FreeImage or any other C library ?..

Regards,

Luc


From ctrueden at wisc.edu  Tue Oct 22 11:10:07 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 22 Oct 2013 11:10:07 -0500
Subject: [ImageJ-devel] Accessing metadata from C
In-Reply-To: <52669A1E.5080207@miprosoft.com>
References: <52669A1E.5080207@miprosoft.com>
Message-ID: <CADN69ymtncvOp3-hqSjJYXnPd=jLr3E20D9bVcmLz060YkBHdg@mail.gmail.com>

Hi Luc,

> I cannot figure out how to access metadata('Info') in a TIFF file,
> without launching ImageJ in batch mode to call getMetadata('Info')
> ...
>
> Is it possible with FreeImage or any other C library ?..

The metadata text is written out to the TIFF using custom tags 50838 and
50839.

Using libtiff's tiffinfo command line tool, you'll see something like:

  Tag 50839:
73,74,73,74,105,110,102,111,0,0,0,1,0,72,0,101,0,108,0,108,0,111,0,32,0,119,0,111,0,114,0,108,0,100,0,46,0,46,0,46,0,10,0,71,0,114,0,101,0,97,0,116,0,46

Which must then be decoded to a string.

Source code at:
https://github.com/fiji/ImageJA/blob/v1.48e/src/main/java/ij/io/TiffEncoder.java#L355
https://github.com/fiji/ImageJA/blob/v1.48e/src/main/java/ij/io/TiffDecoder.java#L43

Regards,
Curtis

P.S. Looks like someone submitted a patch to support this in Pillow, but it
is not yet merged:
https://github.com/python-imaging/Pillow/issues/291. Who knows what other
software already supports it.


On Tue, Oct 22, 2013 at 10:30 AM, Luc Deschenaux <luc at miprosoft.com> wrote:

> Hi,
>
> I cannot figure out how to access metadata('Info') in a TIFF file, without
> launching ImageJ in batch mode to call getMetadata('Info') ...
>
> Is it possible with FreeImage or any other C library ?..
>
> Regards,
>
> Luc
>
> ______________________________**_________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/**listinfo/imagej-devel<http://imagej.net/mailman/listinfo/imagej-devel>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131022/c05f8e90/attachment.html>

From panovr at gmail.com  Wed Oct 23 08:25:28 2013
From: panovr at gmail.com (Yili Zhao)
Date: Wed, 23 Oct 2013 21:25:28 +0800
Subject: [ImageJ-devel] Avian VM and Bio-Formats
In-Reply-To: <1382186603.15382.48.camel@saalfeld-thinkpad>
References: <alpine.DEB.1.00.1310170222150.1191@s15462909.onlinehome-server.info>
	<CAHC=qdAvRHgKtUJWuzarhcW8LY=9Fay8c35b7N8AUy=wn_26wQ@mail.gmail.com>
	<1382186603.15382.48.camel@saalfeld-thinkpad>
Message-ID: <CAHC=qdDhed-0ZhVBwZm5BXth9esZGDQrt9znrFzRFfrh6E9gRw@mail.gmail.com>

Hi Stephan,
  thanks for the information!

  I should have read them in more detail :)

  And thanks for the ITK introduction. I used VTK a bit, and CMake
somtimes, and now I know they are trinity.


2013/10/19 Stephan Saalfeld <saalfeld at mpi-cbg.de>

> Hi Yili,
>
> that is you didn't read beyond the first paragraph of the introduction:
>
> http://bioinformatics.oxfordjournals.org/content/28/22/3009.full
>
> , or the first paragraph of the conclusion in the ImgLib1 workshop
> paper:
>
> http://fly.mpi-cbg.de/~preibisch/pubs/imagejpaper2010.pdf
>
> ?  Depressing for the authors ;).
>
> The other significant source of inspiration is ITK, if you don't know it
> yet, check it out, also very cool stuff:
>
> http://www.itk.org/
>
> Best,
> Stephan
>
>
>
>
> On Sat, 2013-10-19 at 17:13 +0800, Yili Zhao wrote:
> > Hi,
> >   >> Its design was the most important source of inspiration for ImgLib2.
> >   Thanks for this information.
> >   When I read ImgLib2, I have a impression that its design has some
> similar
> > with other library.
> >   Now I know this library is VIGRA :)
> >
> >   By the way, I can not access
> > http://hci.iwr.uni-heidelberg.de/vigra<
> http://hci.iwr.uni-heidelberg.de/vigra/%E2%80%8E>/
> > currently.
> > Do others have this problem?
> >
> >
> > 2013/10/17 Johannes Schindelin <Johannes.Schindelin at gmx.de>
> >
> > > Hi Ullrich,
> > >
> > > a little background information for everybody else: Ullrich is the
> > > inventor and maintainer of VIGRA, an incredibly powerful C++ library to
> > > process and analyze images. Its design was the most important source of
> > > inspiration for ImgLib2. As a consequence, I was really delighted to
> meet
> > > Ullrich at the EuBIAS meeting in Barcelona last week. Among other
> things,
> > > we talked extensively about ways to interoperate between ImgLib2 and
> > > VIGRA, and the lack of support in VIGRA to read file formats via the
> > > Bio-Formats library.
> > >
> > > Also at that meeting, I got into contact with the OpenMole project,
> and in
> > > particular with Mark Hammons who not only explained patiently the
> benefits
> > > of the Scala language to me, but also pointed out the existence of the
> > > Avian VM, a small, embeddable, BSD-licensed Java Virtual Machine
> written
> > > in C++, with a tiny Just-In-Time compiler, just enough to make it a
> > > practical choice for running limited Java inside a C++ program/library:
> > > http://oss.readytalk.com/avian/
> > >
> > > It is actually very, very, *very* limited, as I found out when I tried
> to
> > > get it to run the bfconvert tool of Bio-Formats.
> > >
> > > But I did get it to run bfconvert. To be precise, in my hands, the 5MB
> > > executable compiled from my fork of Avian was able to run my
> > > (minimally-diverging) Bio-Formats v4.4.8 fork's
> > > loci.formats.tools.ImageConverter class to convert Fiji's icon.png (my
> > > standard example) to a .tiff file (although the colors are off, but
> > > running the same example with plain Java results in a byte-identical
> > > file).
> > >
> > > Although it is too early for proper benchmarking, things seem to be
> > > comparable between Java and Avian: while Java is slightly faster in
> what
> > > time(1) calls "real" time (~0.54s vs ~0.72s), in terms of "user" time
> > > roles are reversed (~0.70s vs ~0.63s). Roughly the same holds true for
> the
> > > dynamic Avian executable (which is only 11K and links to Avian's
> libjvm.so
> > > weighing in with a whopping 1.2M). The major benefit will most likely
> be
> > > space: linking to libjvm.so should be enough, the standard Java classes
> > > are included therein. So you can get Java support in VIGRA (or any
> other
> > > C++ project) by adding a library that is slightly larger than one
> > > megabyte.
> > >
> > > Now to some more detailed explanations about the challenges I faced,
> for
> > > the technically-inclined.
> > >
> > > On the Bio-Formats side, there are two major and one minor (and one
> micro)
> > > issue:
> > >
> > > - to enable logging, Bio-Formats uses a cute hack called
> > >   ReflectedUniverse, which is basically a scripting language for Java
> > >   itself. However, it uses regular expressions, something that Avian's
> > >   class library does not yet support.
> > >
> > > - Bio-Formats uses a concurrent hashmap in loci.common.Location.
> > >   Concurrency (JSR-166) is not supported by Avian's class library yet.
> > >
> > > - in loci.formats.gui.LegacyQTTools, the value of the java.library.path
> > >   property is used without checking whether the property is null
> (unset).
> > >
> > > - some debug logging in Bio-Formats uses String.format() (not yet
> > >   supported by Avian's class library).
> > >
> > > All of these issues could be worked around in the code calling
> > > Bio-Formats: there is no need to use the ImageConverter class (which
> > > enables the logging), the concurrent hashmap could be faked by
> extending
> > > the non-concurrent hashmap (and just not bothering with the concurrency
> > > because we will most likely instantiate one VM per Bio-Formats call),
> the
> > > java.library.path property could be initialized to a dummy value and
> the
> > > logging could be switched off completely.
> > >
> > > On the Avian side, I am happy to report that I only had to extend the
> > > class library (apart from one bug fix that I will contribute upstream
> > > later this week). In particular, I had to
> > >
> > > - make RandomAccessFile support writing
> > >
> > > - provide three dummy AWT classes because Bio-Formats actually links to
> > >   them, but does not use them by default
> > >
> > > - provide a couple of interfaces and exceptions that were not yet
> included
> > >   in Avian
> > >
> > > - implement a minimal java.io.DataOutputStream
> > >
> > > - provide a FileChannel for RandomAccessFiles (i.e. implement
> getChannel)
> > >
> > > - implement java.lang.Boolean's parse(String) method
> > >
> > > - implement java.lang.Character's isISOControl(char) method
> > >
> > > - implement fake byte order methods for ByteBuffers (they are
> hardcoded to
> > >   big endian, but that is what Bio-Formats required in my test)
> > >
> > > - provide a dummy SimpleDateFormat which actually does not work, but
> does
> > >   not need to
> > >
> > > - add toString(long[]) to java.util.Arrays
> > >
> > > - teach Avian's pseudo regular expressions about "\\", i.e. the
> backslash
> > >
> > > For the moment, all of these changes are contained in hodge podge
> > > work-in-progress commits which I will clean up over the next few days.
> You
> > > can see them here (the linked pages will update whenever I get around
> to
> > > clean up the commits):
> > >
> > > https://github.com/dscho/avian/compare/bio-formats
> > > https://github.com/dscho/bioformats/compare/v4.4.8...avian
> > >
> > > Since VIGRA and ImgLib2 share design concepts, and since SCIFIO
> supports
> > > ImgLib2 natively, I think that my plan to extend the test to SCIFIO
> after
> > > cleaning up my Avian fork is sound.
> > >
> > > Once that is done, I will add unit tests that our trusty Jenkins will
> run
> > > whenever SCIFIO (or Avian) changes, to ensure that things continue to
> > > work. These unit tests will be extended as needed, e.g. when someone
> finds
> > > out that an important use case requires more changes in Avian, still.
> > >
> > > This way to call Bio-Formats and SCIFIO could become the default C++
> entry
> > > point into those libraries.
> > >
> > > Summary: I showed that Bio-Formats/SCIFIO support for VIGRA and other
> C++
> > > libraries is feasible through the BSD-licensed embeddable Java virtual
> > > machine "Avian". I am confident that I can clean up my patches this
> week
> > > still, to be contributed to the Avian project.
> > >
> > > Ciao,
> > > Johannes
> > >
> > > _______________________________________________
> > > ImageJ-devel mailing list
> > > ImageJ-devel at imagej.net
> > > http://imagej.net/mailman/listinfo/imagej-devel
> > >
> >
> >
> >
> > _______________________________________________
> > ImageJ-devel mailing list
> > ImageJ-devel at imagej.net
> > http://imagej.net/mailman/listinfo/imagej-devel
>
>


-- 
Yili Zhao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/98c1370a/attachment.html>

From ctrueden at wisc.edu  Wed Oct 23 10:26:12 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 23 Oct 2013 10:26:12 -0500
Subject: [ImageJ-devel] Latest ImageJ2 release is broken
In-Reply-To: <CADN69ykq49ZXE0GsqCwBLodO-Hqwmyaq39uootiFcau0VeF_ww@mail.gmail.com>
References: <CADN69ykq49ZXE0GsqCwBLodO-Hqwmyaq39uootiFcau0VeF_ww@mail.gmail.com>
Message-ID: <CADN69ynh4vVwKyQt3yopRKnZ4g9b5RLBEBmeH0Q=dMm0zj0SDw@mail.gmail.com>

Hi all,

> We will release 2.0.0-beta-7.5 later this weekend to address the
> issue.

The new release was uploaded last night, and contains several critical
bugfixes. As usual, it can be obtained by running the Help > Update command
(or Help > Update Fiji if using Fiji).

Regards,
Curtis


On Sat, Oct 19, 2013 at 11:19 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi all,
>
> Just a quick note that the latest ImageJ2 release, 2.0.0-beta-7.4, has a
> critical bug which prevents images from opening properly. We will release
> 2.0.0-beta-7.5 later this weekend to address the issue. Thanks for your
> patience.
>
> In the meantime, Fiji should still be working fine in its default ImageJ
> 1.x mode. (The bug only affects Fiji if you use Help > Switch to Modern
> Mode to test out ImageJ2.)
>
> Regards,
> Curtis
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/3e5779f2/attachment.html>

From ctrueden at wisc.edu  Wed Oct 23 12:45:22 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 23 Oct 2013 12:45:22 -0500
Subject: [ImageJ-devel] Writing ImageJ2 plugins
In-Reply-To: <CAC6ppSY2Hsz33nV3BdxFEhXzqfLzbFnzFoeNy31tO9uFUnDFfw@mail.gmail.com>
References: <CAC6ppSY2Hsz33nV3BdxFEhXzqfLzbFnzFoeNy31tO9uFUnDFfw@mail.gmail.com>
Message-ID: <CADN69ymXRiTZ9ZfjN7DRkAeayFUdP5-W_u6FiP-S2CSgySUNPw@mail.gmail.com>

Hi Graeme,

Sorry for the delay in reply. Writing to a public mailing list is better. I
am CCing imagej-devel and ome-devel since your questions are very
technical, and related to those two projects.

> I thought I would Email you directly because the ImageJ-devel
> mailing list seems to be intended for core project development.

>From http://developer.imagej.net/mailing-lists:
> ImageJ: For general user and developer discussion about ImageJ. This
> list is the best place to go for help with your specific use case.
>
> ImageJ-devel: For technical and developer discussion of the ImageJ2
> project. This list is for programmers contributing code to ImageJ2, or
> interested in technical discussions surrounding such development.

Both are public mailing lists intended for use by the community, not just
for core project development. The wording of ImageJ-devel is phrased that
way because ImageJ2 is still in beta and if you are using it for your
projects, you are an early adopter who is almost certainly "interested in
technical discussions" surrounding core development.

> 1. I was looking for example plugins (& example minimal plugin
> project), but get 404's when I try to look at the HelloWorld and
> GradientImage examples here:-
> http://developer.imagej.net/writing-imagej2-plugins
> (I found the github repo & Fiji wiki ImgLib2 examples)

All links on that page should be working again.

> 2. I see an example of calling IJ2 from a legacy plugin, but am also
> interested in doing the reverse, and unsure what the limitations are.

The limitations are evolving. Legacy support is very challenging to get
right. That said, it should work to call ImageJ1 data structures from an
ImageJ2 style command. There is a LegacyService for converting between IJ1
and IJ2 data structures, although the API still needs work.

Note that at the moment, ImageJ2 commands are only discovered and exposed
in the modern ImageJ2 UI. We are exploring ways of blending things in
additional ways, such as allowing the ImageJ1/Fiji legacy UI to discover
and allow execution of IJ2 commands.

What is your goal? You want to write a plugin that is available from both
IJ1 and IJ2? If so, structuring it as a legacy IJ1 plugin (which may or may
not leverage certain IJ2 API internally as demonstrated in
calling-modern-from-legacy) is the way to go for now.

> 3. What are the constraints / requirements for running plugins
> (including legacy wrapped in IJ2?) headless, with a view to running
> from OMERO in future?

In IJ2 terms, the ImgLib2 library is fully usable headless. If your IJ2
command does not depend on ij-ui you probably will be able to run it
headlessly. The requirements, in general, are the same as running any Java
code headless: do not use AWT or Swing or other UI, especially
Windows/Frames/Dialogs.

Unfortunately, you cannot just take a legacy IJ1 plugin and "wrap in IJ2."
The problem is that fundamentally, IJ1 is filled with java.awt references
including some core classes extending java.awt.Dialog and java.awt.Frame,
which are illegal to even instantiate headlessly.

We have some crazy hacks in Fiji to allow limited execution of IJ2 code
headless even when it would normally use those AWT window classes. It works
by using bytecode manipulation (javassist library) to rewrite parts of IJ1
at runtime to avoid references to those classes. However, in some cases
things will still blow up. It should go without saying that any time an IJ1
plugin asks the user for input (e.g., the WaitForUserInput dialog), it will
fail when trying to run headless.

All of that said, we may be able to support calling many IJ1 plugins
headlessly from OMERO in the same way we support it headlessly in general:
using by install Xvfb on the server side. This gets around the limitations
of java.awt.headless=true, in favor of actually giving Java a
virtual/offscreen UI. See: http://fiji.sc/Headless

As of this writing, I have not yet tried to get legacy IJ1 plugins working
from OMERO. The reason is that I know it will be a lot of effort, for
something that would only be transitional. We are writing IJ2 precisely to
avoid the sorts of problems incurred by IJ1's heavy use of AWT in core
classes. IJ2 maintains a strict separation of concerns, and its commands
have typed inputs and outputs, which are a natural match to other paradigms
such as OMERO scripts, CellProfiler modules, and KNIME nodes. Mapping IJ1
plugins to those paradigms is difficult not only due to headless issues but
also because in general there is no easy way to know the actual inputs and
outputs of the plugin, since IJ1 plugins do not declare that metadata.

So in conclusion, while I sympathize with the desire to execute ImageJ1
plugins from OMERO, ultimately a better direction is to rewrite plugins of
interest as ImageJ2 commands so we truly get a "write once, run anywhere"
effect with the whole software ecosystem interoperating with ImageJ2.

> Apologies if I missed some documentation, or a more appropriate
> community forum to ask these questions, and me know if I am jumping
> the gun and would be better waiting a few months.

Not at all; these are good questions and not well explained online. I added
a couple of short entries to the online FAQ:

http://developer.imagej.net/can-i-call-imagej2-api-imagej1-plugin
http://developer.imagej.net/can-i-call-imagej1-api-imagej2-command

Please let me know if there are other topics you would like to see covered
on the website.

Regards,
Curtis


On Thu, Sep 26, 2013 at 6:39 PM, Graeme Ball <graemeball at googlemail.com>wrote:

> Hi Curtis,
>
> I have a few questions about writing plugins for ImageJ2,
> and I thought I would Email you directly because the
> ImageJ-devel mailing list seems to be intended for core
> project development.
>
> 1. I was looking for example plugins (& example minimal
>    plugin project), but get 404's when I try to look at
>    the HelloWorld and GradientImage examples here:-
>      http://developer.imagej.net/writing-imagej2-plugins
>    (I found the github repo & Fiji wiki ImgLib2 examples)
>
> 2. I see an example of calling IJ2 from a legacy plugin,
>    but am also interested in doing the reverse, and
>    unsure what the limitations are.
>
> 3. What are the constraints / requirements for running
>    plugins (including legacy wrapped in IJ2?) headless,
>    with a view to running from OMERO in future?
>
> Apologies if I missed some documentation, or a more
> appropriate community forum to ask these questions, and
> let me know if I am jumping the gun and would be better
> off waiting a few months.
>
> Thanks & Best Regards,
>
> Graeme
>
> --
> ---------------------------
> Dr. Graeme Ball
> Department of Biochemistry
> University of Oxford
> South Parks Road
> Oxford OX1 3QU
> Phone +44-1865-613-359
> ---------------------------
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/913b71ca/attachment.html>

From ctrueden at wisc.edu  Wed Oct 23 12:57:25 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 23 Oct 2013 12:57:25 -0500
Subject: [ImageJ-devel] [fiji-devel] Re: Removing obsolete Bio-Formats
 GitHub forks
In-Reply-To: <alpine.DEB.1.00.1310182251210.1191@s15462909.onlinehome-server.info>
References: <CADN69y=zEVnwMMrbT8sOP-Nsh4fzLBD+WTCo+BVtKBBgP1Bjrg@mail.gmail.com>
	<alpine.DEB.1.00.1310181852170.1191@s15462909.onlinehome-server.info>
	<CADN69ynbaZJ+DTa-baTpx_oKieHrD0TXJAGiDE=HuOEswjjigQ@mail.gmail.com>
	<alpine.DEB.1.00.1310182251210.1191@s15462909.onlinehome-server.info>
Message-ID: <CADN69yn6MprJO5sebNJmH70BTdJZO_hVfYDd1bG=C_rd_OchuQ@mail.gmail.com>

Hi Dscho,

> I guess you're right and it is not really worth preserving because all
> of our changes basically made it back into the 'master' branch
> somehow.

OK, sounds good. The imagej/bioformats and fiji/bioformats repositories
have been deleted.

Thanks,
Curtis


On Fri, Oct 18, 2013 at 3:53 PM, Johannes Schindelin <
Johannes.Schindelin at gmx.de> wrote:

> Hi Curtis,
>
> On Fri, 18 Oct 2013, Curtis Rueden wrote:
>
> > > So by removing the topic branches, we also removed the documentation
> > > from what source we used to build certain revisions of our bio-formats
> > > submodule.
> >
> > If you think this is a problem, I am fine with reinstating the branches.
> > I still have the local branch pointers and can easily push them back if
> > that's what you want.
> >
> > Personally I just thought the benefits of simplification outweighed
> > preserving such (minor) history. My thinking is that many more people
> will
> > be looking at the list of repos in those namespaces and potentially
> > wondering why we keep a fork of the project, versus the likely extremely
> > small number (potentially zero) of developers digging through the git
> > history and cross-checking against the given links, etc.
>
> I guess you're right and it is not really worth preserving because all of
> our changes basically made it back into the 'master' branch somehow.
>
> Ciao,
> Dscho
>
> --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
>
> Mailing list web interface: http://groups.google.com/group/fiji-devel
>
> ---
> You received this message because you are subscribed to the Google Groups
> "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/groups/opt_out.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/447e48f2/attachment.html>

From ctrueden at wisc.edu  Wed Oct 23 13:04:06 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 23 Oct 2013 13:04:06 -0500
Subject: [ImageJ-devel] opening a tif file problem
In-Reply-To: <BLU0-SMTP148AD5634FBC0FA5B401F59A2560@phx.gbl>
References: <BLU0-SMTP148AD5634FBC0FA5B401F59A2560@phx.gbl>
Message-ID: <CADN69ynObUe0QMzC0+V66ya5QEsL4nrn3Gh=RWAaKMhpvLPcgw@mail.gmail.com>

Hi Mohamed,

> Before the latest updates, I used to be able to open tif files with
> ij2. Now I am getting an error (see below for the warnings I get when
> loading ij launcher and the error after trying to open a "tif" file).

Thank you for the bug report, and very sorry for the long delay in reply.

I believe these problems are resolved on the master branch, as well as in
the last few releases (latest is 2.0.0-beta-7.5). At least, I am able to
successfully open TIFF files on my system.

Could you please let us know if this problem persists for you?

Thanks,
Curtis


On Tue, Jul 30, 2013 at 11:33 AM, Mohamed Tleis
<mohammedtleis at hotmail.com>wrote:

>  Dear Developers,
>
> I wonder whether this is important for you.
>
> Before the latest updates, I used to be able to open tif files with ij2.
> Now I am getting an error (see below for the warnings I get when loading ij
> launcher and the error after trying to open a "tif" file).
>
> Note that If I switch to Legacy mode, open the image, then back into
> modern mode , things work fine.
>
> However, I still am wondering if the Invalid services in the warning
> messages is something specific to my machine. Am I missing some package?
>
> run:
> ...
> log4j:WARN No appenders could be found for logger (io.scif.Format).
> log4j:WARN Please initialize the log4j system properly.
> ...
> [WARNING] Invalid service: imagej.data.lut.DefaultLUTService
> ....
> [WARNING] Overridden plugin ij.plugin.AboutBox is blacklisted
> [WARNING] Overridden plugin ij.plugin.Commands("quit") is blacklisted
> ...
> [WARNING] Invalid service: io.scif.services.LuraWaveServiceImpl
> [WARNING] Invalid service: ome.xml.services.DefaultOMEXMLMetadataService
> [WARNING] Invalid service: ome.xml.services.OMEXMLServiceImpl
> ...
> // Trying to open a tif file
> [ERROR] Module threw exception
> java.lang.NullPointerException
>     at imagej.data.lut.io.LUTIOPlugin.supportsOpen(LUTIOPlugin.java:66)
>     at imagej.io.DefaultIOService.getOpener(DefaultIOService.java:68)
>     at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
>     at imagej.core.commands.io.OpenFile.run(OpenFile.java:87)
>     at imagej.command.CommandModule.run(CommandModule.java:163)
>     at imagej.module.ModuleRunner.run(ModuleRunner.java:169)
>     at imagej.module.ModuleRunner.call(ModuleRunner.java:126)
>     at imagej.module.ModuleRunner.call(ModuleRunner.java:67)
>     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
>     at java.util.concurrent.FutureTask.run(FutureTask.java:166)
>     at
> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
>     at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
>     at java.lang.Thread.run(Thread.java:722)
>
> Best Regards,
> Mohamed Tleis
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/4b715435/attachment-0001.html>

From bugzilla at fiji.sc  Wed Oct 23 13:18:29 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Wed, 23 Oct 2013 18:18:29 +0000
Subject: [ImageJ-devel] [Bug 647] [ERROR] Cannot create plugin
In-Reply-To: <bug-647-194@http.fiji.sc/bugzilla/>
References: <bug-647-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-647-194-rq0EfdFVQa@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=647

--- Comment #4 from Curtis Rueden <ctrueden at wisc.edu> ---
Very sorry for the long delay in reply.

On my Ubuntu 12.04.2 LTS 64-bit system, I have:

> $ java -version
> java version "1.7.0_21"
> OpenJDK Runtime Environment (IcedTea 2.3.9) (7u21-2.3.9-0ubuntu0.12.04.1)
> OpenJDK 64-Bit Server VM (build 23.7-b01, mixed mode)

And I am able to run Analyze Particles successfully in ImageJ2.

Is there any way you can upgrade the Java on your cluster? Unfortunately,
OpenJDK is not being developed at all for Java6 anymore, but only for Java7.

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/26103bf9/attachment.html>

From bugzilla at fiji.sc  Wed Oct 23 13:18:43 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Wed, 23 Oct 2013 18:18:43 +0000
Subject: [ImageJ-devel] [Bug 647] [ERROR] Cannot create plugin
In-Reply-To: <bug-647-194@http.fiji.sc/bugzilla/>
References: <bug-647-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-647-194-vVcN3LV9Aj@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=647

Curtis Rueden <ctrueden at wisc.edu> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
             Status|NEW                         |RESOLVED
         Resolution|---                         |WONTFIX

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/de7c78e9/attachment.html>

From ctrueden at wisc.edu  Wed Oct 23 13:23:52 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 23 Oct 2013 13:23:52 -0500
Subject: [ImageJ-devel] neutron trucks [SEC=UNCLASSIFIED]
In-Reply-To: <70AB6388B5A8CA4DB1793B6CA9D6D6A3231DFA0A@VIC-EXCH-MB1.arpansa.local>
References: <70AB6388B5A8CA4DB1793B6CA9D6D6A3231DFA0A@VIC-EXCH-MB1.arpansa.local>
Message-ID: <CADN69ymER0wVUgGbN5TQ0EC_j9LR9mdOj+58=PL+sHUkn6GzWw@mail.gmail.com>

Hi Yelena,

> I am trying to recognize and count oval shaped objects of particular
> size with flare inside them (neutron trucks) using Image J. How do I
> substract round objects or lines, or count ovals only?

For an quick overview of how to perform segmentation in ImageJ/Fiji, see:
    http://fiji.sc/Segmentation

You can discriminate based on size and circularity using the Analyze
Particles command:
    http://imagej.net/docs/guide/146-30.html#sub:Analyze-Particles...

If you have too many difficulties, give the Trainable Weka Segmentation a
try.

Regards,
Curtis


On Mon, Oct 21, 2013 at 12:47 AM, Yelena Botanova <
Yelena.Botanova at arpansa.gov.au> wrote:

>  Dear All,****
>
> ** **
>
> I am trying to recognize and count oval shaped objects of particular size
> with flare inside them (neutron trucks) using Image J. How do I substract
> round objects or lines, or count ovals only?****
>
> ** **
>
> I?d be grateful for any help or advice you can give.****
>
> ** **
>
> Thanks for your time,****
>
> ** **
>
> Best Regards,****
>
> ** **
>
> Yelena.****
>
> ** **
>
> ** **
>
> **********************************************************************
> Important: This email (including any attachments) is intended only for the
> use of the
> addressee and may contain confidential and / or privileged information.
> If you are not the intended addressee, you are prohibited from relaying on,
> distributing, disclosing, copying or
> in any other way using any information in this email. If you have received
> this email in error, please notify the sender immediately and erase all
> copies.
> Any opinions expressed in this email are not necessarily held or
> authorised by Australian Radiation Protection And Nuclear Safety Agency
> (ARPANSA).
> Whilst ARPANSA has taken all reasonable steps to ensure this is email is
> virus free,
> it accepts no responsibility and makes no warranty. The recipient should
> take its own steps to ensure
> there is no virus and bears full responsibility for any use.
>
> Australian Radiation Protection And Nuclear Safety Agency
> **********************************************************************
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/b1367cb6/attachment.html>

From ctrueden at wisc.edu  Wed Oct 23 13:31:47 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 23 Oct 2013 13:31:47 -0500
Subject: [ImageJ-devel] nutron trucks [SEC=UNCLASSIFIED]
In-Reply-To: <70AB6388B5A8CA4DB1793B6CA9D6D6A3231DFA12@VIC-EXCH-MB1.arpansa.local>
References: <70AB6388B5A8CA4DB1793B6CA9D6D6A3231DFA12@VIC-EXCH-MB1.arpansa.local>
Message-ID: <CADN69y=6q-mMu2aW+tH0Bof=4Ou4Q6wPeOJrhr6x-iiTDuDfpQ@mail.gmail.com>

For the archives: this thread is a duplicate of:
http://imagej.net/pipermail/imagej-devel/2013-October/001811.html


On Mon, Oct 21, 2013 at 12:47 AM, Yelena Botanova <
Yelena.Botanova at arpansa.gov.au> wrote:

>  Dear All,****
>
> ** **
>
> I am trying to recognize and count oval shaped objects of particular size
> with flare inside them (neutron trucks) using ImageJ. How do I substract
> round objects or lines, or count ovals only? ****
>
> ** **
>
> I?d be grateful for any help or advice you can give.****
>
> ** **
>
> Thanks for your time,****
>
> ** **
>
> Best Regards, ****
>
> ** **
>
> ** **
>
> Yelena.****
>
> ** **
>
> ** **
>
> **********************************************************************
> Important: This email (including any attachments) is intended only for the
> use of the
> addressee and may contain confidential and / or privileged information.
> If you are not the intended addressee, you are prohibited from relaying on,
> distributing, disclosing, copying or
> in any other way using any information in this email. If you have received
> this email in error, please notify the sender immediately and erase all
> copies.
> Any opinions expressed in this email are not necessarily held or
> authorised by Australian Radiation Protection And Nuclear Safety Agency
> (ARPANSA).
> Whilst ARPANSA has taken all reasonable steps to ensure this is email is
> virus free,
> it accepts no responsibility and makes no warranty. The recipient should
> take its own steps to ensure
> there is no virus and bears full responsibility for any use.
>
> Australian Radiation Protection And Nuclear Safety Agency
> **********************************************************************
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/da3d7f96/attachment.html>

From graemeball at googlemail.com  Wed Oct 23 16:02:02 2013
From: graemeball at googlemail.com (Graeme Ball)
Date: Wed, 23 Oct 2013 22:02:02 +0100
Subject: [ImageJ-devel] [ome-devel] Writing ImageJ2 plugins
In-Reply-To: <b335e8c0664f47b69221feee970831bc@HUB01.ad.oak.ox.ac.uk>
References: <CAC6ppSY2Hsz33nV3BdxFEhXzqfLzbFnzFoeNy31tO9uFUnDFfw@mail.gmail.com>
	<b335e8c0664f47b69221feee970831bc@HUB01.ad.oak.ox.ac.uk>
Message-ID: <CAC6ppSZ7uZhK2++rZZMBbNCRAwj1MGir9jN+S5Np-TcRzqXB-Q@mail.gmail.com>

Hi Curtis,

thank you for your reply - that certainly clears up some of my questions.
Yes, my questions were motivated by the desire to write plugins for IJ1
that will not be obsolete in IJ2, and preferably be able to be run
headlessly, e.g. from OMERO.

If possible, when I write (ImageJ1) plugins I try to confine any GUI calls
to the run method, and all of the real work to an exec method that does not
require interactive input. It seems that ImageJ2 also uses a run method as
the entry point for running a command? (correct me if I am wrong) In that
case, at least the run method would have to be replaced.

I was not so worried about ImageJ1's dialogs (which I expected would *not*
be OK in a headless plugin), but was more concerned about ImagePlus, Roi
etc. which make heavy use of awt classes. If these also cannot be used
headlessly, then I guess a legacy mode with virtual UI, or re-writing to
use the IJ2 API are the only real options.

It sounds as though converting IJ1 plugins to use the IJ2 API is likely be
more productive than trying to use the legacy IJ1 API from an IJ2 plugin
(headless), but is the latter already known to be hopeless? If not, I might
be tempted to try a little.

Until now I have chosen to write for IJ1 since the IJ2 API is still a
moving target and has a smaller user base, but I guess IJ2 / ImgLib2
already makes a lot of  sense for headless processing tasks. Would you say
that once imagej2-b9-rois is out, the IJ2 API will be fairly stable going
forward?

Thanks & Best Regards,

Graeme


On Wed, Oct 23, 2013 at 6:45 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

>  Hi Graeme,
>
>  Sorry for the delay in reply. Writing to a public mailing list is
> better. I am CCing imagej-devel and ome-devel since your questions are very
> technical, and related to those two projects.
>
>  > I thought I would Email you directly because the ImageJ-devel
> > mailing list seems to be intended for core project development.
>
>  From http://developer.imagej.net/mailing-lists:
>  > ImageJ: For general user and developer discussion about ImageJ. This
> > list is the best place to go for help with your specific use case.
> >
> > ImageJ-devel: For technical and developer discussion of the ImageJ2
> > project. This list is for programmers contributing code to ImageJ2, or
> > interested in technical discussions surrounding such development.
>
>  Both are public mailing lists intended for use by the community, not
> just for core project development. The wording of ImageJ-devel is phrased
> that way because ImageJ2 is still in beta and if you are using it for your
> projects, you are an early adopter who is almost certainly "interested in
> technical discussions" surrounding core development.
>
>  > 1. I was looking for example plugins (& example minimal plugin
> > project), but get 404's when I try to look at the HelloWorld and
> > GradientImage examples here:-
> > http://developer.imagej.net/writing-imagej2-plugins
> > (I found the github repo & Fiji wiki ImgLib2 examples)
>
>  All links on that page should be working again.
>
>  > 2. I see an example of calling IJ2 from a legacy plugin, but am also
> > interested in doing the reverse, and unsure what the limitations are.
>
>  The limitations are evolving. Legacy support is very challenging to get
> right. That said, it should work to call ImageJ1 data structures from an
> ImageJ2 style command. There is a LegacyService for converting between IJ1
> and IJ2 data structures, although the API still needs work.
>
>  Note that at the moment, ImageJ2 commands are only discovered and
> exposed in the modern ImageJ2 UI. We are exploring ways of blending things
> in additional ways, such as allowing the ImageJ1/Fiji legacy UI to discover
> and allow execution of IJ2 commands.
>
>  What is your goal? You want to write a plugin that is available from
> both IJ1 and IJ2? If so, structuring it as a legacy IJ1 plugin (which may
> or may not leverage certain IJ2 API internally as demonstrated in
> calling-modern-from-legacy) is the way to go for now.
>
>  > 3. What are the constraints / requirements for running plugins
> > (including legacy wrapped in IJ2?) headless, with a view to running
> > from OMERO in future?
>
>  In IJ2 terms, the ImgLib2 library is fully usable headless. If your IJ2
> command does not depend on ij-ui you probably will be able to run it
> headlessly. The requirements, in general, are the same as running any Java
> code headless: do not use AWT or Swing or other UI, especially
> Windows/Frames/Dialogs.
>
>  Unfortunately, you cannot just take a legacy IJ1 plugin and "wrap in
> IJ2." The problem is that fundamentally, IJ1 is filled with java.awt
> references including some core classes extending java.awt.Dialog and
> java.awt.Frame, which are illegal to even instantiate headlessly.
>
>  We have some crazy hacks in Fiji to allow limited execution of IJ2 code
> headless even when it would normally use those AWT window classes. It works
> by using bytecode manipulation (javassist library) to rewrite parts of IJ1
> at runtime to avoid references to those classes. However, in some cases
> things will still blow up. It should go without saying that any time an IJ1
> plugin asks the user for input (e.g., the WaitForUserInput dialog), it will
> fail when trying to run headless.
>
>  All of that said, we may be able to support calling many IJ1 plugins
> headlessly from OMERO in the same way we support it headlessly in general:
> using by install Xvfb on the server side. This gets around the limitations
> of java.awt.headless=true, in favor of actually giving Java a
> virtual/offscreen UI. See: http://fiji.sc/Headless
>
>  As of this writing, I have not yet tried to get legacy IJ1 plugins
> working from OMERO. The reason is that I know it will be a lot of effort,
> for something that would only be transitional. We are writing IJ2 precisely
> to avoid the sorts of problems incurred by IJ1's heavy use of AWT in core
> classes. IJ2 maintains a strict separation of concerns, and its commands
> have typed inputs and outputs, which are a natural match to other paradigms
> such as OMERO scripts, CellProfiler modules, and KNIME nodes. Mapping IJ1
> plugins to those paradigms is difficult not only due to headless issues but
> also because in general there is no easy way to know the actual inputs and
> outputs of the plugin, since IJ1 plugins do not declare that metadata.
>
>  So in conclusion, while I sympathize with the desire to execute ImageJ1
> plugins from OMERO, ultimately a better direction is to rewrite plugins of
> interest as ImageJ2 commands so we truly get a "write once, run anywhere"
> effect with the whole software ecosystem interoperating with ImageJ2.
>
>  > Apologies if I missed some documentation, or a more appropriate
> > community forum to ask these questions, and me know if I am jumping
> > the gun and would be better waiting a few months.
>
>  Not at all; these are good questions and not well explained online. I
> added a couple of short entries to the online FAQ:
>
>  http://developer.imagej.net/can-i-call-imagej2-api-imagej1-plugin
>  http://developer.imagej.net/can-i-call-imagej1-api-imagej2-command
>
>  Please let me know if there are other topics you would like to see
> covered on the website.
>
>  Regards,
> Curtis
>
>
> On Thu, Sep 26, 2013 at 6:39 PM, Graeme Ball <graemeball at googlemail.com>wrote:
>
>>  Hi Curtis,
>>
>>  I have a few questions about writing plugins for ImageJ2,
>> and I thought I would Email you directly because the
>> ImageJ-devel mailing list seems to be intended for core
>> project development.
>>
>>  1. I was looking for example plugins (& example minimal
>>    plugin project), but get 404's when I try to look at
>>    the HelloWorld and GradientImage examples here:-
>>      http://developer.imagej.net/writing-imagej2-plugins
>>    (I found the github repo & Fiji wiki ImgLib2 examples)
>>
>>  2. I see an example of calling IJ2 from a legacy plugin,
>>    but am also interested in doing the reverse, and
>>    unsure what the limitations are.
>>
>>  3. What are the constraints / requirements for running
>>    plugins (including legacy wrapped in IJ2?) headless,
>>    with a view to running from OMERO in future?
>>
>>  Apologies if I missed some documentation, or a more
>> appropriate community forum to ask these questions, and
>> let me know if I am jumping the gun and would be better
>> off waiting a few months.
>>
>>  Thanks & Best Regards,
>>
>>  Graeme
>>
>>  --
>> ---------------------------
>> Dr. Graeme Ball
>> Department of Biochemistry
>> University of Oxford
>> South Parks Road
>> Oxford OX1 3QU
>> Phone +44-1865-613-359
>> ---------------------------
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/f28098a0/attachment-0001.html>

From ctrueden at wisc.edu  Wed Oct 23 17:00:59 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 23 Oct 2013 17:00:59 -0500
Subject: [ImageJ-devel] [ome-devel] Writing ImageJ2 plugins
In-Reply-To: <CAC6ppSZ7uZhK2++rZZMBbNCRAwj1MGir9jN+S5Np-TcRzqXB-Q@mail.gmail.com>
References: <CAC6ppSY2Hsz33nV3BdxFEhXzqfLzbFnzFoeNy31tO9uFUnDFfw@mail.gmail.com>
	<b335e8c0664f47b69221feee970831bc@HUB01.ad.oak.ox.ac.uk>
	<CAC6ppSZ7uZhK2++rZZMBbNCRAwj1MGir9jN+S5Np-TcRzqXB-Q@mail.gmail.com>
Message-ID: <CADN69yn18QUcTANgJYvhYwAMbbiiNHTky92WAVgE6PFnQkAaUw@mail.gmail.com>

Hi Graeme,

Based on the list that you & Ilan sent me a while back, I started a
spreadsheet detailing priority targets for support within OMERO:

https://docs.google.com/spreadsheet/ccc?key=0Ancmne1B9NOwdGxQOEpKSVVGbk1TQ1ZSMHEzWHFwbmc&usp=sharing

Anyone is free to check it out and comment if desired. Some of the items on
your list were quite general, and/or not totally clear to me, so edit away
as needed.

> my questions were motivated by the desire to write plugins for IJ1
> that will not be obsolete in IJ2, and preferably be able to be run
> headlessly, e.g. from OMERO.

OK, thanks for clarifying.

> It seems that ImageJ2 also uses a run method as the entry point for
> running a command? (correct me if I am wrong) In that case, at least
> the run method would have to be replaced.

ImageJ2's commands use Runnable's run(). ImageJ1 plugins use a custom
PlugIn interface's run(String). So they are technically compatible, though
I wouldn't necessarily recommend creating a hybrid. ;-)

> I was not so worried about ImageJ1's dialogs (which I expected would
> *not* be OK in a headless plugin)

Actually, confusingly, you *can* use GenericDialog when running headless in
a macro because of the javassist hacks I mentioned. When running from a
macro, the dialog is never actually shown, but instead parameters are
harvested from the macro options string.

> It sounds as though converting IJ1 plugins to use the IJ2 API is
> likely be more productive than trying to use the legacy IJ1 API from
> an IJ2 plugin (headless), but is the latter already known to be
> hopeless? If not, I might be tempted to try a little.

I wouldn't say hopeless. In many cases, you *can* run IJ1 plugins headless,
as explained on the Fiji wiki Headless page I linked before (
http://fiji.sc/Headless). My next step for the OMERO integration will be
create an ImageJ2 command "Run Script" which executes a given script or IJ1
macro. Then I can start testing calling IJ1 macro code headless from OMERO
and see how well it works in practice.

That said, I stand by my suggestion that *new* code would be better written
as an ImageJ2 command because otherwise it won't be easily accessible from
the growing number of contexts I mentioned such as CellProfiler and KNIME.

> Until now I have chosen to write for IJ1 since the IJ2 API is still a
> moving target and has a smaller user base, but I guess IJ2 / ImgLib2
> already makes a lot of  sense for headless processing tasks. Would you
> say that once imagej2-b9-rois is out, the IJ2 API will be fairly
> stable going forward?

My promise is that when ImageJ 2.0.0 final is released, *then* the API will
be stable, with old API being properly deprecated for long periods of time,
etc. Before that, I do not want to make any promises. The API is growing
more and more stable with each release, but it is tough to say what "fairly
stable" really means here.

One idea I had recently is to start bringing some components of ImageJ2 out
of beta in phases. The scijava-common component is already out of beta.
Some IJ2 components such as ij-core are already extremely stable. The
scifio library will probably be out of beta (and hence stable) within a
year. But the hard stuff remains: the ij-data component, how it ties in to
ImgLib2 (which also needs to come out of beta at some point), and the IJ2
display model. Those may need to bake a little longer.

Regards,
Curtis


On Wed, Oct 23, 2013 at 4:02 PM, Graeme Ball <graemeball at googlemail.com>wrote:

> Hi Curtis,
>
> thank you for your reply - that certainly clears up some of my questions.
> Yes, my questions were motivated by the desire to write plugins for IJ1
> that will not be obsolete in IJ2, and preferably be able to be run
> headlessly, e.g. from OMERO.
>
> If possible, when I write (ImageJ1) plugins I try to confine any GUI calls
> to the run method, and all of the real work to an exec method that does not
> require interactive input. It seems that ImageJ2 also uses a run method as
> the entry point for running a command? (correct me if I am wrong) In that
> case, at least the run method would have to be replaced.
>
> I was not so worried about ImageJ1's dialogs (which I expected would *not*
> be OK in a headless plugin), but was more concerned about ImagePlus, Roi
> etc. which make heavy use of awt classes. If these also cannot be used
> headlessly, then I guess a legacy mode with virtual UI, or re-writing to
> use the IJ2 API are the only real options.
>
> It sounds as though converting IJ1 plugins to use the IJ2 API is likely be
> more productive than trying to use the legacy IJ1 API from an IJ2 plugin
> (headless), but is the latter already known to be hopeless? If not, I might
> be tempted to try a little.
>
> Until now I have chosen to write for IJ1 since the IJ2 API is still a
> moving target and has a smaller user base, but I guess IJ2 / ImgLib2
> already makes a lot of  sense for headless processing tasks. Would you say
> that once imagej2-b9-rois is out, the IJ2 API will be fairly stable going
> forward?
>
> Thanks & Best Regards,
>
> Graeme
>
>
> On Wed, Oct 23, 2013 at 6:45 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>>  Hi Graeme,
>>
>>  Sorry for the delay in reply. Writing to a public mailing list is
>> better. I am CCing imagej-devel and ome-devel since your questions are very
>> technical, and related to those two projects.
>>
>>  > I thought I would Email you directly because the ImageJ-devel
>> > mailing list seems to be intended for core project development.
>>
>>  From http://developer.imagej.net/mailing-lists:
>>  > ImageJ: For general user and developer discussion about ImageJ. This
>> > list is the best place to go for help with your specific use case.
>> >
>> > ImageJ-devel: For technical and developer discussion of the ImageJ2
>> > project. This list is for programmers contributing code to ImageJ2, or
>> > interested in technical discussions surrounding such development.
>>
>>  Both are public mailing lists intended for use by the community, not
>> just for core project development. The wording of ImageJ-devel is phrased
>> that way because ImageJ2 is still in beta and if you are using it for your
>> projects, you are an early adopter who is almost certainly "interested in
>> technical discussions" surrounding core development.
>>
>>  > 1. I was looking for example plugins (& example minimal plugin
>> > project), but get 404's when I try to look at the HelloWorld and
>> > GradientImage examples here:-
>> > http://developer.imagej.net/writing-imagej2-plugins
>> > (I found the github repo & Fiji wiki ImgLib2 examples)
>>
>>  All links on that page should be working again.
>>
>>  > 2. I see an example of calling IJ2 from a legacy plugin, but am also
>> > interested in doing the reverse, and unsure what the limitations are.
>>
>>  The limitations are evolving. Legacy support is very challenging to get
>> right. That said, it should work to call ImageJ1 data structures from an
>> ImageJ2 style command. There is a LegacyService for converting between IJ1
>> and IJ2 data structures, although the API still needs work.
>>
>>  Note that at the moment, ImageJ2 commands are only discovered and
>> exposed in the modern ImageJ2 UI. We are exploring ways of blending things
>> in additional ways, such as allowing the ImageJ1/Fiji legacy UI to discover
>> and allow execution of IJ2 commands.
>>
>>  What is your goal? You want to write a plugin that is available from
>> both IJ1 and IJ2? If so, structuring it as a legacy IJ1 plugin (which may
>> or may not leverage certain IJ2 API internally as demonstrated in
>> calling-modern-from-legacy) is the way to go for now.
>>
>>  > 3. What are the constraints / requirements for running plugins
>> > (including legacy wrapped in IJ2?) headless, with a view to running
>> > from OMERO in future?
>>
>>  In IJ2 terms, the ImgLib2 library is fully usable headless. If your IJ2
>> command does not depend on ij-ui you probably will be able to run it
>> headlessly. The requirements, in general, are the same as running any Java
>> code headless: do not use AWT or Swing or other UI, especially
>> Windows/Frames/Dialogs.
>>
>>  Unfortunately, you cannot just take a legacy IJ1 plugin and "wrap in
>> IJ2." The problem is that fundamentally, IJ1 is filled with java.awt
>> references including some core classes extending java.awt.Dialog and
>> java.awt.Frame, which are illegal to even instantiate headlessly.
>>
>>  We have some crazy hacks in Fiji to allow limited execution of IJ2 code
>> headless even when it would normally use those AWT window classes. It works
>> by using bytecode manipulation (javassist library) to rewrite parts of IJ1
>> at runtime to avoid references to those classes. However, in some cases
>> things will still blow up. It should go without saying that any time an IJ1
>> plugin asks the user for input (e.g., the WaitForUserInput dialog), it will
>> fail when trying to run headless.
>>
>>  All of that said, we may be able to support calling many IJ1 plugins
>> headlessly from OMERO in the same way we support it headlessly in general:
>> using by install Xvfb on the server side. This gets around the limitations
>> of java.awt.headless=true, in favor of actually giving Java a
>> virtual/offscreen UI. See: http://fiji.sc/Headless
>>
>>  As of this writing, I have not yet tried to get legacy IJ1 plugins
>> working from OMERO. The reason is that I know it will be a lot of effort,
>> for something that would only be transitional. We are writing IJ2 precisely
>> to avoid the sorts of problems incurred by IJ1's heavy use of AWT in core
>> classes. IJ2 maintains a strict separation of concerns, and its commands
>> have typed inputs and outputs, which are a natural match to other paradigms
>> such as OMERO scripts, CellProfiler modules, and KNIME nodes. Mapping IJ1
>> plugins to those paradigms is difficult not only due to headless issues but
>> also because in general there is no easy way to know the actual inputs and
>> outputs of the plugin, since IJ1 plugins do not declare that metadata.
>>
>>  So in conclusion, while I sympathize with the desire to execute ImageJ1
>> plugins from OMERO, ultimately a better direction is to rewrite plugins of
>> interest as ImageJ2 commands so we truly get a "write once, run anywhere"
>> effect with the whole software ecosystem interoperating with ImageJ2.
>>
>>  > Apologies if I missed some documentation, or a more appropriate
>> > community forum to ask these questions, and me know if I am jumping
>> > the gun and would be better waiting a few months.
>>
>>  Not at all; these are good questions and not well explained online. I
>> added a couple of short entries to the online FAQ:
>>
>>  http://developer.imagej.net/can-i-call-imagej2-api-imagej1-plugin
>>  http://developer.imagej.net/can-i-call-imagej1-api-imagej2-command
>>
>>  Please let me know if there are other topics you would like to see
>> covered on the website.
>>
>>  Regards,
>> Curtis
>>
>>
>> On Thu, Sep 26, 2013 at 6:39 PM, Graeme Ball <graemeball at googlemail.com>wrote:
>>
>>>  Hi Curtis,
>>>
>>>  I have a few questions about writing plugins for ImageJ2,
>>> and I thought I would Email you directly because the
>>> ImageJ-devel mailing list seems to be intended for core
>>> project development.
>>>
>>>  1. I was looking for example plugins (& example minimal
>>>    plugin project), but get 404's when I try to look at
>>>    the HelloWorld and GradientImage examples here:-
>>>      http://developer.imagej.net/writing-imagej2-plugins
>>>    (I found the github repo & Fiji wiki ImgLib2 examples)
>>>
>>>  2. I see an example of calling IJ2 from a legacy plugin,
>>>    but am also interested in doing the reverse, and
>>>    unsure what the limitations are.
>>>
>>>  3. What are the constraints / requirements for running
>>>    plugins (including legacy wrapped in IJ2?) headless,
>>>    with a view to running from OMERO in future?
>>>
>>>  Apologies if I missed some documentation, or a more
>>> appropriate community forum to ask these questions, and
>>> let me know if I am jumping the gun and would be better
>>> off waiting a few months.
>>>
>>>  Thanks & Best Regards,
>>>
>>>  Graeme
>>>
>>>  --
>>> ---------------------------
>>> Dr. Graeme Ball
>>> Department of Biochemistry
>>> University of Oxford
>>> South Parks Road
>>> Oxford OX1 3QU
>>> Phone +44-1865-613-359
>>> ---------------------------
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131023/a045860a/attachment-0001.html>

From ctrueden at wisc.edu  Thu Oct 24 13:14:24 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 24 Oct 2013 13:14:24 -0500
Subject: [ImageJ-devel] [ImgLib2] The img-metadata branch
In-Reply-To: <CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
References: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>
	<CADN69ymwt_qLY2aYuGPonWEbS5sQxAmYHi==YdAvNe464yEV_w@mail.gmail.com>
	<CAMWa8i1+H5X=O+oe14SE200jkq5hPKZmVYnX=-q0NrKpJp8x2Q@mail.gmail.com>
	<CAMWa8i1t-haNinXjkaoDFntRF-8aW+1Si8QZYQZKePxHzptVtQ@mail.gmail.com>
Message-ID: <CADN69ymbqEzu+XCRQr051ke1vppEf9frOUe=CEK4GSmop_00eg@mail.gmail.com>

Hi Brian,

Apologies for the long delay in reply. It is better to write to a public
mailing list. I am CCing imagej-devel.

> Is the following code snippet still correct given recent changes??
>
> AxisType[] ax = new AxisType[3]; ax[0]=Axes.X; ax[1]=Axes.Y;
> ax[2]=Axes.Z;
>
> ImgPlus<T> imgPlus = new ImgPlus<T>(image, name, ax);
>
> new ImgSaver().saveImg("name.ome.tif", imgPlus);

Firstly, as an aside, please note that ImgSaver has moved from the
net.imglib2:imglib2-io project into io.scif:scifio core.

But yes, the above code is still supposed to work.

However, in practice there is currently a bug in ImgSaver preventing things
from working correctly.

Here is a complete (non-)working example:
https://gist.github.com/ctrueden/6234396

We are working on a fix now and will reply back when the bug is resolved.

Regards,
Curtis


On Tue, Aug 13, 2013 at 5:21 AM, Brian Northan <bnorthan at gmail.com> wrote:

> Hi Curtis
>
> So after updating imglib this morning I now get lots of errors.  Which is
> expected after your changes.  So I suspect after I sort through them and
> rework my code for the changes that saving the axis types will work again.
>
> But one other quick question.  Is the ImageJ2 scripting ready for use??  I
> looked at it a bit a while ago but it didn't seem quite ready.   I have a
> series of commands I call, so temporarily I just use a bash script calling
> Imagej2 in headless mode, with a utility I wrote to parse command name and
> parameters.   Eventually I will switch to the ImageJ scripting...  is it
> usable yet or should I wait a few more months?
>
> Thanks, this stuff is really great.
>
> Brian
>
> On Tue, Aug 13, 2013 at 4:46 AM, Brian Northan <bnorthan at gmail.com> wrote:
>
>> Hi Curtis
>>
>> I have some simple code to wrap an 3D Img<T> as an ImgPlus, define the
>> axis as x,y and z and then save it.  Up until a week or so ago it seemed to
>> work fine.  But now when I read back the image it come in as x, y, t.   Is
>> the following code snippet still correct given recent changes??   Thanks-
>> Brian
>>
>> AxisType[] ax = new AxisType[3];
>>         ax[0]=Axes.X;
>>         ax[1]=Axes.Y;
>>         ax[2]=Axes.Z;
>>
>> ImgPlus<T> imgPlus = new ImgPlus<T>(image, name, ax);
>>
>> new ImgSaver().saveImg("name.ome.tif", imgPlus);
>>
>>
>>
>> On Mon, Aug 12, 2013 at 1:39 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>
>>> Hi all,
>>>
>>> > I will merge the img-metadata branch to master on Thursday.
>>>
>>> Got a bit busy in the interim, but img-metadata is now merged to
>>> imglib.git's master branch:
>>>
>>>
>>> https://github.com/imagej/imglib/commit/e4e26aa05e0f42ff1a90e8c6d67235431471de44
>>>
>>>  The commit message gives a quick gist of the changes, including future
>>> directions.
>>>
>>> Please let me know of any questions or problems with it!
>>>
>>> Regards,
>>> Curtis
>>>
>>>
>>> On Tue, Jul 30, 2013 at 10:28 AM, Curtis Rueden <ctrueden at wisc.edu>wrote:
>>>
>>>> Hi all, and especially ImgLib2 developers,
>>>>
>>>> At the ImgLib2 hackathon this past May, I started work on a branch to
>>>> make it easier to attach per-axis metadata to N-dimensional spaces. I think
>>>> this branch is finally in a merge-worthy state.
>>>>
>>>> It introduces an AnnotatedSpace extension to EuclideanSpace which lets
>>>> you attach on Axis per dimension. It defines TypedSpace, which declares an
>>>> AxisType for each Axis, as well as a CalibratedSpace, which in addition
>>>> adds a calibration value and optional unit name to the mix.
>>>>
>>>> This approach is much more flexible than the previous CalibratedSpace,
>>>> which has been renamed to OldCalibratedSpace and deprecated until we can
>>>> fully transition all the code away from it. In particular, having the axes
>>>> attached to the space directly will allows Views to maintain the axis
>>>> metadata without much additional work.
>>>>
>>>> Note that these new classes are defined in the net.imglib2.meta
>>>> component, which was split into a separate module called imglib2-meta. The
>>>> ImgPlus class moved there, too (it should have been there all along). So
>>>> merging this branch will cause some code breakage, but all should be
>>>> straightforward to fix: rename usages of CalibratedSpace to
>>>> OldCalibratedSpace, and rename the ImgPlus package from net.imglib2.img to
>>>> net.imglib2.meta.
>>>>
>>>> Going forward, we can also add a CalibratedViews class to the
>>>> net.imglib2.meta package which has some additional features such as
>>>> exposing resampled Imgs from a source CalibratedSpace into a target one
>>>> based on the units used. We can lean on a units library for this, as we
>>>> have discussed in the past.
>>>>
>>>> If interested, you can browse the branch at:
>>>> https://github.com/imagej/imglib/compare/img-metadata
>>>>
>>>> If no one objects, I will merge the img-metadata branch to master on
>>>> Thursday.
>>>>
>>>> Regards,
>>>> Curtis
>>>>
>>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131024/0406b1ef/attachment.html>

From luc at miprosoft.com  Fri Oct 25 10:46:18 2013
From: luc at miprosoft.com (Luc Deschenaux)
Date: Fri, 25 Oct 2013 17:46:18 +0200
Subject: [ImageJ-devel] Accessing metadata from C
In-Reply-To: <CADN69ymtncvOp3-hqSjJYXnPd=jLr3E20D9bVcmLz060YkBHdg@mail.gmail.com>
References: <52669A1E.5080207@miprosoft.com>
	<CADN69ymtncvOp3-hqSjJYXnPd=jLr3E20D9bVcmLz060YkBHdg@mail.gmail.com>
Message-ID: <526A924A.6080001@miprosoft.com>

Thanks Curtis,

for now i'll just use tiffinfo to extract the XML i need..

#!/bin/sh
INFO=$(tiffinfo "$1" 2>&1 | sed -r -n -e '/Warning/b' -e 's/.*Tag 50839: 
*//p')

doit() {
   node | xmlstarlet fo
}

doit << EOF
   console.log(
     new Buffer([$INFO])
     .toString('utf8')
     .replace(/\0|\n/g,'')
     .replace(/^[^<]+<\?xml/,'<?xml')
     .replace(/\/properties>.*/,'/properties>')
   );
EOF

On 22/10/13 18:10, Curtis Rueden wrote:
> Hi Luc,
>
> > I cannot figure out how to access metadata('Info') in a TIFF file,
> > without launching ImageJ in batch mode to call getMetadata('Info')
> > ...
> >
> > Is it possible with FreeImage or any other C library ?..
>
> The metadata text is written out to the TIFF using custom tags 50838 
> and 50839.
>
> Using libtiff's tiffinfo command line tool, you'll see something like:
>
>   Tag 50839: 
> 73,74,73,74,105,110,102,111,0,0,0,1,0,72,0,101,0,108,0,108,0,111,0,32,0,119,0,111,0,114,0,108,0,100,0,46,0,46,0,46,0,10,0,71,0,114,0,101,0,97,0,116,0,46
>
> Which must then be decoded to a string.
>
> Source code at:
> https://github.com/fiji/ImageJA/blob/v1.48e/src/main/java/ij/io/TiffEncoder.java#L355
> https://github.com/fiji/ImageJA/blob/v1.48e/src/main/java/ij/io/TiffDecoder.java#L43
>
> Regards,
> Curtis
>
> P.S. Looks like someone submitted a patch to support this in Pillow, 
> but it is not yet merged:
> https://github.com/python-imaging/Pillow/issues/291. Who knows what 
> other software already supports it.
>
>
> On Tue, Oct 22, 2013 at 10:30 AM, Luc Deschenaux <luc at miprosoft.com 
> <mailto:luc at miprosoft.com>> wrote:
>
>     Hi,
>
>     I cannot figure out how to access metadata('Info') in a TIFF file,
>     without launching ImageJ in batch mode to call getMetadata('Info') ...
>
>     Is it possible with FreeImage or any other C library ?..
>
>     Regards,
>
>     Luc
>
>     _______________________________________________
>     ImageJ-devel mailing list
>     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>     http://imagej.net/mailman/listinfo/imagej-devel
>
>


-- 
Luc Deschenaux

t: +41 788 266 366
v: +41 225 085 085 @ netvoip.ch

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20131025/811c95c9/attachment.html>

