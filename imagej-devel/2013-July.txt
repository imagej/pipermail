From tobias.pietzsch at gmail.com  Mon Jul  1 05:37:26 2013
From: tobias.pietzsch at gmail.com (Tobias Pietzsch)
Date: Mon, 1 Jul 2013 12:37:26 +0200
Subject: [ImageJ-devel] SciJava Jenkins & Maven repository?
In-Reply-To: <CADN69ymvEH8-DTTQQM8qogsrNkuUTyimHYKsC9Jj1xBqzBszXg@mail.gmail.com>
References: <CADN69ymvEH8-DTTQQM8qogsrNkuUTyimHYKsC9Jj1xBqzBszXg@mail.gmail.com>
Message-ID: <4B9A5129-650B-41DD-9F1A-D79995D32ED3@gmail.com>

Hi,
sounds good, I like it.
Tobias

On Jun 28, 2013, at 4:35 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi everyone (especially Josh),
> 
> Right now, the ImageJ team has a Jenkins server cluster at jenkins.imagej.net that performs an increasingly broad array of tasks. Of course it builds ImageJ, but also Fiji, SCIFIO, SciJava Common, many repository mirrors and synchronizers, and more.
> 
> We also have a Maven repository (using Nexus) at maven.imagej.net that has an increasingly broad array of artifacts beyond just ImageJ.
> 
> Since all of the Jenkins jobs and Maven artifacts fall under the SciJava umbrella, I think it would make sense to rebrand these services as SciJava rather than only ImageJ.
> 
> Do others agree? If so, we could point jenkins.scijava.org and maven.scijava.org (for simplicity, maybe just *.scijava.org) at the server's IP (144.92.48.145). If we did this, I would still keep the old URLs working for backwards compatibility, of course.
> 
> Thanks,
> Curtis
> 
> 
> -- 
> You received this message because you are subscribed to the Google Groups "scijava" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to scijava+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/groups/opt_out.
>  
>  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130701/427621e6/attachment.html>

From Johannes.Schindelin at gmx.de  Mon Jul  1 10:13:45 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Mon, 1 Jul 2013 17:13:45 +0200 (CEST)
Subject: [ImageJ-devel] imagej.data.display.DefaultImageDisplay: Recent
 Commit.
In-Reply-To: <51CE46D6.2000608@acadiau.ca>
References: <51CE46D6.2000608@acadiau.ca>
Message-ID: <alpine.DEB.1.00.1307011712280.28957@s15462909.onlinehome-server.info>

Hi Tyler,

On Fri, 28 Jun 2013, Tyler Corbin wrote:

> Just an observation, and you may already have been informed of this bug, so
> delete this if necessary:
> 
> The June 27th commit of imagej.data.display.DefaultImageDisplay has a bug
> in the method "display(final Object o)". It should be quite obvious what the bug
> is if you compare this commit to the one on the 12th of June.
> 
> (Hint: NullPointerException on Line 228)
> 
> All the best and have a great day.

If you are referring to dataView being used but still being null in
https://github.com/imagej/imagej/commit/038171567c2a608804db143659088271d1520120#L0L215
then you went about contributing a patch in a very convoluted way ;-)

Ciao,
Johannes


From Johannes.Schindelin at gmx.de  Mon Jul  1 10:29:52 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Mon, 1 Jul 2013 17:29:52 +0200 (CEST)
Subject: [ImageJ-devel] imagej.data.display.DefaultImageDisplay: Recent
 Commit.
In-Reply-To: <alpine.DEB.1.00.1307011712280.28957@s15462909.onlinehome-server.info>
References: <51CE46D6.2000608@acadiau.ca>
	<alpine.DEB.1.00.1307011712280.28957@s15462909.onlinehome-server.info>
Message-ID: <alpine.DEB.1.00.1307011728350.28957@s15462909.onlinehome-server.info>

Hi again, Tyler,

On Mon, 1 Jul 2013, Johannes Schindelin wrote:

> On Fri, 28 Jun 2013, Tyler Corbin wrote:
> 
> > Just an observation, and you may already have been informed of this
> > bug, so delete this if necessary:
> > 
> > The June 27th commit of imagej.data.display.DefaultImageDisplay has a
> > bug in the method "display(final Object o)". It should be quite
> > obvious what the bug is if you compare this commit to the one on the
> > 12th of June.
> > 
> > (Hint: NullPointerException on Line 228)
> > 
> > All the best and have a great day.
> 
> If you are referring to dataView being used but still being null in
> https://github.com/imagej/imagej/commit/038171567c2a608804db143659088271d1520120#L0L215
> then you went about contributing a patch in a very convoluted way ;-)

I analyzed this problem fully and came to this conclusion:

	https://github.com/imagej/imagej/commit/5319a8dd35aa23e1f09336240ec5f817b3a14467

Tyler, this could have been your first step to ImageJ fame ;-) (Please
take this as encouragement from my side rather than discouraging you from
future contributions!)

Ciao,
Johannes



From mohammedtleis at hotmail.com  Tue Jul  2 12:03:51 2013
From: mohammedtleis at hotmail.com (Mohamed Tleis)
Date: Tue, 2 Jul 2013 19:03:51 +0200
Subject: [ImageJ-devel] Testing the HelloWorld Plugin
Message-ID: <BLU0-SMTP7525A53803ADD9E8DCD59EA2720@phx.gbl>

Dear Developers,

Thanks for Johannes and Curtis for their great ij2 tutorials.

I wanted to test the HelloWorld Plugin from the tutorials. I named it 
HelloWorld_Plugin and copied the compiled class to the plugins folder.
I have Hello World Plugin in the Plugins Menu now, but it does nothing 
upon clicking.

Two Questions:
1. Why you didn't use the underscore in the plugin name in the example, 
Is there another way to distribute plugins with ij2?
2. Why Hello World dialog message doens't display upon accessing from 
the menu?

Best Regards,
Mohamed Tleis


From Johannes.Schindelin at gmx.de  Tue Jul  2 12:41:56 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Tue, 2 Jul 2013 19:41:56 +0200 (CEST)
Subject: [ImageJ-devel] Testing the HelloWorld Plugin
In-Reply-To: <BLU0-SMTP7525A53803ADD9E8DCD59EA2720@phx.gbl>
References: <BLU0-SMTP7525A53803ADD9E8DCD59EA2720@phx.gbl>
Message-ID: <alpine.DEB.1.00.1307021933240.28957@s15462909.onlinehome-server.info>

Hi Mohamed,

On Tue, 2 Jul 2013, Mohamed Tleis wrote:

> I wanted to test the HelloWorld Plugin from the tutorials. I named it
> HelloWorld_Plugin and copied the compiled class to the plugins folder.
> I have Hello World Plugin in the Plugins Menu now, but it does nothing
> upon clicking.
> 
> Two Questions:
> 1. Why you didn't use the underscore in the plugin name in the example, Is
> there another way to distribute plugins with ij2?

Yes, the underscore is too magic a concept. I bet when you ask any random
ImageJ user what makes a .jar file a plugin, chances are they do not know
about the underscore nor plugins.config. Hence we chose a simpler concept:

A plugin is a plugin whenever you annotate it with the @Plugin annotation.

> 2. Why Hello World dialog message doens't display upon accessing from
> the menu?

Did you have a look at the console output?

Ciao,
Johannes


From Johannes.Schindelin at gmx.de  Tue Jul  2 12:49:31 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Tue, 2 Jul 2013 19:49:31 +0200 (CEST)
Subject: [ImageJ-devel] Testing the HelloWorld Plugin
In-Reply-To: <alpine.DEB.1.00.1307021933240.28957@s15462909.onlinehome-server.info>
References: <BLU0-SMTP7525A53803ADD9E8DCD59EA2720@phx.gbl>
	<alpine.DEB.1.00.1307021933240.28957@s15462909.onlinehome-server.info>
Message-ID: <alpine.DEB.1.00.1307021945010.28957@s15462909.onlinehome-server.info>

Hi Mohamed,

On Tue, 2 Jul 2013, Johannes Schindelin wrote:

> On Tue, 2 Jul 2013, Mohamed Tleis wrote:
> 
> > I wanted to test the HelloWorld Plugin from the tutorials. I named it
> > HelloWorld_Plugin and copied the compiled class to the plugins folder.
> > I have Hello World Plugin in the Plugins Menu now, but it does nothing
> > upon clicking.
> > 
> > [...]
> > 
> > 2. Why Hello World dialog message doens't display upon accessing from
> > the menu?
> 
> Did you have a look at the console output?

Just to make sure that nothing silly is happening, I did this (you might
want to explain in as much detail what you did in the future):

1) I made sure that my imagej-tutorials is up-to-date

2) I used Maven to build (this is by far the easiest thing to do):

	mvn

   You could use your development environment of choice (Eclipse,
   Netbeans, IntelliJ, etc) to build it, too.

3) I copied the generated .jar file (which is called
   simple-command-1.0.0-SNAPSHOT.jar) from simple-command/target/ to my
   ImageJ.app/plugins/

4) I started ImageJ2 via ImageJ.app/ImageJ-linux64

5) I started the command launcher by hitting the 'L' key

6) I typed "Hello" in the search box

7) I called the "Hello, World!" plugin

It did show a message box, greeting the whole world. So basically I have
no clue what went wrong on your side, but I am sure we can find out
together if you provide every bit of useful information you can extract
from your trial.

Ciao,
Johannes



From mohammedtleis at hotmail.com  Wed Jul  3 05:08:55 2013
From: mohammedtleis at hotmail.com (Mohamed Tleis)
Date: Wed, 3 Jul 2013 12:08:55 +0200
Subject: [ImageJ-devel] Testing the HelloWorld Plugin
In-Reply-To: <51D3F767.3060106@hotmail.com>
References: <51D3F767.3060106@hotmail.com>
Message-ID: <BLU0-SMTP470233C5B08650A77951551A2730@phx.gbl>

Sorry I forgot to include the list :).


-------- Original Message --------
Subject: 	Re: [ImageJ-devel] Testing the HelloWorld Plugin
Date: 	Wed, 03 Jul 2013 12:05:27 +0200
From: 	Mohamed Tleis <mohammedtleis at hotmail.com>
To: 	Johannes Schindelin <Johannes.Schindelin at gmx.de>



Thanks again Johannes,

On 07/02/2013 07:49 PM, Johannes Schindelin wrote:
> Hi Mohamed,
>
> On Tue, 2 Jul 2013, Johannes Schindelin wrote:
>
>> On Tue, 2 Jul 2013, Mohamed Tleis wrote:
>>
>>> I wanted to test the HelloWorld Plugin from the tutorials. I named it
>>> HelloWorld_Plugin and copied the compiled class to the plugins folder.
>>> I have Hello World Plugin in the Plugins Menu now, but it does nothing
>>> upon clicking.
>>>
>>> [...]
>>>
>>> 2. Why Hello World dialog message doens't display upon accessing from
>>> the menu?
>> Did you have a look at the console output?
> Just to make sure that nothing silly is happening, I did this (you might
> want to explain in as much detail what you did in the future):
>
> 1) I made sure that my imagej-tutorials is up-to-date
>
> 2) I used Maven to build (this is by far the easiest thing to do):
>
> 	mvn
>
>     You could use your development environment of choice (Eclipse,
>     Netbeans, IntelliJ, etc) to build it, too.
>
> 3) I copied the generated .jar file (which is called
>     simple-command-1.0.0-SNAPSHOT.jar) from simple-command/target/ to my
>     ImageJ.app/plugins/
>
> 4) I started ImageJ2 via ImageJ.app/ImageJ-linux64
>
> 5) I started the command launcher by hitting the 'L' key
>
> 6) I typed "Hello" in the search box
>
> 7) I called the "Hello, World!" plugin
>
> It did show a message box, greeting the whole world. So basically I have
> no clue what went wrong on your side, but I am sure we can find out
> together if you provide every bit of useful information you can extract
> from your trial.
>
> Ciao,
> Johannes
>
>
>
I followed the exact steps as you did, and noticed the path of
HelloWorldPlugin is in the Help Menu. and it is working fine now,
although I am wondering how to change the menu path.

Building the HelloWorldPlugin.java alone, and copying the
HelloWorldPlugin.class into the Plugins folder did nothing. However
compiling it as HelloWorld_Plugin.class did indeed show the HelloWorld
Plugin in the Plugins Menu but clicking it performs nothing, and not
even in the console output (by running ImageJ-linux64 from terminal).

Best Regards,
Mohamed Tleis



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/f502f710/attachment.html>

From christopher.coulon at gmail.com  Wed Jul  3 06:26:45 2013
From: christopher.coulon at gmail.com (Chris)
Date: Wed, 3 Jul 2013 04:26:45 -0700
Subject: [ImageJ-devel] GitHub for Mac,
	was Re: Copy Plugin directly to Plugins folder.
In-Reply-To: <alpine.DEB.1.00.1306272313500.28957@s15462909.onlinehome-server.info>
References: <BLU0-SMTP134E67CCB448B33D9DB2496A28B0@phx.gbl>
	<CADN69ykXZE_0Xo+mQGp+zUfBK_BxQ1UoM5ApQLS=0TQkC4Sp+w@mail.gmail.com>
	<9E4A9FC7-2427-4A50-B4E6-3F45419B4392@gaiag.net>
	<CADN69yk+bfU8bCVa8hRAAGFo23RBnT-G_rZb-LM824dKvB32Ng@mail.gmail.com>
	<37F65340-7470-4F6B-8F38-DD25F4755F8C@gmail.com>
	<CADN69ynaqNyweKWRgj_Zh09Rdjp-fNzAku696pOYi8x3OncDQg@mail.gmail.com>
	<22B33CB7-887D-47D4-B955-B35884DA3B10@gmail.com>
	<alpine.DEB.1.00.1306270302140.28957@s15462909.onlinehome-server.info>
	<alpine.DEB.1.00.1306270317420.28957@s15462909.onlinehome-server.info>
	<37ADE1DB-448E-456C-9C50-E39B6C1E649A@gaiag.net>
	<alpine.DEB.1.00.1306272019290.28957@s15462909.onlinehome-server.info>
	<E1ECC49B-5B85-48AF-BB21-71FF9291C8E4@gaiag.net>
	<CADN69ynUNpY7LDnwHHmFV-DF8f07cM9EXvG3NTRWbwaBdhHOzg@mail.gmail.com>
	<0252D60E-CB64-4447-8681-42E24011C8D1@gaiag.net>
	<CADN69ykVpk0gj0EHb5p6KF7170cHqaxcCm-qN_yr0LdPJpwjeQ@mail.gmail.com>
	<9D4450BF-7075-444A-A982-F1BBAA624EFF@gaiag.net>
	<alpine.DEB.1.00.1306272313500.28957@s15462909.onlinehome-server.info>
Message-ID: <E3A656FD-F5A7-4726-A4B3-A7CD128A7406@gaiag.net>

Dear Curtis and Johannes,

I have studied all the lessons suggested below and taken them as far as I could go with them.  For example, in Working with repositories example, I can fork the Spoon-Knife project to my account, but I cannot clone it, because there is no "Clone on Mac" button anywhere on the page.  There is a "Clone in Desktop" button, but that just takes me to the mac.github.com page for downloading GitHub for Mac, which I already have.  So I cannot do the clone and therefore I cannot go any further with the tutorial.  I can and have read the tutorials beyond, but I cannot do any of the examples beyond the cloning part.

As a result, I am unable to work with my project.  I have the errors that package org.jdesktop.layout does not exist, although I suspect swing-layout-1.0.4 (which contains org.jdesktop.layout) does exist because the project ran before I removed the APC_ dependency in my pom.  

I would love to be able to clone my project and resolve the errors, but the tutorials do not match what I see in my github page, and I don't have enough information to know why and resolve these issues. 

Chris

On Jun 27, 2013, at 2:31 PM, Johannes Schindelin wrote:

> Hi Chris,
> 
> On Thu, 27 Jun 2013, Chris wrote:
> 
>>>> I need instructions on how to do steps B through E.
>>> 
>>> You already have the clone on your workstation. You wouldn't have been
>>> able to push the README otherwise. You probably ran "git init" which
>>> actually *creates* the repository on your workstation, and then you
>>> ran "git push" which mirrors it back to GitHub. So you don't need to
>>> clone in that case; you already have a copy of the repo, since the
>>> workstation is where you created it.
>> 
>> OK, but I created the README on the website
>> (https://github.com/ad1054/Postcards), not with a terminal command.
> 
> Yep, that was not exactly what that page said, was it? It can be fixed,
> but it requires more effort on your side than if you had not created the
> files on the website.
> 
>> When I then went through the instructions and tried to create the
>> Hello-World README from the terminal, that's when I got the errors.
> 
> Multiple errors, because you had to understand the commands listed in the
> article in order to adapt them to your particular case.
> 
> For one, your repository is not called Hello-World.
> 
> Another problem is that you did not know how to undo an already-run
> command (git remote add ...).
> 
>> When I click the "clone in desktop" button on the github.com site, it
>> takes me to the http://mac.github.com/ site where my only option is to
>> download Git for Mac -- which I already downloaded.
> 
> ... and which you could use as described on
> 
> 	https://help.github.com/articles/working-with-repositories#cloning
> 
> to clone your own GitHub repository.
> 
>>> Step (D) is "git commit"
> 
> GitHub for Mac can help you do that, if you study the information conveyed in
> 
> 	https://help.github.com/articles/making-changes
> 
>>> Step (E) is "git push"
> 
> This page has the information which you need to learn in order to use
> GitHub for Mac to "push" (which they call synchronize because it is more
> convenient than the "push" concept of Git what they do: they have a
> two-way synchronisation between the remote repository and the local one).
> 
> 	https://help.github.com/articles/making-changes#sync-your-changes-with-github
> 
>>> The book and other Git tutorials have more information.
>>> 
>>> You are already really close -- you have the code on your local
>>> workstation, you have a GitHub repository already in existence, you
>>> have a local Git repository linked to that remote repository, so all
>>> you have to do is commit and push.
>>> 
>>> The errors you mentioned yesterday were because your local Git
>>> repository had the wrong URL for the GitHub remote. That's why I asked
>>> you to check the output of "git remote -v". It should say your origin
>>> is "https://github.com/ad1054/Postcards". If it says "Hello-World"
>>> that is wrong. To fix, try this:
>>> 
>>> git remote rm origin
>>> git remote add origin https://github.com/ad1054/Postcards
> 
> Of course it is best if you understand that these commands work *inside*
> one working directory that has remote information.
> 
>> This is the result of those commands in my terminal:
>> 
>> ChrisGAIAG:~ chris$ git remote rm origin
>> fatal: Not a git repository (or any of the parent directories): .git
> 
> Well, what do you expect if you remove the 'origin' remote in your home
> directory, which is not the working directory of the repository you
> initialized with "git init"?
> 
> I told you in an earlier mail that each local repository lives in a .git/
> subdirectory of the working directory. You created a Hello-World directory
> and made it the working directory of a newly-initialized repository by
> calling
> 
> 	git init
> 
> *inside* Hello-World/. So that is where your Git information is: in
> Hello-World/.git/.
> 
> Git will not try to guess what you mean if you are outside that directory.
> 
>> ChrisGAIAG:~ chris$ git remote add origin https://github.com/ad1054/Postcards
>> fatal: Not a git repository (or any of the parent directories): .git
> 
> In general, it is a real bad idea to call the second command in any set of
> instructions when the first one failed.
> 
>> So do I need to cd to some place first?
> 
> Actually, yes. As described above, Git has no chance of knowing what
> project you want it to work on if you are outside the project's working
> directory.
> 
> It is even what Git said:
> 
> 	fatal: Not a git repository (or any of the parent directories): .git
> 
> Which is true, because I am sure that there does not exist a .git/
> directory in your home directory.
> 
>>> Or, as Johannes says: just reclone from your GitHub remote into a new
>>> directory, and then copy your files into there, and then commit and
>>> push using the GitHub for Mac GUI.
>>> 
>>> Don't worry about "screwing anything up" because you can always just
>>> delete and recreate the repository. It's not like you're going to lose
>>> hundreds of hours of work, here.
>> 
>> The GitHub for Mac is a complete mystery right now.  There is a long
>> list of my java classes and resources, followed at the end with a link
>> to my NetBeans project folder, so I see there is a link to my computer.
>> I guess I am in fact close.  I just need to figure out how to commit and
>> push.  
> 
> Well, I think that understanding the information given in
> 
> 	https://help.github.com/articles/making-changes
> 
> should help.
> 
>> And of course, resolve the strange errors in my project that can't
>> recognize the Swing components of my jFrames when I removed the APC_
>> class from my pom dependencies.  Now when I attempt to run it on my
>> computer, I get this error:
>> 
>> Exception in thread "main" java.lang.NoClassDefFoundError: org/jdesktop/layout/GroupLayout$Group
>> 	at A_Postcard.run(A_Postcard.java:25)
>> 	at A_Postcard.main(A_Postcard.java:35)
>> Caused by: java.lang.ClassNotFoundException: org.jdesktop.layout.GroupLayout$Group
> 
> Oh, that is a new piece of information. I was left under the impression
> that you built and ran the project inside NetBeans. Apparently not so.
> 
>> Also, when I was able to run my project, I get an error that it could
>> not find the class "Versatile Wand" which is in my project's
>> target>classes.  
> 
> So you *were* able to run your project in the meantime? I am sorry, but it
> seems that I get incomplete information about the problems and the
> progress on this side.
> 
> I fear that really, the only way forward that guarantees an efficient use
> of your, Curtis' and my time, is to get familiar enough with Git or GitHub
> for Mac so that you can publish exactly the files with which you have a
> problem.
> 
> It is my failing that I do not understand from the descriptions what the
> exact invocations and the exact error messages are, and therefore trying
> to help you would only result in super-wild guesses that are unlikely to
> assist you in fixing the issues.
> 
> The only way I could help effectively would be to be able to get at
> exactly the same state where you are at, to be able to try to reproduce
> your problem, and to fix it by way of a pull request (no need to fear, the
> GitHub notification you receive will have detailed information that, when
> read carefully, will equip you with everything you need to get back my
> changes).
> 
> Ciao,
> Johannes



From michael.zinsmaier at gmx.de  Wed Jul  3 10:23:21 2013
From: michael.zinsmaier at gmx.de (Michael Zinsmaier)
Date: Wed, 03 Jul 2013 17:23:21 +0200
Subject: [ImageJ-devel] ImageJ - KNIME Integration: open questions
In-Reply-To: <CADN69ykSz9rDS2Pp8Xnm9=yHNDakwEM+_m9Q8F6jebDfC_fjZg@mail.gmail.com>
References: <519388BA.60608@gmx.de>
	<CAHLFyjd0rDNJz+0SM7QB1-s_t5JG1VhVJr7spA6X-70bSf5njQ@mail.gmail.com>
	<CADN69ykSz9rDS2Pp8Xnm9=yHNDakwEM+_m9Q8F6jebDfC_fjZg@mail.gmail.com>
Message-ID: <51D441E9.7030707@gmx.de>

Hi Curtis,

thanks for the reply, I just worked through the "code question" 
(version, context, ...) everything  seems to work again.
Now for the other issues

@preview checkboxes
> Michael wrote:
> > Would it be possible to add a flag that surpresses previews checkboxes
> > during dialog building?
>
> It's tricky because right now, each preview checkbox is an input 
> parameter to the command itself. But personally I don't like that 
> approach. It is not a "real" input to the command, but rather intended 
> to be toggled during input harvesting only. One option might be to 
> label the visibility of those parameters as ItemVisibility.INVISIBLE. 
> Then we could add a flag somewhere to hide INVISIBLE parameters, maybe.
>
> But really, I am leaning toward a simpler solution: just remove the 
> preview checkboxes, in favor of ImageJ2 *always* doing a preview (and 
> of course, KNIP doesn't have to). And if the previews are too slow, we 
> can optimize the preview() method to address it, rather than having 
> this hacky checkbox like ImageJ1 does.
I think the 2nd approach could be a good solution. Without a (hacky) 
checkbox we would end up with simply not calling preview() on
Previewable commands. Additionally we could also change this if we 
wanted to support previews in the future.

@interactive commands
> Lee wrote:
> > I hadn't looked at the interactive commands with regard to
> > CellProfiler. It looks like "buttons" could be interpreted as possible
> > headless actions that could be performed... at least in some cases.
>
> Yes, each button generally performs some action, which we should 
> really make sure are always exposed as standalone commands (see next 
> paragraph). We are going to add logic to make multiple sequential 
> Button widgets render as a single button bar in our UI layout. Won't 
> affect you though, Lee, since you do your own UI in Python.
>
> Michael wrote:
> > Why is the threshold  plugin an interactive command?
>
> Let me explain the motivation here. Anything that extends 
> InteractiveCommand is not *intended* to be run in headless mode. 
> Rather, it is intended as a sort of "meta-command" that allows you to 
> launch other commands. It will be filled with callback methods when 
> various inputs change, which should, in a properly designed 
> InteractiveCommand, trigger real command executions that are more 
> well-behaved from a headless standpoint.
>
> Anything that extends InteractiveCommand should *not* be flagged with 
> "headless = true" since it is not intended for that purpose.
>
> So in the case of threshold, we need a "real" threshold command that 
> has sensible inputs and outputs. Then the command exposed in the 
> ImageJ UI as "threshold" is actually "Interactive Threshold" which 
> fires off Threshold executions.
>
> This is not all fully in place, but it is the direction we are going. 
> Sound reasonable?
>
> Lee wrote:
> > For Threshold, I can see reasons for executing the callbacks for
> > "auto", "apply" and "delete" in a headless context
>
> The above would also address your comments here, Lee. The interactive 
> threshold command would not need to be exposed within CP because those 
> buttons would each have a corresponding standalone headless-friendly 
> command which *would* be exposed.
In our case the standalone headless commands would end up as KNIME nodes 
and the interactive meta command would be ignored.
Which should work fine.

I have only one small concern, the headless commands should not become 
to fine granular. Consider for example a filter command that supports 
different neighborhood shapes. A meta command for different filters and 
a headless command for each filter (gaussian, max, ...) is a good solution.
But an implementation with a headless command for each filter and each 
neighbourhood  (gaussian rectangular, gaussian circular, ...) would be 
too much. However thats in the end up to the command implementor and 
shouldn't be a general problem.


@dynamic command detection => ticket filed
> Michael wrote:
> > is there a way to determine if a command is dynamic?
>
> Other than the hacky instanceof test you are doing, nope. I agree we 
> should add API for it to ModuleInfo. Especially because it is possible 
> for modules to be dynamic without extending the DynamicCommand class...
>
> Could you please file a ticket for it on the ImageJ Trac? I just made 
> ImageJ Trac accounts for you, Christian & Martin; you should have an 
> automated email about it. I know Trac is not ideal (GitHub Issues is 
> nice) but we have all our ImageJ tickets in Trac now, migrating 
> everything would be very involved, and I don't really want to start 
> splitting between two issue trackers. Someday we might move...

@plugin jars
> > Are you planing to re-organize the plugins, e.g. such that plugins,
> > which are interesting for any application reside in their own
> > jar-file?
>
> This is probably a good idea. However, I agree with Lee that in some 
> cases it may not be totally clear-cut [1]. You think splitting 
> ij-commands into two JAR files is sufficient? If so, care to send a 
> list of plugins you feel are *not* generally useful, and I can split 
> them out?
We would definitly provide our help for the creation of such a list (at 
least we could look through the plugins and mark the ones that are
useful within KNIME) however it might be better to delay this until 
short before the final release (final set of plugins, stable plugin system).

@service order  => ticket filed
> Michael wrote:
> > we had to move ModuleService behind  MenuService in the constructor
> > call to avoid a null pointer during initialization
> > (onEvent(ModulesAddedEvent) was called before initialize).
>
> That is a bug, thanks for reporting. However, moving the module 
> service after the menu service will not work because MenuService needs 
> CommandService which needs ModuleService.
>
> What's weird to me is, I am not sure why we don't see this bug when 
> running the end-user ImageJ application...
>
> I have some service initialization changes pending on ImageJ's 
> startup-speed branch, which may affect this. So we should debug 
> further once that branch is merged. Please feel free to file a Trac 
> ticket for it and assign to me.
>
> Michael wrote:
> > Is there a defined service order?
>
> The order is defined by two things:
> 1) If a service has an @Parameter dependency on another service, the 
> dependency gets initialized first.
> 2) Otherwise, the "priority" property of the @Plugin annotation is 
> used to order service initialization.
>
> > ((So far, we have tons of ideas where we could do more things
> > together. Thank you in advance for answering all these questions ;) ))
>
@dimension selection
as discussed between christian and curtis we will open a ticket with a 
better explenation for this issue



Thanks again for awnsering our questions
Regards

Christian, Martin, Michael



p.s.
>
> [1] You know what that easter egg does, right? Don't you *want* to 
> generate ASCII images using KNIME??? I know I do!
(-: of course we want. But we don't support getChannelMax/Min atm. so in 
KNIME its only for skilled programmers

++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++o#++++++++
+++++++++++++++++++++++++++++++++++++++O##O+++++++
+++++++++++++++++++++++++++++++++++++o#####o++++++
++++++++++++++++++++++++++++++++++++########++++++
++++++++++++++++++++++++++++++++++o##########+++++
+++++++++++++++++++++++++++++++++############+++++
+++++++++++++++++++++++++++++++o###########o++++++
++++++++++++++++++++++++++++++############++++++++
+++++++++#++++++++++++++++++o###########o+++++++++
++++++++###o+++++++++++++++############+++++++++++
+++++++O####o++++++++++++o###########o++++++++++++
++++++o######O++++++++++############++++++++++++++
+++++o#########+++++++*###########o+++++++++++++++
++++++##########+++++############+++++++++++++++++
+++++++##########o+*###########o++++++++++++++++++
++++++++O#####################++++++++++++++++++++
+++++++++*##################o+++++++++++++++++++++
++++++++++o###############O+++++++++++++++++++++++
+++++++++++o#############o++++++++++++++++++++++++
+++++++++++++##########O++++++++++++++++++++++++++
++++++++++++++########o+++++++++++++++++++++++++++
+++++++++++++++######+++++++++++++++++++++++++++++
++++++++++++++++###o++++++++++++++++++++++++++++++
++++++++++++++++o#++++++++++++++++++++++++++++++++

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/e9e74091/attachment-0001.html>

From pietzsch at mpi-cbg.de  Wed Jul  3 10:40:08 2013
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Wed, 3 Jul 2013 17:40:08 +0200
Subject: [ImageJ-devel] cell-serialisation
Message-ID: <27282876-C0C6-4569-A27C-C752E4337619@mpi-cbg.de>

Hi Mark,

we just noticed the merge of the cell-serialization branch, that makes AbstractCell Serializable and therefore final field non-final.
Actually Stephan Saalfeld noticed, I would have missed it probably. It would be nice if such changes could be discussed before they are merged to master.
Did you do any tests to evaluate the performance impact of un-finalizing the fields.
What is this needed for and are there other alternatives to achieve it instead of making AbstractCell Serializable.

best regards,
Tobias

From ctrueden at wisc.edu  Wed Jul  3 11:14:54 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 3 Jul 2013 11:14:54 -0500
Subject: [ImageJ-devel] GitHub for Mac,
 was Re: Copy Plugin directly to Plugins folder.
In-Reply-To: <E3A656FD-F5A7-4726-A4B3-A7CD128A7406@gaiag.net>
References: <BLU0-SMTP134E67CCB448B33D9DB2496A28B0@phx.gbl>
	<CADN69ykXZE_0Xo+mQGp+zUfBK_BxQ1UoM5ApQLS=0TQkC4Sp+w@mail.gmail.com>
	<9E4A9FC7-2427-4A50-B4E6-3F45419B4392@gaiag.net>
	<CADN69yk+bfU8bCVa8hRAAGFo23RBnT-G_rZb-LM824dKvB32Ng@mail.gmail.com>
	<37F65340-7470-4F6B-8F38-DD25F4755F8C@gmail.com>
	<CADN69ynaqNyweKWRgj_Zh09Rdjp-fNzAku696pOYi8x3OncDQg@mail.gmail.com>
	<22B33CB7-887D-47D4-B955-B35884DA3B10@gmail.com>
	<alpine.DEB.1.00.1306270302140.28957@s15462909.onlinehome-server.info>
	<alpine.DEB.1.00.1306270317420.28957@s15462909.onlinehome-server.info>
	<37ADE1DB-448E-456C-9C50-E39B6C1E649A@gaiag.net>
	<alpine.DEB.1.00.1306272019290.28957@s15462909.onlinehome-server.info>
	<E1ECC49B-5B85-48AF-BB21-71FF9291C8E4@gaiag.net>
	<CADN69ynUNpY7LDnwHHmFV-DF8f07cM9EXvG3NTRWbwaBdhHOzg@mail.gmail.com>
	<0252D60E-CB64-4447-8681-42E24011C8D1@gaiag.net>
	<CADN69ykVpk0gj0EHb5p6KF7170cHqaxcCm-qN_yr0LdPJpwjeQ@mail.gmail.com>
	<9D4450BF-7075-444A-A982-F1BBAA624EFF@gaiag.net>
	<alpine.DEB.1.00.1306272313500.28957@s15462909.onlinehome-server.info>
	<E3A656FD-F5A7-4726-A4B3-A7CD128A7406@gaiag.net>
Message-ID: <CADN69y=pd5b2-2FFYmG5tUq5A1Qq8GKLodJadRO83MwA+8ZhDA@mail.gmail.com>

Hi Chris,

Since you cannot figure out GitHub, you could instead zip up your code
folder and send as an attachment for us to look at.

Regards,
Curtis

P.S. To fix any problems, we can fork your current GitHub project and push
the code into our fork...


On Wed, Jul 3, 2013 at 6:26 AM, Chris <christopher.coulon at gmail.com> wrote:

> Dear Curtis and Johannes,
>
> I have studied all the lessons suggested below and taken them as far as I
> could go with them.  For example, in Working with repositories example, I
> can fork the Spoon-Knife project to my account, but I cannot clone it,
> because there is no "Clone on Mac" button anywhere on the page.  There is a
> "Clone in Desktop" button, but that just takes me to the mac.github.compage for downloading GitHub for Mac, which I already have.  So I cannot do
> the clone and therefore I cannot go any further with the tutorial.  I can
> and have read the tutorials beyond, but I cannot do any of the examples
> beyond the cloning part.
>
> As a result, I am unable to work with my project.  I have the errors that
> package org.jdesktop.layout does not exist, although I suspect
> swing-layout-1.0.4 (which contains org.jdesktop.layout) does exist because
> the project ran before I removed the APC_ dependency in my pom.
>
> I would love to be able to clone my project and resolve the errors, but
> the tutorials do not match what I see in my github page, and I don't have
> enough information to know why and resolve these issues.
>
> Chris
>
> On Jun 27, 2013, at 2:31 PM, Johannes Schindelin wrote:
>
> > Hi Chris,
> >
> > On Thu, 27 Jun 2013, Chris wrote:
> >
> >>>> I need instructions on how to do steps B through E.
> >>>
> >>> You already have the clone on your workstation. You wouldn't have been
> >>> able to push the README otherwise. You probably ran "git init" which
> >>> actually *creates* the repository on your workstation, and then you
> >>> ran "git push" which mirrors it back to GitHub. So you don't need to
> >>> clone in that case; you already have a copy of the repo, since the
> >>> workstation is where you created it.
> >>
> >> OK, but I created the README on the website
> >> (https://github.com/ad1054/Postcards), not with a terminal command.
> >
> > Yep, that was not exactly what that page said, was it? It can be fixed,
> > but it requires more effort on your side than if you had not created the
> > files on the website.
> >
> >> When I then went through the instructions and tried to create the
> >> Hello-World README from the terminal, that's when I got the errors.
> >
> > Multiple errors, because you had to understand the commands listed in the
> > article in order to adapt them to your particular case.
> >
> > For one, your repository is not called Hello-World.
> >
> > Another problem is that you did not know how to undo an already-run
> > command (git remote add ...).
> >
> >> When I click the "clone in desktop" button on the github.com site, it
> >> takes me to the http://mac.github.com/ site where my only option is to
> >> download Git for Mac -- which I already downloaded.
> >
> > ... and which you could use as described on
> >
> >       https://help.github.com/articles/working-with-repositories#cloning
> >
> > to clone your own GitHub repository.
> >
> >>> Step (D) is "git commit"
> >
> > GitHub for Mac can help you do that, if you study the information
> conveyed in
> >
> >       https://help.github.com/articles/making-changes
> >
> >>> Step (E) is "git push"
> >
> > This page has the information which you need to learn in order to use
> > GitHub for Mac to "push" (which they call synchronize because it is more
> > convenient than the "push" concept of Git what they do: they have a
> > two-way synchronisation between the remote repository and the local one).
> >
> >
> https://help.github.com/articles/making-changes#sync-your-changes-with-github
> >
> >>> The book and other Git tutorials have more information.
> >>>
> >>> You are already really close -- you have the code on your local
> >>> workstation, you have a GitHub repository already in existence, you
> >>> have a local Git repository linked to that remote repository, so all
> >>> you have to do is commit and push.
> >>>
> >>> The errors you mentioned yesterday were because your local Git
> >>> repository had the wrong URL for the GitHub remote. That's why I asked
> >>> you to check the output of "git remote -v". It should say your origin
> >>> is "https://github.com/ad1054/Postcards". If it says "Hello-World"
> >>> that is wrong. To fix, try this:
> >>>
> >>> git remote rm origin
> >>> git remote add origin https://github.com/ad1054/Postcards
> >
> > Of course it is best if you understand that these commands work *inside*
> > one working directory that has remote information.
> >
> >> This is the result of those commands in my terminal:
> >>
> >> ChrisGAIAG:~ chris$ git remote rm origin
> >> fatal: Not a git repository (or any of the parent directories): .git
> >
> > Well, what do you expect if you remove the 'origin' remote in your home
> > directory, which is not the working directory of the repository you
> > initialized with "git init"?
> >
> > I told you in an earlier mail that each local repository lives in a .git/
> > subdirectory of the working directory. You created a Hello-World
> directory
> > and made it the working directory of a newly-initialized repository by
> > calling
> >
> >       git init
> >
> > *inside* Hello-World/. So that is where your Git information is: in
> > Hello-World/.git/.
> >
> > Git will not try to guess what you mean if you are outside that
> directory.
> >
> >> ChrisGAIAG:~ chris$ git remote add origin
> https://github.com/ad1054/Postcards
> >> fatal: Not a git repository (or any of the parent directories): .git
> >
> > In general, it is a real bad idea to call the second command in any set
> of
> > instructions when the first one failed.
> >
> >> So do I need to cd to some place first?
> >
> > Actually, yes. As described above, Git has no chance of knowing what
> > project you want it to work on if you are outside the project's working
> > directory.
> >
> > It is even what Git said:
> >
> >       fatal: Not a git repository (or any of the parent directories):
> .git
> >
> > Which is true, because I am sure that there does not exist a .git/
> > directory in your home directory.
> >
> >>> Or, as Johannes says: just reclone from your GitHub remote into a new
> >>> directory, and then copy your files into there, and then commit and
> >>> push using the GitHub for Mac GUI.
> >>>
> >>> Don't worry about "screwing anything up" because you can always just
> >>> delete and recreate the repository. It's not like you're going to lose
> >>> hundreds of hours of work, here.
> >>
> >> The GitHub for Mac is a complete mystery right now.  There is a long
> >> list of my java classes and resources, followed at the end with a link
> >> to my NetBeans project folder, so I see there is a link to my computer.
> >> I guess I am in fact close.  I just need to figure out how to commit and
> >> push.
> >
> > Well, I think that understanding the information given in
> >
> >       https://help.github.com/articles/making-changes
> >
> > should help.
> >
> >> And of course, resolve the strange errors in my project that can't
> >> recognize the Swing components of my jFrames when I removed the APC_
> >> class from my pom dependencies.  Now when I attempt to run it on my
> >> computer, I get this error:
> >>
> >> Exception in thread "main" java.lang.NoClassDefFoundError:
> org/jdesktop/layout/GroupLayout$Group
> >>      at A_Postcard.run(A_Postcard.java:25)
> >>      at A_Postcard.main(A_Postcard.java:35)
> >> Caused by: java.lang.ClassNotFoundException:
> org.jdesktop.layout.GroupLayout$Group
> >
> > Oh, that is a new piece of information. I was left under the impression
> > that you built and ran the project inside NetBeans. Apparently not so.
> >
> >> Also, when I was able to run my project, I get an error that it could
> >> not find the class "Versatile Wand" which is in my project's
> >> target>classes.
> >
> > So you *were* able to run your project in the meantime? I am sorry, but
> it
> > seems that I get incomplete information about the problems and the
> > progress on this side.
> >
> > I fear that really, the only way forward that guarantees an efficient use
> > of your, Curtis' and my time, is to get familiar enough with Git or
> GitHub
> > for Mac so that you can publish exactly the files with which you have a
> > problem.
> >
> > It is my failing that I do not understand from the descriptions what the
> > exact invocations and the exact error messages are, and therefore trying
> > to help you would only result in super-wild guesses that are unlikely to
> > assist you in fixing the issues.
> >
> > The only way I could help effectively would be to be able to get at
> > exactly the same state where you are at, to be able to try to reproduce
> > your problem, and to fix it by way of a pull request (no need to fear,
> the
> > GitHub notification you receive will have detailed information that, when
> > read carefully, will equip you with everything you need to get back my
> > changes).
> >
> > Ciao,
> > Johannes
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/5c3497ce/attachment.html>

From Johannes.Schindelin at gmx.de  Wed Jul  3 13:57:25 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 3 Jul 2013 20:57:25 +0200 (CEST)
Subject: [ImageJ-devel] Testing the HelloWorld Plugin
In-Reply-To: <BLU0-SMTP33973821DE44A1E3DB9EE50A2730@phx.gbl>
References: <BLU0-SMTP7525A53803ADD9E8DCD59EA2720@phx.gbl>
	<alpine.DEB.1.00.1307021933240.28957@s15462909.onlinehome-server.info>
	<alpine.DEB.1.00.1307021945010.28957@s15462909.onlinehome-server.info>
	<BLU0-SMTP33973821DE44A1E3DB9EE50A2730@phx.gbl>
Message-ID: <alpine.DEB.1.00.1307032017170.28957@s15462909.onlinehome-server.info>

Hi Mohamed,

On Wed, 3 Jul 2013, Mohamed Tleis wrote:

> On 07/02/2013 07:49 PM, Johannes Schindelin wrote:
> >
> > On Tue, 2 Jul 2013, Johannes Schindelin wrote:
> >
> > > On Tue, 2 Jul 2013, Mohamed Tleis wrote:
> > >
> > > > I wanted to test the HelloWorld Plugin from the tutorials. I named
> > > > it HelloWorld_Plugin and copied the compiled class to the plugins
> > > > folder.  I have Hello World Plugin in the Plugins Menu now, but it
> > > > does nothing upon clicking.
> > > >
> > > > [...]
> > > >
> > > > 2. Why Hello World dialog message doens't display upon accessing
> > > > from the menu?
> > >
> > > Did you have a look at the console output?
> >
> > Just to make sure that nothing silly is happening, I did this (you
> > might want to explain in as much detail what you did in the future):
> >
> > 1) I made sure that my imagej-tutorials is up-to-date
> >
> > 2) I used Maven to build (this is by far the easiest thing to do):
> >
> >  mvn
> >
> >     You could use your development environment of choice (Eclipse,
> >     Netbeans, IntelliJ, etc) to build it, too.
> >
> > 3) I copied the generated .jar file (which is called
> >     simple-command-1.0.0-SNAPSHOT.jar) from simple-command/target/ to my
> >     ImageJ.app/plugins/
> >
> > 4) I started ImageJ2 via ImageJ.app/ImageJ-linux64
> >
> > 5) I started the command launcher by hitting the 'L' key
> >
> > 6) I typed "Hello" in the search box
> >
> > 7) I called the "Hello, World!" plugin
> >
> > It did show a message box, greeting the whole world. So basically I have
> > no clue what went wrong on your side, but I am sure we can find out
> > together if you provide every bit of useful information you can extract
> > from your trial.

FWIW in the future you could spare everyone reading your reply a couple of
minutes by culling the part from the quoted mail that you did not address
in your reply. If you think about the number of readers, multiply that by
those couple of minutes, you get the idea how much time you asked others
to spend on your mail. If you can spend less than that to reduce that
overall time, well, maybe you want to do that?

> I followed the exact steps as you did, and noticed the path of
> HelloWorldPlugin is in the Help Menu. and it is working fine now,

Good.

> although I am wondering how to change the menu path.

As so often, the answer is in the source code. Asking the web browser to
search for "Help" in the page on GitHub found me this gem:

	https://github.com/imagej/imagej-tutorials/blob/master/simple-command/src/main/java/HelloWorldPlugin.java#L39

It is the "menuPath" attribute of the @Plugin annotation.

> Building the HelloWorldPlugin.java alone, and copying the
> HelloWorldPlugin.class into the Plugins folder did nothing.

Yes. ImageJ2 does not support bare .class files in the plugins/ folder
(except insofar necessary for backwards-compatibility).

Allowing that encourages sloppy development, and it is all-too-easy for
infrequent programmers to forget the intricacies: the name must contain an
underscore, the class must be in the default package, or in a one-level
package and the file in a subdirectory, but not two-level package, or the
class must be in the default package and the file in a one-level
subdirectory of plugins/, but not in a two-level directory, etc.

Also, it was quite often the case that you got single .class files that
were missing crucial other .class files to run. A completely inefficient
and annoying back-and-forth had to ensue until everything was in place to
finally run the plugin. This is particularly true for .java files
defining more than one class. I am not talking about theoretical problems
here, have a look at famous plugins such as TurboReg.

Therefore, ImageJ2 only supports fully self-contained .jar files. They
contain everything that you need to run the plugin, can contain resources
such as icons, information that is put there at compile time, and a lot
more. Also, .jar files are much more space-efficient than unpacked .class
files will ever be.

And once you have more than two plugins in your plugins/ folder, it should
be a no-brainer to see that two .jar files are much easier to organize
than a couple of possibly-interrelated .class files, possibly scattered
over multiple directories (because you cannot import classes from the
default package).

> However compiling it as HelloWorld_Plugin.class did indeed show the
> HelloWorld Plugin in the Plugins Menu but clicking it performs nothing,
> and not even in the console output (by running ImageJ-linux64 from
> terminal).

Well, ImageJ 1.x does not look at the contents of the .class file -- ever!
-- to determine whether it is a plugin or not. All it does is to look at
the underscore. If it is present, it must be a plugin, right?

And since ImageJ2 aims to be as backwards-compatible as possible, it
inherits that plugin via the legacy layer.

Now, there is some very, very obscure feature in ImageJ 1.x: if you have a
class whose name contains an underscore but which does not implement the
PlugInFilter nor the PlugIn interface, it is *still* constructed. In fact,
quite a few "plugins" use that feature to perform all their computation in
the constructor!

So ImageJ2 handed off to ImageJ 1.x in your case, which faithfully applied
that obscure feature and constructed the plugin. And that was that. It
just constructed it and then did nothing with it.

It is safe to say that this feature -- encouraging all the computation of
the plugin to happen in the constructor (which is intended to *initialize*
the plugin in preparation for the computation) -- contradicts pretty much
everything you will learn about object-oriented programming and best
practices, and for a very good reason: it opens a can of problems such as
the absence of proper error handling (there is only one way the plugin can
fail: it throws an exception, but of course from then on every internal
state of the plugin is lost!), the plugin's complete inability to
interact with the ImageJ core (once the constructor is done, it cannot
tell ImageJ what it did, and the plugin cannot do anything else from now
on), ImageJ's complete absence of knowledge what the plugin is expected to
do (Does it work on images? Does it create new windows? Is it supposed to
perform a computation?), basically every technique developed in the
object-oriented paradigm to help establishing a structure that helps
develop robust software, fast, cannot be applied.

Another problem it causes is that you cannot tell whether the plugin
did something or not because the constructor's purpose is to *prepare* the
plugin for execution, not to execute it.

Needless to say, it is not our intention to encourage such bad practices
(because after all, we will be stuck with helping scientists debug their
code which gets really boring really fast when the code makes exactly that
debugging hard).

Another rather big down-side of bare class files in plugins/ is that you
could not easily put it into a different location (for example, to
unclutter the already overloaded Plugins menu). Sure, you could put it
into a submenu of Plugins, but not, say, into Help. This is different with
ImageJ2 plugins where the @Plugin annotation determines the menuPath, but
it is easy to see how confused people would be if the menu location did
not change when they moved a .class into a subdirectory of plugins/, no?

Your case is probably the best demonstration for yet another reason why it
would be a bad idea to support ImageJ2 plugins as bare .class files in the
plugins/ directory: Due to above-mentioned obscure ImageJ 1.x' feature,
ImageJ2 would have to spend an substantial amount of time at startup to
determine whether it is an ImageJ2 or ImageJ1 plugin.

Let's keep things simple and easy instead: all ImageJ2 plugins require are
@Plugin annotations, and that they are bundled in .jar files. That's it.

Ciao,
Johannes


From Johannes.Schindelin at gmx.de  Wed Jul  3 13:11:46 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 3 Jul 2013 20:11:46 +0200 (CEST)
Subject: [ImageJ-devel] GitHub for Mac,
 was Re: Copy Plugin directly to Plugins folder.
In-Reply-To: <E3A656FD-F5A7-4726-A4B3-A7CD128A7406@gaiag.net>
References: <BLU0-SMTP134E67CCB448B33D9DB2496A28B0@phx.gbl>
	<CADN69yk+bfU8bCVa8hRAAGFo23RBnT-G_rZb-LM824dKvB32Ng@mail.gmail.com>
	<37F65340-7470-4F6B-8F38-DD25F4755F8C@gmail.com>
	<CADN69ynaqNyweKWRgj_Zh09Rdjp-fNzAku696pOYi8x3OncDQg@mail.gmail.com>
	<22B33CB7-887D-47D4-B955-B35884DA3B10@gmail.com>
	<alpine.DEB.1.00.1306270302140.28957@s15462909.onlinehome-server.info>
	<alpine.DEB.1.00.1306270317420.28957@s15462909.onlinehome-server.info>
	<37ADE1DB-448E-456C-9C50-E39B6C1E649A@gaiag.net>
	<alpine.DEB.1.00.1306272019290.28957@s15462909.onlinehome-server.info>
	<E1ECC49B-5B85-48AF-BB21-71FF9291C8E4@gaiag.net>
	<CADN69ynUNpY7LDnwHHmFV-DF8f07cM9EXvG3NTRWbwaBdhHOzg@mail.gmail.com>
	<0252D60E-CB64-4447-8681-42E24011C8D1@gaiag.net>
	<CADN69ykVpk0gj0EHb5p6KF7170cHqaxcCm-qN_yr0LdPJpwjeQ@mail.gmail.com>
	<9D4450BF-7075-444A-A982-F1BBAA624EFF@gaiag.net>
	<alpine.DEB.1.00.1306272313500.28957@s15462909.onlinehome-server.info>
	<E3A656FD-F5A7-4726-A4B3-A7CD128A7406@gaiag.net>
Message-ID: <alpine.DEB.1.00.1307031927590.28957@s15462909.onlinehome-server.info>

Hi Chris,

On Wed, 3 Jul 2013, Chris wrote:

> I have studied all the lessons suggested below and taken them as far as
> I could go with them.  For example, in Working with repositories
> example, I can fork the Spoon-Knife project to my account, but I cannot
> clone it, because there is no "Clone on Mac" button anywhere on the
> page.  There is a "Clone in Desktop" button, but that just takes me to
> the mac.github.com page for downloading GitHub for Mac, which I already
> have.  So I cannot do the clone and therefore I cannot go any further
> with the tutorial.  I can and have read the tutorials beyond, but I
> cannot do any of the examples beyond the cloning part.

I finally tried out GitHub for Mac. It is super-easy! I just downloaded
the application, started it, and input my credentials in the dialog asking
for my GitHub login.

After that, it showed me a very intuitive overview of my repositories on
the computer ("THIS COMPUTER") and the organizations on GitHub I am member
of ("GITHUB.COM").

Clicking on one of those organizations gives my an intuitive list of the
repositories stored in that organization.

See the attached screenshot.

As you also can see, it has a "Clone to Computer" button for each
repository.

Sure, it does not really look like the documentation (they removed the
"Clone to Mac" button in their very recent web interface re-design), but
the application still seems *very* intuitive to me.

Just for fun, I cloned one of my repositories. It was now listed in the
"Cloned Repositories" section. Clicking on the big arrow next to the title
of the cloned repository brought me to the next view: the repository
itself (see next attached screenshot).

It was very easy to get to the files, too: just click on the folder symbol
in the repository/changes view. See next attached screenshot.

I even went so far as to make changes and add new files. When I switched
back to the GitHub application, it automatically refreshed and showed me
the changed files. See next attached screenshot.

All that is left to do to publish these changes is to write a commit
summary, an extended description, click the commit button and then call
Repository>Synchronize to put the changes onto GitHub.

Frankly, even if the user interface does not always look *exactly* as in
the documentation on https://mac.github.com/, it is very, very easy to
find the way through it.

> As a result, I am unable to work with my project.  I have the errors
> that package org.jdesktop.layout does not exist, although I suspect
> swing-layout-1.0.4 (which contains org.jdesktop.layout) does exist
> because the project ran before I removed the APC_ dependency in my pom.

My hunch is that you had the correct dependencies in there back when you
called it APC_, but then removed the dependencies *and* renamed the
project. Hence, when you have APC_ as a dependency (which is wrong,
because you do not want an older version of the same project to be dragged
in), you get the correct swing-layout dependencies back.

> I would love to be able to clone my project and resolve the errors, but
> the tutorials do not match what I see in my github page, and I don't
> have enough information to know why and resolve these issues. 

See above. The GitHub for Mac application is super-easy to use.

Ciao,
Johannes
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot-GitHub4Mac.jpg
Type: image/jpeg
Size: 131678 bytes
Desc: 
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/3b015003/attachment-0005.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot-GitHub4Mac-repositories.jpg
Type: image/jpeg
Size: 139387 bytes
Desc: 
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/3b015003/attachment-0006.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot-GitHub4Mac-repository.jpg
Type: image/jpeg
Size: 82424 bytes
Desc: 
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/3b015003/attachment-0007.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot-GitHub4Mac-folder.jpg
Type: image/jpeg
Size: 118122 bytes
Desc: 
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/3b015003/attachment-0008.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot-GitHub4Mac-changes.jpg
Type: image/jpeg
Size: 102971 bytes
Desc: 
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/3b015003/attachment-0009.jpg>

From Johannes.Schindelin at gmx.de  Wed Jul  3 14:38:58 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 3 Jul 2013 21:38:58 +0200 (CEST)
Subject: [ImageJ-devel] Copy Plugin directly to Plugins folder.
In-Reply-To: <alpine.DEB.1.00.1306270302140.28957@s15462909.onlinehome-server.info>
References: <BLU0-SMTP134E67CCB448B33D9DB2496A28B0@phx.gbl>
	<E8E4E60E-485A-4804-A59E-6D32231BFFE6@gaiag.net>
	<CADN69y=v-Xkh6OhDE+wos8Wg7f3YEaVK-2m2vs6UCH3oc=QxqA@mail.gmail.com>
	<B03768AD-4FCD-4623-9DA3-BCE6C7C1A92B@gaiag.net>
	<CADN69ym4F-wmn8nJAVCd=-J2Sw8wDpzJj+ksaZAy5+hTfKHsGw@mail.gmail.com>
	<B133A5A7-DECC-483D-B70F-804F4D9A9CD4@gmail.com>
	<CADN69ykXZE_0Xo+mQGp+zUfBK_BxQ1UoM5ApQLS=0TQkC4Sp+w@mail.gmail.com>
	<9E4A9FC7-2427-4A50-B4E6-3F45419B4392@gaiag.net>
	<CADN69yk+bfU8bCVa8hRAAGFo23RBnT-G_rZb-LM824dKvB32Ng@mail.gmail.com>
	<37F65340-7470-4F6B-8F38-DD25F4755F8C@gmail.com>
	<CADN69ynaqNyweKWRgj_Zh09Rdjp-fNzAku696pOYi8x3OncDQg@mail.gmail.com>
	<22B33CB7-887D-47D4-B955-B35884DA3B10@gmail.com>
	<alpine.DEB.1.00.1306270302140.28957@s15462909.onlinehome-server.info>
Message-ID: <alpine.DEB.1.00.1307032127340.28957@s15462909.onlinehome-server.info>

Hi Chris,

On Thu, 27 Jun 2013, Johannes Schindelin wrote:

> On Wed, 26 Jun 2013, Christopher Coulon wrote:
> 
> > > Great, I see that you have a repo at:
> > > https://github.com/ad1054/Postcards
> 
> Yep, I can see that repository, complete with a .gitignore and a
> README.md.

At long last, your source code is here. For lurkers: it took several days
of trying to get things done with Git, then trying to upload via SFTP, and
finally offering the sources via secret FTP.

For future collaboration, I forked the project on GitHub:

	https://github.com/dscho/Postcards

Then, I did all the work to get it imported properly (including the
complete history from the minimal-ij1-plugin so that future updates from
that project are easy).

I did *not* include '${project.basedir}/lib/swing-layout-1.0.4.jar'. This
file is the likely reason why things worked without specifying the
dependency at all in the pom.xml file.

The real fix, of course, is this commit:

	https://github.com/dscho/Postcards/commit/f0c10c1d9

For consistency with Fiji, I used version 1.0.3 of swing-layout.jar
instead of 1.0.4, though.

The work can be merged here:

	https://github.com/ad1054/Postcards/pull/1

Ciao,
Johannes


From christopher.coulon at gmail.com  Wed Jul  3 19:54:26 2013
From: christopher.coulon at gmail.com (Chris)
Date: Wed, 3 Jul 2013 17:54:26 -0700
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <ad1054/Postcards/pull/1@github.com>
References: <ad1054/Postcards/pull/1@github.com>
Message-ID: <CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>

Excellent!  Thank you Dscho!  I can certainly see my project in GitHub now.  I did a merge but I still do not understand how I can develop my project on my computer (MacBook Pro OS 10.7.5).  When I do a Clean and Build of my project in NetBeans, I still get the errors:

COMPILATION ERROR : 
-------------------------------------------------------------
Text_Tool.java:[41,27] error: package org.jdesktop.layout does not exist

... many more ending in...

/Users/chris/NetBeansProjects/A_Postcard/src/main/java/ChooseCardTemplate.java:[110,117] error: package org.jdesktop.layout does not exist

so I still am missing the operation that pushes the project back to my computer with the correct repairs.  These errors prevent me from building or running the project on my machine, so I am still stalled...

Chris

On Jul 3, 2013, at 12:26 PM, dscho wrote:

> This pull request does all the work to import the project, and to add 
> the missing swing-layout dependency.
> 
> You can merge this Pull Request by running
> 
>   git pull https://github.com/dscho/Postcards master
> Or view, comment on, or merge it at:
> 
>   https://github.com/ad1054/Postcards/pull/1
> 
> Commit Summary
> 
> Initial version
> Add a README.md
> Clarify the license
> fixup! Initial version
> Add a main() method for convenient debugging
> Clarify license even further
> Add the IJ2 repositories, required to find pom-scijava
> Use the new version of the SciJava POM
> Add source code repository information
> Add developer information
> Bump the SciJava version
> Ignore Eclipse files
> Tell Maven's exec:java to execute our main class by default
> Add hints to the README how to use this project as a starting point
> Format README.md a bit
> README.md: more steps what to do after cloning
> README.md: Clarify where your own files should go
> Bump the SciJava POM version
> Update README.md to reflect imagej-maven-plugin's existence
> Upgrade POM SciJava version to latest
> Include all .java sources in the .jar file
> Merge branch 'with-source'
> Use properties for source inclusion
> Remove the now-empty README.md
> Merge branch 'master' of ../A_Postcard
> Remove the README.md
> File Changes
> 
> M .gitignore (10)
> D README.md (1)
> A pom.xml (93)
> A src/main/java/Process_Pixels.java (192)
> A src/main/resources/plugins.config (12)
> Patch Links:
> 
> https://github.com/ad1054/Postcards/pull/1.patch
> https://github.com/ad1054/Postcards/pull/1.diff

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130703/1b6cb6be/attachment.html>

From Johannes.Schindelin at gmx.de  Wed Jul  3 23:21:43 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 4 Jul 2013 06:21:43 +0200 (CEST)
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
Message-ID: <alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>

Hi Chris,

On Wed, 3 Jul 2013, Chris wrote:

> Excellent!  Thank you Dscho!  I can certainly see my project in GitHub
> now.  I did a merge but I still do not understand how I can develop my
> project on my computer (MacBook Pro OS 10.7.5).  When I do a Clean and
> Build of my project in NetBeans, I still get the errors:
> 
> COMPILATION ERROR : 
> -------------------------------------------------------------
> Text_Tool.java:[41,27] error: package org.jdesktop.layout does not exist

This suggests to me that you still did not use GitHub for Mac and still
did not clone your own project with it. You will find that using GitHub
for Mac will tell you when you have local or remote changes, and will help
you reconcile them.

Ciao,
Johannes

P.S.:
 
> so I still am missing the operation that pushes the project back to my
> computer with the correct repairs.

I bet nothing you read about Git calls this a "push". I bet all of those
articles call that a "pull" or a "fetch & merge".


From mohammedtleis at hotmail.com  Thu Jul  4 10:03:57 2013
From: mohammedtleis at hotmail.com (Mohamed Tleis)
Date: Thu, 4 Jul 2013 17:03:57 +0200
Subject: [ImageJ-devel] loading imageJ instance with full Services
In-Reply-To: <51D58E99.1040507@hotmail.com>
References: <51D58E99.1040507@hotmail.com>
Message-ID: <BLU0-SMTP196ABB178791C7160759901A27C0@phx.gbl>


Dear Curtis,

 > there is nothing "wrong" per se with calling "imagej.Main.launch()" 
if what you really want is for the ImageJ application to pop up. So no 
worries there.
That is good news, it is exactly what I am trying to do.

I wrote previously :
"If I use this instance to open an lsm image with 2 channels, the image 
isn't loaded properly, only one channel is visable and trying to split 
channels will ask me for arguments and won't be done."

When I was trying to regenerate the problem with minimal code, I figured 
out that the problem was due to wrong loading of imageJ in the following 
way:

public class launchij2 {
     launchij2()
     {
         ImageJ ij = new ImageJ();
         ij = imagej.Main.launch();
     }

     public static void main(String args[])
     {
         new launchij2();
     }
}

I learned that <ij = mageJ.Main.launch();> doesn't replace the <ij = new 
ImageJ();>; but somehow mix things together. Is this an expected behaviour?

Best Regards,
Mohamed Tleis

On 06/25/2013 09:03 PM, Curtis Rueden wrote:
> Hi Mohamed and everyone,
>
> I agree with Johannes that using "new ImageJ()" is better for 
> programmatic use, in that it is more flexible. That said, there is 
> nothing "wrong" per se with calling "imagej.Main.launch()" if what you 
> really want is for the ImageJ application to pop up. So no worries there.
>
> As for your reported problem, I have a couple of questions:
>
> > If I use this instance to open an lsm image with 2 channels
>
> Please note that ImageJ2 does not support LSM out of the box. You need 
> either Bio-Formats or LSM_Reader for that (which at the moment are 
> ImageJ1 plugins, and will be run using the IJ2's legacy layer). If you 
> open an LSM with File > Open right now, I believe it will open as a 
> vanilla TIFF file, which may not read all the metadata, and may 
> misinterpret some Zeiss-specific image parameters.
>
> > Note that opening the imageJ from the provided executable works fine.
>
> Hmm, you mean if you launch ImageJ2 from the launcher, then open your 
> LSM file, it behaves as expected? Then there may indeed be a bug 
> lurking here somewhere. Do you have a sample non-working image file 
> you can upload via the Help > Upload Sample Image command? That, along 
> with specific brief instructions about what doesn't work, would be 
> very helpful to diagnose and fix the problem.
>
> Thanks,
> Curtis
>
>
> On Mon, Jun 24, 2013 at 9:54 AM, Mohamed Tleis 
> <mohammedtleis at hotmail.com <mailto:mohammedtleis at hotmail.com>> wrote:
>
>     Dear Developers,
>
>     from inside my code I am calling imageJ through
>
>     ImageJ ij = new ImageJ.Main.launch();
>
>     If I use this instance to open an lsm image with 2 channels, the
>     image isn't loaded properly, only one channel is visable and
>     trying to split channels will ask me for arguments and won't be done.
>     Note that opening the imageJ from the provided executable works
>     fine. I suppose the launch method needs some arguments to be
>     passed. Can you please show me an example to how to do this?
>
>     Best Regards,
>     M. Tleis
>
>     _______________________________________________
>     ImageJ-devel mailing list
>     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>     http://imagej.net/mailman/listinfo/imagej-devel
>
>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130704/60b2a08b/attachment.html>

From Johannes.Schindelin at gmx.de  Thu Jul  4 10:34:09 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 4 Jul 2013 17:34:09 +0200 (CEST)
Subject: [ImageJ-devel] loading imageJ instance with full Services
In-Reply-To: <BLU0-SMTP196ABB178791C7160759901A27C0@phx.gbl>
References: <51D58E99.1040507@hotmail.com>
	<BLU0-SMTP196ABB178791C7160759901A27C0@phx.gbl>
Message-ID: <alpine.DEB.1.00.1307041730460.28957@s15462909.onlinehome-server.info>

Hi Mohamed,

On Thu, 4 Jul 2013, Mohamed Tleis wrote:

> public class launchij2 {
>     launchij2()
>     {
>         ImageJ ij = new ImageJ();
>         ij = imagej.Main.launch();
>     }

Please note that it is definitely *not* recommended coding style to do
this in a constructor. A constructor is intended to initialize the object
for computation, not to perform computation (or in this case, show the
UI).

I'm just saying this so forcefully because I have a hunch that I'll help
you more in the future, and I'd rather see elegant code in the process ;-)

Also, please note that the first line (ImageJ ij = new ImageJ()) creates
an ImageJ context, but never uses it! So you might just as well skip that
instantiation because the next line (ij = imagej.Main.launch()) creates
*another* context and uses that to show the UI.

Ciao,
Johannes


From christopher.coulon at gmail.com  Thu Jul  4 11:52:35 2013
From: christopher.coulon at gmail.com (Chris)
Date: Thu, 4 Jul 2013 09:52:35 -0700
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
Message-ID: <6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>

> Hi Chris,
> 
> On Wed, 3 Jul 2013, Chris wrote:
> 
>> Excellent!  Thank you Dscho!  I can certainly see my project in GitHub
>> now.  I did a merge but I still do not understand how I can develop my
>> project on my computer (MacBook Pro OS 10.7.5).  When I do a Clean and
>> Build of my project in NetBeans, I still get the errors:
>> 
>> COMPILATION ERROR : 
>> -------------------------------------------------------------
>> Text_Tool.java:[41,27] error: package org.jdesktop.layout does not exist
> 
> This suggests to me that you still did not use GitHub for Mac and still
> did not clone your own project with it. You will find that using GitHub
> for Mac will tell you when you have local or remote changes, and will help
> you reconcile them.

I am using GitHub for Mac.  I did a commit there, then tried to clean and build my project in NetBeans with the same results that package org.jdesktop.layout does not exist.

>> so I still am missing the operation that pushes the project back to my
>> computer with the correct repairs.
> 
> I bet nothing you read about Git calls this a "push". I bet all of those
> articles call that a "pull" or a "fetch & merge".

OK, I confess I am new to GitHub and am unfamiliar with the terms and what they mean.  But I do not know where to look when the latest tutorials tell me to click buttons that do not exist and explain in great detail how GitHub differs from other resources I have never heard of, but fails to explain how to do the simplest things such as putting the project with its correct resources (whatever that may be called) into my computer so that I can run it without errors.  Now my Git for Mac has four pages: History, Changes, Branches, and Settings.  Nowhere can I see any way to update the project on my computer.  

OK, it's well established that I don't know what I'm doing.  Reading the tutorials only helps when their instructions match what I see on my computer.  When the instructions depart from reality, I can no longer follow them, because each new step depends on the step before being accomplished, so if I can't accomplish a step due to it not being available on my machine, I can't go any further.  There's no equivalent on my machine to "Clone in Mac."  The "Clone in Desktop" button puts me on the download GitHub for Mac page, which is already downloaded, so that is not helpful.  So after committing my project in Git for Mac, I have no idea what else I should do to make my NetBeans project useable without the org.jdesktop.layout errors.

Is it possible to do something that will let me develop my project on my computer using NetBeans without the org.jdesktop.layout errors?

From Johannes.Schindelin at gmx.de  Thu Jul  4 23:32:54 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Fri, 5 Jul 2013 06:32:54 +0200 (CEST)
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
Message-ID: <alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>

Hi Chris,

On Thu, 4 Jul 2013, Chris wrote:

> > On Wed, 3 Jul 2013, Chris wrote:
> > 
> >> Excellent!  Thank you Dscho!  I can certainly see my project in
> >> GitHub now.  I did a merge but I still do not understand how I can
> >> develop my project on my computer (MacBook Pro OS 10.7.5).  When I do
> >> a Clean and Build of my project in NetBeans, I still get the errors:
> >> 
> >> COMPILATION ERROR : 
> >> -------------------------------------------------------------
> >> Text_Tool.java:[41,27] error: package org.jdesktop.layout does not exist
> > 
> > This suggests to me that you still did not use GitHub for Mac and
> > still did not clone your own project with it. You will find that using
> > GitHub for Mac will tell you when you have local or remote changes,
> > and will help you reconcile them.
> 
> I am using GitHub for Mac.  I did a commit there, then tried to clean
> and build my project in NetBeans with the same results that package
> org.jdesktop.layout does not exist.

Well, making a commit means that you made local changes and recorded them
in the local repository.

However, you merged my changes in your repository on GitHub. So you have
to synchronize your local clone so the changes are reflected locally.

However, from your descriptions I suspect that you never cloned your
Postcards repository successfully to your computer.

Why don't you try that, by following the screenshots I sent in my previous
mail?

> >> so I still am missing the operation that pushes the project back to
> >> my computer with the correct repairs.
> > 
> > I bet nothing you read about Git calls this a "push". I bet all of
> > those articles call that a "pull" or a "fetch & merge".
> 
> OK, I confess I am new to GitHub and am unfamiliar with the terms and
> what they mean.

I fear that my comment was misunderstood. I meant to say that you would
probably better served by understanding the principles of Git first --
implying that you understand the lingo, such as: What is a commit? What
does it mean "to commit"? What *is* a repository? Why do I have to
synchronize local and remote repositories? What does it *mean* to
synchronize? 

So I encourage you to pay less attention to the screenshots and the labels
of the buttons but more to what the tutorials want to accomplish, i.e. why
do they want you to perform this or that action? Why are there changes
visible on the website you haven't seen, and: can you see them in your
local clone? If not, why not? And what is a "clone" anyway and why do you
need that? And what is the relationship between your clone and a "local
repository"? What is a "repository" anyway?

>  But I do not know where to look when the latest
> tutorials tell me to click buttons that do not exist and explain in
> great detail how GitHub differs from other resources I have never heard
> of, but fails to explain how to do the simplest things such as putting
> the project with its correct resources (whatever that may be called)
> into my computer so that I can run it without errors.  Now my Git for
> Mac has four pages: History, Changes, Branches, and Settings.  Nowhere
> can I see any way to update the project on my computer.  

First, please make sure that you cloned your project "Postcards" with
GitHub for Mac. If you did not, or if you are not sure, just re-clone it.

Of course, you could fix every issue with the existing setup you have if
you were a Git expert already, but you're in the process of getting there,
so let's keep things easy. If things did not work, re-do them instead of
trying to fix them.

> OK, it's well established that I don't know what I'm doing.  Reading the
> tutorials only helps when their instructions match what I see on my
> computer.

The purpose of those instructions are as much a cooking recipe ("do this
first, then that", etc) as descriptions what the steps are *about*. After
reading the tutorial on cloning, for example, you should have been
equipped with an idea what the results of the actions were, not just how
to click a button that says "Clone to Mac" that, oh BTW, is no longer
there.

> When the instructions depart from reality, I can no longer
> follow them, because each new step depends on the step before being
> accomplished, so if I can't accomplish a step due to it not being
> available on my machine, I can't go any further.

As I said, it is crucial that you understand *why* you are supposed to
perform those steps. When you do, you should be able to see that the
"Clone to Computer" button in the new GitHub for Mac does exactly what the
old "Clone to Mac" button on the old GitHub website did.

Which is... to clone your GitHub repository into a local repository with a
working directory.

And of course you need to understand the lingo of the tutorial to
understand what the meaning of those steps are. If you do not understand
the lingo, it *must* lead to confusion, such as: why does "git push" not
push the changes from the remote repository into the local one? If you do
not take care to learn the nomenclature of Git, you might think that "to
push" means to get remote changes and apply them to your local directory.
But that is not what Git means by "push", and therefore not what "git
push" does!

> There's no equivalent on my machine to "Clone in Mac."

That would be the "Clone to Computer" button in the GitHub *application*.
Not the GitHub *website*.

> The "Clone in Desktop" button puts me on the download GitHub for Mac
> page, which is already downloaded, so that is not helpful.

Since you did not mention the "Clone to Computer" button, I suspect that
you did not *start* the application after download. That is what the
download page intends to let you do, and that application is very helpful,
I can tell you, because I tried it (as the screenshots in my previous mail
prove).

> So after committing my project in Git for Mac, I have no idea what else
> I should do to make my NetBeans project useable without the
> org.jdesktop.layout errors.

Again, you need to understand what "to commit" *means* in order to
understand what happened to your repositories and working directories when
you did so.

"To commit" means that you record a new changeset into the local
repository's commit history.

> Is it possible to do something that will let me develop my project on my
> computer using NetBeans without the org.jdesktop.layout errors?

Yes. The Synchronize menu item I mentioned earlier when you clone the
repository using the GitHub for Mac application.

So far, it looks to me as if you performed a lot of steps, some of which
changed things in ways you did not intend, but it changed it nevertheless.
If you do not go back to doing things from the start, you will not be able
to repair the erroneous changes without the help of a Git expert sitting
directly beside you. Worse, you will prevent yourself from getting the
understanding of Git to use it without help from Curtis or myself.

So I encourage you to start over, clone your repository onto your
computer, re-import it into Netbeans. If that re-import fails, I trust you
to be able to interpret the error message and take according actions
before re-cloning and re-importing again until it works.

I also encourage you to take a look at the mail I sent earlier, in
particular the link to the commit that fixed the swing-layout issue. I
trust you will be able to understand the "diff" that is shown on that web
page, and to understand why it fixes the issues, and I also trust that you
will be able to make the connection between "org.jdesktop.layout" and
"swing-layout" and to understand what that groupId in the dependency that
I added *means*.

In short, I encourage you to stop following the instructions as soon as
you fail to understand *why* a certain step needs to be performed, or
*where* the button or menu item is to perform that step, and interrupt
following the instructions in order to search the documentation for
answers to the questions the instructions instigated. As soon as you
understand what Git is about, and what actions you need to perform to get
what you want, we will all have a much easier time to collaborate.

Ciao,
Johannes

P.S.: You do realize that bundling a .exe and using it for printing makes
your plugin non-portable?


From michael.zinsmaier at gmx.de  Fri Jul  5 05:35:56 2013
From: michael.zinsmaier at gmx.de (Michael Zinsmaier)
Date: Fri, 05 Jul 2013 12:35:56 +0200
Subject: [ImageJ-devel] Scifion Img Opener some question
Message-ID: <51D6A18C.3050004@gmx.de>

Hi together, hi Mark,

I just started to convert the Knime Image Processing "Image Reader" code 
to the new implementation of ImgOpener (scifio). However I am a bit 
stuck could you help me with a few questions regarding the code changes?

- the imglib2.io ImgOpener has some static methods like
         - public static AxisType[] getDimTypes(final IFormatReader r)
         - public static double[] getCalibration(final IFormatReader r)

     how can I retriev such data using the scifio ImgOpener?

-  the scifio ImgOpener's openImg method has the parameters Reader, 
type, factory and options
         - What is the relationship between Reader and IFormatReader (we 
used previously the openImg(IFormatReader ...) method)
         - can we retriev the type from a Reader (IFormatReader x; 
ImgIOUtils.makeType(x.getPixelType())

- ImgOptions supports the selection of an interval (thanks for that). 
But for our implementation we would need a multiple interval selection 
(e.g. the first 10 frames of a video and the last 10). Is it possible to 
change the implementation such that ImgOption accepts an array of intervals?

Thanks in advance
best regards,
Michael


From christopher.coulon at gmail.com  Fri Jul  5 10:07:11 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 5 Jul 2013 08:07:11 -0700
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
Message-ID: <AD75626E-F8D9-4C7A-9993-284E7EF3CE42@gmail.com>

> P.S.: You do realize that bundling a .exe and using it for printing makes
> your plugin non-portable?

Yes, I do understand that.  The project will be used by a specific PC machine -- it doesn't work on my Mac.  This is the only PC specific element to my program and was put there at the request of my client.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/c95a9efd/attachment.html>

From christopher.coulon at gmail.com  Fri Jul  5 10:42:46 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 5 Jul 2013 08:42:46 -0700
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
Message-ID: <E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>

> First, please make sure that you cloned your project "Postcards" with
> GitHub for Mac. If you did not, or if you are not sure, just re-clone it.

This is the key to my inability to proceed.  Reading about git terms and their meaning is certainly sound advice which I am following, but it would help me greatly if I could get past this step of cloning to my Mac.  This is the github help for cloning:


As I mentioned, there is no "Clone in Mac" button.  My Git for Mac screen differs from your screen shot:



The GITHUB.COM with its list of repositories in the left column is not there, and there is no list with "Clone to Computer" buttons on the right.  I'm sure there is a simple explanation for these differences, and I would love to know what it is.  :-)

On the site mac.github.com it says:


Clone repositories in one click
When you add repositories to GitHub for Mac, we automatically match them up with any organizations you belong to. Want to pull down a repository from GitHub.com? Check out the  button on the website.

Clicking that button gets me right back to the mac.github.com page.  







-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/bed0d01e/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.png
Type: image/png
Size: 68502 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/bed0d01e/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-2.png
Type: image/png
Size: 140752 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/bed0d01e/attachment-0003.png>

From adrian.daerr at univ-paris-diderot.fr  Fri Jul  5 11:22:56 2013
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Fri, 05 Jul 2013 18:22:56 +0200
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
	<E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
Message-ID: <51D6F2E0.30200@univ-paris-diderot.fr>

Hello Chris,

> As I mentioned, there is no "Clone in Mac" button. My Git for Mac screen
> differs from your screen shot:

Your screenshot shows only your local repositories. This could be an 
indication that something went wrong when you entered your credentials 
for github.com at the initial configuration (when you first started th 
application Github for Mac). Try to find a way to enter them (I don't 
have a Mac, so I'd suggest searching the menus and especially the 
preferences - within the Github application on your mac, that is). No 
point in proceeding while the left column only shows THIS COMPUTER.

>     When you add repositories to GitHub for Mac, we automatically match
>     them up with any organizations you belong to. Want to pull down a
>     repository from GitHub.com <http://GitHub.com>? Check out the Clone
>     in Mac button on the website.
>
> Clicking that button gets me right back to the mac.github.com
> <http://mac.github.com> page.

Given the above, I suspect the following explanation applies. Quoting 
from the github-for-mac FAQ at

http://mac.github.com/help.html#faq-clone-in-mac

|"Clone in Mac" doesn't work.
|
| The "Clone in Mac" button requires that you be logged into GitHub.com
| and GitHub for Mac at the same time. Logging in on the website and
| through GitHub for Mac's Preferences should then enable the "Clone in
| Mac" button.

good luck
Adrian


From Johannes.Schindelin at gmx.de  Fri Jul  5 13:56:33 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Fri, 5 Jul 2013 20:56:33 +0200 (CEST)
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
	<E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
Message-ID: <alpine.DEB.1.00.1307051857020.5723@s15462909.onlinehome-server.info>

Hi Chris,

On Fri, 5 Jul 2013, Chris wrote:

> > First, please make sure that you cloned your project "Postcards" with
> > GitHub for Mac. If you did not, or if you are not sure, just re-clone
> > it.
> 
> This is the key to my inability to proceed.  Reading about git terms and
> their meaning is certainly sound advice which I am following, but it
> would help me greatly if I could get past this step of cloning to my
> Mac.  This is the github help for cloning:

I see that you are still on the GitHub page that talks about forking.

"To fork" means that you start with somebody else's repository, make your
own repository from that. That's clearly not what you did, otherwise your
Postcards repository wouuld not have contained just an initial commit with
only a .gitignore and a README.md.

So it is not very surprising that the documentation does not match
*exactly* what you are seeing: you followed the wrong page... :-)

By the way, this comes back to my suggestion to acquaint yourself with Git
terms: if you had understood what a "fork" is, you would probably have
looked at other documentation to begin with.

> As I mentioned, there is no "Clone in Mac" button.  My Git for Mac screen differs from your screen shot:
> 
> The GITHUB.COM with its list of repositories in the left column is not there,

And this is right where you should have stopped and tried again, reading
my mail more carefully.

I stated that I had to put in my GitHub credentials. If you take a step
back and think about it: GitHub for Mac *cannot* know who you are on
GitHub. It *requires* those credentials to connect you to your remote
(GitHub is remote, as far as your computer is concerned) repositories.

Probably you just clicked "connect me later" when GitHub for Mac started
the first time and readily forgot about it. Probably you "just want to get
it done and move on". Probably you wanted to save time by ignoring that
GitHub login screen. However, as you probably realized by now, that desire
to save time cost your more time, multiple times over, than if you would
have spent a single afternoon to get acquainted with Git, get acquainted
with GitHub, follow that HelloWorld tutorial *without* trying to
substitute "Postcards" for "HelloWorld" in the places you thought might be
appropriate, until the point when you understood the workings and
intentions of Git to the point that you *knew* when to substitute, and
when not to.

> and there is no list with "Clone to Computer" buttons on the right.  I'm
> sure there is a simple explanation for these differences, and I would
> love to know what it is.  :-)

Well, as I suggested, if you do not understand differences, do not go on.
Repeat. Remember: if you try to build a tower, and that foundation did not
quite work out, it is unwise to simply go on and build story after story.
Likewise, if you follow a tutorial and some step does not quite work as
you thought it should, it is unwise to simply ignore it and go on with the
tutorial. The tower will topple over.

> On the site mac.github.com it says:
> 
> Clone repositories in one click
> When you add repositories to GitHub for Mac, we automatically match them
> up with any organizations you belong to.

Exactly. But for that, you need to provide it with your GitHub
credentials. Otherwise it cannot know who you are.

> Want to pull down a repository from GitHub.com? Check out the  button on
> the website.
> 
> Clicking that button gets me right back to the mac.github.com page.  

Yep. As I mentioned a couple of times now, it is more important to
understand the meaning behind the instructions than to match up visually
what the buttons look like.

So they changed the GitHub web interface. Big deal, you can work around
that. Especially with all the help you received from now four people.

So again, I would like to encourage you to pay less attention to the exact
labels of the exact buttons on the exact web page, and instead pay more
attention what the idea behind those steps in those tutorials are. Again,
I would like to encourage you to stop in your tracks when you do not
understand why something went wrong when it it, and figure out why,
possibly by repeating the process and trying to figure out the tutorial's
intention more thoroughly, until you manage to get it right.

For example, the GitHub application makes it dirt easy to interoperate
with GitHub. But you have to give it a chance, of course! If you want to
interoperate with *your* repositories, *of course* the application needs
to know who you are on GitHub. And if it does not show you those
repositories (or in your case, this repository), then it probably just
does not know who you are. And since GitHub for Mac is a well-written
application, you should be able to sift through the menus and figure out
which one connects you to GitHub.

Ciao,
Johannes


From jan.eglinger at gmail.com  Fri Jul  5 10:59:29 2013
From: jan.eglinger at gmail.com (Jan Eglinger)
Date: Fri, 05 Jul 2013 17:59:29 +0200
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
	<E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
Message-ID: <51D6ED61.2030302@gmail.com>

Hi Chris,

On 05.07.2013 5:42 PM, Chris wrote:
>> First, please make sure that you cloned your project "Postcards" with
>> GitHub for Mac. If you did not, or if you are not sure, just re-clone it.
> 
> This is the key to my inability to proceed.  Reading about git terms and
> their meaning is certainly sound advice which I am following, but it
> would help me greatly if I could get past this step of cloning to my
> Mac.  This is the github help for cloning:
> 
> As I mentioned, there is no "Clone in Mac" button.  My Git for Mac
> screen differs from your screen shot:
> 

Apparently, you did not yet connect your Github *software* to your
github.com *account*. You can do so using Github>Preferences... in the
menu. After connecting to your account, you should see your online
repositories in addition to your local repositories in the sidebar.

Hth,
Jan




From christopher.coulon at gmail.com  Fri Jul  5 11:41:11 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 5 Jul 2013 09:41:11 -0700
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <51D6F2E0.30200@univ-paris-diderot.fr>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
	<E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
	<51D6F2E0.30200@univ-paris-diderot.fr>
Message-ID: <0D788B70-7AED-4294-81FB-B41219E10997@gmail.com>

> Hello Chris,
> 
>> As I mentioned, there is no "Clone in Mac" button. My Git for Mac screen
>> differs from your screen shot:
> 
> Your screenshot shows only your local repositories. This could be an indication that something went wrong when you entered your credentials for github.com at the initial configuration (when you first started th application Github for Mac). Try to find a way to enter them (I don't have a Mac, so I'd suggest searching the menus and especially the preferences - within the Github application on your mac, that is). No point in proceeding while the left column only shows THIS COMPUTER.
> 
>>    When you add repositories to GitHub for Mac, we automatically match
>>    them up with any organizations you belong to. Want to pull down a
>>    repository from GitHub.com <http://GitHub.com>? Check out the Clone
>>    in Mac button on the website.
>> 
>> Clicking that button gets me right back to the mac.github.com
>> <http://mac.github.com> page.
> 
> Given the above, I suspect the following explanation applies. Quoting from the github-for-mac FAQ at
> 
> http://mac.github.com/help.html#faq-clone-in-mac
> 
> |"Clone in Mac" doesn't work.
> |
> | The "Clone in Mac" button requires that you be logged into GitHub.com
> | and GitHub for Mac at the same time. Logging in on the website and
> | through GitHub for Mac's Preferences should then enable the "Clone in
> | Mac" button.
> 
> good luck
> Adrian

Yes!  That was the missing link that I never saw in all my github and git for mac reading.  Thank you!  :-)

Now, before I make a mess of my Netbeans project on my computer, where should I clone my project?  I have a Postcards file in my NetBeans project forlder:



So my question is, should I navigate to the A_Postcard folder:



or the Postcards folder:



the Postcards on my github.com/ad1054/Postcards does not have the nbactions.xml or the target folder, so will I be messing up my NetBeans project if I clone it there?





-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/2ae13a11/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-3.png
Type: image/png
Size: 103464 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/2ae13a11/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-4.png
Type: image/png
Size: 117107 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/2ae13a11/attachment-0005.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-5.png
Type: image/png
Size: 95725 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/2ae13a11/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-6.png
Type: image/png
Size: 82181 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130705/2ae13a11/attachment-0007.png>

From Johannes.Schindelin at gmx.de  Fri Jul  5 14:20:29 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Fri, 5 Jul 2013 21:20:29 +0200 (CEST)
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <0D788B70-7AED-4294-81FB-B41219E10997@gmail.com>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
	<E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
	<51D6F2E0.30200@univ-paris-diderot.fr>
	<0D788B70-7AED-4294-81FB-B41219E10997@gmail.com>
Message-ID: <alpine.DEB.1.00.1307052110400.5723@s15462909.onlinehome-server.info>

Hi Chris,

On Fri, 5 Jul 2013, Chris wrote:

> >> As I mentioned, there is no "Clone in Mac" button. My Git for Mac
> >> screen differs from your screen shot:
> > 
> > Your screenshot shows only your local repositories. This could be an
> > indication that something went wrong when you entered your credentials
> > for github.com at the initial configuration (when you first started th
> > application Github for Mac). Try to find a way to enter them (I don't
> > have a Mac, so I'd suggest searching the menus and especially the
> > preferences - within the Github application on your mac, that is). No
> > point in proceeding while the left column only shows THIS COMPUTER.
> > 
> >>    When you add repositories to GitHub for Mac, we automatically
> >>    match them up with any organizations you belong to. Want to pull
> >>    down a repository from GitHub.com <http://GitHub.com>? Check out
> >>    the Clone in Mac button on the website.
> >> 
> >> Clicking that button gets me right back to the mac.github.com
> >> <http://mac.github.com> page.
> > 
> > Given the above, I suspect the following explanation applies. Quoting
> > from the github-for-mac FAQ at
> > 
> > http://mac.github.com/help.html#faq-clone-in-mac
> > 
> > |"Clone in Mac" doesn't work.
> > |
> > | The "Clone in Mac" button requires that you be logged into GitHub.com
> > | and GitHub for Mac at the same time. Logging in on the website and
> > | through GitHub for Mac's Preferences should then enable the "Clone in
> > | Mac" button.
> 
> Yes!  That was the missing link that I never saw in all my github and
> git for mac reading.  Thank you!  :-)

Hmpf. I am pretty sad that my detailed mails (that took quite some time to
write, I might add) did not manage to tell you that information. In
particular the part

	I just downloaded the application, started it, and input my
	credentials in the dialog asking for my GitHub login.

of http://imagej.net/pipermail/imagej-devel/2013-July/001643.html should
have given you that clue.

> Now, before I make a mess of my Netbeans project on my computer, where
> should I clone my project?  I have a Postcards file in my NetBeans
> project forlder:
> 
> So my question is, should I navigate to the A_Postcard folder:
> 
> or the Postcards folder:
> 
> the Postcards on my github.com/ad1054/Postcards does not have the
> nbactions.xml or the target folder, so will I be messing up my NetBeans
> project if I clone it there?

Since all of those are failed, earlier attempts, why not follow my
suggestion (that I even repeated a couple of times now) to throw them away
and start over until you understand what you are doing there?

After all, it takes a substantial amount of knowledge of Git to reproduce
where you went wrong and what things are in your working directories and
repositories, and what is missing. And then it would take even more amount
of Git-fu to repair it.

Besides, it is really asking Adrian a lot to guess what the different
folders you have on your computer reflect. They could be anything, from
locally-initialized to forked to renamed folders, even empty folders,
folders that were originally named 'a-little-mouse', and nothing you
explained or showed could clarify that question.

So again: if you failed to accomplish what you wanted to do, throw it away
and start over. Until you understand why Git, or GitHub, or GitHub for
Mac, or Netbeans, or Maven did what they did.

Ciao,
Johannes

P.S.: you still have not had a look at my fix, did you?

P.P.S.: there are so many ways to extract code from GitHub, e.g. the
"Download ZIP" button on https://github.com/ad1054/Postcards/ (but beware:
they might rename it to "Download" and ask you to specify which format you
want in the future, "Download ZIP" is not guaranteed to be the label for
all future!). Even if a clone would fail, you still would have a ton of
ways to find out what changes others made.


From christopher.coulon at gmail.com  Fri Jul  5 19:17:55 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 5 Jul 2013 17:17:55 -0700
Subject: [ImageJ-devel] [Postcards] Bring Postcards up-to-speed (#1)
In-Reply-To: <alpine.DEB.1.00.1307052110400.5723@s15462909.onlinehome-server.info>
References: <ad1054/Postcards/pull/1@github.com>
	<CCE36FD5-52FC-48DC-9F59-7F870A3C5F7C@gaiag.net>
	<alpine.DEB.1.00.1307040618320.28957@s15462909.onlinehome-server.info>
	<6075C5F5-61E1-4783-B752-F7ED54AC52C7@gmail.com>
	<alpine.DEB.1.00.1307050413310.5723@s15462909.onlinehome-server.info>
	<E00FA22B-5C66-4EAF-8BE8-8548BCBB3878@gmail.com>
	<51D6F2E0.30200@univ-paris-diderot.fr>
	<0D788B70-7AED-4294-81FB-B41219E10997@gmail.com>
	<alpine.DEB.1.00.1307052110400.5723@s15462909.onlinehome-server.info>
Message-ID: <E8009029-905D-43E7-98AF-B503FDD0F0F7@gmail.com>

> Hi Chris,
> 
> On Fri, 5 Jul 2013, Chris wrote:
> 
>>>> As I mentioned, there is no "Clone in Mac" button. My Git for Mac
>>>> screen differs from your screen shot:
>>> 
>>> Your screenshot shows only your local repositories. This could be an
>>> indication that something went wrong when you entered your credentials
>>> for github.com at the initial configuration (when you first started th
>>> application Github for Mac). Try to find a way to enter them (I don't
>>> have a Mac, so I'd suggest searching the menus and especially the
>>> preferences - within the Github application on your mac, that is). No
>>> point in proceeding while the left column only shows THIS COMPUTER.
>>> 
>>>>   When you add repositories to GitHub for Mac, we automatically
>>>>   match them up with any organizations you belong to. Want to pull
>>>>   down a repository from GitHub.com <http://GitHub.com>? Check out
>>>>   the Clone in Mac button on the website.
>>>> 
>>>> Clicking that button gets me right back to the mac.github.com
>>>> <http://mac.github.com> page.
>>> 
>>> Given the above, I suspect the following explanation applies. Quoting
>>> from the github-for-mac FAQ at
>>> 
>>> http://mac.github.com/help.html#faq-clone-in-mac
>>> 
>>> |"Clone in Mac" doesn't work.
>>> |
>>> | The "Clone in Mac" button requires that you be logged into GitHub.com
>>> | and GitHub for Mac at the same time. Logging in on the website and
>>> | through GitHub for Mac's Preferences should then enable the "Clone in
>>> | Mac" button.
>> 
>> Yes!  That was the missing link that I never saw in all my github and
>> git for mac reading.  Thank you!  :-)
> 
> Hmpf. I am pretty sad that my detailed mails (that took quite some time to
> write, I might add) did not manage to tell you that information. In
> particular the part
> 
> 	I just downloaded the application, started it, and input my
> 	credentials in the dialog asking for my GitHub login.
> 
> of http://imagej.net/pipermail/imagej-devel/2013-July/001643.html should
> have given you that clue.

I am so sorry you feel I have been superficial in my study of your help.  I assure you I studied everything carefully and thoroughly.  My problem was I couldn't make things happen as they were supposed to in the tutorials and your instructions, but now in retrospect, I see that I was not getting certain points, the most critical was that i had to log into my account before trying to clone.  I never saw that instruction anywhere, but that was the critical point.  The rest was very clear and thorough.  I appreciated the amount of writing and careful work you put into the answer the moment I opened the email.  Thank you so much!  

>> Now, before I make a mess of my Netbeans project on my computer, where
>> should I clone my project?  I have a Postcards file in my NetBeans
>> project forlder:
>> 
>> So my question is, should I navigate to the A_Postcard folder:
>> 
>> or the Postcards folder:
>> 
>> the Postcards on my github.com/ad1054/Postcards does not have the
>> nbactions.xml or the target folder, so will I be messing up my NetBeans
>> project if I clone it there?
> 
> Since all of those are failed, earlier attempts, why not follow my
> suggestion (that I even repeated a couple of times now) to throw them away
> and start over until you understand what you are doing there?
> 
> After all, it takes a substantial amount of knowledge of Git to reproduce
> where you went wrong and what things are in your working directories and
> repositories, and what is missing. And then it would take even more amount
> of Git-fu to repair it.
> 
> Besides, it is really asking Adrian a lot to guess what the different
> folders you have on your computer reflect. They could be anything, from
> locally-initialized to forked to renamed folders, even empty folders,
> folders that were originally named 'a-little-mouse', and nothing you
> explained or showed could clarify that question.
> 
> So again: if you failed to accomplish what you wanted to do, throw it away
> and start over. Until you understand why Git, or GitHub, or GitHub for
> Mac, or Netbeans, or Maven did what they did.
> 
> Ciao,
> Johannes
> 
> P.S.: you still have not had a look at my fix, did you?
> 
> P.P.S.: there are so many ways to extract code from GitHub, e.g. the
> "Download ZIP" button on https://github.com/ad1054/Postcards/ (but beware:
> they might rename it to "Download" and ask you to specify which format you
> want in the future, "Download ZIP" is not guaranteed to be the label for
> all future!). Even if a clone would fail, you still would have a ton of
> ways to find out what changes others made.

Again, thank you.  I am going to restart and this time I expect I can do it without all the pleas for help.  :-)




From christopher.coulon at gmail.com  Sat Jul  6 13:47:09 2013
From: christopher.coulon at gmail.com (Chris)
Date: Sat, 6 Jul 2013 11:47:09 -0700
Subject: [ImageJ-devel] Postcard Project does not recognize a resource
Message-ID: <8660926D-371D-411D-B4DF-744F4AAE2785@gaiag.net>

Johannes, Curtis, Adrian, Jan, and Dscho:

The errors magically went away this morning, so I tried running my project and got the following error:

Exception in thread "main" java.lang.NullPointerException
	at javax.swing.ImageIcon.<init>(ImageIcon.java:205)
	at PostCard.initComponents(PostCard.java:69)
	at PostCard.<init>(PostCard.java:31)
	at A_Postcard.run(A_Postcard.java:25)
	at A_Postcard.main(A_Postcard.java:35)

the offending line in PostCard.java is:



It calls for English.jpg in the resources, and my resources folder does contain the file:



so I don't understand the error, but the project will not run until I resolve this.  The file structure is identical on my local computer and on GitHub, so I do not understand why I am getting the NullPointerException.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130706/6bacd7af/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.png
Type: image/png
Size: 31375 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130706/6bacd7af/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-2.png
Type: image/png
Size: 18983 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130706/6bacd7af/attachment-0003.png>

From bugzilla at fiji.sc  Sun Jul  7 09:13:32 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Sun, 07 Jul 2013 14:13:32 +0000
Subject: [ImageJ-devel] [Bug 622] segmentation editor
In-Reply-To: <bug-622-194@http.fiji.sc/bugzilla/>
References: <bug-622-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-622-194-TZfkL5fAyk@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=622

Johannes Schindelin <johannes.schindelin at gmx.de> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
                 CC|                            |johannes.schindelin at gmx.de

--- Comment #1 from Johannes Schindelin <johannes.schindelin at gmx.de> ---
Unfortunately, I do not have much time to spend on this issue. So if you want
me to help you, you *must* put an effort into making the problem very, very
easy for me to reproduce (otherwise I would spend all the time I have to spare
on trying to reproduce it and not even manage that!). I simply do not even have
two hours to work on this.

For starters, I need to know on which operating system you work. I also would
need to know what your updater says regarding how up-to-date your system is.
This information would have been provided automatically had you reported the
bug as suggested by Help>Report a Bug.

Then I also need a small example image with which this happens. And then I will
need an exact step-by-step list how to reproduce the issue (we have a lot of
videos, even about the Segmentation Editor, and you did not provide anything
like a URL or some such and even then it is asking a bit much to suggest
watching the video and guess which operation failed).

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130707/452f5dd1/attachment.html>

From bugzilla at fiji.sc  Sun Jul  7 09:21:26 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Sun, 07 Jul 2013 14:21:26 +0000
Subject: [ImageJ-devel] [Bug 572] while analyzing particles from stack
 (imported image sequence) analyzes same picture n times instead of stack
 from n pictures when using anything other then default threshold
In-Reply-To: <bug-572-194@http.fiji.sc/bugzilla/>
References: <bug-572-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-572-194-B4TzxtgDDk@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=572

Johannes Schindelin <johannes.schindelin at gmx.de> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
             Status|NEW                         |RESOLVED
                 CC|                            |johannes.schindelin at gmx.de
         Resolution|---                         |INVALID

--- Comment #1 from Johannes Schindelin <johannes.schindelin at gmx.de> ---
This is not a bug, but a request for assistance how to use Fiji/ImageJ. Please
redirect your question to http://imagej.1557.x6.nabble.com/.

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130707/f4cc7e41/attachment.html>

From bugzilla at fiji.sc  Sun Jul  7 09:46:57 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Sun, 07 Jul 2013 14:46:57 +0000
Subject: [ImageJ-devel] [Bug 419] ImageJ2: null pointer exception upon
 shift-click on a rectangular ROI
In-Reply-To: <bug-419-194@http.fiji.sc/bugzilla/>
References: <bug-419-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-419-194-ki9at2I59x@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=419

Johannes Schindelin <johannes.schindelin at gmx.de> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
             Status|NEW                         |RESOLVED
                 CC|                            |johannes.schindelin at gmx.de
         Resolution|---                         |MOVED

--- Comment #1 from Johannes Schindelin <johannes.schindelin at gmx.de> ---
Fixed in ImageJ2.

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130707/378b09e5/attachment.html>

From bugzilla at fiji.sc  Sun Jul  7 10:47:42 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Sun, 07 Jul 2013 15:47:42 +0000
Subject: [ImageJ-devel] [Bug 622] segmentation editor
In-Reply-To: <bug-622-194@http.fiji.sc/bugzilla/>
References: <bug-622-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-622-194-fZIV17N04F@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=622

Johannes Schindelin <johannes.schindelin at gmx.de> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
          Component|ImageJ2                     |Plugins

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130707/63ff607e/attachment.html>

From Johannes.Schindelin at gmx.de  Sun Jul  7 12:04:16 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Sun, 7 Jul 2013 19:04:16 +0200 (CEST)
Subject: [ImageJ-devel] Postcard Project does not recognize a resource
In-Reply-To: <8660926D-371D-411D-B4DF-744F4AAE2785@gaiag.net>
References: <8660926D-371D-411D-B4DF-744F4AAE2785@gaiag.net>
Message-ID: <alpine.DEB.1.00.1307071857440.24252@s15462909.onlinehome-server.info>

Hi Chris,

On Sat, 6 Jul 2013, Chris wrote:

> The errors magically went away this morning,

I think there was little magic involved, and more the synchronizing power
of GitHub for Mac.

> so I tried running my project and got the following error:
> 
> Exception in thread "main" java.lang.NullPointerException
> 	at javax.swing.ImageIcon.<init>(ImageIcon.java:205)
> 	at PostCard.initComponents(PostCard.java:69)
> 	at PostCard.<init>(PostCard.java:31)
> 	at A_Postcard.run(A_Postcard.java:25)
> 	at A_Postcard.main(A_Postcard.java:35)

The problem is that you inherited a bug I introduced into
minimal-ij1-plugin. Initially intended to include the Java sources by
default, it unfortunately also excluded src/main/resources by mistake. I
cherry-picked the fix to my fork of your repository (see how cunningly I
sneak in some Git lingo for your learning benefit?) and opened a pull
request:

	 https://github.com/ad1054/Postcards/pull/2

Again, if you merge this on the web site, you *have* to give the GitHub
application your computer a chance to synchronize (it is somewhere in the
menu when you opened the appropriate local repository, IIRC
Tools>Synchronize...) because there is no way that the GitHub web site
will trigger an update of your local files automatically upon merging a
pull request.

Ciao,
Johannes


From mohammedtleis at hotmail.com  Mon Jul  8 07:07:04 2013
From: mohammedtleis at hotmail.com (Mohamed Tleis)
Date: Mon, 8 Jul 2013 14:07:04 +0200
Subject: [ImageJ-devel] Saving an image with Overlay in imageJ2
Message-ID: <BLU0-SMTP50ACAAEF9DA76BFACB08E7A2780@phx.gbl>

Dear Developers,

I am trying to save an image with overlays of Rois in ij2. and it seems 
not to be implemented yet in the beta7 (or is it a bug?).
I am wondering whether it is available in the api and is there a 
temporary solution to save the Overlays?
I had a look in the api packages, as well as the milestone of imageJ2 
but couldn't get any clue.


Best Regards,
Mohamed Tleis


From hiner at wisc.edu  Mon Jul  8 08:46:56 2013
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 8 Jul 2013 08:46:56 -0500
Subject: [ImageJ-devel] cell-serialisation
In-Reply-To: <27282876-C0C6-4569-A27C-C752E4337619@mpi-cbg.de>
References: <27282876-C0C6-4569-A27C-C752E4337619@mpi-cbg.de>
Message-ID: <CA+B=mGp=CvGu4YBdv7JkCV_JEi0QFAH5h5L9G3wTi5SWAkwk0Q@mail.gmail.com>

Hi Tobias,

The SCIFIOCell<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/img/cell/SCIFIOCell.java>class
needs to be serializable to allow the library we're using to persist
opened cells to disk, and thus its superclass(es) needs to be serializable
with non-final fields.

The only potential alternative I can think of would be to fully duplicate
AbstractCell's fields and logic in SCIFIOCell... but that would still
require the ArrayDataAccess to be serializable (do you see that as a
potential problem, or only AbstractCell?).

In the merge commit<https://github.com/imagej/imglib/commit/7bc7dde9b095d6e3544d5f781716c0dc06de439b>I
mentioned we ran the PerformanceBenchmark with/without implementing
Serializable and saw no difference. We thought that was sufficient for
merging the changes, but I'm sorry if we circumvented discussion.

If there are other tests you'd like to see run, or would like me to
investigate duplicating AbstractCell's code, let me know.

Thanks,
Mark


On Wed, Jul 3, 2013 at 10:40 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>wrote:

> Hi Mark,
>
> we just noticed the merge of the cell-serialization branch, that makes
> AbstractCell Serializable and therefore final field non-final.
> Actually Stephan Saalfeld noticed, I would have missed it probably. It
> would be nice if such changes could be discussed before they are merged to
> master.
> Did you do any tests to evaluate the performance impact of un-finalizing
> the fields.
> What is this needed for and are there other alternatives to achieve it
> instead of making AbstractCell Serializable.
>
> best regards,
> Tobias
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130708/94267308/attachment.html>

From hiner at wisc.edu  Mon Jul  8 09:22:57 2013
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 8 Jul 2013 09:22:57 -0500
Subject: [ImageJ-devel] Scifion Img Opener some question
In-Reply-To: <51D6A18C.3050004@gmx.de>
References: <51D6A18C.3050004@gmx.de>
Message-ID: <CA+B=mGp-aK3oVC_NxCLO3sJWtYgAT+3HAqkcuFBjQwMbd87AYw@mail.gmail.com>

Hi Michael,

-  the scifio ImgOpener's openImg method has the parameters Reader, type,
> factory and options
>         - What is the relationship between Reader and IFormatReader (we
> used previously the openImg(IFormatReader ...) method)
>         - can we retriev the type from a Reader (IFormatReader x;
> ImgIOUtils.makeType(x.getPixelType())
>

 An IFormatReader<https://github.com/openmicroscopy/bioformats/blob/develop/components/scifio/src/loci/formats/IFormatReader.java>is
the loci.formats base reader interface that performs all the metadata
parsing and pixel reading in Bio-Formats. In SCIFIO, the process is split
into components such as a
Parser<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/Parser.java>or
Reader<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/Reader.java>.
So the io.scif Reader API is a subset of the IFormatReader, specifically
for opening pixels.

The pixel type (and all other metadata) is now stored in the i
o.scif.Metadata<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/Metadata.java>class,
which gets attached to the Reader.
Reader#getMetadata()<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/Reader.java#L171>will
get the current Metadata object, and
Metadata#getPixelType(int)<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/Metadata.java#L154>gets
the pixel type for a specified image index (the Metadata class is at
the dataset level; if you have a single image in your dataset, you can just
get getPixelType(0) ).

Note that the entry point for all these classes is the
Format<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/Format.java>.
Also, there is a series of
tutorials<https://github.com/scifio/scifio/tree/master/tutorials>introducing
the SCIFIO API, with a specific focus on transitioning from the
loci.formats API.

- the imglib2.io ImgOpener has some static methods like
>         - public static AxisType[] getDimTypes(final IFormatReader r)
>         - public static double[] getCalibration(final IFormatReader r)
>
    how can I retriev such data using the scifio ImgOpener?
>

 The io.scif.Metadata class uses the imglib AxisTypes natively to manage
dimensions. So if you have an io.scif.Reader, you can get its Metadata (as
above) and call
Metadata#getAxes(int)<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/Metadata.java#L268>for
the desired image index within the dataset.

Unfortunately the calibration data is more complicated right now. In the
loci.formats API, all the calibration information was tracked as physical
pixel sizes in the MetadataStore. So in the io.scif API, that metadata only
exists in the OMEMetadata<https://github.com/scifio/bioformats/blob/scifio/components/ome-xml/src/ome/xml/meta/OMEMetadata.java>class,
which requires our fork of Bio-Formats on the classpath, and then
requires Translation<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/services/TranslatorService.java>.
Our intention is to make calibration information a fundamental part of the
axes representation, but I'm not sure if this will be at the ImgLib or
SCIFIO level.

One way or another, it will eventually be part of the io.scif.Metadata API.

- ImgOptions supports the selection of an interval (thanks for that). But
> for our implementation we would need a multiple interval selection (e.g.
> the first 10 frames of a video and the last 10). Is it possible to change
> the implementation such that ImgOption accepts an array of intervals?
>

Yes, this is a very good idea and I'm sorry it wasn't available from the
beginning. I've added an issue to track
it<https://github.com/scifio/scifio/issues/14>and will get it into the
next SCIFIO release.

Thanks for the feedback and let me know if you have any more questions.

- Mark

P.S. there is now a SCIFIO mailing list (scifio at scif.io, copied) for
scifio-specific issues


On Fri, Jul 5, 2013 at 5:35 AM, Michael Zinsmaier
<michael.zinsmaier at gmx.de>wrote:

> Hi together, hi Mark,
>
> I just started to convert the Knime Image Processing "Image Reader" code
> to the new implementation of ImgOpener (scifio). However I am a bit stuck
> could you help me with a few questions regarding the code changes?
>
> - the imglib2.io ImgOpener has some static methods like
>         - public static AxisType[] getDimTypes(final IFormatReader r)
>         - public static double[] getCalibration(final IFormatReader r)
>
>     how can I retriev such data using the scifio ImgOpener?
>
> -  the scifio ImgOpener's openImg method has the parameters Reader, type,
> factory and options
>         - What is the relationship between Reader and IFormatReader (we
> used previously the openImg(IFormatReader ...) method)
>         - can we retriev the type from a Reader (IFormatReader x;
> ImgIOUtils.makeType(x.**getPixelType())
>
> - ImgOptions supports the selection of an interval (thanks for that). But
> for our implementation we would need a multiple interval selection (e.g.
> the first 10 frames of a video and the last 10). Is it possible to change
> the implementation such that ImgOption accepts an array of intervals?
>
> Thanks in advance
> best regards,
> Michael
>
> ______________________________**_________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/**listinfo/imagej-devel<http://imagej.net/mailman/listinfo/imagej-devel>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130708/7b2182cc/attachment.html>

From bdezonia at gmail.com  Mon Jul  8 10:15:55 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Mon, 8 Jul 2013 10:15:55 -0500
Subject: [ImageJ-devel] Saving an image with Overlay in imageJ2
In-Reply-To: <BLU0-SMTP50ACAAEF9DA76BFACB08E7A2780@phx.gbl>
References: <BLU0-SMTP50ACAAEF9DA76BFACB08E7A2780@phx.gbl>
Message-ID: <CAKcvfuTSCxpZZeGaZybhh0ty9XUSXbsQuT2tNeZyU3hOgxVYnA@mail.gmail.com>

Hi Mohamed,

We do plan to save overlays with images but that functionality is not yet
in place. It is scheduled to be completed by our initial release of 2.0.0.
There is a very barebones ticket in our trac noting this need:
http://trac.imagej.net/ticket/1257.


On Mon, Jul 8, 2013 at 7:07 AM, Mohamed Tleis <mohammedtleis at hotmail.com>wrote:

> Dear Developers,
>
> I am trying to save an image with overlays of Rois in ij2. and it seems
> not to be implemented yet in the beta7 (or is it a bug?).
> I am wondering whether it is available in the api and is there a temporary
> solution to save the Overlays?
> I had a look in the api packages, as well as the milestone of imageJ2 but
> couldn't get any clue.
>
>
> Best Regards,
> Mohamed Tleis
>
> ______________________________**_________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/**listinfo/imagej-devel<http://imagej.net/mailman/listinfo/imagej-devel>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130708/d226cf1f/attachment-0001.html>

From bdezonia at gmail.com  Mon Jul  8 10:25:55 2013
From: bdezonia at gmail.com (Barry DeZonia)
Date: Mon, 8 Jul 2013 10:25:55 -0500
Subject: [ImageJ-devel] Saving an image with Overlay in imageJ2
In-Reply-To: <CAKcvfuTSCxpZZeGaZybhh0ty9XUSXbsQuT2tNeZyU3hOgxVYnA@mail.gmail.com>
References: <BLU0-SMTP50ACAAEF9DA76BFACB08E7A2780@phx.gbl>
	<CAKcvfuTSCxpZZeGaZybhh0ty9XUSXbsQuT2tNeZyU3hOgxVYnA@mail.gmail.com>
Message-ID: <CAKcvfuQ__qPpgH9=MGLeFQbA9+bVNAaFBmwJUuQpNz7D1V=J9w@mail.gmail.com>

Hi Mohamed,

It seems I may have misinterpreted your question. There is also now a
ticket for saveing and restoring overlays from within the Overlay Manager:
http://trac.imagej.net/ticket/1936. It is scheduled for beta 9 (and we are
currently developing beta 8).


On Mon, Jul 8, 2013 at 10:15 AM, Barry DeZonia <bdezonia at gmail.com> wrote:

> Hi Mohamed,
>
> We do plan to save overlays with images but that functionality is not yet
> in place. It is scheduled to be completed by our initial release of 2.0.0.
> There is a very barebones ticket in our trac noting this need:
> http://trac.imagej.net/ticket/1257.
>
>
> On Mon, Jul 8, 2013 at 7:07 AM, Mohamed Tleis <mohammedtleis at hotmail.com>wrote:
>
>> Dear Developers,
>>
>> I am trying to save an image with overlays of Rois in ij2. and it seems
>> not to be implemented yet in the beta7 (or is it a bug?).
>> I am wondering whether it is available in the api and is there a
>> temporary solution to save the Overlays?
>> I had a look in the api packages, as well as the milestone of imageJ2 but
>> couldn't get any clue.
>>
>>
>> Best Regards,
>> Mohamed Tleis
>>
>> ______________________________**_________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/**listinfo/imagej-devel<http://imagej.net/mailman/listinfo/imagej-devel>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130708/126c0583/attachment.html>

From Johannes.Schindelin at gmx.de  Mon Jul  8 10:37:38 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Mon, 8 Jul 2013 17:37:38 +0200 (CEST)
Subject: [ImageJ-devel] Saving an image with Overlay in imageJ2
In-Reply-To: <BLU0-SMTP50ACAAEF9DA76BFACB08E7A2780@phx.gbl>
References: <BLU0-SMTP50ACAAEF9DA76BFACB08E7A2780@phx.gbl>
Message-ID: <alpine.DEB.1.00.1307081734400.24252@s15462909.onlinehome-server.info>

Hi Mohamed,

On Mon, 8 Jul 2013, Mohamed Tleis wrote:

> I am trying to save an image with overlays of Rois in ij2. and it seems
> not to be implemented yet in the beta7 (or is it a bug?).

There is no standard for saving images together with overlays or ROIs yet.
ImageJ 1.x' support for that is not standardized, and quite limited (it is
impossible, for example, to specify a volume of interest).

> I am wondering whether it is available in the api and is there a
> temporary solution to save the Overlays?

There is no plan as of now to make it possible to save the overlays. We
are still in the process of trying to define a proper ROI model (whose
visualization are overlays, but not all overlays are ROIs). The model is
likely required before we can start thinking about saving overlays in a
future-proof manner.

Ciao,
Johannes


From bugzilla at fiji.sc  Tue Jul  9 10:25:26 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Tue, 09 Jul 2013 15:25:26 +0000
Subject: [ImageJ-devel] [Bug 622] segmentation editor
In-Reply-To: <bug-622-194@http.fiji.sc/bugzilla/>
References: <bug-622-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-622-194-hnFeyFhTcu@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=622

Johannes Schindelin <johannes.schindelin at gmx.de> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
             Status|NEW                         |RESOLVED
         Resolution|---                         |WONTFIX

--- Comment #2 from Johannes Schindelin <johannes.schindelin at gmx.de> ---
On Tue, 9 Jul 2013, Zhang, Nian wrote:

> I?ve never known any person so arrogant.   Thanks but no thanks.

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130709/4d3f53ea/attachment.html>

From christopher.coulon at gmail.com  Tue Jul  9 14:01:53 2013
From: christopher.coulon at gmail.com (Chris)
Date: Tue, 9 Jul 2013 12:01:53 -0700
Subject: [ImageJ-devel] ImageJ will not open, needs java SE 6 runtime
Message-ID: <4CE66CA6-D166-4039-B8F5-115992266088@gaiag.net>

In attempting to open ImageJ or Fiji, I am getting an error: To open "ImageJ," you need a Java SE 6 runtime.  I have never seen this error before.  I use a Mac PowerBook Pro 10.7.5.  Also, in attempting to run ImageJ from the terminal, I get: 

ChrisGAIAG:ImageJ chris$ java -jar -mx256m ImageJ.app/Contents/Resources/Java/ij.jar
Error: Unable to access jarfile ImageJ.app/Contents/Resources/Java/ij.jar

Is this a known problem, and is there a fix for it?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130709/9726412b/attachment.html>

From bugzilla at fiji.sc  Tue Jul  9 16:41:12 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Tue, 09 Jul 2013 21:41:12 +0000
Subject: [ImageJ-devel] [Bug 622] segmentation editor
In-Reply-To: <bug-622-194@http.fiji.sc/bugzilla/>
References: <bug-622-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-622-194-AI6eDLouB0@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=622

Curtis Rueden <ctrueden at wisc.edu> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
                 CC|                            |ctrueden at wisc.edu

--- Comment #3 from Curtis Rueden <ctrueden at wisc.edu> ---
In fairness to Nian: had Johannes phrased his requests for information as
questions rather than demands, Nian may not have been so offended.

And in fairness to Johannes: without sufficient detail to reproduce the
problem, there really is no way we can fix it. Ultimately, Nian, it is up to
you to decide whether this issue is important enough for you to put up with
Johannes's "arrogance" but if you choose not to, you won't get what you want.

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130709/f5ee75bd/attachment.html>

From Johannes.Schindelin at gmx.de  Tue Jul  9 22:27:17 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 10 Jul 2013 05:27:17 +0200 (CEST)
Subject: [ImageJ-devel] ImageJ will not open, needs java SE 6 runtime
In-Reply-To: <4CE66CA6-D166-4039-B8F5-115992266088@gaiag.net>
References: <4CE66CA6-D166-4039-B8F5-115992266088@gaiag.net>
Message-ID: <alpine.DEB.1.00.1307100523410.24252@s15462909.onlinehome-server.info>

Hi Chris,

On Tue, 9 Jul 2013, Chris wrote:

> In attempting to open ImageJ or Fiji, I am getting an error: To open
> "ImageJ," you need a Java SE 6 runtime.

It also offers you to install the same.

> I have never seen this error before.  I use a Mac PowerBook Pro 10.7.5.

Apple does not ship Java by default anymore, starting with 10.7. Instead,
they show you that dialog similar to

http://www.fanuriotimetracking.com/files/releases/2.6.1/help/html/images/macosx-lion-java-install.png

which clearly has two buttons, one of them labeled "Install".

After it installed Java, you have to run ImageJ or Fiji *again*.

> Also, in attempting to run ImageJ from the terminal, I get: 
> 
> ChrisGAIAG:ImageJ chris$ java -jar -mx256m ImageJ.app/Contents/Resources/Java/ij.jar
> Error: Unable to access jarfile ImageJ.app/Contents/Resources/Java/ij.jar
> 
> Is this a known problem, and is there a fix for it?

I bet ij.jar is somewhere else than ImageJ.app/Contents/Resources/Java/.

Ciao,
Johannes


From christopher.coulon at gmail.com  Wed Jul 10 10:15:28 2013
From: christopher.coulon at gmail.com (Chris)
Date: Wed, 10 Jul 2013 08:15:28 -0700
Subject: [ImageJ-devel] ImageJ will not open, needs java SE 6 runtime
In-Reply-To: <alpine.DEB.1.00.1307100523410.24252@s15462909.onlinehome-server.info>
References: <4CE66CA6-D166-4039-B8F5-115992266088@gaiag.net>
	<alpine.DEB.1.00.1307100523410.24252@s15462909.onlinehome-server.info>
Message-ID: <123A24DB-264C-4413-8F77-8ADA20D6FCF0@gmail.com>

> Hi Chris,
> 
> On Tue, 9 Jul 2013, Chris wrote:
> 
>> In attempting to open ImageJ or Fiji, I am getting an error: To open
>> "ImageJ," you need a Java SE 6 runtime.
> 
> It also offers you to install the same.
> 
>> I have never seen this error before.  I use a Mac PowerBook Pro 10.7.5.
> 
> Apple does not ship Java by default anymore, starting with 10.7. Instead,
> they show you that dialog similar to
> 
> http://www.fanuriotimetracking.com/files/releases/2.6.1/help/html/images/macosx-lion-java-install.png
> 
> which clearly has two buttons, one of them labeled "Install".

Yes, I got that exact message.  Unfortunately, I was on the Amtrak train from Bakersfield to Oakland, California at the time and had five hours to work on a project for a Canadian researcher.  Amtrak has limited wifi that does not allow downloads, so I was hoping I could start ImageJ some other way.  Wayne got back to me toward the end of the trip with the suggestion:  

java -mx256m -jar  ij.jar

which worked.

> After it installed Java, you have to run ImageJ or Fiji *again*.
> 
>> Also, in attempting to run ImageJ from the terminal, I get: 
>> 
>> ChrisGAIAG:ImageJ chris$ java -jar -mx256m ImageJ.app/Contents/Resources/Java/ij.jar
>> Error: Unable to access jarfile ImageJ.app/Contents/Resources/Java/ij.jar
>> 
>> Is this a known problem, and is there a fix for it?
> 
> I bet ij.jar is somewhere else than ImageJ.app/Contents/Resources/Java/.

You would lose that bet!  ;-)  Wayne's suggestion worked from the same directory where I got this error.

Chris

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130710/4f98b970/attachment.html>

From pietzsch at mpi-cbg.de  Wed Jul 10 10:42:12 2013
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Wed, 10 Jul 2013 17:42:12 +0200
Subject: [ImageJ-devel] cell-serialisation
In-Reply-To: <CA+B=mGp=CvGu4YBdv7JkCV_JEi0QFAH5h5L9G3wTi5SWAkwk0Q@mail.gmail.com>
References: <27282876-C0C6-4569-A27C-C752E4337619@mpi-cbg.de>
	<CA+B=mGp=CvGu4YBdv7JkCV_JEi0QFAH5h5L9G3wTi5SWAkwk0Q@mail.gmail.com>
Message-ID: <3562ED80-8CF8-40A7-920B-758500573138@mpi-cbg.de>

Hi Mark

Ok, if it doesn't harm performance it's fine with me. I had missed the note in the merge commit...

best regards,
Tobias

On Jul 8, 2013, at 3:46 PM, Mark Hiner <hiner at wisc.edu> wrote:

> Hi Tobias,
> 
> The SCIFIOCell class needs to be serializable to allow the library we're using to persist opened cells to disk, and thus its superclass(es) needs to be serializable with non-final fields. 
> 
> The only potential alternative I can think of would be to fully duplicate AbstractCell's fields and logic in SCIFIOCell... but that would still require the ArrayDataAccess to be serializable (do you see that as a potential problem, or only AbstractCell?).
> 
> In the merge commit I mentioned we ran the PerformanceBenchmark with/without implementing Serializable and saw no difference. We thought that was sufficient for merging the changes, but I'm sorry if we circumvented discussion.
> 
> If there are other tests you'd like to see run, or would like me to investigate duplicating AbstractCell's code, let me know.
> 
> Thanks,
> Mark
> 
> 
> On Wed, Jul 3, 2013 at 10:40 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
> Hi Mark,
> 
> we just noticed the merge of the cell-serialization branch, that makes AbstractCell Serializable and therefore final field non-final.
> Actually Stephan Saalfeld noticed, I would have missed it probably. It would be nice if such changes could be discussed before they are merged to master.
> Did you do any tests to evaluate the performance impact of un-finalizing the fields.
> What is this needed for and are there other alternatives to achieve it instead of making AbstractCell Serializable.
> 
> best regards,
> Tobias
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130710/f30489b8/attachment.html>

From hinerm at gmail.com  Wed Jul 10 10:43:07 2013
From: hinerm at gmail.com (Mark Hiner)
Date: Wed, 10 Jul 2013 10:43:07 -0500
Subject: [ImageJ-devel] cell-serialisation
In-Reply-To: <3562ED80-8CF8-40A7-920B-758500573138@mpi-cbg.de>
References: <27282876-C0C6-4569-A27C-C752E4337619@mpi-cbg.de>
	<CA+B=mGp=CvGu4YBdv7JkCV_JEi0QFAH5h5L9G3wTi5SWAkwk0Q@mail.gmail.com>
	<3562ED80-8CF8-40A7-920B-758500573138@mpi-cbg.de>
Message-ID: <CA+B=mGqL-yKV9DBLvHik_4LsU6DBSAsSNfEnUz4J+-4_B1bYCw@mail.gmail.com>

Yeah I realized that it was in the merge commit but not the actual commit.
Sorry for the confusion.


On Wed, Jul 10, 2013 at 10:42 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>wrote:

> Hi Mark
>
> Ok, if it doesn't harm performance it's fine with me. I had missed the
> note in the merge commit...
>
> best regards,
> Tobias
>
> On Jul 8, 2013, at 3:46 PM, Mark Hiner <hiner at wisc.edu> wrote:
>
> Hi Tobias,
>
> The SCIFIOCell<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/img/cell/SCIFIOCell.java>class needs to be serializable to allow the library we're using to persist
> opened cells to disk, and thus its superclass(es) needs to be serializable
> with non-final fields.
>
> The only potential alternative I can think of would be to fully duplicate
> AbstractCell's fields and logic in SCIFIOCell... but that would still
> require the ArrayDataAccess to be serializable (do you see that as a
> potential problem, or only AbstractCell?).
>
> In the merge commit<https://github.com/imagej/imglib/commit/7bc7dde9b095d6e3544d5f781716c0dc06de439b>I mentioned we ran the PerformanceBenchmark with/without implementing
> Serializable and saw no difference. We thought that was sufficient for
> merging the changes, but I'm sorry if we circumvented discussion.
>
> If there are other tests you'd like to see run, or would like me to
> investigate duplicating AbstractCell's code, let me know.
>
> Thanks,
> Mark
>
>
> On Wed, Jul 3, 2013 at 10:40 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>wrote:
>
>> Hi Mark,
>>
>> we just noticed the merge of the cell-serialization branch, that makes
>> AbstractCell Serializable and therefore final field non-final.
>> Actually Stephan Saalfeld noticed, I would have missed it probably. It
>> would be nice if such changes could be discussed before they are merged to
>> master.
>> Did you do any tests to evaluate the performance impact of un-finalizing
>> the fields.
>> What is this needed for and are there other alternatives to achieve it
>> instead of making AbstractCell Serializable.
>>
>> best regards,
>> Tobias
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130710/8e58ddfb/attachment.html>

From christopher.coulon at gmail.com  Fri Jul 12 14:34:40 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 12 Jul 2013 12:34:40 -0700
Subject: [ImageJ-devel] error: Unrecognized command: "Versatile Wand"
Message-ID: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>

I am making progress!  I got my postcard project running, but now I am getting the error: Unrecognized command: "Versatile Wand" and can go no further.  I use the versatile wand plugin for part of my image analysis, and it should be available in the repository, right?  So why doesn't my instance of ImageJ  in NetBeans recognize it?  

Chris Coulon

From ctrueden at wisc.edu  Fri Jul 12 14:53:57 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 12 Jul 2013 14:53:57 -0500
Subject: [ImageJ-devel] error: Unrecognized command: "Versatile Wand"
In-Reply-To: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
Message-ID: <CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>

Hi Chris,

> I use the versatile wand plugin for part of my image analysis, and it
> should be available in the repository, right?

Nope, Versatile Wand is not part of Fiji, and not available from any Maven
repository.

> So why doesn't my instance of ImageJ  in NetBeans recognize it?

You can hack around it by including a copy of the Versatile Wand source
with your plugin. But this ultimately causes problems because then you will
be shipping your own version of it which might conflict with a different
version installed by a user.

The proper solution is to deploy the Versatile Wand JAR file to a Maven
remote repository you control. Or at minimum: install it to your local
Maven repository cache. But both of these are rather involved for someone
who is just getting started with Maven.

A much easier approach would be to simply develop your plugin using the
Fiji Script Editor, which will automatically include all installed plugins
on your classpath when you compile and run. But then you can't use
NetBeans, of course.

Regards,
Curtis


On Fri, Jul 12, 2013 at 2:34 PM, Chris <christopher.coulon at gmail.com> wrote:

> I am making progress!  I got my postcard project running, but now I am
> getting the error: Unrecognized command: "Versatile Wand" and can go no
> further.  I use the versatile wand plugin for part of my image analysis,
> and it should be available in the repository, right?  So why doesn't my
> instance of ImageJ  in NetBeans recognize it?
>
> Chris Coulon
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130712/380d7d2d/attachment.html>

From ctrueden at wisc.edu  Fri Jul 12 14:58:42 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 12 Jul 2013 14:58:42 -0500
Subject: [ImageJ-devel] error: Unrecognized command: "Versatile Wand"
In-Reply-To: <CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
	<CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
Message-ID: <CADN69yk4HiCO7j0gYp6eMgTHQqSD2dO4www4Zq=BQfZ08MYREw@mail.gmail.com>

Hi Chris,

> Or at minimum: install it to your local Maven repository cache.

If you decide to do this, here is the page explaining how:
http://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html

But you may want to read a bit more about Maven in general, too. Sonatype
has a great book; here is the relevant chapter on dependencies:
http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-dependencies.html

Regards,
Curtis


On Fri, Jul 12, 2013 at 2:53 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Chris,
>
> > I use the versatile wand plugin for part of my image analysis, and it
> > should be available in the repository, right?
>
> Nope, Versatile Wand is not part of Fiji, and not available from any Maven
> repository.
>
> > So why doesn't my instance of ImageJ  in NetBeans recognize it?
>
>  You can hack around it by including a copy of the Versatile Wand source
> with your plugin. But this ultimately causes problems because then you will
> be shipping your own version of it which might conflict with a different
> version installed by a user.
>
> The proper solution is to deploy the Versatile Wand JAR file to a Maven
> remote repository you control. Or at minimum: install it to your local
> Maven repository cache. But both of these are rather involved for someone
> who is just getting started with Maven.
>
> A much easier approach would be to simply develop your plugin using the
> Fiji Script Editor, which will automatically include all installed plugins
> on your classpath when you compile and run. But then you can't use
> NetBeans, of course.
>
> Regards,
> Curtis
>
>
> On Fri, Jul 12, 2013 at 2:34 PM, Chris <christopher.coulon at gmail.com>wrote:
>
>> I am making progress!  I got my postcard project running, but now I am
>> getting the error: Unrecognized command: "Versatile Wand" and can go no
>> further.  I use the versatile wand plugin for part of my image analysis,
>> and it should be available in the repository, right?  So why doesn't my
>> instance of ImageJ  in NetBeans recognize it?
>>
>> Chris Coulon
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130712/ab7cc6d1/attachment.html>

From christopher.coulon at gmail.com  Fri Jul 12 15:01:57 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 12 Jul 2013 13:01:57 -0700
Subject: [ImageJ-devel] error: Unrecognized command: "Versatile Wand"
In-Reply-To: <CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
	<CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
Message-ID: <758A68FD-E44A-4FE1-9BDC-C76DFD4E978E@gmail.com>

> Hi Chris,
> 
> > I use the versatile wand plugin for part of my image analysis, and it
> > should be available in the repository, right?
> 
> Nope, Versatile Wand is not part of Fiji, and not available from any Maven repository.
> 
> > So why doesn't my instance of ImageJ  in NetBeans recognize it?
> 
> You can hack around it by including a copy of the Versatile Wand source with your plugin. But this ultimately causes problems because then you will be shipping your own version of it which might conflict with a different version installed by a user.
> 
> The proper solution is to deploy the Versatile Wand JAR file to a Maven remote repository you control. Or at minimum: install it to your local Maven repository cache. But both of these are rather involved for someone who is just getting started with Maven.
> 
> A much easier approach would be to simply develop your plugin using the Fiji Script Editor, which will automatically include all installed plugins on your classpath when you compile and run. But then you can't use NetBeans, of course.

The odd part is that I have Versitile_Wand.java in my java files, along with all my other java files, and it gets compiled into my target/classes, but it still doesn't get recognized.  It always used to.  I don't get it...

From Johannes.Schindelin at gmx.de  Fri Jul 12 15:02:54 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Fri, 12 Jul 2013 22:02:54 +0200 (CEST)
Subject: [ImageJ-devel] error: Unrecognized command: "Versatile Wand"
In-Reply-To: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
Message-ID: <alpine.DEB.1.00.1307122200280.24252@s15462909.onlinehome-server.info>

Hi Chris,

On Fri, 12 Jul 2013, Chris wrote:

> [...] now I am getting the error: Unrecognized command: "Versatile Wand"
> and can go no further.  I use the versatile wand plugin for part of my
> image analysis, and it should be available in the repository, right?  So
> why doesn't my instance of ImageJ  in NetBeans recognize it?  

You will need to Mavenize the Verstatile Wand [*1*], or copy it into your
sources.

Ciao,
Johannes

Footnote *1*: http://fiji.sc/Maven has all the information you need to
Mavenize anything. But please do not try to take shortcuts there, the page
is already minimal, if you skim over parts of it, you will make the
process much longer than it has to be.


From ctrueden at wisc.edu  Fri Jul 12 15:26:24 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 12 Jul 2013 15:26:24 -0500
Subject: [ImageJ-devel] error: Unrecognized command: "Versatile Wand"
In-Reply-To: <758A68FD-E44A-4FE1-9BDC-C76DFD4E978E@gmail.com>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
	<CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
	<758A68FD-E44A-4FE1-9BDC-C76DFD4E978E@gmail.com>
Message-ID: <CADN69ym12LaYUjj=tfbHOPhpvkqmcG2aeWxW0vLtjm-rUutOxQ@mail.gmail.com>

Hi Chris,

> The odd part is that I have Versitile_Wand.java in my java files,
> along with all my other java files, and it gets compiled into my
> target/classes, but it still doesn't get recognized.

The minimal-ij1-plugin's main method sets the plugins.dir prior to
launching ImageJ (see footnote [1] below for an explanation why), using
some special code:
https://github.com/imagej/minimal-ij1-plugin/blob/06655b85992b1908d3567f6f177da2c7dad40420/src/main/java/Process_Pixels.java#L176

Your postcards plugin removed that code:
https://github.com/ad1054/Postcards/blob/6cdff5e8d98e6f81ebb01919709b128400de0f1e/src/main/java/A_Postcard.java#L33

Add it back, and things may work better for you.

Regards,
Curtis

[1] For plugins to be recognized by ImageJ1, the "plugins.dir" system
property must point to the folder containing your plugins. And there can
only be one such folder. Or, if plugins.dir is unset, then ImageJ looks in
the "plugins" subfolder of the current working directory by default. The
main method of minimal-ij1-plugin sets plugins.dir for you, for convenience.


On Fri, Jul 12, 2013 at 3:01 PM, Chris <christopher.coulon at gmail.com> wrote:

> > Hi Chris,
> >
> > > I use the versatile wand plugin for part of my image analysis, and it
> > > should be available in the repository, right?
> >
> > Nope, Versatile Wand is not part of Fiji, and not available from any
> Maven repository.
> >
> > > So why doesn't my instance of ImageJ  in NetBeans recognize it?
> >
> > You can hack around it by including a copy of the Versatile Wand source
> with your plugin. But this ultimately causes problems because then you will
> be shipping your own version of it which might conflict with a different
> version installed by a user.
> >
> > The proper solution is to deploy the Versatile Wand JAR file to a Maven
> remote repository you control. Or at minimum: install it to your local
> Maven repository cache. But both of these are rather involved for someone
> who is just getting started with Maven.
> >
> > A much easier approach would be to simply develop your plugin using the
> Fiji Script Editor, which will automatically include all installed plugins
> on your classpath when you compile and run. But then you can't use
> NetBeans, of course.
>
> The odd part is that I have Versitile_Wand.java in my java files, along
> with all my other java files, and it gets compiled into my target/classes,
> but it still doesn't get recognized.  It always used to.  I don't get it...
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130712/d4c327ee/attachment-0001.html>

From christopher.coulon at gmail.com  Fri Jul 12 15:53:41 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 12 Jul 2013 13:53:41 -0700
Subject: [ImageJ-devel] error: Unrecognized command: "Versatile Wand"
In-Reply-To: <CADN69ym12LaYUjj=tfbHOPhpvkqmcG2aeWxW0vLtjm-rUutOxQ@mail.gmail.com>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
	<CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
	<758A68FD-E44A-4FE1-9BDC-C76DFD4E978E@gmail.com>
	<CADN69ym12LaYUjj=tfbHOPhpvkqmcG2aeWxW0vLtjm-rUutOxQ@mail.gmail.com>
Message-ID: <7F36CEFD-65F0-4493-BDB6-1DACE0C0ACB9@gmail.com>

> Hi Chris,
> 
> > The odd part is that I have Versitile_Wand.java in my java files,
> > along with all my other java files, and it gets compiled into my
> > target/classes, but it still doesn't get recognized.
> 
> The minimal-ij1-plugin's main method sets the plugins.dir prior to launching ImageJ (see footnote [1] below for an explanation why), using some special code:
> https://github.com/imagej/minimal-ij1-plugin/blob/06655b85992b1908d3567f6f177da2c7dad40420/src/main/java/Process_Pixels.java#L176
> 
> Your postcards plugin removed that code:
> https://github.com/ad1054/Postcards/blob/6cdff5e8d98e6f81ebb01919709b128400de0f1e/src/main/java/A_Postcard.java#L33
> 
> Add it back, and things may work better for you.

The only item I (consciously) eliminated is the Process_Pixels.java file.  I put it back in my src/main/java/ did a clean and build, restarted NetBeans and still got the error for Versatile Wand.  Then I realized I was using the main class in A_Postcard for my startup, so I changed the main class to Process_Pixels, and voila!  It works!  Thank you Curtis!  I am finally back on track!  :-)

Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130712/c03178d5/attachment.html>

From christopher.coulon at gmail.com  Fri Jul 12 16:34:40 2013
From: christopher.coulon at gmail.com (Chris)
Date: Fri, 12 Jul 2013 14:34:40 -0700
Subject: [ImageJ-devel] Netbeans no longer shows the design
In-Reply-To: <CADN69ym12LaYUjj=tfbHOPhpvkqmcG2aeWxW0vLtjm-rUutOxQ@mail.gmail.com>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
	<CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
	<758A68FD-E44A-4FE1-9BDC-C76DFD4E978E@gmail.com>
	<CADN69ym12LaYUjj=tfbHOPhpvkqmcG2aeWxW0vLtjm-rUutOxQ@mail.gmail.com>
Message-ID: <7AB5CB82-1557-4BC5-AA38-DFE158D90524@gmail.com>

> Your postcards plugin removed that code:
> https://github.com/ad1054/Postcards/blob/6cdff5e8d98e6f81ebb01919709b128400de0f1e/src/main/java/A_Postcard.java#L33
> 
> Add it back, and things may work better for you.

I just discovered that my "working" NetBeans project no longer has the Design option for any of my  java classes which extends javax.swing.JFrame.  This is what it used to look like:



and this is what it looks like now:



This means I can no longer develop the GUI in NetBeans, which is the major part of my development.  Can anyone give me some insight as to why I no longer have the Design option, and how I can correct this?

Thank you so much,

Chris Coulon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130712/1ec98c6a/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-6.png
Type: image/png
Size: 18051 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130712/1ec98c6a/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-7.png
Type: image/png
Size: 13396 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130712/1ec98c6a/attachment-0003.png>

From Johannes.Schindelin at gmx.de  Fri Jul 12 19:23:41 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Sat, 13 Jul 2013 02:23:41 +0200 (CEST)
Subject: [ImageJ-devel] ImageJ launcher release
Message-ID: <alpine.DEB.1.00.1307130218570.24252@s15462909.onlinehome-server.info>

Hi all,

I just released a new version of the ImageJ launcher (in preparation for
changing fiji-compat's dependencies).

While doing so, I realized that the new SNAPSHOT .nar files were attached
to the 2.0.1 release in the Maven repository. The reason: I had forgotten
to "mvn clean" in the ImageJ-launcher job...

Hopefully 2.0.2 is alright (I changed the Jenkins job's configuration to
clean before making the 32-bit launchers -- but of course *not* before the
64-bit ones because that would wipe the 32-bit ones...).

Ciao,
Dscho


From panovr at gmail.com  Sat Jul 13 07:32:46 2013
From: panovr at gmail.com (Yili Zhao)
Date: Sat, 13 Jul 2013 20:32:46 +0800
Subject: [ImageJ-devel] ImageJ launcher release
In-Reply-To: <alpine.DEB.1.00.1307130218570.24252@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1307130218570.24252@s15462909.onlinehome-server.info>
Message-ID: <CAHC=qdC0UQOJc1njDhk9BPLS8cuqKUk5ZJGrSjEDgmPtOMNNtg@mail.gmail.com>

Hi,
  thanks for the new ImageJ launcher!
  Just wonder where is the URL of the new launcher?


2013/7/13 Johannes Schindelin <Johannes.Schindelin at gmx.de>

> Hi all,
>
> I just released a new version of the ImageJ launcher (in preparation for
> changing fiji-compat's dependencies).
>
> While doing so, I realized that the new SNAPSHOT .nar files were attached
> to the 2.0.1 release in the Maven repository. The reason: I had forgotten
> to "mvn clean" in the ImageJ-launcher job...
>
> Hopefully 2.0.2 is alright (I changed the Jenkins job's configuration to
> clean before making the 32-bit launchers -- but of course *not* before the
> 64-bit ones because that would wipe the 32-bit ones...).
>
> Ciao,
> Dscho
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>



-- 
Yili Zhao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130713/bab15198/attachment.html>

From Johannes.Schindelin at gmx.de  Sat Jul 13 13:52:12 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Sat, 13 Jul 2013 20:52:12 +0200 (CEST)
Subject: [ImageJ-devel] ImageJ launcher release
In-Reply-To: <CAHC=qdC0UQOJc1njDhk9BPLS8cuqKUk5ZJGrSjEDgmPtOMNNtg@mail.gmail.com>
References: <alpine.DEB.1.00.1307130218570.24252@s15462909.onlinehome-server.info>
	<CAHC=qdC0UQOJc1njDhk9BPLS8cuqKUk5ZJGrSjEDgmPtOMNNtg@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1307132032410.24252@s15462909.onlinehome-server.info>

Hi,

On Sat, 13 Jul 2013, Yili Zhao wrote:

>   thanks for the new ImageJ launcher!
>   Just wonder where is the URL of the new launcher?

It is not yet uploaded to the update site, if that is what you mean.

If you're using Maven, just update the version number of the dependency to
2.0.1.

Otherwise, look at the platform-specific configurations in
http://jenkins.imagej.net/job/ImageJ-launcher/. This is a bit more
complicated, as it is intended only for advanced users or developers (who
naturally know how ImageJ is organized ;-). So if it looks too confusing,
why not wait until the launcher "hits the shelves", i.e. is available in
either Fiji and ImageJ2?

Ciao,
Johannes


From jpoczatek at partners.org  Mon Jul 15 10:12:09 2013
From: jpoczatek at partners.org (Collin Poczatek)
Date: Mon, 15 Jul 2013 11:12:09 -0400
Subject: [ImageJ-devel] Netbeans no longer shows the design
In-Reply-To: <7AB5CB82-1557-4BC5-AA38-DFE158D90524@gmail.com>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
	<CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
	<758A68FD-E44A-4FE1-9BDC-C76DFD4E978E@gmail.com>
	<CADN69ym12LaYUjj=tfbHOPhpvkqmcG2aeWxW0vLtjm-rUutOxQ@mail.gmail.com>
	<7AB5CB82-1557-4BC5-AA38-DFE158D90524@gmail.com>
Message-ID: <51E41149.7060001@partners.org>

Hi Chris,

I'm gonna guess that your .form files are somehow missing.  Eg for 
PostCard.java there should be a corresponding PostCard.form file. I'd 
look for them in version control/backups.  Also check "Local History", 
in NB right click on PostCard.java -> History -> Show History.

While it's not impossible to regenerate from scratch, it's not super 
easy/robust.

http://forums.netbeans.org/topic38887.html
http://wiki.netbeans.org/FaqFormGeneratingFormFile

Collin

On 07/12/2013 05:34 PM, Chris wrote:
>> Your postcards plugin removed that code:
>> https://github.com/ad1054/Postcards/blob/6cdff5e8d98e6f81ebb01919709b128400de0f1e/src/main/java/A_Postcard.java#L33
>>
>> Add it back, and things may work better for you.
>
> I just discovered that my "working" NetBeans project no longer has the 
> Design option for any of my  java classes which extends 
> javax.swing.JFrame.  This is what it used to look like:
>
>
> and this is what it looks like now:
>
>
> This means I can no longer develop the GUI in NetBeans, which is the 
> major part of my development.  Can anyone give me some insight as to 
> why I no longer have the Design option, and how I can correct this?
>
> Thank you so much,
>
> Chris Coulon
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel



The information in this e-mail is intended only for the person to whom it is
addressed. If you believe this e-mail was sent to you in error and the e-mail
contains patient information, please contact the Partners Compliance HelpLine at
http://www.partners.org/complianceline . If the e-mail was sent to you in error
but does not contain patient information, please contact the sender and properly
dispose of the e-mail.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/3088b7d3/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 18051 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/3088b7d3/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 13396 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/3088b7d3/attachment-0003.png>

From christopher.coulon at gmail.com  Mon Jul 15 10:18:04 2013
From: christopher.coulon at gmail.com (Chris)
Date: Mon, 15 Jul 2013 08:18:04 -0700
Subject: [ImageJ-devel] Netbeans no longer shows the design
In-Reply-To: <51E41149.7060001@partners.org>
References: <20F0E397-B7A1-46D8-B9DC-661767B5DAF8@gaiag.net>
	<CADN69y=n3Cb=ZbSQaJKdeVyBepJMgU7Ud7zaOAqqiC6T8zNyeA@mail.gmail.com>
	<758A68FD-E44A-4FE1-9BDC-C76DFD4E978E@gmail.com>
	<CADN69ym12LaYUjj=tfbHOPhpvkqmcG2aeWxW0vLtjm-rUutOxQ@mail.gmail.com>
	<7AB5CB82-1557-4BC5-AA38-DFE158D90524@gmail.com>
	<51E41149.7060001@partners.org>
Message-ID: <20893D95-BF0A-496F-AF33-70B1EC8B816B@gaiag.net>

Thanks Collin,

I went back in my Time Machine (Mac OS 10.7.5) and located them among the java files I imported into my latest NetBeans download.  I didn't know enough at the time to realize I had to include the .form files.  Now it is working as it should and I can get on with my project.  

I really appreciate your help.

Chris

On Jul 15, 2013, at 8:12 AM, Collin Poczatek wrote:

> Hi Chris,
> 
> I'm gonna guess that your .form files are somehow missing.  Eg for PostCard.java there should be a corresponding PostCard.form file.  I'd look for them in version control/backups.  Also check "Local History", in NB right click on PostCard.java -> History -> Show History.
> 
> While it's not impossible to regenerate from scratch, it's not super easy/robust.
> 
> http://forums.netbeans.org/topic38887.html
> http://wiki.netbeans.org/FaqFormGeneratingFormFile
> 
> Collin
> 
> On 07/12/2013 05:34 PM, Chris wrote:
>>> Your postcards plugin removed that code:
>>> https://github.com/ad1054/Postcards/blob/6cdff5e8d98e6f81ebb01919709b128400de0f1e/src/main/java/A_Postcard.java#L33
>>> 
>>> Add it back, and things may work better for you.
>> 
>> I just discovered that my "working" NetBeans project no longer has the Design option for any of my  java classes which extends javax.swing.JFrame.  This is what it used to look like:
>> 
>> <Mail Attachment.png>
>> 
>> and this is what it looks like now:
>> 
>> <Mail Attachment.png>
>> 
>> This means I can no longer develop the GUI in NetBeans, which is the major part of my development.  Can anyone give me some insight as to why I no longer have the Design option, and how I can correct this?
>> 
>> Thank you so much,
>> 
>> Chris Coulon
>> 
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 
> The information in this e-mail is intended only for the person to whom it is
> addressed. If you believe this e-mail was sent to you in error and the e-mail
> contains patient information, please contact the Partners Compliance HelpLine at
> http://www.partners.org/complianceline . If the e-mail was sent to you in error
> but does not contain patient information, please contact the sender and properly
> dispose of the e-mail.
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/a1321674/attachment.html>

From leek at broadinstitute.org  Mon Jul 15 10:31:44 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Mon, 15 Jul 2013 11:31:44 -0400
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
	DefaultDatasetView
Message-ID: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>

Hi all,
I'm looking at the code for net.imglib2.display.CompositeXYProjector and as
I step through it, it's clear that the alpha calculation isn't being
handled correctly. Here's the code as it stands now, line 190 roughly:

for ( int i = 0; i < size; i++ )
{
sourceRandomAccess.setPosition( currentPositions[ i ], dimIndex );
currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
// accumulate converted result
final int value = bi.get();
final int a = ARGBType.alpha( value );
final int r = ARGBType.red( value );
final int g = ARGBType.green( value );
final int b = ARGBType.blue( value );
aSum += a;
rSum += r;
gSum += g;
bSum += b;
}
if ( aSum > 255 )
aSum = 255;
if ( rSum > 255 )
rSum = 255;
if ( gSum > 255 )
gSum = 255;
if ( bSum > 255 )
bSum = 255;
targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum, aSum ) );

I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and
ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would
appear that the correct solution would be to divide aSum by 3. In addition,
there's no scaling of the individual red, green and blue values by their
channel's alpha. If the input were two index-color images, each of which
had different alphas, the code should multiply the r, g and b values by the
alphas before summing and then divide by the total alpha in the end. The
alpha in this case *should* be the sum of alphas divided by the number of
channels.

However, I think the problem is deeper than that. For an RGB ImgPlus, there
are three LUTs and each of them has an alpha of 255, but that alpha only
applies to one of the colors in the LUT. When you're compositing images and
weighing them equally, if two are black and one is white, then the result
is 1/3 of the white intensity - if you translate that to red, green and
blue images, the resulting intensity will be 1/3 of that desired. This
might sound weird, but the only solution that works out mathematically is
for the defaultLUTs in the DefaultDatasetView to use color tables that
return values that are 3x those of ColorTables.RED, GREEN and BLUE.
Thinking about it, I'm afraid this *is* the correct model and each channel
really is 3x brighter than possible.

It took me quite a bit of back and forth to come up with the above... I
hope you all understand what I'm saying and understand the problem and
counter-intuitive solution and have the patience to follow it. Dscho, if
you made it this far - you're the mathematician, what's your take?

--Lee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/dfc96817/attachment.html>

From grislis at wisc.edu  Mon Jul 15 12:59:26 2013
From: grislis at wisc.edu (Aivar Grislis)
Date: Mon, 15 Jul 2013 12:59:26 -0500
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
 DefaultDatasetView
In-Reply-To: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
Message-ID: <51E4387E.1050609@wisc.edu>

> I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and 
> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would 
> appear that the correct solution would be to divide aSum by 3.
Isn't it unusual to define an alpha for each color component, generally 
you have a single A associated with a combined RGB?  So averaging the 
three alphas might make sense here, because I think they should all be 
the same value.
> In addition, there's no scaling of the individual red, green and blue 
> values by their channel's alpha. If the input were two index-color 
> images, each of which had different alphas, the code should multiply 
> the r, g and b values by the alphas before summing and then divide by 
> the total alpha in the end. The alpha in this case *should* be the sum 
> of alphas divided by the number of channels.
I think alpha processing is more cumulative, done layer by layer in some 
defined layer order.  For a given pixel say the current output pixel 
value is ARGB1 and you are compositing a second image with value ARGB2 
on top of it:  For the red channel the output color should be ((255 - 
alpha(ARGB2)) * red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / 255.  The 
alpha of ARGB1 is not involved.

In other words, if you add a layer that is completely opaque you no 
longer have to consider any of the colors or alpha values underneath it.


I think the bigger issue here is this code is specifically designed to 
composite red, green and blue image layers.  It's a special case since 
for a given pixel the red comes from the red layer, blue from blue 
layer, and green from green layer.  These layers shouldn't be completely 
opaque, since the colors wouldn't combine at all then or completely 
transparent since then they wouldn't contribute any color.  I don't 
think transparency is useful here.

It's also possible that a multichannel image with > 3 channels is being 
displayed with more color channels, namely cyan, magenta, and yellow.  
The code here is designed to stop overflow, but I'm not convinced those 
extended color channels would combine meaningfully.

Aivar

> In addition, there's no scaling of the individual red, green and blue 
> values by their channel's alpha. If the input were two index-color 
> images, each of which had different alphas, the code should multiply 
> the r, g and b values by the alphas before summing and then divide by 
> the total alpha in the end. The alpha in this case *should* be the sum 
> of alphas divided by the number of channels.
I think alpha processing is cumulative layer by layer.

This brings up some interesting questions:

1) If the first, bottom-most layer is transparent, what color should 
show through?  Black, white?  Or perhaps it's best to ignore this base 
layer transparency.

2) If you wanted to composite several transparent images, how do you 
calculate the transparency of the composite?  I'm not sure this is 
something we need to do.

Aivar


On 7/15/13 10:31 AM, Lee Kamentsky wrote:
> Hi all,
> I'm looking at the code for net.imglib2.display.CompositeXYProjector 
> and as I step through it, it's clear that the alpha calculation isn't 
> being handled correctly. Here's the code as it stands now, line 190 
> roughly:
>
> for ( int i = 0; i < size; i++ )
> {
> sourceRandomAccess.setPosition( currentPositions[ i ], dimIndex );
> currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
> // accumulate converted result
> final int value = bi.get();
> final int a = ARGBType.alpha( value );
> final int r = ARGBType.red( value );
> final int g = ARGBType.green( value );
> final int b = ARGBType.blue( value );
> aSum += a;
> rSum += r;
> gSum += g;
> bSum += b;
> }
> if ( aSum > 255 )
> aSum = 255;
> if ( rSum > 255 )
> rSum = 255;
> if ( gSum > 255 )
> gSum = 255;
> if ( bSum > 255 )
> bSum = 255;
> targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum, aSum ) );
>
> I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and 
> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would 
> appear that the correct solution would be to divide aSum by 3. In 
> addition, there's no scaling of the individual red, green and blue 
> values by their channel's alpha. If the input were two index-color 
> images, each of which had different alphas, the code should multiply 
> the r, g and b values by the alphas before summing and then divide by 
> the total alpha in the end. The alpha in this case *should* be the sum 
> of alphas divided by the number of channels.
>
> However, I think the problem is deeper than that. For an RGB ImgPlus, 
> there are three LUTs and each of them has an alpha of 255, but that 
> alpha only applies to one of the colors in the LUT. When you're 
> compositing images and weighing them equally, if two are black and one 
> is white, then the result is 1/3 of the white intensity - if you 
> translate that to red, green and blue images, the resulting intensity 
> will be 1/3 of that desired. This might sound weird, but the only 
> solution that works out mathematically is for the defaultLUTs in the 
> DefaultDatasetView to use color tables that return values that are 3x 
> those of ColorTables.RED, GREEN and BLUE. Thinking about it, I'm 
> afraid this *is* the correct model and each channel really is 3x 
> brighter than possible.
>
> It took me quite a bit of back and forth to come up with the above... 
> I hope you all understand what I'm saying and understand the problem 
> and counter-intuitive solution and have the patience to follow it. 
> Dscho, if you made it this far - you're the mathematician, what's your 
> take?
>
> --Lee
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/763580c1/attachment.html>

From ctrueden at wisc.edu  Mon Jul 15 13:54:16 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 15 Jul 2013 13:54:16 -0500
Subject: [ImageJ-devel] ImageJ - KNIME Integration: open questions
In-Reply-To: <51D441E9.7030707@gmx.de>
References: <519388BA.60608@gmx.de>
	<CAHLFyjd0rDNJz+0SM7QB1-s_t5JG1VhVJr7spA6X-70bSf5njQ@mail.gmail.com>
	<CADN69ykSz9rDS2Pp8Xnm9=yHNDakwEM+_m9Q8F6jebDfC_fjZg@mail.gmail.com>
	<51D441E9.7030707@gmx.de>
Message-ID: <CADN69ymL9OEyVS8TuG6CqpAr7C2ky2=stOCdZ2LuU-0FW9e8sA@mail.gmail.com>

Hi Michael, Christian, Martin,

> I just worked through the "code question" (version, context, ...)
> everything  seems to work again.

Excellent, glad to hear!

> Without a (hacky) checkbox we would end up with simply not calling
> preview() on Previewable commands. Additionally we could also change
> this if we wanted to support previews in the future.

I filed a ticket to remove all "Preview" checkbox parameters:
    http://trac.imagej.net/ticket/1952

> @dynamic command detection => ticket filed

Thanks, Michael! For lurkers, the ticket is:
    http://trac.imagej.net/ticket/1933

> We would definitly provide our help for the creation of such a list
> (at least we could look through the plugins and mark the ones that are
> useful within KNIME) however it might be better to delay this until
> short before the final release (final set of plugins, stable plugin
> system).

Great. I filed a ticket for it, slated for 2.0.0 final release:
    http://trac.imagej.net/ticket/1953

> @service order  => ticket filed

Thanks! That ticket is at:
    http://trac.imagej.net/ticket/1934

And I already fixed it. ;-)

> @dimension selection as discussed between christian and curtis we will
> open a ticket with a better explenation for this issue

Christian did file a ticket for it, which is at:
    http://trac.imagej.net/ticket/1944

It's a doozy, so I classified it as a "feature" and tentatively slated for
2.0.0 final release. We will need it for ImageJ2 to really behave
compatibly with ImageJ1's slice-wise PluginFilters. But it will be a
significant undertaking requiring some thought to get both the API and UI
right.

Thanks again for all the feedback and hard work, guys.

Regards,
Curtis


On Wed, Jul 3, 2013 at 10:23 AM, Michael Zinsmaier <michael.zinsmaier at gmx.de
> wrote:

>  Hi Curtis,
>
> thanks for the reply, I just worked through the "code question" (version,
> context, ...) everything  seems to work again.
> Now for the other issues
>
> @preview checkboxes
>
>  Michael wrote:
>  > Would it be possible to add a flag that surpresses previews checkboxes
> > during dialog building?
>
>  It's tricky because right now, each preview checkbox is an input
> parameter to the command itself. But personally I don't like that approach.
> It is not a "real" input to the command, but rather intended to be toggled
> during input harvesting only. One option might be to label the visibility
> of those parameters as ItemVisibility.INVISIBLE. Then we could add a flag
> somewhere to hide INVISIBLE parameters, maybe.
>
>  But really, I am leaning toward a simpler solution: just remove the
> preview checkboxes, in favor of ImageJ2 *always* doing a preview (and of
> course, KNIP doesn't have to). And if the previews are too slow, we can
> optimize the preview() method to address it, rather than having this hacky
> checkbox like ImageJ1 does.
>
> I think the 2nd approach could be a good solution. Without a (hacky)
> checkbox we would end up with simply not calling preview() on
> Previewable commands. Additionally we could also change this if we wanted
> to support previews in the future.
>
> @interactive commands
>
>  Lee wrote:
>  > I hadn't looked at the interactive commands with regard to
> > CellProfiler. It looks like "buttons" could be interpreted as possible
>  > headless actions that could be performed... at least in some cases.
>
>  Yes, each button generally performs some action, which we should really
> make sure are always exposed as standalone commands (see next paragraph).
> We are going to add logic to make multiple sequential Button widgets render
> as a single button bar in our UI layout. Won't affect you though, Lee,
> since you do your own UI in Python.
>
>  Michael wrote:
> > Why is the threshold  plugin an interactive command?
>
>  Let me explain the motivation here. Anything that extends
> InteractiveCommand is not *intended* to be run in headless mode. Rather, it
> is intended as a sort of "meta-command" that allows you to launch other
> commands. It will be filled with callback methods when various inputs
> change, which should, in a properly designed InteractiveCommand, trigger
> real command executions that are more well-behaved from a headless
> standpoint.
>
>  Anything that extends InteractiveCommand should *not* be flagged with
> "headless = true" since it is not intended for that purpose.
>
>  So in the case of threshold, we need a "real" threshold command that has
> sensible inputs and outputs. Then the command exposed in the ImageJ UI as
> "threshold" is actually "Interactive Threshold" which fires off Threshold
> executions.
>
>  This is not all fully in place, but it is the direction we are going. Sound
> reasonable?
>
>  Lee wrote:
>  > For Threshold, I can see reasons for executing the callbacks for
> > "auto", "apply" and "delete" in a headless context
>
>  The above would also address your comments here, Lee. The interactive
> threshold command would not need to be exposed within CP because those
> buttons would each have a corresponding standalone headless-friendly
> command which *would* be exposed.
>
> In our case the standalone headless commands would end up as KNIME nodes
> and the interactive meta command would be ignored.
> Which should work fine.
>
> I have only one small concern, the headless commands should not become to
> fine granular. Consider for example a filter command that supports
> different neighborhood shapes. A meta command for different filters and a
> headless command for each filter (gaussian, max, ...) is a good solution.
> But an implementation with a headless command for each filter and each
> neighbourhood  (gaussian rectangular, gaussian circular, ...) would be too
> much. However thats in the end up to the command implementor and shouldn't
> be a general problem.
>
>
> @dynamic command detection => ticket filed
>
>  Michael wrote:
> > is there a way to determine if a command is dynamic?
>
>  Other than the hacky instanceof test you are doing, nope. I agree we
> should add API for it to ModuleInfo. Especially because it is possible for
> modules to be dynamic without extending the DynamicCommand class...
>
>  Could you please file a ticket for it on the ImageJ Trac? I just made
> ImageJ Trac accounts for you, Christian & Martin; you should have an
> automated email about it. I know Trac is not ideal (GitHub Issues is nice)
> but we have all our ImageJ tickets in Trac now, migrating everything would
> be very involved, and I don't really want to start splitting between two
> issue trackers. Someday we might move...
>
>
> @plugin jars
>
>   > Are you planing to re-organize the plugins, e.g. such that plugins,
>  > which are interesting for any application reside in their own
> > jar-file?
>
>  This is probably a good idea. However, I agree with Lee that in some
> cases it may not be totally clear-cut [1]. You think splitting ij-commands
> into two JAR files is sufficient? If so, care to send a list of plugins you
> feel are *not* generally useful, and I can split them out?
>
> We would definitly provide our help for the creation of such a list (at
> least we could look through the plugins and mark the ones that are
> useful within KNIME) however it might be better to delay this until short
> before the final release (final set of plugins, stable plugin system).
>
> @service order  => ticket filed
>
>   Michael wrote:
>  > we had to move ModuleService behind  MenuService in the constructor
> > call to avoid a null pointer during initialization
> > (onEvent(ModulesAddedEvent) was called before initialize).
>
>  That is a bug, thanks for reporting. However, moving the module service
> after the menu service will not work because MenuService needs
> CommandService which needs ModuleService.
>
>  What's weird to me is, I am not sure why we don't see this bug when
> running the end-user ImageJ application...
>
>  I have some service initialization changes pending on ImageJ's
> startup-speed branch, which may affect this. So we should debug further
> once that branch is merged. Please feel free to file a Trac ticket for it
> and assign to me.
>
>  Michael wrote:
> > Is there a defined service order?
>
>  The order is defined by two things:
>  1) If a service has an @Parameter dependency on another service, the
> dependency gets initialized first.
> 2) Otherwise, the "priority" property of the @Plugin annotation is used to
> order service initialization.
>
>  > ((So far, we have tons of ideas where we could do more things
> > together. Thank you in advance for answering all these questions ;) ))
>
>    @dimension selection
> as discussed between christian and curtis we will open a ticket with a
> better explenation for this issue
>
>
>
> Thanks again for awnsering our questions
> Regards
>
> Christian, Martin, Michael
>
>
>
> p.s.
>
>
> [1] You know what that easter egg does, right? Don't you *want* to
> generate ASCII images using KNIME??? I know I do!
>
> (-: of course we want. But we don't support getChannelMax/Min atm. so in
> KNIME its only for skilled programmers
>
> ++++++++++++++++++++++++++++++++++++++++++++++++++
> ++++++++++++++++++++++++++++++++++++++++o#++++++++
> +++++++++++++++++++++++++++++++++++++++O##O+++++++
> +++++++++++++++++++++++++++++++++++++o#####o++++++
> ++++++++++++++++++++++++++++++++++++########++++++
> ++++++++++++++++++++++++++++++++++o##########+++++
> +++++++++++++++++++++++++++++++++############+++++
> +++++++++++++++++++++++++++++++o###########o++++++
> ++++++++++++++++++++++++++++++############++++++++
> +++++++++#++++++++++++++++++o###########o+++++++++
> ++++++++###o+++++++++++++++############+++++++++++
> +++++++O####o++++++++++++o###########o++++++++++++
> ++++++o######O++++++++++############++++++++++++++
> +++++o#########+++++++*###########o+++++++++++++++
> ++++++##########+++++############+++++++++++++++++
> +++++++##########o+*###########o++++++++++++++++++
> ++++++++O#####################++++++++++++++++++++
> +++++++++*##################o+++++++++++++++++++++
> ++++++++++o###############O+++++++++++++++++++++++
> +++++++++++o#############o++++++++++++++++++++++++
> +++++++++++++##########O++++++++++++++++++++++++++
> ++++++++++++++########o+++++++++++++++++++++++++++
> +++++++++++++++######+++++++++++++++++++++++++++++
> ++++++++++++++++###o++++++++++++++++++++++++++++++
> ++++++++++++++++o#++++++++++++++++++++++++++++++++
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/3e5c4ff2/attachment-0001.html>

From Johannes.Schindelin at gmx.de  Mon Jul 15 14:39:18 2013
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Mon, 15 Jul 2013 21:39:18 +0200 (CEST)
Subject: [ImageJ-devel] Upcoming, exciting changes in Fiji
Message-ID: <alpine.DEB.1.00.1307152047590.24252@s15462909.onlinehome-server.info>

Dear Fiji users,

it is my great pleasure to announce that we are very close to releasing a cool
new feature in Fiji very soon now: Help>Switch to Modern Mode.

As many of you know, there is a next generation of ImageJ underway (nicknamed
"ImageJ2") which aims at a major redesign in particular of the software
architecture to harden ImageJ for future demands, such as allowing higher
dimensionalities, vastly different storage mechanisms, algorithms being
implemented in a truly data type independent way, and allowing its plugins to
be run on a cluster without any graphical user interface, or even in the
context of other applications without imposing the ImageJ user interface.

ImageJ2 also allowed us to migrate a couple of Fiji components to ImageJ2, for
the following benefits:

- more robust development due to the facilities provided by ImageJ2 (a trusty
  server infrastructure that builds, tests and notifies developers of
  breakages they caused), deploys and serves the software for ease of use
  both by developers and users.

- Fiji can focus more on life sciences while ImageJ2 maintains the code that
  is not really specific to life sciences, such as the updater, the launcher,
  the script editor, etc

ImageJ2 is in its beta phase, and the upcoming changes (which are not yet
in beta phase, but very much in alpha phase) will allow all Fiji users to
check it out and to develop and run ImageJ2 plugins by calling Help>Switch
to Modern Mode. Once in modern mode, you can switch back to the legacy
mode easy enough, using Help>Switch to Legacy Mode.

The idea is that the data are available in both modes -- insofar possible: all
of the images that can be represented in legacy mode can be handled in the
modern mode, but the opposite is not true. For example if you have a
double-precision, 6-dimensional image, you can open and process it in the
modern mode, but you will not be able to handle it in legacy mode.

For backwards-compatibility, Fiji will start up in legacy mode until
ImageJ2 is robust enough; it will then ask the user -- once! -- which
startup mode to use by default.

Needless to say, the changes required both in Fiji and ImageJ2 to accomodate
for the legacy and modern modes are rather extensive. And while we worked very
hard on making it robust, undoubtedly this developer will have introduced one
or the other regression.

Therefore, I would like to suggest for Fiji users in a critical phase of their
project (such as submitting a paper, or preparing for a workshop) to *hold off*
updating Fiji for the extent of that criticial work. For what it is worth: this
is in general a very sound advice: if you require a stable software for a few
days or weeks, do not update it in that time period.

However, if you do not have any critical work lined up, now might be a good
opportunity to make sure that your favorite workflows do not get broken by
the changes about to be introduced into Fiji.

Thanks for the attention, and have fun,
Johannes (on the behalf of the Fiji team and the ImageJ2 developers)


From leek at broadinstitute.org  Mon Jul 15 14:40:07 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Mon, 15 Jul 2013 15:40:07 -0400
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
	DefaultDatasetView
In-Reply-To: <51E4387E.1050609@wisc.edu>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
	<51E4387E.1050609@wisc.edu>
Message-ID: <CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>

Thanks for answering Aivar,

I think what your reply did for me is to have me take a step back and
consider what we're modeling. If you look at my replies below, I think that
the best solution is to use a model where the background is white and each
successive layer filters out some of that background, like a gel. A layer
attenuates the underlying layer by a fraction of (1 - alpha/255 * (1 -
red/255)), resulting in no attenuation for 255 and attenuation of alpha/255
for zero. We can then use a red converter that returns a value of 255 for
the blue and green channels and the model and math work correctly.

On Mon, Jul 15, 2013 at 1:59 PM, Aivar Grislis <grislis at wisc.edu> wrote:

>  I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and
> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would
> appear that the correct solution would be to divide aSum by 3.
>
> Isn't it unusual to define an alpha for each color component, generally
> you have a single A associated with a combined RGB?  So averaging the three
> alphas might make sense here, because I think they should all be the same
> value.
>
I think you're right, the model always is that each pixel has an alpha
value that applies to R, G and B. The image I was using was the Clown
example image. DefaultDatasetView.initializeView constructs three
RealLUTConverters for the projector, one for red, one for green and one for
blue which sends you down this rabbit hole.

> In addition, there's no scaling of the individual red, green and blue
> values by their channel's alpha. If the input were two index-color images,
> each of which had different alphas, the code should multiply the r, g and b
> values by the alphas before summing and then divide by the total alpha in
> the end. The alpha in this case *should* be the sum of alphas divided by
> the number of channels.
>
> I think alpha processing is more cumulative, done layer by layer in some
> defined layer order.  For a given pixel say the current output pixel value
> is ARGB1 and you are compositing a second image with value ARGB2 on top of
> it:  For the red channel the output color should be ((255 - alpha(ARGB2)) *
> red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / 255.  The alpha of ARGB1 is not
> involved.
>
I think that's a valid interpretation. I've always used (alpha(ARGB1) *
red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / (alpha(ARGB1) + alpha(ARGB2))
because I assumed the alpha indicated the
strength of the blending of each source. In any case, the code as it stands
doesn't do either of these.

>
> In other words, if you add a layer that is completely opaque you no longer
> have to consider any of the colors or alpha values underneath it.
>

> I think the bigger issue here is this code is specifically designed to
> composite red, green and blue image layers.  It's a special case since for
> a given pixel the red comes from the red layer, blue from blue layer, and
> green from green layer.  These layers shouldn't be completely opaque, since
> the colors wouldn't combine at all then or completely transparent since
> then they wouldn't contribute any color.  I don't think transparency is
> useful here.
>
So this is an argument for blending instead of layering - transparency
would be useful if the images were blended and treated as if on a par with
each other, allowing the user to emphasize one channel or the other.

>
> It's also possible that a multichannel image with > 3 channels is being
> displayed with more color channels, namely cyan, magenta, and yellow.  The
> code here is designed to stop overflow, but I'm not convinced those
> extended color channels would combine meaningfully.
>
> Aivar
>
> In addition, there's no scaling of the individual red, green and blue
> values by their channel's alpha. If the input were two index-color images,
> each of which had different alphas, the code should multiply the r, g and b
> values by the alphas before summing and then divide by the total alpha in
> the end. The alpha in this case *should* be the sum of alphas divided by
> the number of channels.
>
> I think alpha processing is cumulative layer by layer.
>
> This brings up some interesting questions:
>
> 1) If the first, bottom-most layer is transparent, what color should show
> through?  Black, white?  Or perhaps it's best to ignore this base layer
> transparency.
>
Maybe the model should be that the background is white and successive
layers are like gel filters on top. In that case, you'd have:
red = (255 - alpha(ARGB2) *(255 - red(ARGB2))/255) * red(ARGB1)

And maybe that points to what the true solution is. For the default, we
could change things so that red channel would have blue = 255 and green =
255 and the first composition would change only the red channel.

>
> 2) If you wanted to composite several transparent images, how do you
> calculate the transparency of the composite?  I'm not sure this is
> something we need to do.
>
> Aivar
>
>
> On 7/15/13 10:31 AM, Lee Kamentsky wrote:
>
>  Hi all,
> I'm looking at the code for net.imglib2.display.CompositeXYProjector and
> as I step through it, it's clear that the alpha calculation isn't being
> handled correctly. Here's the code as it stands now, line 190 roughly:
>
>  for ( int i = 0; i < size; i++ )
>  {
>  sourceRandomAccess.setPosition( currentPositions[ i ], dimIndex );
>  currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
>  // accumulate converted result
>  final int value = bi.get();
>  final int a = ARGBType.alpha( value );
>  final int r = ARGBType.red( value );
>  final int g = ARGBType.green( value );
>  final int b = ARGBType.blue( value );
>  aSum += a;
>  rSum += r;
>  gSum += g;
>  bSum += b;
>  }
>  if ( aSum > 255 )
>  aSum = 255;
>  if ( rSum > 255 )
>  rSum = 255;
>  if ( gSum > 255 )
>  gSum = 255;
>  if ( bSum > 255 )
>  bSum = 255;
>  targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum, aSum ) );
>
>  I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and
> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would
> appear that the correct solution would be to divide aSum by 3. In addition,
> there's no scaling of the individual red, green and blue values by their
> channel's alpha. If the input were two index-color images, each of which
> had different alphas, the code should multiply the r, g and b values by the
> alphas before summing and then divide by the total alpha in the end. The
> alpha in this case *should* be the sum of alphas divided by the number of
> channels.
>
>  However, I think the problem is deeper than that. For an RGB ImgPlus,
> there are three LUTs and each of them has an alpha of 255, but that alpha
> only applies to one of the colors in the LUT. When you're compositing
> images and weighing them equally, if two are black and one is white, then
> the result is 1/3 of the white intensity - if you translate that to red,
> green and blue images, the resulting intensity will be 1/3 of that desired.
> This might sound weird, but the only solution that works out mathematically
> is for the defaultLUTs in the DefaultDatasetView to use color tables that
> return values that are 3x those of ColorTables.RED, GREEN and BLUE.
> Thinking about it, I'm afraid this *is* the correct model and each channel
> really is 3x brighter than possible.
>
>  It took me quite a bit of back and forth to come up with the above... I
> hope you all understand what I'm saying and understand the problem and
> counter-intuitive solution and have the patience to follow it. Dscho, if
> you made it this far - you're the mathematician, what's your take?
>
>  --Lee
>
>
> _______________________________________________
> ImageJ-devel mailing listImageJ-devel at imagej.nethttp://imagej.net/mailman/listinfo/imagej-devel
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/f19de4dd/attachment.html>

From grislis at wisc.edu  Mon Jul 15 15:46:32 2013
From: grislis at wisc.edu (Aivar Grislis)
Date: Mon, 15 Jul 2013 15:46:32 -0500
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
 DefaultDatasetView
In-Reply-To: <CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
	<51E4387E.1050609@wisc.edu>
	<CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>
Message-ID: <51E45FA8.1050900@wisc.edu>

I think CompositeXYProjector is meant to handle the following cases:

1) Rendering LUT images, a single converter is used.  Grayscale images 
are included here.

2) Rendering RGB images, three converters are used.  These use red-only, 
green-only, and blue-only LUTs.

3) I believe it's also intended to work with images with > 3 channels, 
using C, M, and Y for the excess channels.

The existing code works well for cases 1 & 2.  Case 3 adds the 
possibility of overflow, if your red converter gives you a value of 255 
for the red component but your magenta converter adds another 255.  
Currently the code just limits the value to 255 in that case.  Some sort 
of blending might work better here, but the bigger issue is RGBCMY is 
not an additive color system.  If you see a cyan blotch you don't know 
if its in both the G & B channels or just the C channel.

Aivar


On 7/15/13 2:40 PM, Lee Kamentsky wrote:
> Thanks for answering Aivar,
>
> I think what your reply did for me is to have me take a step back and 
> consider what we're modeling. If you look at my replies below, I think 
> that the best solution is to use a model where the background is white 
> and each successive layer filters out some of that background, like a 
> gel. A layer attenuates the underlying layer by a fraction of (1 - 
> alpha/255 * (1 - red/255)), resulting in no attenuation for 255 and 
> attenuation of alpha/255 for zero. We can then use a red converter 
> that returns a value of 255 for the blue and green channels and the 
> model and math work correctly.
>
> On Mon, Jul 15, 2013 at 1:59 PM, Aivar Grislis <grislis at wisc.edu 
> <mailto:grislis at wisc.edu>> wrote:
>
>>     I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType
>>     and ARGBType.alpha(value) is 255 for all of them, so aSum is 765.
>>     It would appear that the correct solution would be to divide aSum
>>     by 3.
>     Isn't it unusual to define an alpha for each color component,
>     generally you have a single A associated with a combined RGB?  So
>     averaging the three alphas might make sense here, because I think
>     they should all be the same value.
>
> I think you're right, the model always is that each pixel has an alpha 
> value that applies to R, G and B. The image I was using was the Clown 
> example image. DefaultDatasetView.initializeView constructs three 
> RealLUTConverters for the projector, one for red, one for green and 
> one for blue which sends you down this rabbit hole.
>
>>     In addition, there's no scaling of the individual red, green and
>>     blue values by their channel's alpha. If the input were two
>>     index-color images, each of which had different alphas, the code
>>     should multiply the r, g and b values by the alphas before
>>     summing and then divide by the total alpha in the end. The alpha
>>     in this case *should* be the sum of alphas divided by the number
>>     of channels.
>     I think alpha processing is more cumulative, done layer by layer
>     in some defined layer order.  For a given pixel say the current
>     output pixel value is ARGB1 and you are compositing a second image
>     with value ARGB2 on top of it:  For the red channel the output
>     color should be ((255 - alpha(ARGB2)) * red(ARGB1) + alpha(ARGB2)
>     * red(ARGB2)) / 255.  The alpha of ARGB1 is not involved.
>
> I think that's a valid interpretation. I've always used (alpha(ARGB1) 
> * red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / (alpha(ARGB1) + 
> alpha(ARGB2)) because I assumed the alpha indicated the
> strength of the blending of each source. In any case, the code as it 
> stands doesn't do either of these.
>
>
>     In other words, if you add a layer that is completely opaque you
>     no longer have to consider any of the colors or alpha values
>     underneath it.
>
>
>     I think the bigger issue here is this code is specifically
>     designed to composite red, green and blue image layers.  It's a
>     special case since for a given pixel the red comes from the red
>     layer, blue from blue layer, and green from green layer.  These
>     layers shouldn't be completely opaque, since the colors wouldn't
>     combine at all then or completely transparent since then they
>     wouldn't contribute any color.  I don't think transparency is
>     useful here.
>
> So this is an argument for blending instead of layering - transparency 
> would be useful if the images were blended and treated as if on a par 
> with each other, allowing the user to emphasize one channel or the other.
>
>
>     It's also possible that a multichannel image with > 3 channels is
>     being displayed with more color channels, namely cyan, magenta,
>     and yellow.  The code here is designed to stop overflow, but I'm
>     not convinced those extended color channels would combine
>     meaningfully.
>
>     Aivar
>
>>     In addition, there's no scaling of the individual red, green and
>>     blue values by their channel's alpha. If the input were two
>>     index-color images, each of which had different alphas, the code
>>     should multiply the r, g and b values by the alphas before
>>     summing and then divide by the total alpha in the end. The alpha
>>     in this case *should* be the sum of alphas divided by the number
>>     of channels.
>     I think alpha processing is cumulative layer by layer.
>
>     This brings up some interesting questions:
>
>     1) If the first, bottom-most layer is transparent, what color
>     should show through?  Black, white?  Or perhaps it's best to
>     ignore this base layer transparency.
>
> Maybe the model should be that the background is white and successive 
> layers are like gel filters on top. In that case, you'd have:
> red = (255 - alpha(ARGB2) *(255 - red(ARGB2))/255) * red(ARGB1)
>
> And maybe that points to what the true solution is. For the default, 
> we could change things so that red channel would have blue = 255 and 
> green = 255 and the first composition would change only the red channel.
>
>
>     2) If you wanted to composite several transparent images, how do
>     you calculate the transparency of the composite?  I'm not sure
>     this is something we need to do.
>
>     Aivar
>
>
>     On 7/15/13 10:31 AM, Lee Kamentsky wrote:
>>     Hi all,
>>     I'm looking at the code for
>>     net.imglib2.display.CompositeXYProjector and as I step through
>>     it, it's clear that the alpha calculation isn't being handled
>>     correctly. Here's the code as it stands now, line 190 roughly:
>>
>>     for ( int i = 0; i < size; i++ )
>>     {
>>     sourceRandomAccess.setPosition( currentPositions[ i ], dimIndex );
>>     currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
>>     // accumulate converted result
>>     final int value = bi.get();
>>     final int a = ARGBType.alpha( value );
>>     final int r = ARGBType.red( value );
>>     final int g = ARGBType.green( value );
>>     final int b = ARGBType.blue( value );
>>     aSum += a;
>>     rSum += r;
>>     gSum += g;
>>     bSum += b;
>>     }
>>     if ( aSum > 255 )
>>     aSum = 255;
>>     if ( rSum > 255 )
>>     rSum = 255;
>>     if ( gSum > 255 )
>>     gSum = 255;
>>     if ( bSum > 255 )
>>     bSum = 255;
>>     targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum, aSum ) );
>>
>>     I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType
>>     and ARGBType.alpha(value) is 255 for all of them, so aSum is 765.
>>     It would appear that the correct solution would be to divide aSum
>>     by 3. In addition, there's no scaling of the individual red,
>>     green and blue values by their channel's alpha. If the input were
>>     two index-color images, each of which had different alphas, the
>>     code should multiply the r, g and b values by the alphas before
>>     summing and then divide by the total alpha in the end. The alpha
>>     in this case *should* be the sum of alphas divided by the number
>>     of channels.
>>
>>     However, I think the problem is deeper than that. For an RGB
>>     ImgPlus, there are three LUTs and each of them has an alpha of
>>     255, but that alpha only applies to one of the colors in the LUT.
>>     When you're compositing images and weighing them equally, if two
>>     are black and one is white, then the result is 1/3 of the white
>>     intensity - if you translate that to red, green and blue images,
>>     the resulting intensity will be 1/3 of that desired. This might
>>     sound weird, but the only solution that works out mathematically
>>     is for the defaultLUTs in the DefaultDatasetView to use color
>>     tables that return values that are 3x those of ColorTables.RED,
>>     GREEN and BLUE. Thinking about it, I'm afraid this *is* the
>>     correct model and each channel really is 3x brighter than possible.
>>
>>     It took me quite a bit of back and forth to come up with the
>>     above... I hope you all understand what I'm saying and understand
>>     the problem and counter-intuitive solution and have the patience
>>     to follow it. Dscho, if you made it this far - you're the
>>     mathematician, what's your take?
>>
>>     --Lee
>>
>>
>>     _______________________________________________
>>     ImageJ-devel mailing list
>>     ImageJ-devel at imagej.net  <mailto:ImageJ-devel at imagej.net>
>>     http://imagej.net/mailman/listinfo/imagej-devel
>
>
>     _______________________________________________
>     ImageJ-devel mailing list
>     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>     http://imagej.net/mailman/listinfo/imagej-devel
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/19cbebd5/attachment-0001.html>

From ctrueden at wisc.edu  Mon Jul 15 15:53:27 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 15 Jul 2013 15:53:27 -0500
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
	DefaultDatasetView
In-Reply-To: <51E45FA8.1050900@wisc.edu>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
	<51E4387E.1050609@wisc.edu>
	<CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>
	<51E45FA8.1050900@wisc.edu>
Message-ID: <CADN69yk7Dh6esy+AfEUeyYtySbETtw0rJUUMho9a3q8DH5V-VA@mail.gmail.com>

Hi all,

> the bigger issue is RGBCMY is not an additive color system.

I believe ImageJ1 treats it as additive. Look at the sample "Organ of
Corti" -- the current behavior of ImageJ2 causes that sample to appear the
same as it does in IJ1. Before we added the bounds-checking code, it
erroneously wrapped pixel values.

As for the alpha stuff, I will try to digest and reply soon but I am way
too tired at this moment. I just wanted to clarify why the code is the way
it is. It was intended to be more general than only the cases Aivar
mentioned, and instead provided additive support for *any* color table per
channel you throw at it, the same as ImageJ1's CompositeImages do.

Regards,
Curtis


On Mon, Jul 15, 2013 at 3:46 PM, Aivar Grislis <grislis at wisc.edu> wrote:

>  I think CompositeXYProjector is meant to handle the following cases:
>
> 1) Rendering LUT images, a single converter is used.  Grayscale images are
> included here.
>
> 2) Rendering RGB images, three converters are used.  These use red-only,
> green-only, and blue-only LUTs.
>
> 3) I believe it's also intended to work with images with > 3 channels,
> using C, M, and Y for the excess channels.
>
> The existing code works well for cases 1 & 2.  Case 3 adds the possibility
> of overflow, if your red converter gives you a value of 255 for the red
> component but your magenta converter adds another 255.  Currently the code
> just limits the value to 255 in that case.  Some sort of blending might
> work better here, but the bigger issue is RGBCMY is not an additive color
> system.  If you see a cyan blotch you don't know if its in both the G & B
> channels or just the C channel.
>
> Aivar
>
>
>
> On 7/15/13 2:40 PM, Lee Kamentsky wrote:
>
> Thanks for answering Aivar,
>
>  I think what your reply did for me is to have me take a step back and
> consider what we're modeling. If you look at my replies below, I think that
> the best solution is to use a model where the background is white and each
> successive layer filters out some of that background, like a gel. A layer
> attenuates the underlying layer by a fraction of (1 - alpha/255 * (1 -
> red/255)), resulting in no attenuation for 255 and attenuation of alpha/255
> for zero. We can then use a red converter that returns a value of 255 for
> the blue and green channels and the model and math work correctly.
>
> On Mon, Jul 15, 2013 at 1:59 PM, Aivar Grislis <grislis at wisc.edu> wrote:
>
>>  I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and
>> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would
>> appear that the correct solution would be to divide aSum by 3.
>>
>> Isn't it unusual to define an alpha for each color component, generally
>> you have a single A associated with a combined RGB?  So averaging the three
>> alphas might make sense here, because I think they should all be the same
>> value.
>>
> I think you're right, the model always is that each pixel has an alpha
> value that applies to R, G and B. The image I was using was the Clown
> example image. DefaultDatasetView.initializeView constructs three
> RealLUTConverters for the projector, one for red, one for green and one for
> blue which sends you down this rabbit hole.
>
>>  In addition, there's no scaling of the individual red, green and blue
>> values by their channel's alpha. If the input were two index-color images,
>> each of which had different alphas, the code should multiply the r, g and b
>> values by the alphas before summing and then divide by the total alpha in
>> the end. The alpha in this case *should* be the sum of alphas divided by
>> the number of channels.
>>
>> I think alpha processing is more cumulative, done layer by layer in some
>> defined layer order.  For a given pixel say the current output pixel value
>> is ARGB1 and you are compositing a second image with value ARGB2 on top of
>> it:  For the red channel the output color should be ((255 - alpha(ARGB2)) *
>> red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / 255.  The alpha of ARGB1 is not
>> involved.
>>
> I think that's a valid interpretation. I've always used (alpha(ARGB1) *
> red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / (alpha(ARGB1) + alpha(ARGB2))
> because I assumed the alpha indicated the
> strength of the blending of each source. In any case, the code as it
> stands doesn't do either of these.
>
>>
>> In other words, if you add a layer that is completely opaque you no
>> longer have to consider any of the colors or alpha values underneath it.
>>
>
>> I think the bigger issue here is this code is specifically designed to
>> composite red, green and blue image layers.  It's a special case since for
>> a given pixel the red comes from the red layer, blue from blue layer, and
>> green from green layer.  These layers shouldn't be completely opaque, since
>> the colors wouldn't combine at all then or completely transparent since
>> then they wouldn't contribute any color.  I don't think transparency is
>> useful here.
>>
> So this is an argument for blending instead of layering - transparency
> would be useful if the images were blended and treated as if on a par with
> each other, allowing the user to emphasize one channel or the other.
>
>>
>> It's also possible that a multichannel image with > 3 channels is being
>> displayed with more color channels, namely cyan, magenta, and yellow.  The
>> code here is designed to stop overflow, but I'm not convinced those
>> extended color channels would combine meaningfully.
>>
>> Aivar
>>
>> In addition, there's no scaling of the individual red, green and blue
>> values by their channel's alpha. If the input were two index-color images,
>> each of which had different alphas, the code should multiply the r, g and b
>> values by the alphas before summing and then divide by the total alpha in
>> the end. The alpha in this case *should* be the sum of alphas divided by
>> the number of channels.
>>
>> I think alpha processing is cumulative layer by layer.
>>
>> This brings up some interesting questions:
>>
>> 1) If the first, bottom-most layer is transparent, what color should show
>> through?  Black, white?  Or perhaps it's best to ignore this base layer
>> transparency.
>>
> Maybe the model should be that the background is white and successive
> layers are like gel filters on top. In that case, you'd have:
>  red = (255 - alpha(ARGB2) *(255 - red(ARGB2))/255) * red(ARGB1)
>
>  And maybe that points to what the true solution is. For the default, we
> could change things so that red channel would have blue = 255 and green =
> 255 and the first composition would change only the red channel.
>
>>
>> 2) If you wanted to composite several transparent images, how do you
>> calculate the transparency of the composite?  I'm not sure this is
>> something we need to do.
>>
>> Aivar
>>
>>
>> On 7/15/13 10:31 AM, Lee Kamentsky wrote:
>>
>>  Hi all,
>> I'm looking at the code for net.imglib2.display.CompositeXYProjector and
>> as I step through it, it's clear that the alpha calculation isn't being
>> handled correctly. Here's the code as it stands now, line 190 roughly:
>>
>>  for ( int i = 0; i < size; i++ )
>>  {
>>  sourceRandomAccess.setPosition( currentPositions[ i ], dimIndex );
>>  currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
>>  // accumulate converted result
>>  final int value = bi.get();
>>  final int a = ARGBType.alpha( value );
>>  final int r = ARGBType.red( value );
>>  final int g = ARGBType.green( value );
>>  final int b = ARGBType.blue( value );
>>  aSum += a;
>>  rSum += r;
>>  gSum += g;
>>  bSum += b;
>>  }
>>  if ( aSum > 255 )
>>  aSum = 255;
>>  if ( rSum > 255 )
>>  rSum = 255;
>>  if ( gSum > 255 )
>>  gSum = 255;
>>  if ( bSum > 255 )
>>  bSum = 255;
>>  targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum, aSum ) );
>>
>>  I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and
>> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would
>> appear that the correct solution would be to divide aSum by 3. In addition,
>> there's no scaling of the individual red, green and blue values by their
>> channel's alpha. If the input were two index-color images, each of which
>> had different alphas, the code should multiply the r, g and b values by the
>> alphas before summing and then divide by the total alpha in the end. The
>> alpha in this case *should* be the sum of alphas divided by the number of
>> channels.
>>
>>  However, I think the problem is deeper than that. For an RGB ImgPlus,
>> there are three LUTs and each of them has an alpha of 255, but that alpha
>> only applies to one of the colors in the LUT. When you're compositing
>> images and weighing them equally, if two are black and one is white, then
>> the result is 1/3 of the white intensity - if you translate that to red,
>> green and blue images, the resulting intensity will be 1/3 of that desired.
>> This might sound weird, but the only solution that works out mathematically
>> is for the defaultLUTs in the DefaultDatasetView to use color tables that
>> return values that are 3x those of ColorTables.RED, GREEN and BLUE.
>> Thinking about it, I'm afraid this *is* the correct model and each channel
>> really is 3x brighter than possible.
>>
>>  It took me quite a bit of back and forth to come up with the above... I
>> hope you all understand what I'm saying and understand the problem and
>> counter-intuitive solution and have the patience to follow it. Dscho, if
>> you made it this far - you're the mathematician, what's your take?
>>
>>  --Lee
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing listImageJ-devel at imagej.nethttp://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/3a1b88ce/attachment-0001.html>

From grislis at wisc.edu  Mon Jul 15 17:28:17 2013
From: grislis at wisc.edu (Aivar Grislis)
Date: Mon, 15 Jul 2013 17:28:17 -0500
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
 DefaultDatasetView
In-Reply-To: <CADN69yk7Dh6esy+AfEUeyYtySbETtw0rJUUMho9a3q8DH5V-VA@mail.gmail.com>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
	<51E4387E.1050609@wisc.edu>
	<CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>
	<51E45FA8.1050900@wisc.edu>
	<CADN69yk7Dh6esy+AfEUeyYtySbETtw0rJUUMho9a3q8DH5V-VA@mail.gmail.com>
Message-ID: <51E47781.4060800@wisc.edu>

> I believe ImageJ1 treats it [RGBCMY] as additive. Look at the sample 
> "Organ of Corti" -- the current behavior of ImageJ2 causes that sample 
> to appear the same as it does in IJ1. Before we added the 
> bounds-checking code, it erroneously wrapped pixel values.
By not being additive I meant C is a secondary color composed of 
primaries G & B, etc.  In the sense of 
http://en.wikipedia.org/wiki/Additive_color .

Okay, "Organ of Corti" uses RGBK (and K is even worse than my example of 
C since it has all three RGB components not just G & B) and yet it works 
as an image.  It's useful because the areas lit up in each channel are 
fairly distinct.  If these areas overlapped the bounds-checking code 
would come into play in the overlapping pixels and some highlights would 
get squashed and some colors distorted (when one component is squashed 
but not the others).  But even if the code did a better job of combining 
the colors of overlapping areas you'd still have visual ambiguity in 
these areas (since eyes can't distinguish C from G + B).  So now I'm 
thinking the code works well as is.
> It was intended to be more general than only the cases Aivar 
> mentioned, and instead provided additive support for *any* color table 
> per channel you throw at it, the same as ImageJ1's CompositeImages do.
Sure, it shouldn't crash and burn if you put Fire on one channel and Ice 
on another but that's not usable visually unless the areas lit up in 
each channel are distinct.  If you have a lot of overlap and you want 
the colors to add up meaningfully you're better off sticking with 
primary additive colors for your channel LUTs.

On 7/15/13 3:53 PM, Curtis Rueden wrote:
> Hi all,
>
> > the bigger issue is RGBCMY is not an additive color system.
>
> I believe ImageJ1 treats it as additive. Look at the sample "Organ of 
> Corti" -- the current behavior of ImageJ2 causes that sample to appear 
> the same as it does in IJ1. Before we added the bounds-checking code, 
> it erroneously wrapped pixel values.
>
> As for the alpha stuff, I will try to digest and reply soon but I am 
> way too tired at this moment. I just wanted to clarify why the code is 
> the way it is. It was intended to be more general than only the cases 
> Aivar mentioned, and instead provided additive support for *any* color 
> table per channel you throw at it, the same as ImageJ1's 
> CompositeImages do.
>
> Regards,
> Curtis
>
>
> On Mon, Jul 15, 2013 at 3:46 PM, Aivar Grislis <grislis at wisc.edu 
> <mailto:grislis at wisc.edu>> wrote:
>
>     I think CompositeXYProjector is meant to handle the following cases:
>
>     1) Rendering LUT images, a single converter is used. Grayscale
>     images are included here.
>
>     2) Rendering RGB images, three converters are used. These use
>     red-only, green-only, and blue-only LUTs.
>
>     3) I believe it's also intended to work with images with > 3
>     channels, using C, M, and Y for the excess channels.
>
>     The existing code works well for cases 1 & 2.  Case 3 adds the
>     possibility of overflow, if your red converter gives you a value
>     of 255 for the red component but your magenta converter adds
>     another 255.  Currently the code just limits the value to 255 in
>     that case. Some sort of blending might work better here, but the
>     bigger issue is RGBCMY is not an additive color system. If you see
>     a cyan blotch you don't know if its in both the G & B channels or
>     just the C channel.
>
>     Aivar
>
>
>
>     On 7/15/13 2:40 PM, Lee Kamentsky wrote:
>>     Thanks for answering Aivar,
>>
>>     I think what your reply did for me is to have me take a step back
>>     and consider what we're modeling. If you look at my replies
>>     below, I think that the best solution is to use a model where the
>>     background is white and each successive layer filters out some of
>>     that background, like a gel. A layer attenuates the underlying
>>     layer by a fraction of (1 - alpha/255 * (1 - red/255)), resulting
>>     in no attenuation for 255 and attenuation of alpha/255 for zero.
>>     We can then use a red converter that returns a value of 255 for
>>     the blue and green channels and the model and math work correctly.
>>
>>     On Mon, Jul 15, 2013 at 1:59 PM, Aivar Grislis <grislis at wisc.edu
>>     <mailto:grislis at wisc.edu>> wrote:
>>
>>>         I have an ImgPlus backed by an RGB PlanarImg of
>>>         UnsignedByteType and ARGBType.alpha(value) is 255 for all of
>>>         them, so aSum is 765. It would appear that the correct
>>>         solution would be to divide aSum by 3.
>>         Isn't it unusual to define an alpha for each color component,
>>         generally you have a single A associated with a combined
>>         RGB?  So averaging the three alphas might make sense here,
>>         because I think they should all be the same value.
>>
>>     I think you're right, the model always is that each pixel has an
>>     alpha value that applies to R, G and B. The image I was using was
>>     the Clown example image. DefaultDatasetView.initializeView
>>     constructs three RealLUTConverters for the projector, one for
>>     red, one for green and one for blue which sends you down this
>>     rabbit hole.
>>
>>>         In addition, there's no scaling of the individual red, green
>>>         and blue values by their channel's alpha. If the input were
>>>         two index-color images, each of which had different alphas,
>>>         the code should multiply the r, g and b values by the alphas
>>>         before summing and then divide by the total alpha in the
>>>         end. The alpha in this case *should* be the sum of alphas
>>>         divided by the number of channels.
>>         I think alpha processing is more cumulative, done layer by
>>         layer in some defined layer order.  For a given pixel say the
>>         current output pixel value is ARGB1 and you are compositing a
>>         second image with value ARGB2 on top of it:  For the red
>>         channel the output color should be ((255 - alpha(ARGB2)) *
>>         red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / 255.  The alpha of
>>         ARGB1 is not involved.
>>
>>     I think that's a valid interpretation. I've always used
>>     (alpha(ARGB1) * red(ARGB1) + alpha(ARGB2) * red(ARGB2)) /
>>     (alpha(ARGB1) + alpha(ARGB2)) because I assumed the alpha
>>     indicated the
>>     strength of the blending of each source. In any case, the code as
>>     it stands doesn't do either of these.
>>
>>
>>         In other words, if you add a layer that is completely opaque
>>         you no longer have to consider any of the colors or alpha
>>         values underneath it.
>>
>>
>>         I think the bigger issue here is this code is specifically
>>         designed to composite red, green and blue image layers.  It's
>>         a special case since for a given pixel the red comes from the
>>         red layer, blue from blue layer, and green from green layer. 
>>         These layers shouldn't be completely opaque, since the colors
>>         wouldn't combine at all then or completely transparent since
>>         then they wouldn't contribute any color.  I don't think
>>         transparency is useful here.
>>
>>     So this is an argument for blending instead of layering -
>>     transparency would be useful if the images were blended and
>>     treated as if on a par with each other, allowing the user to
>>     emphasize one channel or the other.
>>
>>
>>         It's also possible that a multichannel image with > 3
>>         channels is being displayed with more color channels, namely
>>         cyan, magenta, and yellow.  The code here is designed to stop
>>         overflow, but I'm not convinced those extended color channels
>>         would combine meaningfully.
>>
>>         Aivar
>>
>>>         In addition, there's no scaling of the individual red, green
>>>         and blue values by their channel's alpha. If the input were
>>>         two index-color images, each of which had different alphas,
>>>         the code should multiply the r, g and b values by the alphas
>>>         before summing and then divide by the total alpha in the
>>>         end. The alpha in this case *should* be the sum of alphas
>>>         divided by the number of channels.
>>         I think alpha processing is cumulative layer by layer.
>>
>>         This brings up some interesting questions:
>>
>>         1) If the first, bottom-most layer is transparent, what color
>>         should show through?  Black, white?  Or perhaps it's best to
>>         ignore this base layer transparency.
>>
>>     Maybe the model should be that the background is white and
>>     successive layers are like gel filters on top. In that case,
>>     you'd have:
>>     red = (255 - alpha(ARGB2) *(255 - red(ARGB2))/255) * red(ARGB1)
>>
>>     And maybe that points to what the true solution is. For the
>>     default, we could change things so that red channel would have
>>     blue = 255 and green = 255 and the first composition would change
>>     only the red channel.
>>
>>
>>         2) If you wanted to composite several transparent images, how
>>         do you calculate the transparency of the composite?  I'm not
>>         sure this is something we need to do.
>>
>>         Aivar
>>
>>
>>         On 7/15/13 10:31 AM, Lee Kamentsky wrote:
>>>         Hi all,
>>>         I'm looking at the code for
>>>         net.imglib2.display.CompositeXYProjector and as I step
>>>         through it, it's clear that the alpha calculation isn't
>>>         being handled correctly. Here's the code as it stands now,
>>>         line 190 roughly:
>>>
>>>         for ( int i = 0; i < size; i++ )
>>>         {
>>>         sourceRandomAccess.setPosition( currentPositions[ i ],
>>>         dimIndex );
>>>         currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
>>>         // accumulate converted result
>>>         final int value = bi.get();
>>>         final int a = ARGBType.alpha( value );
>>>         final int r = ARGBType.red( value );
>>>         final int g = ARGBType.green( value );
>>>         final int b = ARGBType.blue( value );
>>>         aSum += a;
>>>         rSum += r;
>>>         gSum += g;
>>>         bSum += b;
>>>         }
>>>         if ( aSum > 255 )
>>>         aSum = 255;
>>>         if ( rSum > 255 )
>>>         rSum = 255;
>>>         if ( gSum > 255 )
>>>         gSum = 255;
>>>         if ( bSum > 255 )
>>>         bSum = 255;
>>>         targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum,
>>>         aSum ) );
>>>
>>>         I have an ImgPlus backed by an RGB PlanarImg of
>>>         UnsignedByteType and ARGBType.alpha(value) is 255 for all of
>>>         them, so aSum is 765. It would appear that the correct
>>>         solution would be to divide aSum by 3. In addition, there's
>>>         no scaling of the individual red, green and blue values by
>>>         their channel's alpha. If the input were two index-color
>>>         images, each of which had different alphas, the code should
>>>         multiply the r, g and b values by the alphas before summing
>>>         and then divide by the total alpha in the end. The alpha in
>>>         this case *should* be the sum of alphas divided by the
>>>         number of channels.
>>>
>>>         However, I think the problem is deeper than that. For an RGB
>>>         ImgPlus, there are three LUTs and each of them has an alpha
>>>         of 255, but that alpha only applies to one of the colors in
>>>         the LUT. When you're compositing images and weighing them
>>>         equally, if two are black and one is white, then the result
>>>         is 1/3 of the white intensity - if you translate that to
>>>         red, green and blue images, the resulting intensity will be
>>>         1/3 of that desired. This might sound weird, but the only
>>>         solution that works out mathematically is for the
>>>         defaultLUTs in the DefaultDatasetView to use color tables
>>>         that return values that are 3x those of ColorTables.RED,
>>>         GREEN and BLUE. Thinking about it, I'm afraid this *is* the
>>>         correct model and each channel really is 3x brighter than
>>>         possible.
>>>
>>>         It took me quite a bit of back and forth to come up with the
>>>         above... I hope you all understand what I'm saying and
>>>         understand the problem and counter-intuitive solution and
>>>         have the patience to follow it. Dscho, if you made it this
>>>         far - you're the mathematician, what's your take?
>>>
>>>         --Lee
>>>
>>>
>>>         _______________________________________________
>>>         ImageJ-devel mailing list
>>>         ImageJ-devel at imagej.net  <mailto:ImageJ-devel at imagej.net>
>>>         http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>>         _______________________________________________
>>         ImageJ-devel mailing list
>>         ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>>         http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
>
>     _______________________________________________
>     ImageJ-devel mailing list
>     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>     http://imagej.net/mailman/listinfo/imagej-devel
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130715/2581840f/attachment-0001.html>

From pietzsch at mpi-cbg.de  Tue Jul 16 06:02:39 2013
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Tue, 16 Jul 2013 13:02:39 +0200
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
	DefaultDatasetView
In-Reply-To: <51E47781.4060800@wisc.edu>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
	<51E4387E.1050609@wisc.edu>
	<CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>
	<51E45FA8.1050900@wisc.edu>
	<CADN69yk7Dh6esy+AfEUeyYtySbETtw0rJUUMho9a3q8DH5V-VA@mail.gmail.com>
	<51E47781.4060800@wisc.edu>
Message-ID: <72E73256-5AD3-4193-A520-D5BEDE989E39@mpi-cbg.de>

Hi all,

My suspicion is that there is no One True Solution?. So from my point of view it would be nice to have a way to support different options.

The recent projectors pull request https://github.com/imagej/imglib/pull/23 by Michael Zinsmaier (KNIME) has potential to provide this extensibility.
Their DimProjector2D which is a possible replacement for net.imglib2.display.CompositeXYProjector uses a  final Converter< ProjectedDimSampler< A >, B > to convert from a set of A-values in the "composite dimension" to the output B-value. There could be different converters for different alpha-compositing algorithms and it would be easy to add new options for imglib2 users.

The projectors branch / pull request requires some work to make it a replacement for the current projectors instead of opening up a parallel hierarchy. If someone wants to work on the compositing issues I think that would be a good place to direct efforts to.

best regards,
Tobias


On Jul 16, 2013, at 12:28 AM, Aivar Grislis <grislis at wisc.edu> wrote:

>> I believe ImageJ1 treats it [RGBCMY] as additive. Look at the sample "Organ of Corti" -- the current behavior of ImageJ2 causes that sample to appear the same as it does in IJ1. Before we added the bounds-checking code, it erroneously wrapped pixel values.
> By not being additive I meant C is a secondary color composed of primaries G & B, etc.  In the sense of http://en.wikipedia.org/wiki/Additive_color .
> 
> Okay, "Organ of Corti" uses RGBK (and K is even worse than my example of C since it has all three RGB components not just G & B) and yet it works as an image.  It's useful because the areas lit up in each channel are fairly distinct.  If these areas overlapped the bounds-checking code would come into play in the overlapping pixels and some highlights would get squashed and some colors distorted (when one component is squashed but not the others).  But even if the code did a better job of combining the colors of overlapping areas you'd still have visual ambiguity in these areas (since eyes can't distinguish C from G + B).  So now I'm thinking the code works well as is.
>> It was intended to be more general than only the cases Aivar mentioned, and instead provided additive support for *any* color table per channel you throw at it, the same as ImageJ1's CompositeImages do.
> Sure, it shouldn't crash and burn if you put Fire on one channel and Ice on another but that's not usable visually unless the areas lit up in each channel are distinct.  If you have a lot of overlap and you want the colors to add up meaningfully you're better off sticking with primary additive colors for your channel LUTs.
> 
> On 7/15/13 3:53 PM, Curtis Rueden wrote:
>> Hi all,
>> 
>> > the bigger issue is RGBCMY is not an additive color system.
>> 
>> I believe ImageJ1 treats it as additive. Look at the sample "Organ of Corti" -- the current behavior of ImageJ2 causes that sample to appear the same as it does in IJ1. Before we added the bounds-checking code, it erroneously wrapped pixel values.
>> 
>> As for the alpha stuff, I will try to digest and reply soon but I am way too tired at this moment. I just wanted to clarify why the code is the way it is. It was intended to be more general than only the cases Aivar mentioned, and instead provided additive support for *any* color table per channel you throw at it, the same as ImageJ1's CompositeImages do.
>> 
>> Regards,
>> Curtis
>> 
>> 
>> On Mon, Jul 15, 2013 at 3:46 PM, Aivar Grislis <grislis at wisc.edu> wrote:
>> I think CompositeXYProjector is meant to handle the following cases:
>> 
>> 1) Rendering LUT images, a single converter is used.  Grayscale images are included here.
>> 
>> 2) Rendering RGB images, three converters are used.  These use red-only, green-only, and blue-only LUTs.
>> 
>> 3) I believe it's also intended to work with images with > 3 channels, using C, M, and Y for the excess channels.
>> 
>> The existing code works well for cases 1 & 2.  Case 3 adds the possibility of overflow, if your red converter gives you a value of 255 for the red component but your magenta converter adds another 255.  Currently the code just limits the value to 255 in that case.  Some sort of blending might work better here, but the bigger issue is RGBCMY is not an additive color system.  If you see a cyan blotch you don't know if its in both the G & B channels or just the C channel.
>> 
>> Aivar
>> 
>> 
>> 
>> On 7/15/13 2:40 PM, Lee Kamentsky wrote:
>>> Thanks for answering Aivar,
>>> 
>>> I think what your reply did for me is to have me take a step back and consider what we're modeling. If you look at my replies below, I think that the best solution is to use a model where the background is white and each successive layer filters out some of that background, like a gel. A layer attenuates the underlying layer by a fraction of (1 - alpha/255 * (1 - red/255)), resulting in no attenuation for 255 and attenuation of alpha/255 for zero. We can then use a red converter that returns a value of 255 for the blue and green channels and the model and math work correctly.
>>> 
>>> On Mon, Jul 15, 2013 at 1:59 PM, Aivar Grislis <grislis at wisc.edu> wrote:
>>>> I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would appear that the correct solution would be to divide aSum by 3.
>>> Isn't it unusual to define an alpha for each color component, generally you have a single A associated with a combined RGB?  So averaging the three alphas might make sense here, because I think they should all be the same value.
>>> I think you're right, the model always is that each pixel has an alpha value that applies to R, G and B. The image I was using was the Clown example image. DefaultDatasetView.initializeView constructs three RealLUTConverters for the projector, one for red, one for green and one for blue which sends you down this rabbit hole.
>>>> In addition, there's no scaling of the individual red, green and blue values by their channel's alpha. If the input were two index-color images, each of which had different alphas, the code should multiply the r, g and b values by the alphas before summing and then divide by the total alpha in the end. The alpha in this case *should* be the sum of alphas divided by the number of channels.
>>> I think alpha processing is more cumulative, done layer by layer in some defined layer order.  For a given pixel say the current output pixel value is ARGB1 and you are compositing a second image with value ARGB2 on top of it:  For the red channel the output color should be ((255 - alpha(ARGB2)) * red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / 255.  The alpha of ARGB1 is not involved.
>>> I think that's a valid interpretation. I've always used (alpha(ARGB1) * red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / (alpha(ARGB1) + alpha(ARGB2)) because I assumed the alpha indicated the
>>> strength of the blending of each source. In any case, the code as it stands doesn't do either of these.
>>> 
>>> In other words, if you add a layer that is completely opaque you no longer have to consider any of the colors or alpha values underneath it. 
>>> 
>>> I think the bigger issue here is this code is specifically designed to composite red, green and blue image layers.  It's a special case since for a given pixel the red comes from the red layer, blue from blue layer, and green from green layer.  These layers shouldn't be completely opaque, since the colors wouldn't combine at all then or completely transparent since then they wouldn't contribute any color.  I don't think transparency is useful here.
>>> So this is an argument for blending instead of layering - transparency would be useful if the images were blended and treated as if on a par with each other, allowing the user to emphasize one channel or the other. 
>>> 
>>> It's also possible that a multichannel image with > 3 channels is being displayed with more color channels, namely cyan, magenta, and yellow.  The code here is designed to stop overflow, but I'm not convinced those extended color channels would combine meaningfully.
>>> 
>>> Aivar
>>> 
>>>> In addition, there's no scaling of the individual red, green and blue values by their channel's alpha. If the input were two index-color images, each of which had different alphas, the code should multiply the r, g and b values by the alphas before summing and then divide by the total alpha in the end. The alpha in this case *should* be the sum of alphas divided by the number of channels.
>>> I think alpha processing is cumulative layer by layer.  
>>> 
>>> This brings up some interesting questions:
>>> 
>>> 1) If the first, bottom-most layer is transparent, what color should show through?  Black, white?  Or perhaps it's best to ignore this base layer transparency.
>>> Maybe the model should be that the background is white and successive layers are like gel filters on top. In that case, you'd have:
>>> red = (255 - alpha(ARGB2) *(255 - red(ARGB2))/255) * red(ARGB1) 
>>> 
>>> And maybe that points to what the true solution is. For the default, we could change things so that red channel would have blue = 255 and green = 255 and the first composition would change only the red channel.
>>> 
>>> 2) If you wanted to composite several transparent images, how do you calculate the transparency of the composite?  I'm not sure this is something we need to do.
>>> 
>>> Aivar
>>> 
>>> 
>>> On 7/15/13 10:31 AM, Lee Kamentsky wrote:
>>>> Hi all, 
>>>> I'm looking at the code for net.imglib2.display.CompositeXYProjector and as I step through it, it's clear that the alpha calculation isn't being handled correctly. Here's the code as it stands now, line 190 roughly:
>>>> 
>>>> for ( int i = 0; i < size; i++ )
>>>> {
>>>> sourceRandomAccess.setPosition( currentPositions[ i ], dimIndex );
>>>> currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
>>>> // accumulate converted result
>>>> final int value = bi.get();
>>>> final int a = ARGBType.alpha( value );
>>>> final int r = ARGBType.red( value );
>>>> final int g = ARGBType.green( value );
>>>> final int b = ARGBType.blue( value );
>>>> aSum += a;
>>>> rSum += r;
>>>> gSum += g;
>>>> bSum += b;
>>>> }
>>>> if ( aSum > 255 )
>>>> aSum = 255;
>>>> if ( rSum > 255 )
>>>> rSum = 255;
>>>> if ( gSum > 255 )
>>>> gSum = 255;
>>>> if ( bSum > 255 )
>>>> bSum = 255;
>>>> targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum, aSum ) );
>>>> 
>>>> I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would appear that the correct solution would be to divide aSum by 3. In addition, there's no scaling of the individual red, green and blue values by their channel's alpha. If the input were two index-color images, each of which had different alphas, the code should multiply the r, g and b values by the alphas before summing and then divide by the total alpha in the end. The alpha in this case *should* be the sum of alphas divided by the number of channels.
>>>> 
>>>> However, I think the problem is deeper than that. For an RGB ImgPlus, there are three LUTs and each of them has an alpha of 255, but that alpha only applies to one of the colors in the LUT. When you're compositing images and weighing them equally, if two are black and one is white, then the result is 1/3 of the white intensity - if you translate that to red, green and blue images, the resulting intensity will be 1/3 of that desired. This might sound weird, but the only solution that works out mathematically is for the defaultLUTs in the DefaultDatasetView to use color tables that return values that are 3x those of ColorTables.RED, GREEN and BLUE. Thinking about it, I'm afraid this *is* the correct model and each channel really is 3x brighter than possible.
>>>> 
>>>> It took me quite a bit of back and forth to come up with the above... I hope you all understand what I'm saying and understand the problem and counter-intuitive solution and have the patience to follow it. Dscho, if you made it this far - you're the mathematician, what's your take?
>>>> 
>>>> --Lee
>>>> 
>>>> 
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>> 
>>> 
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>> 
>>> 
>> 
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>> 
>> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130716/56977fd2/attachment-0001.html>

From leek at broadinstitute.org  Tue Jul 16 06:57:36 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Tue, 16 Jul 2013 07:57:36 -0400
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
	DefaultDatasetView
In-Reply-To: <51E47781.4060800@wisc.edu>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
	<51E4387E.1050609@wisc.edu>
	<CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>
	<51E45FA8.1050900@wisc.edu>
	<CADN69yk7Dh6esy+AfEUeyYtySbETtw0rJUUMho9a3q8DH5V-VA@mail.gmail.com>
	<51E47781.4060800@wisc.edu>
Message-ID: <CAHLFyjeZNej2K2VupwK1GHeXV2kZXZuFQ4LWtkYVRGCf70jwsA@mail.gmail.com>

OK - it's up to you all. If it's doing what you think it should, I'm fine
with it.


On Mon, Jul 15, 2013 at 6:28 PM, Aivar Grislis <grislis at wisc.edu> wrote:

>  I believe ImageJ1 treats it [RGBCMY] as additive. Look at the sample
> "Organ of Corti" -- the current behavior of ImageJ2 causes that sample to
> appear the same as it does in IJ1. Before we added the bounds-checking
> code, it erroneously wrapped pixel values.
>
> By not being additive I meant C is a secondary color composed of primaries
> G & B, etc.  In the sense of http://en.wikipedia.org/wiki/Additive_color .
>
> Okay, "Organ of Corti" uses RGBK (and K is even worse than my example of C
> since it has all three RGB components not just G & B) and yet it works as
> an image.  It's useful because the areas lit up in each channel are fairly
> distinct.  If these areas overlapped the bounds-checking code would come
> into play in the overlapping pixels and some highlights would get squashed
> and some colors distorted (when one component is squashed but not the
> others).  But even if the code did a better job of combining the colors of
> overlapping areas you'd still have visual ambiguity in these areas (since
> eyes can't distinguish C from G + B).  So now I'm thinking the code works
> well as is.
>
> It was intended to be more general than only the cases Aivar mentioned,
> and instead provided additive support for *any* color table per channel you
> throw at it, the same as ImageJ1's CompositeImages do.
>
> Sure, it shouldn't crash and burn if you put Fire on one channel and Ice
> on another but that's not usable visually unless the areas lit up in each
> channel are distinct.  If you have a lot of overlap and you want the colors
> to add up meaningfully you're better off sticking with primary additive
> colors for your channel LUTs.
>
> On 7/15/13 3:53 PM, Curtis Rueden wrote:
>
> Hi all,
>
>  > the bigger issue is RGBCMY is not an additive color system.
>
>  I believe ImageJ1 treats it as additive. Look at the sample "Organ of
> Corti" -- the current behavior of ImageJ2 causes that sample to appear the
> same as it does in IJ1. Before we added the bounds-checking code, it
> erroneously wrapped pixel values.
>
>  As for the alpha stuff, I will try to digest and reply soon but I am way
> too tired at this moment. I just wanted to clarify why the code is the way
> it is. It was intended to be more general than only the cases Aivar
> mentioned, and instead provided additive support for *any* color table per
> channel you throw at it, the same as ImageJ1's CompositeImages do.
>
>  Regards,
> Curtis
>
>
> On Mon, Jul 15, 2013 at 3:46 PM, Aivar Grislis <grislis at wisc.edu> wrote:
>
>>  I think CompositeXYProjector is meant to handle the following cases:
>>
>> 1) Rendering LUT images, a single converter is used.  Grayscale images
>> are included here.
>>
>> 2) Rendering RGB images, three converters are used.  These use red-only,
>> green-only, and blue-only LUTs.
>>
>> 3) I believe it's also intended to work with images with > 3 channels,
>> using C, M, and Y for the excess channels.
>>
>> The existing code works well for cases 1 & 2.  Case 3 adds the
>> possibility of overflow, if your red converter gives you a value of 255 for
>> the red component but your magenta converter adds another 255.  Currently
>> the code just limits the value to 255 in that case.  Some sort of blending
>> might work better here, but the bigger issue is RGBCMY is not an additive
>> color system.  If you see a cyan blotch you don't know if its in both the G
>> & B channels or just the C channel.
>>
>> Aivar
>>
>>
>>
>> On 7/15/13 2:40 PM, Lee Kamentsky wrote:
>>
>> Thanks for answering Aivar,
>>
>>  I think what your reply did for me is to have me take a step back and
>> consider what we're modeling. If you look at my replies below, I think that
>> the best solution is to use a model where the background is white and each
>> successive layer filters out some of that background, like a gel. A layer
>> attenuates the underlying layer by a fraction of (1 - alpha/255 * (1 -
>> red/255)), resulting in no attenuation for 255 and attenuation of alpha/255
>> for zero. We can then use a red converter that returns a value of 255 for
>> the blue and green channels and the model and math work correctly.
>>
>> On Mon, Jul 15, 2013 at 1:59 PM, Aivar Grislis <grislis at wisc.edu> wrote:
>>
>>>  I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and
>>> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would
>>> appear that the correct solution would be to divide aSum by 3.
>>>
>>> Isn't it unusual to define an alpha for each color component, generally
>>> you have a single A associated with a combined RGB?  So averaging the three
>>> alphas might make sense here, because I think they should all be the same
>>> value.
>>>
>> I think you're right, the model always is that each pixel has an alpha
>> value that applies to R, G and B. The image I was using was the Clown
>> example image. DefaultDatasetView.initializeView constructs three
>> RealLUTConverters for the projector, one for red, one for green and one for
>> blue which sends you down this rabbit hole.
>>
>>>  In addition, there's no scaling of the individual red, green and blue
>>> values by their channel's alpha. If the input were two index-color images,
>>> each of which had different alphas, the code should multiply the r, g and b
>>> values by the alphas before summing and then divide by the total alpha in
>>> the end. The alpha in this case *should* be the sum of alphas divided by
>>> the number of channels.
>>>
>>> I think alpha processing is more cumulative, done layer by layer in some
>>> defined layer order.  For a given pixel say the current output pixel value
>>> is ARGB1 and you are compositing a second image with value ARGB2 on top of
>>> it:  For the red channel the output color should be ((255 - alpha(ARGB2)) *
>>> red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / 255.  The alpha of ARGB1 is not
>>> involved.
>>>
>> I think that's a valid interpretation. I've always used (alpha(ARGB1) *
>> red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / (alpha(ARGB1) + alpha(ARGB2))
>> because I assumed the alpha indicated the
>> strength of the blending of each source. In any case, the code as it
>> stands doesn't do either of these.
>>
>>>
>>> In other words, if you add a layer that is completely opaque you no
>>> longer have to consider any of the colors or alpha values underneath it.
>>>
>>
>>> I think the bigger issue here is this code is specifically designed to
>>> composite red, green and blue image layers.  It's a special case since for
>>> a given pixel the red comes from the red layer, blue from blue layer, and
>>> green from green layer.  These layers shouldn't be completely opaque, since
>>> the colors wouldn't combine at all then or completely transparent since
>>> then they wouldn't contribute any color.  I don't think transparency is
>>> useful here.
>>>
>> So this is an argument for blending instead of layering - transparency
>> would be useful if the images were blended and treated as if on a par with
>> each other, allowing the user to emphasize one channel or the other.
>>
>>>
>>> It's also possible that a multichannel image with > 3 channels is being
>>> displayed with more color channels, namely cyan, magenta, and yellow.  The
>>> code here is designed to stop overflow, but I'm not convinced those
>>> extended color channels would combine meaningfully.
>>>
>>> Aivar
>>>
>>> In addition, there's no scaling of the individual red, green and blue
>>> values by their channel's alpha. If the input were two index-color images,
>>> each of which had different alphas, the code should multiply the r, g and b
>>> values by the alphas before summing and then divide by the total alpha in
>>> the end. The alpha in this case *should* be the sum of alphas divided by
>>> the number of channels.
>>>
>>> I think alpha processing is cumulative layer by layer.
>>>
>>> This brings up some interesting questions:
>>>
>>> 1) If the first, bottom-most layer is transparent, what color should
>>> show through?  Black, white?  Or perhaps it's best to ignore this base
>>> layer transparency.
>>>
>> Maybe the model should be that the background is white and successive
>> layers are like gel filters on top. In that case, you'd have:
>>  red = (255 - alpha(ARGB2) *(255 - red(ARGB2))/255) * red(ARGB1)
>>
>>  And maybe that points to what the true solution is. For the default, we
>> could change things so that red channel would have blue = 255 and green =
>> 255 and the first composition would change only the red channel.
>>
>>>
>>> 2) If you wanted to composite several transparent images, how do you
>>> calculate the transparency of the composite?  I'm not sure this is
>>> something we need to do.
>>>
>>> Aivar
>>>
>>>
>>> On 7/15/13 10:31 AM, Lee Kamentsky wrote:
>>>
>>>  Hi all,
>>> I'm looking at the code for net.imglib2.display.CompositeXYProjector and
>>> as I step through it, it's clear that the alpha calculation isn't being
>>> handled correctly. Here's the code as it stands now, line 190 roughly:
>>>
>>>  for ( int i = 0; i < size; i++ )
>>>  {
>>>  sourceRandomAccess.setPosition( currentPositions[ i ], dimIndex );
>>>  currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
>>>  // accumulate converted result
>>>  final int value = bi.get();
>>>  final int a = ARGBType.alpha( value );
>>>  final int r = ARGBType.red( value );
>>>  final int g = ARGBType.green( value );
>>>  final int b = ARGBType.blue( value );
>>>  aSum += a;
>>>  rSum += r;
>>>  gSum += g;
>>>  bSum += b;
>>>  }
>>>  if ( aSum > 255 )
>>>  aSum = 255;
>>>  if ( rSum > 255 )
>>>  rSum = 255;
>>>  if ( gSum > 255 )
>>>  gSum = 255;
>>>  if ( bSum > 255 )
>>>  bSum = 255;
>>>  targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum, aSum ) );
>>>
>>>  I have an ImgPlus backed by an RGB PlanarImg of UnsignedByteType and
>>> ARGBType.alpha(value) is 255 for all of them, so aSum is 765. It would
>>> appear that the correct solution would be to divide aSum by 3. In addition,
>>> there's no scaling of the individual red, green and blue values by their
>>> channel's alpha. If the input were two index-color images, each of which
>>> had different alphas, the code should multiply the r, g and b values by the
>>> alphas before summing and then divide by the total alpha in the end. The
>>> alpha in this case *should* be the sum of alphas divided by the number of
>>> channels.
>>>
>>>  However, I think the problem is deeper than that. For an RGB ImgPlus,
>>> there are three LUTs and each of them has an alpha of 255, but that alpha
>>> only applies to one of the colors in the LUT. When you're compositing
>>> images and weighing them equally, if two are black and one is white, then
>>> the result is 1/3 of the white intensity - if you translate that to red,
>>> green and blue images, the resulting intensity will be 1/3 of that desired.
>>> This might sound weird, but the only solution that works out mathematically
>>> is for the defaultLUTs in the DefaultDatasetView to use color tables that
>>> return values that are 3x those of ColorTables.RED, GREEN and BLUE.
>>> Thinking about it, I'm afraid this *is* the correct model and each channel
>>> really is 3x brighter than possible.
>>>
>>>  It took me quite a bit of back and forth to come up with the above...
>>> I hope you all understand what I'm saying and understand the problem and
>>> counter-intuitive solution and have the patience to follow it. Dscho, if
>>> you made it this far - you're the mathematician, what's your take?
>>>
>>>  --Lee
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing listImageJ-devel at imagej.nethttp://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130716/8f3460b6/attachment-0001.html>

From saalfeld at mpi-cbg.de  Tue Jul 16 07:26:27 2013
From: saalfeld at mpi-cbg.de (Stephan Saalfeld)
Date: Tue, 16 Jul 2013 14:26:27 +0200
Subject: [ImageJ-devel] Bug in creation of CompositeXYProjectors in
 DefaultDatasetView
In-Reply-To: <51E47781.4060800@wisc.edu>
References: <CAHLFyjeejg8JbidrZDyTqtLS1E7PPq=w5OU4iLmGpdox4PnP5Q@mail.gmail.com>
	<51E4387E.1050609@wisc.edu>
	<CAHLFyjdWxW_736_czjTbDJgYRJ215gw7bBkUY5nYB_phCzjPjg@mail.gmail.com>
	<51E45FA8.1050900@wisc.edu>
	<CADN69yk7Dh6esy+AfEUeyYtySbETtw0rJUUMho9a3q8DH5V-VA@mail.gmail.com>
	<51E47781.4060800@wisc.edu>
Message-ID: <1373977587.2772.51.camel@saalfeld-thinkpad>

Hi,

ImageJ1's composition is exclusively additive, and it ignores alpha
values.  I think, in the current discussion, we're mixing additive color
composition with alpha blending.  So let's try to disentangle:

Let's have 4 arbitrary RGB colors c1, c2, c3, c4.  Then, additive
composition means that

c = c1 + c2 + c3 + c4

, that's the ImageJ1 model.

If we add alpha to it we do not actually mean alpha but a weight
(normalized by 255, so 0 -> 0 and 255 -> 1.0), then

c = a1 * c1 + a2 * c2 + a3 * c3 + a4 * c4

I consider this a useful extension, but it remains unclear what to do
with the resulting alpha value.  My guess is that it does not have much
meaning and so adding it up and cropping or just setting it to 1.0
(0xff) is both fine.

The other operation is alpha blending which is the composition series:

c12 = a2 * c2 + (1 - a2) * a1 * c1,  a12 = a2 + (1 - a2) * a1
c123 = a3 * c3 + (1 - a3) * a12 * c12,  a123 = a3 + (1 - a3) * a12
c1234 = a4 * c4 + (1 - a4) * a123 * c123,  a1234 = a4 + (1 - a4) * a123

Additive composition makes little sense on top of anything but 0, alpha
composition is possible on arbitrary c0.

There are many other forms of composition possible, e.g. filtering
(multiplication), color/hue/intensity mixing, absolute or signed
differences, ...  it therefore seems a bit overstating to name either of
them THE Composition ;).

CompositeXYProjector implements the non-weighted addition as in ImageJ1
treating alpha as a fourth channel.


Speaking about projectors:  I would prefer if we had only one
2D-projector.  It is not necessary to choose which dimensions to treat
as x,y as there is Views.permute(RA[I], int, int).  To project axes
other than 0,1, we could have factory methods like
Projectors.project(RAI, int x, int y) that first permute the axes and
then project 0,1.  That has the benefit that there is no index lookup if
you really project x,y.

I also think that we do not need CompositeProjectors any longer.  I have
recently added view.composite.Composite etc. and the method
Views.collapse as a construct to achieve the desired behavior in a more
general way.  The trailing dimension of an RA[I] can be collapsed into
an (n-1)-dimensional RA[I] of Composites.  Composites can then be
converted with Converters and (Converters.convert) to get the desired
composition which then may be x,y-projected.

Of course there are many ways to achieve the same result.  I just like
this one most as I have the impression that it implements the minimum
required operations in the most generic/extensible fashion.  E.g. adding
new compositions as discussed above means writing a new Converter, no
clutter.  Please don't hesitate to prove me wrong.  E.g., I didn't
consider potential performance penalties much yet.

I'll try to find time tomorrow to make a few benchmarks.

Best,
Stephan



On Mon, 2013-07-15 at 17:28 -0500, Aivar Grislis wrote: 
> > I believe ImageJ1 treats it [RGBCMY] as additive. Look at the sample 
> > "Organ of Corti" -- the current behavior of ImageJ2 causes that sample 
> > to appear the same as it does in IJ1. Before we added the 
> > bounds-checking code, it erroneously wrapped pixel values.
> By not being additive I meant C is a secondary color composed of 
> primaries G & B, etc.  In the sense of 
> http://en.wikipedia.org/wiki/Additive_color .
> 
> Okay, "Organ of Corti" uses RGBK (and K is even worse than my example of 
> C since it has all three RGB components not just G & B) and yet it works 
> as an image.  It's useful because the areas lit up in each channel are 
> fairly distinct.  If these areas overlapped the bounds-checking code 
> would come into play in the overlapping pixels and some highlights would 
> get squashed and some colors distorted (when one component is squashed 
> but not the others).  But even if the code did a better job of combining 
> the colors of overlapping areas you'd still have visual ambiguity in 
> these areas (since eyes can't distinguish C from G + B).  So now I'm 
> thinking the code works well as is.
> > It was intended to be more general than only the cases Aivar 
> > mentioned, and instead provided additive support for *any* color table 
> > per channel you throw at it, the same as ImageJ1's CompositeImages do.
> Sure, it shouldn't crash and burn if you put Fire on one channel and Ice 
> on another but that's not usable visually unless the areas lit up in 
> each channel are distinct.  If you have a lot of overlap and you want 
> the colors to add up meaningfully you're better off sticking with 
> primary additive colors for your channel LUTs.
> 
> On 7/15/13 3:53 PM, Curtis Rueden wrote:
> > Hi all,
> >
> > > the bigger issue is RGBCMY is not an additive color system.
> >
> > I believe ImageJ1 treats it as additive. Look at the sample "Organ of 
> > Corti" -- the current behavior of ImageJ2 causes that sample to appear 
> > the same as it does in IJ1. Before we added the bounds-checking code, 
> > it erroneously wrapped pixel values.
> >
> > As for the alpha stuff, I will try to digest and reply soon but I am 
> > way too tired at this moment. I just wanted to clarify why the code is 
> > the way it is. It was intended to be more general than only the cases 
> > Aivar mentioned, and instead provided additive support for *any* color 
> > table per channel you throw at it, the same as ImageJ1's 
> > CompositeImages do.
> >
> > Regards,
> > Curtis
> >
> >
> > On Mon, Jul 15, 2013 at 3:46 PM, Aivar Grislis <grislis at wisc.edu 
> > <mailto:grislis at wisc.edu>> wrote:
> >
> >     I think CompositeXYProjector is meant to handle the following cases:
> >
> >     1) Rendering LUT images, a single converter is used. Grayscale
> >     images are included here.
> >
> >     2) Rendering RGB images, three converters are used. These use
> >     red-only, green-only, and blue-only LUTs.
> >
> >     3) I believe it's also intended to work with images with > 3
> >     channels, using C, M, and Y for the excess channels.
> >
> >     The existing code works well for cases 1 & 2.  Case 3 adds the
> >     possibility of overflow, if your red converter gives you a value
> >     of 255 for the red component but your magenta converter adds
> >     another 255.  Currently the code just limits the value to 255 in
> >     that case. Some sort of blending might work better here, but the
> >     bigger issue is RGBCMY is not an additive color system. If you see
> >     a cyan blotch you don't know if its in both the G & B channels or
> >     just the C channel.
> >
> >     Aivar
> >
> >
> >
> >     On 7/15/13 2:40 PM, Lee Kamentsky wrote:
> >>     Thanks for answering Aivar,
> >>
> >>     I think what your reply did for me is to have me take a step back
> >>     and consider what we're modeling. If you look at my replies
> >>     below, I think that the best solution is to use a model where the
> >>     background is white and each successive layer filters out some of
> >>     that background, like a gel. A layer attenuates the underlying
> >>     layer by a fraction of (1 - alpha/255 * (1 - red/255)), resulting
> >>     in no attenuation for 255 and attenuation of alpha/255 for zero.
> >>     We can then use a red converter that returns a value of 255 for
> >>     the blue and green channels and the model and math work correctly.
> >>
> >>     On Mon, Jul 15, 2013 at 1:59 PM, Aivar Grislis <grislis at wisc.edu
> >>     <mailto:grislis at wisc.edu>> wrote:
> >>
> >>>         I have an ImgPlus backed by an RGB PlanarImg of
> >>>         UnsignedByteType and ARGBType.alpha(value) is 255 for all of
> >>>         them, so aSum is 765. It would appear that the correct
> >>>         solution would be to divide aSum by 3.
> >>         Isn't it unusual to define an alpha for each color component,
> >>         generally you have a single A associated with a combined
> >>         RGB?  So averaging the three alphas might make sense here,
> >>         because I think they should all be the same value.
> >>
> >>     I think you're right, the model always is that each pixel has an
> >>     alpha value that applies to R, G and B. The image I was using was
> >>     the Clown example image. DefaultDatasetView.initializeView
> >>     constructs three RealLUTConverters for the projector, one for
> >>     red, one for green and one for blue which sends you down this
> >>     rabbit hole.
> >>
> >>>         In addition, there's no scaling of the individual red, green
> >>>         and blue values by their channel's alpha. If the input were
> >>>         two index-color images, each of which had different alphas,
> >>>         the code should multiply the r, g and b values by the alphas
> >>>         before summing and then divide by the total alpha in the
> >>>         end. The alpha in this case *should* be the sum of alphas
> >>>         divided by the number of channels.
> >>         I think alpha processing is more cumulative, done layer by
> >>         layer in some defined layer order.  For a given pixel say the
> >>         current output pixel value is ARGB1 and you are compositing a
> >>         second image with value ARGB2 on top of it:  For the red
> >>         channel the output color should be ((255 - alpha(ARGB2)) *
> >>         red(ARGB1) + alpha(ARGB2) * red(ARGB2)) / 255.  The alpha of
> >>         ARGB1 is not involved.
> >>
> >>     I think that's a valid interpretation. I've always used
> >>     (alpha(ARGB1) * red(ARGB1) + alpha(ARGB2) * red(ARGB2)) /
> >>     (alpha(ARGB1) + alpha(ARGB2)) because I assumed the alpha
> >>     indicated the
> >>     strength of the blending of each source. In any case, the code as
> >>     it stands doesn't do either of these.
> >>
> >>
> >>         In other words, if you add a layer that is completely opaque
> >>         you no longer have to consider any of the colors or alpha
> >>         values underneath it.
> >>
> >>
> >>         I think the bigger issue here is this code is specifically
> >>         designed to composite red, green and blue image layers.  It's
> >>         a special case since for a given pixel the red comes from the
> >>         red layer, blue from blue layer, and green from green layer. 
> >>         These layers shouldn't be completely opaque, since the colors
> >>         wouldn't combine at all then or completely transparent since
> >>         then they wouldn't contribute any color.  I don't think
> >>         transparency is useful here.
> >>
> >>     So this is an argument for blending instead of layering -
> >>     transparency would be useful if the images were blended and
> >>     treated as if on a par with each other, allowing the user to
> >>     emphasize one channel or the other.
> >>
> >>
> >>         It's also possible that a multichannel image with > 3
> >>         channels is being displayed with more color channels, namely
> >>         cyan, magenta, and yellow.  The code here is designed to stop
> >>         overflow, but I'm not convinced those extended color channels
> >>         would combine meaningfully.
> >>
> >>         Aivar
> >>
> >>>         In addition, there's no scaling of the individual red, green
> >>>         and blue values by their channel's alpha. If the input were
> >>>         two index-color images, each of which had different alphas,
> >>>         the code should multiply the r, g and b values by the alphas
> >>>         before summing and then divide by the total alpha in the
> >>>         end. The alpha in this case *should* be the sum of alphas
> >>>         divided by the number of channels.
> >>         I think alpha processing is cumulative layer by layer.
> >>
> >>         This brings up some interesting questions:
> >>
> >>         1) If the first, bottom-most layer is transparent, what color
> >>         should show through?  Black, white?  Or perhaps it's best to
> >>         ignore this base layer transparency.
> >>
> >>     Maybe the model should be that the background is white and
> >>     successive layers are like gel filters on top. In that case,
> >>     you'd have:
> >>     red = (255 - alpha(ARGB2) *(255 - red(ARGB2))/255) * red(ARGB1)
> >>
> >>     And maybe that points to what the true solution is. For the
> >>     default, we could change things so that red channel would have
> >>     blue = 255 and green = 255 and the first composition would change
> >>     only the red channel.
> >>
> >>
> >>         2) If you wanted to composite several transparent images, how
> >>         do you calculate the transparency of the composite?  I'm not
> >>         sure this is something we need to do.
> >>
> >>         Aivar
> >>
> >>
> >>         On 7/15/13 10:31 AM, Lee Kamentsky wrote:
> >>>         Hi all,
> >>>         I'm looking at the code for
> >>>         net.imglib2.display.CompositeXYProjector and as I step
> >>>         through it, it's clear that the alpha calculation isn't
> >>>         being handled correctly. Here's the code as it stands now,
> >>>         line 190 roughly:
> >>>
> >>>         for ( int i = 0; i < size; i++ )
> >>>         {
> >>>         sourceRandomAccess.setPosition( currentPositions[ i ],
> >>>         dimIndex );
> >>>         currentConverters[ i ].convert( sourceRandomAccess.get(), bi );
> >>>         // accumulate converted result
> >>>         final int value = bi.get();
> >>>         final int a = ARGBType.alpha( value );
> >>>         final int r = ARGBType.red( value );
> >>>         final int g = ARGBType.green( value );
> >>>         final int b = ARGBType.blue( value );
> >>>         aSum += a;
> >>>         rSum += r;
> >>>         gSum += g;
> >>>         bSum += b;
> >>>         }
> >>>         if ( aSum > 255 )
> >>>         aSum = 255;
> >>>         if ( rSum > 255 )
> >>>         rSum = 255;
> >>>         if ( gSum > 255 )
> >>>         gSum = 255;
> >>>         if ( bSum > 255 )
> >>>         bSum = 255;
> >>>         targetCursor.get().set( ARGBType.rgba( rSum, gSum, bSum,
> >>>         aSum ) );
> >>>
> >>>         I have an ImgPlus backed by an RGB PlanarImg of
> >>>         UnsignedByteType and ARGBType.alpha(value) is 255 for all of
> >>>         them, so aSum is 765. It would appear that the correct
> >>>         solution would be to divide aSum by 3. In addition, there's
> >>>         no scaling of the individual red, green and blue values by
> >>>         their channel's alpha. If the input were two index-color
> >>>         images, each of which had different alphas, the code should
> >>>         multiply the r, g and b values by the alphas before summing
> >>>         and then divide by the total alpha in the end. The alpha in
> >>>         this case *should* be the sum of alphas divided by the
> >>>         number of channels.
> >>>
> >>>         However, I think the problem is deeper than that. For an RGB
> >>>         ImgPlus, there are three LUTs and each of them has an alpha
> >>>         of 255, but that alpha only applies to one of the colors in
> >>>         the LUT. When you're compositing images and weighing them
> >>>         equally, if two are black and one is white, then the result
> >>>         is 1/3 of the white intensity - if you translate that to
> >>>         red, green and blue images, the resulting intensity will be
> >>>         1/3 of that desired. This might sound weird, but the only
> >>>         solution that works out mathematically is for the
> >>>         defaultLUTs in the DefaultDatasetView to use color tables
> >>>         that return values that are 3x those of ColorTables.RED,
> >>>         GREEN and BLUE. Thinking about it, I'm afraid this *is* the
> >>>         correct model and each channel really is 3x brighter than
> >>>         possible.
> >>>
> >>>         It took me quite a bit of back and forth to come up with the
> >>>         above... I hope you all understand what I'm saying and
> >>>         understand the problem and counter-intuitive solution and
> >>>         have the patience to follow it. Dscho, if you made it this
> >>>         far - you're the mathematician, what's your take?
> >>>
> >>>         --Lee
> >>>
> >>>
> >>>         _______________________________________________
> >>>         ImageJ-devel mailing list
> >>>         ImageJ-devel at imagej.net  <mailto:ImageJ-devel at imagej.net>
> >>>         http://imagej.net/mailman/listinfo/imagej-devel
> >>
> >>
> >>         _______________________________________________
> >>         ImageJ-devel mailing list
> >>         ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
> >>         http://imagej.net/mailman/listinfo/imagej-devel
> >>
> >>
> >
> >
> >     _______________________________________________
> >     ImageJ-devel mailing list
> >     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
> >     http://imagej.net/mailman/listinfo/imagej-devel
> >
> >
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel



From jonas at ogaard.no  Wed Jul 17 06:04:29 2013
From: jonas at ogaard.no (=?UTF-8?Q?Jonas_=C3=98gaard?=)
Date: Wed, 17 Jul 2013 11:04:29 +0000 (UTC)
Subject: [ImageJ-devel] Invitation to connect on LinkedIn
Message-ID: <1571486155.1674506.1374059069683.JavaMail.app@ela4-bed78.prod>

LinkedIn
------------



ImageJ,

I'd like to add you to my professional network on LinkedIn.

- Jonas

Jonas ?gaard
Research Assistant at Oslo University Hospital (RH)
Oslo Area, Norway

Confirm that you know Jonas ?gaard:
https://www.linkedin.com/e/lc9b40-hj8fajmi-3y/isd/15053962420/ib7U58kp/?hs=false&tok=1vkrPIPB3Us5Q1

--
You are receiving Invitation to Connect emails. Click to unsubscribe:
http://www.linkedin.com/e/lc9b40-hj8fajmi-3y/xTwfwYjwnoQTBw0Og6ZKzAb2ngKXbHLERe7u/goo/imagej-devel%40imagej%2Enet/20061/I5012768180_1/?hs=false&tok=1tc73WadfUs5Q1

(c) 2012 LinkedIn Corporation. 2029 Stierlin Ct, Mountain View, CA 94043, USA.


  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130717/57b5eb3a/attachment.html>

From mohammedtleis at hotmail.com  Fri Jul 19 08:37:38 2013
From: mohammedtleis at hotmail.com (Mohamed Tleis)
Date: Fri, 19 Jul 2013 15:37:38 +0200
Subject: [ImageJ-devel] IOService changed
Message-ID: <BLU0-SMTP1718028FAFF36F1418FC190A2630@phx.gbl>

Dear Developers,

In you last update, you changed the IOService, and now it is not 
possible to use the ij.io().loadDataset method. the new ij.io().open 
method returns an object that cannot be cast into Dataset. Would you 
show us a little example on how to open a Dataset now?

Best Regards,
Mohamed Tleis


From leek at broadinstitute.org  Fri Jul 19 09:11:34 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Fri, 19 Jul 2013 10:11:34 -0400
Subject: [ImageJ-devel] Tables / TableDisplays / ResultsTables as input
	parameters
Message-ID: <CAHLFyjf_D15wubOsNJgLtujgRepQeewYdj=GjSFrwfkN=o-5=Q@mail.gmail.com>

Hi all,
I have a command plugin that needs a table as an input parameter. There are
plugins in the code base that take tables as output parameters (e.g.
imagej.core.commands.display.ShowLUTAsTable), but I can't find an example
of one as an input parameter. A ResultsTable is used as an output parameter
in ShowLUTAsTable; an alternate choice might be to use a TableDisplay
instead. Commands use ImageDisplay as an input - it would seem symmetrical
to use TableDisplay for tables. I've tried using TableDisplay as an input
and it works adequately, but I'd like to conform to the standard and avoid
creating two ways of asking for table inputs and outputs.

The problem with using ResultsTable as an input is that it's not registered
in the ObjectService. I think the situation is simpler than for Data
objects which have reference counts. The controlled type of a Display<T> is
wholly owned by the display, so no reference count is needed and the Table
can be added and removed from the ObjectService as it's added or removed
from the Display via ObjectCreated and ObjectDeleted events. Perhaps this
could be done in AbstractDisplay and be similarly applied to views? I guess
you could sign me up for the work since I'll end up using and testing it.

Alternatively, I am fine with using TableDisplay as input and ResultsTable
as output, although future developers might suffer from the ambiguous
nature of TableDisplay - which of the tables should be used for an
operation if there are more than one? I think using TableDisplay as input
and output is the best choice if ResultsTables aren't added to the
ObjectService and existing plugins with ResultsTable outputs should be
modified to output TableDisplay instead so that all ImageJ object parameter
inputs and outputs can be fetched using the ObjectService.

--Lee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130719/2a00f1b2/attachment.html>

From schindelin at wisc.edu  Fri Jul 19 10:54:04 2013
From: schindelin at wisc.edu (Johannes Schindelin)
Date: Fri, 19 Jul 2013 17:54:04 +0200 (CEST)
Subject: [ImageJ-devel] IOService changed
In-Reply-To: <BLU0-SMTP1718028FAFF36F1418FC190A2630@phx.gbl>
References: <BLU0-SMTP1718028FAFF36F1418FC190A2630@phx.gbl>
Message-ID: <alpine.DEB.1.00.1307191746440.24252@s15462909.onlinehome-server.info>

Hi Mohamed,

On Fri, 19 Jul 2013, Mohamed Tleis wrote:

> In you last update, you changed the IOService, and now it is not
> possible to use the ij.io().loadDataset method. the new ij.io().open
> method returns an object that cannot be cast into Dataset. Would you
> show us a little example on how to open a Dataset now?

Please note that the I/O part of ImageJ2 in particular is still in heavy
development mode. You need to expect it to change a lot.

Now, to the IOService in particular: if you expect it to load only Dataset
instances, you use the wrong service. Remember, ImageJ2 also wants to open
macros and scripts, and result tables, and basically a *lot* on top of
images. That is why the open() method now returns an object.

If you *know* that you want to open an image (and you need to open it
yourself rather than being nice and asking the user to open the image or
create it or obtain in any way they want rather than the way you want them
to) use the ImgOpener class of SCIFIO:
http://jenkins.imagej.net/view/SCIFIO/job/SCIFIO-javadoc/javadoc/io/scif/img/ImgOpener.html

However, I strongly suggest that you try to make your plugin as flexible
as possible by stating that you want a Dataset as a @Parameter instead of
forcing the user to store the image as a file and then read it back.

Ciao,
Johannes


From ctrueden at wisc.edu  Fri Jul 19 12:17:32 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 19 Jul 2013 12:17:32 -0500
Subject: [ImageJ-devel] IOService changed
In-Reply-To: <alpine.DEB.1.00.1307191746440.24252@s15462909.onlinehome-server.info>
References: <BLU0-SMTP1718028FAFF36F1418FC190A2630@phx.gbl>
	<alpine.DEB.1.00.1307191746440.24252@s15462909.onlinehome-server.info>
Message-ID: <CADN69yneibrtefo6trgmSqGXQ930u9XGKJoAOnZGAbvNiz8xDw@mail.gmail.com>

Hi Mohamed,

> In you last update, you changed the IOService, and now it is not
> possible to use the ij.io().loadDataset method. the new ij.io().open
> method returns an object that cannot be cast into Dataset. Would you
> show us a little example on how to open a Dataset now?

The method does still exist, but moved to DatasetService:

    ij.dataset().open(String)

It still returns a Dataset (so no casting is necessary), but now throws
only IOException instead of those ImgLib2-specific exceptions.

As Johannes said, the idea is that ij.io().open is now more general purpose
("open something") whereas other individual services are used to open their
specific things. So of course DatasetService can open Datasets. And the
LUTService can open ColorTables (method "loadLUT" probably needs to be
renamed to "open" there), and the TextService can open text files.

I have also updated the tutorials accordingly, in case that helps. Please
let us know of any problems with it!

Regards,
Curtis

On Fri, Jul 19, 2013 at 10:54 AM, Johannes Schindelin
<schindelin at wisc.edu>wrote:

> Hi Mohamed,
>
> On Fri, 19 Jul 2013, Mohamed Tleis wrote:
>
> > In you last update, you changed the IOService, and now it is not
> > possible to use the ij.io().loadDataset method. the new ij.io().open
> > method returns an object that cannot be cast into Dataset. Would you
> > show us a little example on how to open a Dataset now?
>
> Please note that the I/O part of ImageJ2 in particular is still in heavy
> development mode. You need to expect it to change a lot.
>
> Now, to the IOService in particular: if you expect it to load only Dataset
> instances, you use the wrong service. Remember, ImageJ2 also wants to open
> macros and scripts, and result tables, and basically a *lot* on top of
> images. That is why the open() method now returns an object.
>
> If you *know* that you want to open an image (and you need to open it
> yourself rather than being nice and asking the user to open the image or
> create it or obtain in any way they want rather than the way you want them
> to) use the ImgOpener class of SCIFIO:
>
> http://jenkins.imagej.net/view/SCIFIO/job/SCIFIO-javadoc/javadoc/io/scif/img/ImgOpener.html
>
> However, I strongly suggest that you try to make your plugin as flexible
> as possible by stating that you want a Dataset as a @Parameter instead of
> forcing the user to store the image as a file and then read it back.
>
> Ciao,
> Johannes
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130719/340f42a0/attachment.html>

From mohammedtleis at hotmail.com  Sat Jul 20 11:53:07 2013
From: mohammedtleis at hotmail.com (Mohamed Tleis)
Date: Sat, 20 Jul 2013 18:53:07 +0200
Subject: [ImageJ-devel] IOService changed
In-Reply-To: <51EAC01C.8050908@hotmail.com>
References: <51EAC01C.8050908@hotmail.com>
Message-ID: <BLU0-SMTP17308763C3D49B9C9763062A26C0@phx.gbl>



Thank you Johannes and Curtis,

> The method does still exist, but moved to DatasetService:
>
>     ij.dataset().open(String)
>
> It still returns a Dataset (so no casting is necessary), but now 
> throws only IOException instead of those ImgLib2-specific exceptions.
That is good news.
Off-topic question: I was wondering if I can search the ij2 source for 
all methods that returns "Dataset" variable for example. If so, that 
would make things easier whenever I face a similar problem, currently I 
can only search for Class names.
>
> I have also updated the tutorials accordingly, in case that helps. 
> Please let us know of any problems with it!
>
Thanks again, these are wonderful tutorials, and I hope you would have 
time to release some more in the future.
> Regards,
> Curtis
>

>
>     If you *know* that you want to open an image (and you need to open it
>     yourself rather than being nice and asking the user to open the
>     image or
>     create it or obtain in any way they want rather than the way you
>     want them
>     to) use the ImgOpener class of SCIFIO:
>     http://jenkins.imagej.net/view/SCIFIO/job/SCIFIO-javadoc/javadoc/io/scif/img/ImgOpener.html
>
I will try the ImgOpener later, but for now I will just use the 
dataset().open from the dataset() service as I am already testing with 
Dataset.
>
>     However, I strongly suggest that you try to make your plugin as
>     flexible
>     as possible by stating that you want a Dataset as a @Parameter
>     instead of
>     forcing the user to store the image as a file and then read it back.
>
In this regard I am loading the image directly for two benefits, first 
when I am testing my code I don't have to choose manually the image each 
time. Second, to load and process a set of images automatically.

>     Ciao,
>     Johannes
>
>     _______________________________________________
>     ImageJ-devel mailing list
>     ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
>     http://imagej.net/mailman/listinfo/imagej-devel
>
>
Thank you again, keep the good work going on :)

Best Regards,
Mohamed Tleis


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130720/5a291acb/attachment.html>

From schindelin at wisc.edu  Sun Jul 21 21:41:21 2013
From: schindelin at wisc.edu (Johannes Schindelin)
Date: Mon, 22 Jul 2013 04:41:21 +0200 (CEST)
Subject: [ImageJ-devel] MacOSX platform service issues
Message-ID: <alpine.DEB.1.00.1307220130040.24252@s15462909.onlinehome-server.info>

Hi Barry,

thanks for bringing the issue to my attention that my recent fix for Fiji
(which now relies on ij-legacy to do the legacy patching in the hope that
we can stabilize the code better that has been moved from fiji-compat to
reconcile the Fiji and ImageJ2 legacy patches) broke the MacOSX-specific
platform service startup.

The issue is that when dropping a file (in particular, an image file) onto
the Fiji (or for that matter, ImageJ) icon, contrary to widespread belief,
MacOSX does *not* pass the path of said file to the program to-be-started
via the command-line. Instead, it sends a platform-specific message that
applications are expected to consume in a special, MacOSX-specific
handler.

You could call that a Cupertino time tax.

Now, ImageJ 1.x solves this by adding an ApplicationListener. It has to --
despite fact that the ApplicationListener is deprecated in very recent
MacOSX versions -- to maintain backwards-compatibility with the last
MacOSX versions supporting PowerPC-based computers.

ImageJ2, in contrast, targets MacOSX 10.6 or newer, so it uses the new
method -- which astonishingly does not allow adding ApplicationListeners,
hence the problem you observed where the MacAdapter of ImageJ 1.x
registering itself prevents ImageJ2 from starting up.

The topic branch I started is designed to help the issue for 10.6 and
newer by having a custom solution for the legacy mode: it registers an
event listener and reacts upon the -- now platform-independent -- events.

The only thing I need to change on that branch is to ensure that the
MacOSX-specific part of the platform service starts up correctly and
handles the MacOSX-specific event handling, delegating to the
platform-independent event service of ImageJ2.

After that, I still have to ascertain that things work correctly with
MacOSX 10.5, the oldest MacOSX version I care to support with Fiji (10.4
is too old because Apple limited the Java versions available for that
MacOSX version to Java 1.4 -- which is really, really too limiting, not to
mention old and slow).

In essence: I ask you to have a little more patience while I work out a
fix.

Ciao,
Johannes


From bdezonia at wisc.edu  Mon Jul 22 09:41:21 2013
From: bdezonia at wisc.edu (Barry DeZonia)
Date: Mon, 22 Jul 2013 09:41:21 -0500
Subject: [ImageJ-devel] MacOSX platform service issues
In-Reply-To: <alpine.DEB.1.00.1307220130040.24252@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1307220130040.24252@s15462909.onlinehome-server.info>
Message-ID: <CAKcvfuRH+UxgMJyMRa-bJk-QZP8t44P+PAxUF12GsFGX_oZP+A@mail.gmail.com>

Sure thing Johannes. Thanks.


On Sun, Jul 21, 2013 at 9:41 PM, Johannes Schindelin <schindelin at wisc.edu>wrote:

> Hi Barry,
>
> thanks for bringing the issue to my attention that my recent fix for Fiji
> (which now relies on ij-legacy to do the legacy patching in the hope that
> we can stabilize the code better that has been moved from fiji-compat to
> reconcile the Fiji and ImageJ2 legacy patches) broke the MacOSX-specific
> platform service startup.
>
> The issue is that when dropping a file (in particular, an image file) onto
> the Fiji (or for that matter, ImageJ) icon, contrary to widespread belief,
> MacOSX does *not* pass the path of said file to the program to-be-started
> via the command-line. Instead, it sends a platform-specific message that
> applications are expected to consume in a special, MacOSX-specific
> handler.
>
> You could call that a Cupertino time tax.
>
> Now, ImageJ 1.x solves this by adding an ApplicationListener. It has to --
> despite fact that the ApplicationListener is deprecated in very recent
> MacOSX versions -- to maintain backwards-compatibility with the last
> MacOSX versions supporting PowerPC-based computers.
>
> ImageJ2, in contrast, targets MacOSX 10.6 or newer, so it uses the new
> method -- which astonishingly does not allow adding ApplicationListeners,
> hence the problem you observed where the MacAdapter of ImageJ 1.x
> registering itself prevents ImageJ2 from starting up.
>
> The topic branch I started is designed to help the issue for 10.6 and
> newer by having a custom solution for the legacy mode: it registers an
> event listener and reacts upon the -- now platform-independent -- events.
>
> The only thing I need to change on that branch is to ensure that the
> MacOSX-specific part of the platform service starts up correctly and
> handles the MacOSX-specific event handling, delegating to the
> platform-independent event service of ImageJ2.
>
> After that, I still have to ascertain that things work correctly with
> MacOSX 10.5, the oldest MacOSX version I care to support with Fiji (10.4
> is too old because Apple limited the Java versions available for that
> MacOSX version to Java 1.4 -- which is really, really too limiting, not to
> mention old and slow).
>
> In essence: I ask you to have a little more patience while I work out a
> fix.
>
> Ciao,
> Johannes
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130722/4aeb22ce/attachment.html>

From ctrueden at wisc.edu  Mon Jul 22 12:52:07 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 22 Jul 2013 12:52:07 -0500
Subject: [ImageJ-devel] IOService changed
In-Reply-To: <BLU0-SMTP17308763C3D49B9C9763062A26C0@phx.gbl>
References: <51EAC01C.8050908@hotmail.com>
	<BLU0-SMTP17308763C3D49B9C9763062A26C0@phx.gbl>
Message-ID: <CADN69ynpffEzArwFqNeOKyiuOt6OaEVAeJ_uusA_RS6WJTshAQ@mail.gmail.com>

Hi Mohamed,

> I was wondering if I can search the ij2 source for all methods that
> returns "Dataset" variable for example. If so, that would make things
> easier whenever I face a similar problem, currently I can only search
> for Class names.

I do not know if this is possible using an IDE. (You can search for all
Dataset references but that would be too many hits, here.)

However, Unix command line tools are your friend. I highly advise learning
them, as they will give your productivity a big boost. The git command line
tool also has a lot of nice things built in; especially on Windows that may
work well for you.

Here's how I found a list of places in the code that return a Dataset:

    git grep 'public Dataset '

Note the space after "Dataset" to ensure it doesn't match e.g.
DatasetService.

This returns 43 hits, which is a lot to wade through. But in your case, you
probably knew you wanted a *Service* with a method that returns a Dataset,
so you can chain them:

    git grep 'public Dataset ' | grep Service.java

Now we're down to 9 hits, which is promising. If we also limit ourselves to
the name of the method we want (in this case, "open"):

    git grep 'public Dataset ' | grep Service.java | grep open

We are down to a single hit! Success!

Of course, this does not search for any methods that return sub-types of
Dataset; that gets more complicated and IDE support for that would be most
welcome. Perhaps there is a plugin for it, but it is not something I
personally have needed much in the past.

Regards,
Curtis


On Sat, Jul 20, 2013 at 11:53 AM, Mohamed Tleis
<mohammedtleis at hotmail.com>wrote:

>
>
> Thank you Johannes and Curtis,
>
>  The method does still exist, but moved to DatasetService:
>
>      ij.dataset().open(String)
>
>  It still returns a Dataset (so no casting is necessary), but now throws
> only IOException instead of those ImgLib2-specific exceptions.
>
> That is good news.
> Off-topic question: I was wondering if I can search the ij2 source for all
> methods that returns "Dataset" variable for example. If so, that would make
> things easier whenever I face a similar problem, currently I can only
> search for Class names.
>
>
>  I have also updated the tutorials accordingly, in case that helps. Please
> let us know of any problems with it!
>
>   Thanks again, these are wonderful tutorials, and I hope you would have
> time to release some more in the future.
>
>   Regards,
> Curtis
>
>
>
>> If you *know* that you want to open an image (and you need to open it
>> yourself rather than being nice and asking the user to open the image or
>> create it or obtain in any way they want rather than the way you want them
>> to) use the ImgOpener class of SCIFIO:
>>
>> http://jenkins.imagej.net/view/SCIFIO/job/SCIFIO-javadoc/javadoc/io/scif/img/ImgOpener.html
>>
>>    I will try the ImgOpener later, but for now I will just use the
> dataset().open from the dataset() service as I am already testing with
> Dataset.
>
>    However, I strongly suggest that you try to make your plugin as
>> flexible
>> as possible by stating that you want a Dataset as a @Parameter instead of
>> forcing the user to store the image as a file and then read it back.
>>
>>    In this regard I am loading the image directly for two benefits,
> first when I am testing my code I don't have to choose manually the image
> each time. Second, to load and process a set of images automatically.
>
>    Ciao,
>> Johannes
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
>   Thank you again, keep the good work going on :)
>
> Best Regards,
> Mohamed Tleis
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130722/1efd8ae9/attachment.html>

From bugzilla at fiji.sc  Wed Jul 24 14:39:27 2013
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Wed, 24 Jul 2013 19:39:27 +0000
Subject: [ImageJ-devel] [Bug 639] New: ImageJ2 with QuickPalm plugin
Message-ID: <bug-639-194@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=639

            Bug ID: 639
           Summary: ImageJ2 with QuickPalm plugin
    Classification: Unclassified
           Product: Fiji
           Version: unspecified
          Hardware: Other
                OS: Linux
            Status: NEW
          Severity: critical
          Priority: P5
         Component: ImageJ2
          Assignee: imagej-devel at imagej.net
          Reporter: oo370 at nyu.edu
          Deadline: 2013-07-29

Created attachment 111
  --> http://fiji.sc/bugzilla/attachment.cgi?id=111&action=edit
simple macros for testing ImageJ2 with QuickPALM plug-in on the cluster

The resulting images after processing them with ImageJ2 together with QuickPalm
plugin is not the same as images processed with ImageJ together with QuickPalm.
Generally, I have small macros (see attachment) which takes a multi-framed
image, splits the channels and then analyses each channel separately with the
quickPALM plugin. After analysis and reconstruction I save the resulting
images.

I have run this macros both on ImageJ-win64 version of the ImageJ2 (beta
version), and the same macros on ImageJ-linux64 (also beta version). The
resulting images after reconstruction are different while I would expect them
to be identical. 

Also ImageJ-linux64 gives me a warning in the command line: "multichannel image
is required". While ImageJ-win64.exe version of ImageJ2 does not complain and
have the same results as ImageJ1 version.

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130724/dbccffcd/attachment.html>

From grislis at wisc.edu  Thu Jul 25 11:51:41 2013
From: grislis at wisc.edu (Aivar Grislis)
Date: Thu, 25 Jul 2013 11:51:41 -0500
Subject: [ImageJ-devel] Threshold command in IJ2
Message-ID: <51F1579D.4070003@wisc.edu>

In the Threshold command we should support threshold methods that 
automatically exclude both low and high values.

All of the current threshold methods separate figure from background by 
coming up with a single threshold value. The figure is then determined 
to be pixels with values from the minimum value to the threshold value 
and background threshold value to maximum value.  If the 'dark 
background' box is checked these ranges are swapped.  In the user 
interface and internal representation rather than having a single 
threshold value there is a minimum and maximum range that the user can 
tweak.

As an example, for images that consist of data for each pixel that is 
expected to have a near-normal distribution, such as fitted lifetime 
images, it's useful to have statistics-based threshold methods that 
exclude outliers based on mean and standard deviation or else median and 
quartile ranges.  (I like to use Tukey's rule: 
http://www.edgarstat.com/tukeys_outliers_help.cfm )  Are there any other 
useful algorithms we could implement to exclude low and high values in 
ordinary images?

Thanks,
Aivar



From leek at broadinstitute.org  Thu Jul 25 12:13:57 2013
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Thu, 25 Jul 2013 13:13:57 -0400
Subject: [ImageJ-devel] Threshold command in IJ2
In-Reply-To: <51F1579D.4070003@wisc.edu>
References: <51F1579D.4070003@wisc.edu>
Message-ID: <CAHLFyjdkUdLO8cAH7xxPbOGG=0qXF17rVMSU96qPCgt2KES4qg@mail.gmail.com>

We ran into the same requirement here. We had brightfield images where the
background was uniform and the foreground was lighter or darker. A simple
median worked well to stabily identify the background, but I was not able
to come up with a good way to identify the high and low cutoffs. My first
guess was to separate the pixel values into those that were above the
median and those that were below and then use the Otsu algorithm on each
group of pixel values to find the low and high cutoffs; that overestimated
the background for my images. In the end, we just used a fixed increment
and decrement from the median which worked well enough for our images. My
instinct is that a similar technique should work and should be more
reliable than something based on percentiles - the assumption made by
percentiles is that there are a certain number of background pixels and
that will vary from one image to the next.

I think a successful method might make a good paper, haven't done a
literature search of the problem though, maybe something is out there.

--Lee


On Thu, Jul 25, 2013 at 12:51 PM, Aivar Grislis <grislis at wisc.edu> wrote:

> In the Threshold command we should support threshold methods that
> automatically exclude both low and high values.
>
> All of the current threshold methods separate figure from background by
> coming up with a single threshold value. The figure is then determined to
> be pixels with values from the minimum value to the threshold value and
> background threshold value to maximum value.  If the 'dark background' box
> is checked these ranges are swapped.  In the user interface and internal
> representation rather than having a single threshold value there is a
> minimum and maximum range that the user can tweak.
>
> As an example, for images that consist of data for each pixel that is
> expected to have a near-normal distribution, such as fitted lifetime
> images, it's useful to have statistics-based threshold methods that exclude
> outliers based on mean and standard deviation or else median and quartile
> ranges.  (I like to use Tukey's rule: http://www.edgarstat.com/**
> tukeys_outliers_help.cfm<http://www.edgarstat.com/tukeys_outliers_help.cfm>)  Are there any other useful algorithms we could implement to exclude low
> and high values in ordinary images?
>
> Thanks,
> Aivar
>
>
> ______________________________**_________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/**listinfo/imagej-devel<http://imagej.net/mailman/listinfo/imagej-devel>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130725/7160903d/attachment.html>

From ctrueden at wisc.edu  Tue Jul 30 10:28:09 2013
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 30 Jul 2013 10:28:09 -0500
Subject: [ImageJ-devel] [ImgLib2] The img-metadata branch
Message-ID: <CADN69ykbTxxsr6z6RcEqbb3hRpXgrOCZcw9700_zSFOCPNO_kg@mail.gmail.com>

Hi all, and especially ImgLib2 developers,

At the ImgLib2 hackathon this past May, I started work on a branch to make
it easier to attach per-axis metadata to N-dimensional spaces. I think this
branch is finally in a merge-worthy state.

It introduces an AnnotatedSpace extension to EuclideanSpace which lets you
attach on Axis per dimension. It defines TypedSpace, which declares an
AxisType for each Axis, as well as a CalibratedSpace, which in addition
adds a calibration value and optional unit name to the mix.

This approach is much more flexible than the previous CalibratedSpace,
which has been renamed to OldCalibratedSpace and deprecated until we can
fully transition all the code away from it. In particular, having the axes
attached to the space directly will allows Views to maintain the axis
metadata without much additional work.

Note that these new classes are defined in the net.imglib2.meta component,
which was split into a separate module called imglib2-meta. The ImgPlus
class moved there, too (it should have been there all along). So merging
this branch will cause some code breakage, but all should be
straightforward to fix: rename usages of CalibratedSpace to
OldCalibratedSpace, and rename the ImgPlus package from net.imglib2.img to
net.imglib2.meta.

Going forward, we can also add a CalibratedViews class to the
net.imglib2.meta package which has some additional features such as
exposing resampled Imgs from a source CalibratedSpace into a target one
based on the units used. We can lean on a units library for this, as we
have discussed in the past.

If interested, you can browse the branch at:
https://github.com/imagej/imglib/compare/img-metadata

If no one objects, I will merge the img-metadata branch to master on
Thursday.

Regards,
Curtis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130730/d492b350/attachment.html>

From mohammedtleis at hotmail.com  Tue Jul 30 11:33:38 2013
From: mohammedtleis at hotmail.com (Mohamed Tleis)
Date: Tue, 30 Jul 2013 18:33:38 +0200
Subject: [ImageJ-devel] opening a tif file problem
Message-ID: <BLU0-SMTP148AD5634FBC0FA5B401F59A2560@phx.gbl>

Dear Developers,

I wonder whether this is important for you.

Before the latest updates, I used to be able to open tif files with ij2. 
Now I am getting an error (see below for the warnings I get when loading 
ij launcher and the error after trying to open a "tif" file).

Note that If I switch to Legacy mode, open the image, then back into 
modern mode , things work fine.

However, I still am wondering if the Invalid services in the warning 
messages is something specific to my machine. Am I missing some package?

run:
...
log4j:WARN No appenders could be found for logger (io.scif.Format).
log4j:WARN Please initialize the log4j system properly.
...
[WARNING] Invalid service: imagej.data.lut.DefaultLUTService
....
[WARNING] Overridden plugin ij.plugin.AboutBox is blacklisted
[WARNING] Overridden plugin ij.plugin.Commands("quit") is blacklisted
...
[WARNING] Invalid service: io.scif.services.LuraWaveServiceImpl
[WARNING] Invalid service: ome.xml.services.DefaultOMEXMLMetadataService
[WARNING] Invalid service: ome.xml.services.OMEXMLServiceImpl
...
// Trying to open a tif file
[ERROR] Module threw exception
java.lang.NullPointerException
     at imagej.data.lut.io.LUTIOPlugin.supportsOpen(LUTIOPlugin.java:66)
     at imagej.io.DefaultIOService.getOpener(DefaultIOService.java:68)
     at imagej.io.DefaultIOService.open(DefaultIOService.java:87)
     at imagej.core.commands.io.OpenFile.run(OpenFile.java:87)
     at imagej.command.CommandModule.run(CommandModule.java:163)
     at imagej.module.ModuleRunner.run(ModuleRunner.java:169)
     at imagej.module.ModuleRunner.call(ModuleRunner.java:126)
     at imagej.module.ModuleRunner.call(ModuleRunner.java:67)
     at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
     at java.util.concurrent.FutureTask.run(FutureTask.java:166)
     at 
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
     at 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
     at java.lang.Thread.run(Thread.java:722)

Best Regards,
Mohamed Tleis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20130730/cde1b469/attachment.html>

