From dan at chalkie.org.uk  Thu Aug  6 03:29:46 2015
From: dan at chalkie.org.uk (Daniel White)
Date: Thu, 6 Aug 2015 10:29:46 +0200
Subject: [ImageJ-devel] unit test type case error - Generic Types
Message-ID: <CAGskW5N6yp=95yzZmwR7rHvYdGo4PKc+b02+=D=KfW2o-=0NZw@mail.gmail.com>

Hi Folks,
I'm trying to write a unit test to catch a bug I just fixed.

The test involves opening a tiff image and using it as  a mask image as an
imglib2 Cursor to only analyse pixels in the test images that are "on" in
the mask image.

I made some progress fighting my way through the fun Generic Types maze,
and my test code compiles... but it pukes at run time with a casting error
can't cast UnsignedByteType to BitType

in Class file MandersColocalizationTest.java in the Coloc_2 plugin's tests
package,
its the mandersRealNoisyImagesTest() method (2nd test method)

my fork-branch with the failing code is at
https://github.com/chalkie666/Colocalisation_Analysis/tree/MandersRealNoisyTest
in the latest commit.

any clues from the Generic Types heros?????

cheers

Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150806/9eb1fcc7/attachment.html>

From christian.dietz at uni-konstanz.de  Thu Aug  6 03:45:50 2015
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Thu, 06 Aug 2015 10:45:50 +0200
Subject: [ImageJ-devel] unit test type case error - Generic Types
In-Reply-To: <CAGskW5N6yp=95yzZmwR7rHvYdGo4PKc+b02+=D=KfW2o-=0NZw@mail.gmail.com>
References: <CAGskW5N6yp=95yzZmwR7rHvYdGo4PKc+b02+=D=KfW2o-=0NZw@mail.gmail.com>
Message-ID: <1438850750.2009.6.camel@uni-konstanz.de>

Hi,

I commented on your code on github. I hope it makes sense... 

Christian

On Do, 2015-08-06 at 10:29 +0200, Daniel White wrote: 
> Hi Folks, 
> I'm trying to write a unit test to catch a bug I just fixed. 
> 
> 
> The test involves opening a tiff image and using it as  a mask image
> as an imglib2 Cursor to only analyse pixels in the test images that
> are "on" in the mask image. 
> 
> 
> I made some progress fighting my way through the fun Generic Types
> maze, and my test code compiles... but it pukes at run time with a
> casting error
> can't cast UnsignedByteType to BitType
> 
> 
> in Class file MandersColocalizationTest.java in the Coloc_2 plugin's
> tests package,
> its the mandersRealNoisyImagesTest() method (2nd test method)
> 
> 
> my fork-branch with the failing code is at
> https://github.com/chalkie666/Colocalisation_Analysis/tree/MandersRealNoisyTest
> in the latest commit. 
> 
> 
> any clues from the Generic Types heros?????
> 
> 
> cheers
> 
> 
> Dan
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel




From hiner at wisc.edu  Mon Aug 10 09:15:32 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Mon, 10 Aug 2015 09:15:32 -0500
Subject: [ImageJ-devel] Janelia hackathon
Message-ID: <CA+B=mGrkytC4Ys_1v46CJoJyOKuvtQiYYqY18T2Oi9i0hDaS2A@mail.gmail.com>

Hi all,

For those interested, Curtis and I spent the last week of July in Janelia
for hackathon, at the kind invitation of Stephan Saalfeld and Philipp
Keller.

There was significant impact on the future direction of SCIFIO development
(planar generalization and better integration with ImgLib2) and plugin
testing throughout the ImageJ ecosystem (a "melting pot" test to identify
conflicts between components in complex systems.. i.e. Fiji).

A full summary is available, as always, on the wiki:

http://imagej.net/2015-07-27-Janelia_Hackathon

Best,
Mark Hiner
ImageJ2 developer
LOCI, UW-Madison
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150810/6764f83e/attachment.html>

From ctrueden at wisc.edu  Tue Aug 11 14:48:11 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 11 Aug 2015 14:48:11 -0500
Subject: [ImageJ-devel] Blitter-like operations
In-Reply-To: <8E30BFF3-4CA2-4BCC-9115-CC05A4A7ADB2@wisc.edu>
References: <8E30BFF3-4CA2-4BCC-9115-CC05A4A7ADB2@wisc.edu>
Message-ID: <CADN69yktfoHb6FUGKrZOjSwVApw+TGzzJZepHAfpa+hc+xcyzA@mail.gmail.com>

Hi Jay,

Sorry for the long (long!) delay in reply. Did you ever put something
together to do blitter-like operations? They are something we should
definitely add to ImageJ Ops as core functions.

As for converting, we have the start of that now:
https://github.com/imagej/imagej-ops/pull/182

But more still needs to be done with it.

If you ended up writing any code to do this stuff, it would be awesome to
put it into Ops core.

Regards,
Curtis

On Fri, Jun 26, 2015 at 5:04 PM, Jay Warrick <warrick at wisc.edu> wrote:

> Hi All,
>
> For some reason, I'm having trouble finding the intended workflow with
> imglib2 for performing blitter-like operations using Img<whatever> images.
>
> Suggestions? It looks like the ImageCalculator class is deprecated. It
> works but it is a command and always seems to want to pop up and image
> window after calculation which I don't want to have happen during my
> function. Also, conversion of the Img<DoubleType> to Img<something else>
> seems to be escaping me as well. I'm just copying the "copyDataInto" method
> of the ImageCalculator class for now.
>
> Thanks,
>
> Jay
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150811/4fd43abf/attachment.html>

From ctrueden at wisc.edu  Tue Aug 11 17:20:02 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 11 Aug 2015 17:20:02 -0500
Subject: [ImageJ-devel] SCIFIO hackathon summary
In-Reply-To: <B9EF3DFACB9A454A902BC7D24044C1F0EFB55491@JFMB1.hhmi.org>
References: <CADN69ynG060cuedyOsR017MU17RtgUENsRBcgh3ZWfGw0Y4EtQ@mail.gmail.com>
	<55C50DA3.6040008@janelia.hhmi.org>
	<CADN69ymr30ZMMtUKaiQgPGy4hXeN0K3ScC9hCopEE5ndE2PFyg@mail.gmail.com>
	<B9EF3DFACB9A454A902BC7D24044C1F0EFB55491@JFMB1.hhmi.org>
Message-ID: <CADN69y=N1YPVhJB0NxeyOsPHJP-iz2Y4gjDwTpMeGi7vw8wPrA@mail.gmail.com>

Hi Burkhard,

[CCing imagej-devel mailing list, since question may interest others.]

> Is it possible to upload klb.jar releases to one of the ImageJ maven
> repos (I guess either 'public' or '3rdparty')?

Firstly, see:
http://imagej.net/Releases

And in particular:
http://imagej.net/Releases#Phase_3:_release_to_Maven

> What would be the best strategy?

I much prefer the Release-Version tooling to the "double push" hackiness
(even though Saalfeld uses double-push ;-) because double push does not do
everything completely properly. Most importantly, no release tag is created
in the Git repo, and the Maven POM is not updated to point to such a tag.

The downside to the Release-Version tooling is that we would have to set
you up with an account on our Maven and/or Jenkins servers. But we are
certainly happy to do this if it helps you out. Then you could make
releases whenever you want.

Regards,
Curtis


On Tue, Aug 11, 2015 at 5:05 PM, Hoeckendorf, Burkhard <
hoeckendorfb at janelia.hhmi.org> wrote:

> Dear Curtis,
>
> I have a quick question. Is it possible to upload klb.jar releases to one
> of the ImageJ maven repos (I guess either 'public' or '3rdparty')? What
> would be the best strategy?
>
> Cheers,
> Burkhard
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150811/80f1e7ac/attachment.html>

From hiner at wisc.edu  Thu Aug 13 07:39:27 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 13 Aug 2015 07:39:27 -0500
Subject: [ImageJ-devel] Latest H5j Loader Plugin Release
In-Reply-To: <AC107F5D6556CC408381BBBC0A56699401E098C448@JFMB1.hhmi.org>
References: <AC107F5D6556CC408381BBBC0A56699401E098C448@JFMB1.hhmi.org>
Message-ID: <CA+B=mGqX1ZqKu2sBeZW6Q=_r-FX8OnavJmq0PY+-m5nKHCxsbg@mail.gmail.com>

Hi Les,

>Is there anything wrong?

Nope, it looks like there is a 1.0.1 release of your plugin:
http://maven.imagej.net/index.html#nexus-search;classname~H5J

See the release documentation on the wiki:
http://imagej.net/Releases#After_a_release

After the Maven release is cut, the version is not automatically updated in
Fiji. First someone has to update pom-fiji (which I did just now:
https://github.com/fiji/pom-fiji/commit/5f01121835e9f67f9eed5b1f872ef670fab75662).
Then pom-fiji needs to be released so that Fiji itself can use it, at which
point the released artifact can be uploaded to the Fiji update site.

Best,
Mark

On Wed, Aug 12, 2015 at 4:01 PM, Foster, Leslie <fosterl at janelia.hhmi.org>
wrote:

> Greetings, Mark:
>
> About a week ago, I did a double-push to release version 1.0.1 of the H5j
> Loader Plugin.  I have seen that it successfully built on the Jenkins
> server, but have not seen a plugin release.  Is there anything wrong?  Have
> I carried out the push wrongly?  I think it was the same as earlier.
>
> Please let me know.
> Regards,
> Les
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150813/3662377d/attachment.html>

From hiner at wisc.edu  Thu Aug 13 08:58:45 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 13 Aug 2015 08:58:45 -0500
Subject: [ImageJ-devel] Latest H5j Loader Plugin Release
In-Reply-To: <AC107F5D6556CC408381BBBC0A56699401E098C47E@JFMB1.hhmi.org>
References: <AC107F5D6556CC408381BBBC0A56699401E098C448@JFMB1.hhmi.org>
	<CA+B=mGqX1ZqKu2sBeZW6Q=_r-FX8OnavJmq0PY+-m5nKHCxsbg@mail.gmail.com>
	<AC107F5D6556CC408381BBBC0A56699401E098C47E@JFMB1.hhmi.org>
Message-ID: <CA+B=mGrWUPNctte2fjB7DQYn7GuHOOhT3i-cncqCE=QvERUP=Q@mail.gmail.com>

Hi Les,

> Also, I saw a Jenkins fail email this morning.

Yes, I was investigating why H5J_Loader_Plugin doesn't show up in
http://status.imagej.net/ as I had forgotten that it fails to build on our
Linux machine. Typically you only have to worry about failed builds when
they happen in response to code changes.

>Afterwards, I did not see the changes to my plugin.

I updated pom-fiji but did not release it or propagate the change to Fiji
itself, so your plugin was not on the Fiji update site. All of these steps
are required for a plugin to be available from Help > Update Fiji.

I have now done the pom-fiji release and updated Fiji.git but am currently
unable to upload to the Fiji update site (for unrelated reasons). So your
plugin will become available the next time we do an upload to Fiji.

Best,
Mark

On Thu, Aug 13, 2015 at 7:55 AM, Foster, Leslie <fosterl at janelia.hhmi.org>
wrote:

> Thanks very much, Mark.  However, I just launched ImageJ, which did have
> an update.  Afterwards, I did not see the changes to my plugin.  Also, I
> saw a Jenkins fail email this morning.
> Regards,
> Les
>
> From: <hinerm at gmail.com> on behalf of Mark Hiner <hiner at wisc.edu>
> Date: Thursday, August 13, 2015 at 8:39 AM
> To: fiji-devel <fiji-devel at googlegroups.com>, Imagej-devel <
> imagej-devel at imagej.net>
> Cc: Foster Leslie <fosterl at janelia.hhmi.org>
> Subject: Re: Latest H5j Loader Plugin Release
>
> Hi Les,
>
> >Is there anything wrong?
>
> Nope, it looks like there is a 1.0.1 release of your plugin:
> http://maven.imagej.net/index.html#nexus-search;classname~H5J
>
> See the release documentation on the wiki:
> http://imagej.net/Releases#After_a_release
>
> After the Maven release is cut, the version is not automatically updated
> in Fiji. First someone has to update pom-fiji (which I did just now:
> https://github.com/fiji/pom-fiji/commit/5f01121835e9f67f9eed5b1f872ef670fab75662).
> Then pom-fiji needs to be released so that Fiji itself can use it, at which
> point the released artifact can be uploaded to the Fiji update site.
>
> Best,
> Mark
>
> On Wed, Aug 12, 2015 at 4:01 PM, Foster, Leslie <fosterl at janelia.hhmi.org>
> wrote:
>
>> Greetings, Mark:
>>
>> About a week ago, I did a double-push to release version 1.0.1 of the H5j
>> Loader Plugin.  I have seen that it successfully built on the Jenkins
>> server, but have not seen a plugin release.  Is there anything wrong?  Have
>> I carried out the push wrongly?  I think it was the same as earlier.
>>
>> Please let me know.
>> Regards,
>> Les
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150813/f3f1390e/attachment.html>

From hiner at wisc.edu  Thu Aug 13 09:26:29 2015
From: hiner at wisc.edu (Mark Hiner)
Date: Thu, 13 Aug 2015 09:26:29 -0500
Subject: [ImageJ-devel] Latest H5j Loader Plugin Release
In-Reply-To: <AC107F5D6556CC408381BBBC0A56699401E098C522@JFMB1.hhmi.org>
References: <AC107F5D6556CC408381BBBC0A56699401E098C448@JFMB1.hhmi.org>
	<CA+B=mGqX1ZqKu2sBeZW6Q=_r-FX8OnavJmq0PY+-m5nKHCxsbg@mail.gmail.com>
	<AC107F5D6556CC408381BBBC0A56699401E098C47E@JFMB1.hhmi.org>
	<CA+B=mGrWUPNctte2fjB7DQYn7GuHOOhT3i-cncqCE=QvERUP=Q@mail.gmail.com>
	<AC107F5D6556CC408381BBBC0A56699401E098C522@JFMB1.hhmi.org>
Message-ID: <CA+B=mGoGyBa9JyGFFseOJp_yxvrsMpzOgh2YXy+yi4Z2g2Y=WA@mail.gmail.com>

>I instead need to notify you that I wish to push some update?

Currently, submitting a PR modifying pom-fiji is the best way to notify us
of the change. An e-mail (or chat ping, etc..) is an acceptable alternative.

In the future, the ideal would be for status.imagej.net to notify us
automatically when you have performed releases. But it's uncertain when
we'll have time to improve that tooling.

Best,
Mark


On Thu, Aug 13, 2015 at 9:15 AM, Foster, Leslie <fosterl at janelia.hhmi.org>
wrote:

> Hey, Mark:
> Thanks for digging into this.
>
> If I should wish to do some later change to the plugin, should I also
> modify pom-fiji to make that happen, or do I instead need to notify you
> that I wish to push some update?
>
> Thanks,
> Les
>
> From: <hinerm at gmail.com> on behalf of Mark Hiner <hiner at wisc.edu>
> Date: Thursday, August 13, 2015 at 9:58 AM
>
> To: fiji-devel <fiji-devel at googlegroups.com>, Imagej-devel <
> imagej-devel at imagej.net>
> Cc: Foster Leslie <fosterl at janelia.hhmi.org>
> Subject: Re: Latest H5j Loader Plugin Release
>
> Hi Les,
>
> > Also, I saw a Jenkins fail email this morning.
>
> Yes, I was investigating why H5J_Loader_Plugin doesn't show up in
> http://status.imagej.net/ as I had forgotten that it fails to build on
> our Linux machine. Typically you only have to worry about failed builds
> when they happen in response to code changes.
>
> >Afterwards, I did not see the changes to my plugin.
>
> I updated pom-fiji but did not release it or propagate the change to Fiji
> itself, so your plugin was not on the Fiji update site. All of these steps
> are required for a plugin to be available from Help > Update Fiji.
>
> I have now done the pom-fiji release and updated Fiji.git but am currently
> unable to upload to the Fiji update site (for unrelated reasons). So your
> plugin will become available the next time we do an upload to Fiji.
>
> Best,
> Mark
>
> On Thu, Aug 13, 2015 at 7:55 AM, Foster, Leslie <fosterl at janelia.hhmi.org>
> wrote:
>
>> Thanks very much, Mark.  However, I just launched ImageJ, which did have
>> an update.  Afterwards, I did not see the changes to my plugin.  Also, I
>> saw a Jenkins fail email this morning.
>> Regards,
>> Les
>>
>> From: <hinerm at gmail.com> on behalf of Mark Hiner <hiner at wisc.edu>
>> Date: Thursday, August 13, 2015 at 8:39 AM
>> To: fiji-devel <fiji-devel at googlegroups.com>, Imagej-devel <
>> imagej-devel at imagej.net>
>> Cc: Foster Leslie <fosterl at janelia.hhmi.org>
>> Subject: Re: Latest H5j Loader Plugin Release
>>
>> Hi Les,
>>
>> >Is there anything wrong?
>>
>> Nope, it looks like there is a 1.0.1 release of your plugin:
>> http://maven.imagej.net/index.html#nexus-search;classname~H5J
>>
>> See the release documentation on the wiki:
>> http://imagej.net/Releases#After_a_release
>>
>> After the Maven release is cut, the version is not automatically updated
>> in Fiji. First someone has to update pom-fiji (which I did just now:
>> https://github.com/fiji/pom-fiji/commit/5f01121835e9f67f9eed5b1f872ef670fab75662).
>> Then pom-fiji needs to be released so that Fiji itself can use it, at which
>> point the released artifact can be uploaded to the Fiji update site.
>>
>> Best,
>> Mark
>>
>> On Wed, Aug 12, 2015 at 4:01 PM, Foster, Leslie <fosterl at janelia.hhmi.org
>> > wrote:
>>
>>> Greetings, Mark:
>>>
>>> About a week ago, I did a double-push to release version 1.0.1 of the
>>> H5j Loader Plugin.  I have seen that it successfully built on the Jenkins
>>> server, but have not seen a plugin release.  Is there anything wrong?  Have
>>> I carried out the push wrongly?  I think it was the same as earlier.
>>>
>>> Please let me know.
>>> Regards,
>>> Les
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150813/1b7de669/attachment.html>

From adrian.daerr at univ-paris-diderot.fr  Sat Aug 15 06:14:13 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Sat, 15 Aug 2015 13:14:13 +0200
Subject: [ImageJ-devel] Status and API of ROIs in ImageJ2 ?
Message-ID: <55CF1F05.3050904@univ-paris-diderot.fr>

Hello,

I am seizing a major rewrite of a plugin as an opportunity to switch
from ImageJ1 to ImageJ2, also to avoid concurrency issues[*], and now
lots of questions come up. Some concern the way ROIs are handled. What
has happened in this regard since
   http://imagej.net/ROIs
was last updated ?

[*] cf discussion on the ImageJ list archived at
http://imagej.1557.x6.nabble.com/ExtendedPlugInFilter-GenericDialog-and-synchronization-td5013333.html

Here are two concrete questions:

1) My plugin relies on a rectangular ROI being drawn on the image to
know which area to include in the computation. How do I draw this ROI
once I have loaded the image as a dataset in the main() method that is
used for testing purposes ?

public static void main(final String... args) throws Exception {
     final String testImagePath = "testImage.jpg";

     // Launch ImageJ as usual.
     final ImageJ ij = net.imagej.Main.launch(args);

     // Open test image.
     final Dataset dataset = ij.dataset().open(testImagePath);

     // display the dataset
     ij.ui().show(dataset);

     // create rectangular ROI
     //imp.setRoi(120,60,340,420);// How to do this on a dataset ?

     // Launch the "Foo_Bar" command.
     ij.command().run(Foo_Bar.class, true);
}

(alternatively, how would I generate a new dataset, or I guess something 
like a "View" in ImageJ2 terminology, of the ROI sub-image of the 
original dataset ? I could then substitute the original dataset with 
this sub-image and have the plugin operate on the whole image by default)

2) The plugin preview generates overlays using java.awt.geom.Path2D,
java.awt.geom.Area and java.awt.Shape, which are then converted via
ij.gui.ShapeRoi() and ij.gui.Overlay(), assembled with overlay.add(),
and drawn using imp.setOverlay(). Is there a new IJ2-way to do this
(especially since the cited web page (rightly) insists on separation
of selection and visualisation shapes) ?

TIA,
Adrian


From jan.eglinger at gmail.com  Wed Aug 19 06:32:59 2015
From: jan.eglinger at gmail.com (Jan Eglinger)
Date: Wed, 19 Aug 2015 13:32:59 +0200
Subject: [ImageJ-devel] Generate an image using imagej-ops
Message-ID: <55D4696B.7020506@gmail.com>

Dear all,

I'd like to use ImageJ-Ops to create an image with "virtual beads" of a 
given diameter with a given intensity.
I thought of using a 3D Gaussian to get the spatial intensities for each 
bead (at a random subpixel position), and then summing up single bead 
images to get a volume with randomly distributed spots.
Finally, I might want to convolve these ideal 3D Gaussian spots with a 
given point-spread function (PSF).

I guess I'll need
   ij.op().image().equation()
   ij.op().math().add()
and finally
   ij.op().filter().convolve()

but I am unsure how to proceed.

Could anybody give me some hints how to start?

Thanks,
Jan


From bnorthan at gmail.com  Wed Aug 19 08:52:14 2015
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 19 Aug 2015 09:52:14 -0400
Subject: [ImageJ-devel] Generate an image using imagej-ops
In-Reply-To: <55D4696B.7020506@gmail.com>
References: <55D4696B.7020506@gmail.com>
Message-ID: <CAMWa8i27nRgVv3Zsfkb139m+0TeyR3-KmXAyBVd7Xg+Hyd6F5A@mail.gmail.com>

Hi Jan

I am not sure of the best to draw points that are at a sub-resolution
position.

Below is an example that shows how to use imglib2 (in a script) to draw
points and then convolve them.   (note it works with imagej-ops-0.16.0 and
above)

https://github.com/imagej/imagej-tutorials/blob/scripting/jython/CreateAndConvolvePoints.py

If you know the equation you want to use for a point at sub-resolution
maybe you can implement it using the same imglib2 interfaces...





On Wed, Aug 19, 2015 at 7:32 AM, Jan Eglinger <jan.eglinger at gmail.com>
wrote:

> Dear all,
>
> I'd like to use ImageJ-Ops to create an image with "virtual beads" of a
> given diameter with a given intensity.
> I thought of using a 3D Gaussian to get the spatial intensities for each
> bead (at a random subpixel position), and then summing up single bead
> images to get a volume with randomly distributed spots.
> Finally, I might want to convolve these ideal 3D Gaussian spots with a
> given point-spread function (PSF).
>
> I guess I'll need
>   ij.op().image().equation()
>   ij.op().math().add()
> and finally
>   ij.op().filter().convolve()
>
> but I am unsure how to proceed.
>
> Could anybody give me some hints how to start?
>
> Thanks,
> Jan
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150819/82933540/attachment.html>

From jan.eglinger at gmail.com  Wed Aug 19 09:23:47 2015
From: jan.eglinger at gmail.com (Jan Eglinger)
Date: Wed, 19 Aug 2015 16:23:47 +0200
Subject: [ImageJ-devel] Generate an image using imagej-ops
In-Reply-To: <CAMWa8i27nRgVv3Zsfkb139m+0TeyR3-KmXAyBVd7Xg+Hyd6F5A@mail.gmail.com>
References: <55D4696B.7020506@gmail.com>
	<CAMWa8i27nRgVv3Zsfkb139m+0TeyR3-KmXAyBVd7Xg+Hyd6F5A@mail.gmail.com>
Message-ID: <55D49173.5070808@gmail.com>

Hi Brian,

thanks a lot for the example script, that's a great starting point!

Cheers,
Jan



On 19.08.2015 15:52, Brian Northan wrote:
> Hi Jan
>
> I am not sure of the best to draw points that are at a sub-resolution
> position.
>
> Below is an example that shows how to use imglib2 (in a script) to draw
> points and then convolve them.   (note it works with imagej-ops-0.16.0
> and above)
>
> https://github.com/imagej/imagej-tutorials/blob/scripting/jython/CreateAndConvolvePoints.py
>
> If you know the equation you want to use for a point at sub-resolution
> maybe you can implement it using the same imglib2 interfaces...
>
>
>
>
>
> On Wed, Aug 19, 2015 at 7:32 AM, Jan Eglinger <jan.eglinger at gmail.com
> <mailto:jan.eglinger at gmail.com>> wrote:
>
>     Dear all,
>
>     I'd like to use ImageJ-Ops to create an image with "virtual beads"
>     of a given diameter with a given intensity.
>     I thought of using a 3D Gaussian to get the spatial intensities for
>     each bead (at a random subpixel position), and then summing up
>     single bead images to get a volume with randomly distributed spots.
>     Finally, I might want to convolve these ideal 3D Gaussian spots with
>     a given point-spread function (PSF).
>
>     I guess I'll need
>        ij.op().image().equation()
>        ij.op().math().add()
>     and finally
>        ij.op().filter().convolve()
>
>     but I am unsure how to proceed.
>
>     Could anybody give me some hints how to start?
>
>     Thanks,
>     Jan
>


From adrian.daerr at univ-paris-diderot.fr  Wed Aug 19 10:10:06 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Wed, 19 Aug 2015 17:10:06 +0200
Subject: [ImageJ-devel] Status and API of ROIs in ImageJ2 ?
In-Reply-To: <55CF1F05.3050904@univ-paris-diderot.fr>
References: <55CF1F05.3050904@univ-paris-diderot.fr>
Message-ID: <web-159675194@univ-paris7.fr>


Dear ImageJ developers,

I have included code from the AddROIs tutorial into the main()
method of my plugin (for the moment essentially one of Curtis'
commands-with-preview example), to select a Rectangle before
calling the plugin. The source is available here:

https://gitlab.com/pendant-drop/pendant-drop
(in Goutte_pendante.java)

If I launch the default UI, then the ROI will not show, but the
plugin can launch. If on the other hand I launch the "swing" UI
as in the tutorial, I do see the ROI (not until I call
Image>Adjust>Brightness/Contrast..., but that's a minor detail),
but now the invocation of the plugin at the end of main() will
throw a MethodCallException with the stackTrace pasted below. How
can the choice of a UI make the plugin execution fail ?

Is there any other way that main can set a ROI on a loaded image
that the plugin, which still uses an ImagePlus as input
parameter, will see when calling imp.getProcessor().getRoi() ?

TIA
Adrian


$> mvn package
$> fiji --class-path target/pendant_drop-2.0.0-SNAPSHOT.jar 
Goutte_pendante.class
[INFO] Overriding About Pendant Drop; identifier: 
command:About_Pendant_Drop; jar: 
file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
[INFO] Overriding Pendant Drop; identifier: command:Goutte_pendante; 
jar: 
file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
[INFO] Populating metadata
[INFO] Populating metadata
[INFO] Found 10 JHotDraw adapters.
org.scijava.module.MethodCallException: Error executing method: 
Goutte_pendante#initTitle
         at org.scijava.module.MethodRef.execute(MethodRef.java:73)
         at 
org.scijava.module.AbstractModuleItem.initialize(AbstractModuleItem.java:199)
         at 
org.scijava.module.AbstractModule.initialize(AbstractModule.java:86)
         at 
org.scijava.command.CommandModule.initialize(CommandModule.java:147)
         at 
org.scijava.module.process.InitPreprocessor.process(InitPreprocessor.java:60)
         at 
org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
         at 
org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
         at 
org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
         at 
java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
         at 
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
         at 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
         at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.reflect.InvocationTargetException
         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
         at 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
         at 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
         at java.lang.reflect.Method.invoke(Method.java:597)
         at org.scijava.module.MethodRef.execute(MethodRef.java:69)
         ... 14 more
Caused by: java.lang.NullPointerException
         at Goutte_pendante.initTitle(Goutte_pendante.java:94)
         ... 19 more
[ERROR] Module threw exception
java.lang.NullPointerException
         at Goutte_pendante.cancel(Goutte_pendante.java:87)
         at 
org.scijava.command.CommandModule.cancel(CommandModule.java:140)
         at 
org.scijava.module.ModuleRunner.cleanupAndBroadcastCancelation(ModuleRunner.java:189)
         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:161)
         at 
org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
         at 
org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
         at 
java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
         at 
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
         at 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
         at java.lang.Thread.run(Thread.java:662)



On Sat, 15 Aug 2015 13:14:13 +0200
  Adrian Daerr <adrian.daerr at univ-paris-diderot.fr> wrote:
> Hello,
> 
> I am seizing a major rewrite of a plugin as an opportunity to switch
> from ImageJ1 to ImageJ2, also to avoid concurrency issues[*], and 
>now
> lots of questions come up. Some concern the way ROIs are handled. 
>What
> has happened in this regard since
>   http://imagej.net/ROIs
> was last updated ?
> 
> [*] cf discussion on the ImageJ list archived at
> http://imagej.1557.x6.nabble.com/ExtendedPlugInFilter-GenericDialog-and-synchronization-td5013333.html
> 
> Here are two concrete questions:
> 
> 1) My plugin relies on a rectangular ROI being drawn on the image to
> know which area to include in the computation. How do I draw this 
>ROI
> once I have loaded the image as a dataset in the main() method that 
>is
> used for testing purposes ?
> 
> public static void main(final String... args) throws Exception {
>     final String testImagePath = "testImage.jpg";
> 
>     // Launch ImageJ as usual.
>     final ImageJ ij = net.imagej.Main.launch(args);
> 
>     // Open test image.
>     final Dataset dataset = ij.dataset().open(testImagePath);
> 
>     // display the dataset
>     ij.ui().show(dataset);
> 
>     // create rectangular ROI
>     //imp.setRoi(120,60,340,420);// How to do this on a dataset ?
> 
>     // Launch the "Foo_Bar" command.
>     ij.command().run(Foo_Bar.class, true);
> }
> 
> (alternatively, how would I generate a new dataset, or I guess 
>something like a "View" in ImageJ2 terminology, of the ROI sub-image 
>of the original dataset ? I could then substitute the original 
>dataset with this sub-image and have the plugin operate on the whole 
>image by default)
> 
> 2) The plugin preview generates overlays using java.awt.geom.Path2D,
> java.awt.geom.Area and java.awt.Shape, which are then converted via
> ij.gui.ShapeRoi() and ij.gui.Overlay(), assembled with 
>overlay.add(),
> and drawn using imp.setOverlay(). Is there a new IJ2-way to do this
> (especially since the cited web page (rightly) insists on separation
> of selection and visualisation shapes) ?
> 
> TIA,
> Adrian
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-- 
http://www.msc.univ-paris-diderot.fr/~daerr/


From bnorthan at gmail.com  Wed Aug 19 10:58:41 2015
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 19 Aug 2015 11:58:41 -0400
Subject: [ImageJ-devel] KNIME and ops
Message-ID: <CAMWa8i3HNSTRiC-9N1=9J_aPz9JEpJW9E55YHRePGKddCnDO1w@mail.gmail.com>

Hi

I have a question for the KNIME folks.

My understanding is that KNIME can auto-generate a node for every class
that implements an op.  Is this correct??  And if so does the current
release of KNIME recognize ops??  Or do I need a development version??

How does one install an op to KNIME??  Do you just place the .jar file in a
certain directory??  Or do you have to go through the 'install KNIME
extensions' option??  Or something else??

Thanks

Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150819/1d07647a/attachment.html>

From christian.dietz at uni-konstanz.de  Wed Aug 19 12:36:31 2015
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Wed, 19 Aug 2015 19:36:31 +0200
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <CAMWa8i3HNSTRiC-9N1=9J_aPz9JEpJW9E55YHRePGKddCnDO1w@mail.gmail.com>
Message-ID: <b2d351a8-7fea-4d5b-ac35-2d7397caf4ef@email.android.com>

Hi Brian, 

currently, we can automatically create nodes from Commands and not from ops. From a technical point of view it would be easy to adapt this mechanism to Ops, but I am not sure if we want that (as you dont want to create a node for each and every atomar op). I hope we will find a nice strategy when to expose an Op as a KNIME node. 

Anyway, Commands can be installed if the imagej2 extension is also installed within KNIME. I can send you more details next Monday, when I'm back from vacation.

Hope this helps,

Christian

Am 19.08.2015 5:58 nachm. schrieb Brian Northan <bnorthan at gmail.com>:
>
> Hi 
>
> I have a question for the KNIME folks.? 
>
> My understanding is that KNIME can auto-generate a node for every class that implements an op.? Is this correct??? And if so does the current release of KNIME recognize ops??? Or do I need a development version??
>
> How does one install an op to KNIME??? Do you just place the .jar file in a certain directory??? Or do you have to go through the 'install KNIME extensions' option??? Or something else??
>
> Thanks
>
> Brian

From ctrueden at wisc.edu  Wed Aug 19 13:00:31 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 19 Aug 2015 13:00:31 -0500
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <b2d351a8-7fea-4d5b-ac35-2d7397caf4ef@email.android.com>
References: <CAMWa8i3HNSTRiC-9N1=9J_aPz9JEpJW9E55YHRePGKddCnDO1w@mail.gmail.com>
	<b2d351a8-7fea-4d5b-ac35-2d7397caf4ef@email.android.com>
Message-ID: <CADN69y=LG9jR0GVLz706PP1OhdnX=-2nuqXZGLZB5FqiViKabg@mail.gmail.com>

Hi Christian,

> currently, we can automatically create nodes from Commands and not
> from ops.

But all Ops are Commands...?

> From a technical point of view it would be easy to adapt this
> mechanism to Ops, but I am not sure if we want that (as you dont want
> to create a node for each and every atomar op). I hope we will
> find a nice strategy when to expose an Op as a KNIME node.

Possible solutions:
* Expose all Commands (including Ops) that declare a menu path.
* Expose Commands which have (or do not have) a particular attribute key.
We use this for ImageJ1, adding a "no-legacy" attribute for commands which
should not be exposed from the legacy ImageJ1 user interface.

Regards,
Curtis

On Wed, Aug 19, 2015 at 12:36 PM, Christian Dietz <
christian.dietz at uni-konstanz.de> wrote:

> Hi Brian,
>
> currently, we can automatically create nodes from Commands and not from
> ops. From a technical point of view it would be easy to adapt this
> mechanism to Ops, but I am not sure if we want that (as you dont want to
> create a node for each and every atomar op). I hope we will find a nice
> strategy when to expose an Op as a KNIME node.
>
> Anyway, Commands can be installed if the imagej2 extension is also
> installed within KNIME. I can send you more details next Monday, when I'm
> back from vacation.
>
> Hope this helps,
>
> Christian
>
> Am 19.08.2015 5:58 nachm. schrieb Brian Northan <bnorthan at gmail.com>:
> >
> > Hi
> >
> > I have a question for the KNIME folks.
> >
> > My understanding is that KNIME can auto-generate a node for every class
> that implements an op.  Is this correct??  And if so does the current
> release of KNIME recognize ops??  Or do I need a development version??
> >
> > How does one install an op to KNIME??  Do you just place the .jar file
> in a certain directory??  Or do you have to go through the 'install KNIME
> extensions' option??  Or something else??
> >
> > Thanks
> >
> > Brian
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150819/7a192bff/attachment.html>

From christian.dietz at uni-konstanz.de  Wed Aug 19 14:19:32 2015
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Wed, 19 Aug 2015 21:19:32 +0200
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <CADN69y=LG9jR0GVLz706PP1OhdnX=-2nuqXZGLZB5FqiViKabg@mail.gmail.com>
Message-ID: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>

An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150819/f92fd709/attachment.html>

From bnorthan at gmail.com  Wed Aug 19 15:20:04 2015
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 19 Aug 2015 16:20:04 -0400
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
References: <CADN69y=LG9jR0GVLz706PP1OhdnX=-2nuqXZGLZB5FqiViKabg@mail.gmail.com>
	<efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
Message-ID: <CAMWa8i3c-VE9eJ3rGCr9eDrKHpsG-5fc5MoUvzUNzLiJBRbojQ@mail.gmail.com>

Thanks Christian

I'll ping you next week for more instructions.

Brian

On Wed, Aug 19, 2015 at 3:19 PM, Christian Dietz <
christian.dietz at uni-konstanz.de> wrote:

> Sorry, I was not really precise: all Commands which are declared as
> headless and have a menu path.
>
> And yes: like this we could select the ops which are exposed as nodes.
> Am 19.08.2015 8:00 nachm. schrieb Curtis Rueden <ctrueden at wisc.edu>:
>
> Hi Christian,
>
> > currently, we can automatically create nodes from Commands and not
> > from ops.
>
> But all Ops are Commands...?
>
> > From a technical point of view it would be easy to adapt this
> > mechanism to Ops, but I am not sure if we want that (as you dont want
> > to create a node for each and every atomar op). I hope we will
> > find a nice strategy when to expose an Op as a KNIME node.
>
> Possible solutions:
> * Expose all Commands (including Ops) that declare a menu path.
> * Expose Commands which have (or do not have) a particular attribute key.
> We use this for ImageJ1, adding a "no-legacy" attribute for commands which
> should not be exposed from the legacy ImageJ1 user interface.
>
> Regards,
> Curtis
>
> On Wed, Aug 19, 2015 at 12:36 PM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
> Hi Brian,
>
> currently, we can automatically create nodes from Commands and not from
> ops. From a technical point of view it would be easy to adapt this
> mechanism to Ops, but I am not sure if we want that (as you dont want to
> create a node for each and every atomar op). I hope we will find a nice
> strategy when to expose an Op as a KNIME node.
>
> Anyway, Commands can be installed if the imagej2 extension is also
> installed within KNIME. I can send you more details next Monday, when I'm
> back from vacation.
>
> Hope this helps,
>
> Christian
>
> Am 19.08.2015 5:58 nachm. schrieb Brian Northan <bnorthan at gmail.com>:
> >
> > Hi
> >
> > I have a question for the KNIME folks.
> >
> > My understanding is that KNIME can auto-generate a node for every class
> that implements an op.  Is this correct??  And if so does the current
> release of KNIME recognize ops??  Or do I need a development version??
> >
> > How does one install an op to KNIME??  Do you just place the .jar file
> in a certain directory??  Or do you have to go through the 'install KNIME
> extensions' option??  Or something else??
> >
> > Thanks
> >
> > Brian
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150819/490d8689/attachment.html>

From felix.meyenhofer at unifr.ch  Thu Aug 20 03:06:21 2015
From: felix.meyenhofer at unifr.ch (MEYENHOFER Felix)
Date: Thu, 20 Aug 2015 08:06:21 +0000
Subject: [ImageJ-devel] @parameter choice update in component callback
Message-ID: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>

Hi 

I couldn?t find any hint that it is possible to update the choices of a parameter (declared with the annotator) in a callback that for another parameter. For example; I have a file chooser and once a file hase been chosen, I want to read some file metadata and then update the choices of the combobox that allows to select the images series.
Since I could not figure a way to do it, I wanted to ask here if it is possible at all?

Furthermore, is it possible to get a directory chooser instead of a file chooser in the configuration dialog of a command using the @Parameter annotation?

Best regards, 

-------------------------------------
Felix Meyenhofer
University of Fribourg
Departement of Medicine - Anatomy
1, Rte. Albert Gockel
CH-1700 Fribourg 

Tel:  +41 26 300 85 45
Web:  www.unifr.ch/anatomy
      www.unifr.ch/bioimage
-------------------------------------


From jan.eglinger at gmail.com  Thu Aug 20 06:50:20 2015
From: jan.eglinger at gmail.com (Jan Eglinger)
Date: Thu, 20 Aug 2015 13:50:20 +0200
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
Message-ID: <55D5BEFC.30400@gmail.com>

Hi Felix and all,

On 20.08.2015 10:06, MEYENHOFER Felix wrote:
> I couldn?t find any hint that it is possible to update the choices of a parameter (declared with the annotator) in a callback that for another parameter. For example; I have a file chooser and once a file hase been chosen, I want to read some file metadata and then update the choices of the combobox that allows to select the images series.
> Since I could not figure a way to do it, I wanted to ask here if it is possible at all?
>

I think dynamic adjustment of parameters isn't possible currently, but I 
agree that it would be a great thing to have.

I know quite some use cases where either a DialogListener or a series of 
subsequent dialogs are used in ImageJ 1.x plugins to adjust parameter 
choice to previously harvested input.

> Furthermore, is it possible to get a directory chooser instead of a file chooser in the configuration dialog of a command using the @Parameter annotation?
>

Yes, by using the
     style = "directory"
attribute. See *Templates > Python > Process Folder* in the script 
editor, and this related discussion:
   https://github.com/imagej/imagej-legacy/pull/114

Best,
Jan


From warrick at wisc.edu  Thu Aug 20 09:42:26 2015
From: warrick at wisc.edu (JAY W WARRICK)
Date: Thu, 20 Aug 2015 14:42:26 +0000
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
References: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
Message-ID: <87AF0320-CDD6-4015-B5DC-92A1243E6DDB@wisc.edu>

I'd be interested in keeping up with this conversation. We do the same thing in JEX to expose ImageJ commands (that are headless and have a menu path) as functions. Exposing some Ops would be great too. Will you be at the imagej conference that I could pick your brain on related questions?

Cheers,

Jay

On Aug 19, 2015, at 2:19 PM, Christian Dietz <Christian.Dietz at uni-konstanz.de<mailto:Christian.Dietz at uni-konstanz.de>> wrote:


Sorry, I was not really precise: all Commands which are declared as headless and have a menu path.

And yes: like this we could select the ops which are exposed as nodes.

Am 19.08.2015 8:00 nachm. schrieb Curtis Rueden <ctrueden at wisc.edu<mailto:ctrueden at wisc.edu>>:
Hi Christian,

> currently, we can automatically create nodes from Commands and not
> from ops.

But all Ops are Commands...?

> From a technical point of view it would be easy to adapt this
> mechanism to Ops, but I am not sure if we want that (as you dont want
> to create a node for each and every atomar op). I hope we will
> find a nice strategy when to expose an Op as a KNIME node.

Possible solutions:
* Expose all Commands (including Ops) that declare a menu path.
* Expose Commands which have (or do not have) a particular attribute key. We use this for ImageJ1, adding a "no-legacy" attribute for commands which should not be exposed from the legacy ImageJ1 user interface.

Regards,
Curtis

On Wed, Aug 19, 2015 at 12:36 PM, Christian Dietz <christian.dietz at uni-konstanz.de<mailto:christian.dietz at uni-konstanz.de>> wrote:
Hi Brian,

currently, we can automatically create nodes from Commands and not from ops. From a technical point of view it would be easy to adapt this mechanism to Ops, but I am not sure if we want that (as you dont want to create a node for each and every atomar op). I hope we will find a nice strategy when to expose an Op as a KNIME node.

Anyway, Commands can be installed if the imagej2 extension is also installed within KNIME. I can send you more details next Monday, when I'm back from vacation.

Hope this helps,

Christian

Am 19.08.2015 5:58 nachm. schrieb Brian Northan <bnorthan at gmail.com<mailto:bnorthan at gmail.com>>:
>
> Hi
>
> I have a question for the KNIME folks.
>
> My understanding is that KNIME can auto-generate a node for every class that implements an op.  Is this correct??  And if so does the current release of KNIME recognize ops??  Or do I need a development version??
>
> How does one install an op to KNIME??  Do you just place the .jar file in a certain directory??  Or do you have to go through the 'install KNIME extensions' option??  Or something else??
>
> Thanks
>
> Brian
_______________________________________________
ImageJ-devel mailing list
ImageJ-devel at imagej.net<mailto:ImageJ-devel at imagej.net>
http://imagej.net/mailman/listinfo/imagej-devel

_______________________________________________
ImageJ-devel mailing list
ImageJ-devel at imagej.net<mailto:ImageJ-devel at imagej.net>
http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150820/a1f53872/attachment.html>

From ctrueden at wisc.edu  Thu Aug 20 09:47:09 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 20 Aug 2015 09:47:09 -0500
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <87AF0320-CDD6-4015-B5DC-92A1243E6DDB@wisc.edu>
References: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
	<87AF0320-CDD6-4015-B5DC-92A1243E6DDB@wisc.edu>
Message-ID: <CADN69ymcYGx0UngqHhVvP3oNc=yvMK_QNOuPr0f-N4zTGzzoWA@mail.gmail.com>

Hi Jay,

Christian will not be at the IJ conference (conflict with another
conference), but will be at the hackathon afterward.

Regards,
Curtis
On Aug 20, 2015 9:42 AM, "JAY W WARRICK" <warrick at wisc.edu> wrote:

> I'd be interested in keeping up with this conversation. We do the same
> thing in JEX to expose ImageJ commands (that are headless and have a menu
> path) as functions. Exposing some Ops would be great too. Will you be at
> the imagej conference that I could pick your brain on related questions?
>
> Cheers,
>
> Jay
>
> On Aug 19, 2015, at 2:19 PM, Christian Dietz <
> Christian.Dietz at uni-konstanz.de> wrote:
>
> Sorry, I was not really precise: all Commands which are declared as
> headless and have a menu path.
>
> And yes: like this we could select the ops which are exposed as nodes.
> Am 19.08.2015 8:00 nachm. schrieb Curtis Rueden <ctrueden at wisc.edu>:
>
> Hi Christian,
>
> > currently, we can automatically create nodes from Commands and not
> > from ops.
>
> But all Ops are Commands...?
>
> > From a technical point of view it would be easy to adapt this
> > mechanism to Ops, but I am not sure if we want that (as you dont want
> > to create a node for each and every atomar op). I hope we will
> > find a nice strategy when to expose an Op as a KNIME node.
>
> Possible solutions:
> * Expose all Commands (including Ops) that declare a menu path.
> * Expose Commands which have (or do not have) a particular attribute key.
> We use this for ImageJ1, adding a "no-legacy" attribute for commands which
> should not be exposed from the legacy ImageJ1 user interface.
>
> Regards,
> Curtis
>
> On Wed, Aug 19, 2015 at 12:36 PM, Christian Dietz <
> christian.dietz at uni-konstanz.de> wrote:
>
> Hi Brian,
>
> currently, we can automatically create nodes from Commands and not from
> ops. From a technical point of view it would be easy to adapt this
> mechanism to Ops, but I am not sure if we want that (as you dont want to
> create a node for each and every atomar op). I hope we will find a nice
> strategy when to expose an Op as a KNIME node.
>
> Anyway, Commands can be installed if the imagej2 extension is also
> installed within KNIME. I can send you more details next Monday, when I'm
> back from vacation.
>
> Hope this helps,
>
> Christian
>
> Am 19.08.2015 5:58 nachm. schrieb Brian Northan <bnorthan at gmail.com>:
> >
> > Hi
> >
> > I have a question for the KNIME folks.
> >
> > My understanding is that KNIME can auto-generate a node for every class
> that implements an op.  Is this correct??  And if so does the current
> release of KNIME recognize ops??  Or do I need a development version??
> >
> > How does one install an op to KNIME??  Do you just place the .jar file
> in a certain directory??  Or do you have to go through the 'install KNIME
> extensions' option??  Or something else??
> >
> > Thanks
> >
> > Brian
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150820/91541a7f/attachment.html>

From warrick at wisc.edu  Thu Aug 20 09:50:29 2015
From: warrick at wisc.edu (JAY W WARRICK)
Date: Thu, 20 Aug 2015 14:50:29 +0000
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <CADN69ymcYGx0UngqHhVvP3oNc=yvMK_QNOuPr0f-N4zTGzzoWA@mail.gmail.com>
References: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
	<87AF0320-CDD6-4015-B5DC-92A1243E6DDB@wisc.edu>
	<CADN69ymcYGx0UngqHhVvP3oNc=yvMK_QNOuPr0f-N4zTGzzoWA@mail.gmail.com>
Message-ID: <00BC8CD6-A996-4F3E-A69B-9B5B002E4DF0@wisc.edu>

It happens that I just put that in my calendar to try and attend (at least what I can fit in). Cool.

J

On Aug 20, 2015, at 9:47 AM, Curtis Rueden <ctrueden at wisc.edu<mailto:ctrueden at wisc.edu>> wrote:


Hi Jay,

Christian will not be at the IJ conference (conflict with another conference), but will be at the hackathon afterward.

Regards,
Curtis

On Aug 20, 2015 9:42 AM, "JAY W WARRICK" <warrick at wisc.edu<mailto:warrick at wisc.edu>> wrote:
I'd be interested in keeping up with this conversation. We do the same thing in JEX to expose ImageJ commands (that are headless and have a menu path) as functions. Exposing some Ops would be great too. Will you be at the imagej conference that I could pick your brain on related questions?

Cheers,

Jay

On Aug 19, 2015, at 2:19 PM, Christian Dietz <Christian.Dietz at uni-konstanz.de<mailto:Christian.Dietz at uni-konstanz.de>> wrote:


Sorry, I was not really precise: all Commands which are declared as headless and have a menu path.

And yes: like this we could select the ops which are exposed as nodes.

Am 19.08.2015 8:00 nachm. schrieb Curtis Rueden <ctrueden at wisc.edu<mailto:ctrueden at wisc.edu>>:
Hi Christian,

> currently, we can automatically create nodes from Commands and not
> from ops.

But all Ops are Commands...?

> From a technical point of view it would be easy to adapt this
> mechanism to Ops, but I am not sure if we want that (as you dont want
> to create a node for each and every atomar op). I hope we will
> find a nice strategy when to expose an Op as a KNIME node.

Possible solutions:
* Expose all Commands (including Ops) that declare a menu path.
* Expose Commands which have (or do not have) a particular attribute key. We use this for ImageJ1, adding a "no-legacy" attribute for commands which should not be exposed from the legacy ImageJ1 user interface.

Regards,
Curtis

On Wed, Aug 19, 2015 at 12:36 PM, Christian Dietz <christian.dietz at uni-konstanz.de<mailto:christian.dietz at uni-konstanz.de>> wrote:
Hi Brian,

currently, we can automatically create nodes from Commands and not from ops. From a technical point of view it would be easy to adapt this mechanism to Ops, but I am not sure if we want that (as you dont want to create a node for each and every atomar op). I hope we will find a nice strategy when to expose an Op as a KNIME node.

Anyway, Commands can be installed if the imagej2 extension is also installed within KNIME. I can send you more details next Monday, when I'm back from vacation.

Hope this helps,

Christian

Am 19.08.2015 5:58 nachm. schrieb Brian Northan <bnorthan at gmail.com<mailto:bnorthan at gmail.com>>:
>
> Hi
>
> I have a question for the KNIME folks.
>
> My understanding is that KNIME can auto-generate a node for every class that implements an op.  Is this correct??  And if so does the current release of KNIME recognize ops??  Or do I need a development version??
>
> How does one install an op to KNIME??  Do you just place the .jar file in a certain directory??  Or do you have to go through the 'install KNIME extensions' option??  Or something else??
>
> Thanks
>
> Brian
_______________________________________________
ImageJ-devel mailing list
ImageJ-devel at imagej.net<mailto:ImageJ-devel at imagej.net>
http://imagej.net/mailman/listinfo/imagej-devel

_______________________________________________
ImageJ-devel mailing list
ImageJ-devel at imagej.net<mailto:ImageJ-devel at imagej.net>
http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150820/6fad0730/attachment-0001.html>

From ctrueden at wisc.edu  Thu Aug 20 17:13:11 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 20 Aug 2015 17:13:11 -0500
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <55D5BEFC.30400@gmail.com>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
Message-ID: <CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>

Hi Felix, Jan and everyone,

> I couldn?t find any hint that it is possible to update the choices of
> a parameter (declared with the annotator) in a callback that for
> another parameter.

It is possible to dynamically adjust parameters from Java code [1]. You can
also dynamically add and remove parameters. Such commands extend the
DynamicCommand class.

There are many examples currently in the imagej-plugins-commands project;
e.g.:
https://github.com/imagej/imagej-plugins-commands/blob/imagej-plugins-commands-0.5.1/src/main/java/net/imagej/plugins/commands/restructure/AddAxis.java

However, a couple of notes:

- This pattern makes the command less reusable from other contexts, because
some contexts require a priori knowledge about the number and types of
input and output parameters.

- The user interface currently does not properly refresh the input
harvester dialog if changes are made to parameters from a callback. So
while you can technically do things like change the choices array of a
multiple-choice input, the user will not actually see it.

- What does work currently is to determine the multiple-choice values at
initialization time, based on the values of parameters which have already
been populated earlier, such as an active dataset. This is what many of the
DynamicCommand implementations in imagej-plugins-commands do.

Really, there are _five_ different classes of commands here:

1) Totally fixed, with inputs and outputs known in advance.
2) Updates parameter attributes (such as choices?but not # or type of
inputs/outputs) once during initialization.
3) Updates parameter number and type (i.e., adding/removing inputs/outputs)
once during initialization.
4) Updates parameter attributes repeatedly e.g. during callbacks.
5) Updates parameter number and type repeatedly e.g. during callbacks.

Of these, type #1 is most desirable for a variety of reasons. Failing that,
types #2 and #3 can be done right now using DynamicCommand and it works
properly from the ImageJ UI?but not from other contexts like CellProfiler,
KNIME, etc. Types #4 and #5 can also be coded but will not work properly
from the UI in ImageJ because the input harvester is not rebuilt on
callbacks.

See also:
* https://github.com/scijava/scijava-common/issues/42
* https://github.com/scijava/scijava-common/issues/43
* https://github.com/CellProfiler/CellProfiler/issues/647

Regards,
Curtis

[1] Dynamically updating parameters from scripts would be a different
story. No plans to do that any time soon...

On Thu, Aug 20, 2015 at 6:50 AM, Jan Eglinger <jan.eglinger at gmail.com>
wrote:

> Hi Felix and all,
>
> On 20.08.2015 10:06, MEYENHOFER Felix wrote:
>
>> I couldn?t find any hint that it is possible to update the choices of a
>> parameter (declared with the annotator) in a callback that for another
>> parameter. For example; I have a file chooser and once a file hase been
>> chosen, I want to read some file metadata and then update the choices of
>> the combobox that allows to select the images series.
>> Since I could not figure a way to do it, I wanted to ask here if it is
>> possible at all?
>>
>>
> I think dynamic adjustment of parameters isn't possible currently, but I
> agree that it would be a great thing to have.
>
> I know quite some use cases where either a DialogListener or a series of
> subsequent dialogs are used in ImageJ 1.x plugins to adjust parameter
> choice to previously harvested input.
>
> Furthermore, is it possible to get a directory chooser instead of a file
>> chooser in the configuration dialog of a command using the @Parameter
>> annotation?
>>
>>
> Yes, by using the
>     style = "directory"
> attribute. See *Templates > Python > Process Folder* in the script editor,
> and this related discussion:
>   https://github.com/imagej/imagej-legacy/pull/114
>
> Best,
> Jan
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150820/d0ea3742/attachment.html>

From adrian.daerr at univ-paris-diderot.fr  Fri Aug 21 06:18:32 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Fri, 21 Aug 2015 13:18:32 +0200
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
	<CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
Message-ID: <web-159742879@univ-paris7.fr>

Hi Curtis, Felix, Jan, and others,

In the CommandWithPreview tutorial example[*] that Curtis sent to
the list a few weeks back, there is a @Parameter which is
initialised to a value depending on the initialisation of another
parameter:

@Parameter private ImagePlus imp;

@Parameter(persist = false, initializer = "initTitle") private String 
title;

/** Initializes the {@link #title} parameter. */
protected void initTitle() {
	title = initialTitle = imp.getTitle();
}

[*]
https://github.com/imagej/imagej-tutorials/blob/master/commands-with-preview/src/main/java/CommandWithPreview.java

Doesn't that allow doing what Felix would like to do, by
populating the combobox through such an initialiser ?

Are the parameters populated/initialised in the order they
appear? In particular, is the initialisation done serially or can
there be parallel execution of initialisers ? I ask because I
have parameters a, b, c whose initialisation depend on a common
calculation (depending on the image gotten through a previous
@Parameter ImagePlus imp): can I do this calculation in the
initialiser for the first parameter a, and then in the
initialisers of b and c rely on the fact that the calculation was
already done ?

cheers,
Adrian



On Thu, 20 Aug 2015 17:13:11 -0500
  Curtis Rueden <ctrueden at wisc.edu> wrote:
> Hi Felix, Jan and everyone,
> 
>> I couldn?t find any hint that it is possible to update the choices 
>>of
>> a parameter (declared with the annotator) in a callback that for
>> another parameter.
> 
> It is possible to dynamically adjust parameters from Java code [1]. 
>You can
> also dynamically add and remove parameters. Such commands extend the
> DynamicCommand class.
> 
> There are many examples currently in the imagej-plugins-commands 
>project;
> e.g.:
> https://github.com/imagej/imagej-plugins-commands/blob/imagej-plugins-commands-0.5.1/src/main/java/net/imagej/plugins/commands/restructure/AddAxis.java
> 
> However, a couple of notes:
> 
> - This pattern makes the command less reusable from other contexts, 
>because
> some contexts require a priori knowledge about the number and types 
>of
> input and output parameters.
> 
> - The user interface currently does not properly refresh the input
> harvester dialog if changes are made to parameters from a callback. 
>So
> while you can technically do things like change the choices array of 
>a
> multiple-choice input, the user will not actually see it.
> 
> - What does work currently is to determine the multiple-choice 
>values at
> initialization time, based on the values of parameters which have 
>already
> been populated earlier, such as an active dataset. This is what many 
>of the
> DynamicCommand implementations in imagej-plugins-commands do.
> 
> Really, there are _five_ different classes of commands here:
> 
> 1) Totally fixed, with inputs and outputs known in advance.
> 2) Updates parameter attributes (such as choices?but not # or type 
>of
> inputs/outputs) once during initialization.
> 3) Updates parameter number and type (i.e., adding/removing 
>inputs/outputs)
> once during initialization.
> 4) Updates parameter attributes repeatedly e.g. during callbacks.
> 5) Updates parameter number and type repeatedly e.g. during 
>callbacks.
> 
> Of these, type #1 is most desirable for a variety of reasons. 
>Failing that,
> types #2 and #3 can be done right now using DynamicCommand and it 
>works
> properly from the ImageJ UI?but not from other contexts like 
>CellProfiler,
> KNIME, etc. Types #4 and #5 can also be coded but will not work 
>properly
> from the UI in ImageJ because the input harvester is not rebuilt on
> callbacks.
> 
> See also:
> * https://github.com/scijava/scijava-common/issues/42
> * https://github.com/scijava/scijava-common/issues/43
> * https://github.com/CellProfiler/CellProfiler/issues/647
> 
> Regards,
> Curtis
> 
> [1] Dynamically updating parameters from scripts would be a 
>different
> story. No plans to do that any time soon...
> 
> On Thu, Aug 20, 2015 at 6:50 AM, Jan Eglinger 
><jan.eglinger at gmail.com>
> wrote:
> 
>> Hi Felix and all,
>>
>> On 20.08.2015 10:06, MEYENHOFER Felix wrote:
>>
>>> I couldn?t find any hint that it is possible to update the choices 
>>>of a
>>> parameter (declared with the annotator) in a callback that for 
>>>another
>>> parameter. For example; I have a file chooser and once a file hase 
>>>been
>>> chosen, I want to read some file metadata and then update the 
>>>choices of
>>> the combobox that allows to select the images series.
>>> Since I could not figure a way to do it, I wanted to ask here if it 
>>>is
>>> possible at all?
>>>
>>>
>> I think dynamic adjustment of parameters isn't possible currently, 
>>but I
>> agree that it would be a great thing to have.
>>
>> I know quite some use cases where either a DialogListener or a 
>>series of
>> subsequent dialogs are used in ImageJ 1.x plugins to adjust 
>>parameter
>> choice to previously harvested input.
>>
>> Furthermore, is it possible to get a directory chooser instead of a 
>>file
>>> chooser in the configuration dialog of a command using the 
>>>@Parameter
>>> annotation?
>>>
>>>
>> Yes, by using the
>>     style = "directory"
>> attribute. See *Templates > Python > Process Folder* in the script 
>>editor,
>> and this related discussion:
>>   https://github.com/imagej/imagej-legacy/pull/114
>>
>> Best,
>> Jan
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>

-- 
http://www.msc.univ-paris-diderot.fr/~daerr/


From ctrueden at wisc.edu  Fri Aug 21 11:06:40 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Aug 2015 11:06:40 -0500
Subject: [ImageJ-devel] Generate an image using imagej-ops
In-Reply-To: <55D49173.5070808@gmail.com>
References: <55D4696B.7020506@gmail.com>
	<CAMWa8i27nRgVv3Zsfkb139m+0TeyR3-KmXAyBVd7Xg+Hyd6F5A@mail.gmail.com>
	<55D49173.5070808@gmail.com>
Message-ID: <CADN69y=apfs2Pfv7Hhf0hRjGCYpKR29Z69QehcR6RGaTUoCsgw@mail.gmail.com>

Hi all,

The link Brian sent was to a topic branch, which is now merged to master.

Here is a stable permalink for it:

https://github.com/imagej/imagej-tutorials/blob/4161510aa78d7f41d10a5c440ad704da05f1ea71/jython/CreateAndConvolvePoints.py

Be aware that the tutorials repository will undergo heavy shuffling around
and additions in the next couple of weeks, as we prepare the Scripting with
Ops workshop.

Regards,
Curtis

On Wed, Aug 19, 2015 at 9:23 AM, Jan Eglinger <jan.eglinger at gmail.com>
wrote:

> Hi Brian,
>
> thanks a lot for the example script, that's a great starting point!
>
> Cheers,
> Jan
>
>
>
> On 19.08.2015 15:52, Brian Northan wrote:
>
>> Hi Jan
>>
>> I am not sure of the best to draw points that are at a sub-resolution
>> position.
>>
>> Below is an example that shows how to use imglib2 (in a script) to draw
>> points and then convolve them.   (note it works with imagej-ops-0.16.0
>> and above)
>>
>>
>> https://github.com/imagej/imagej-tutorials/blob/scripting/jython/CreateAndConvolvePoints.py
>>
>> If you know the equation you want to use for a point at sub-resolution
>> maybe you can implement it using the same imglib2 interfaces...
>>
>>
>>
>>
>>
>> On Wed, Aug 19, 2015 at 7:32 AM, Jan Eglinger <jan.eglinger at gmail.com
>> <mailto:jan.eglinger at gmail.com>> wrote:
>>
>>     Dear all,
>>
>>     I'd like to use ImageJ-Ops to create an image with "virtual beads"
>>     of a given diameter with a given intensity.
>>     I thought of using a 3D Gaussian to get the spatial intensities for
>>     each bead (at a random subpixel position), and then summing up
>>     single bead images to get a volume with randomly distributed spots.
>>     Finally, I might want to convolve these ideal 3D Gaussian spots with
>>     a given point-spread function (PSF).
>>
>>     I guess I'll need
>>        ij.op().image().equation()
>>        ij.op().math().add()
>>     and finally
>>        ij.op().filter().convolve()
>>
>>     but I am unsure how to proceed.
>>
>>     Could anybody give me some hints how to start?
>>
>>     Thanks,
>>     Jan
>>
>>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150821/bcfd960e/attachment.html>

From ctrueden at wisc.edu  Fri Aug 21 15:19:12 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Aug 2015 15:19:12 -0500
Subject: [ImageJ-devel] Tables / TableDisplays / ResultsTables as input
	parameters
In-Reply-To: <CAHLFyjf_D15wubOsNJgLtujgRepQeewYdj=GjSFrwfkN=o-5=Q@mail.gmail.com>
References: <CAHLFyjf_D15wubOsNJgLtujgRepQeewYdj=GjSFrwfkN=o-5=Q@mail.gmail.com>
Message-ID: <CADN69y=S1ESfwkjMHqNvfPgkw1NwCz-xhUTSikpBfkJ58UqPbw@mail.gmail.com>

Hi Lee,

Two years later!

> I've tried using TableDisplay as an input and it works adequately, but
> I'd like to conform to the standard and avoid creating two ways of
> asking for table inputs and outputs.

In the short term (by some definition of "short"...), it is fine to use
either TableDisplay or ResultsTable as an input. I agree it is annoying to
have two ways of asking, but that is the current situation with the API as
things stand.

In the longer term, the next design iteration of the SciJava display model
will eliminate the Data/DataView/Display/DisplayViewer stack in favor of
something much simpler [1]. Then we will just have ResultsTables?it would
be rare indeed to need any sort of TableDisplay as input.

> future developers might suffer from the ambiguous nature of
> TableDisplay - which of the tables should be used for an operation if
> there are more than one?

Yes, I think it was a mistake to make Displays be Lists. That will be
remedied in the next design iteration: a Display displays one thing at a
time. If you need a Display that shows a list of things, type it on a List
and support that on a per-Display basis.

> The problem with using ResultsTable as an input is that it's not
> registered in the ObjectService.

That is a good point. Right now the reference counting stuff is part of
Data/AbstractData, so anything built on that inherits the reference
counting. We might want to do reference counts for tables so that we can
manage them in the ObjectService. Another possibility would be to enhance
the ObjectService to support weak references for some things, so reference
counting stops being needed?that comes with its own dangers though.

Filed an issue for it!
https://github.com/imagej/imagej-common/issues/55

Regards,
Curtis

[1] https://github.com/scijava/scijava-common/issues/157


On Fri, Jul 19, 2013 at 9:11 AM, Lee Kamentsky <leek at broadinstitute.org>
wrote:

> Hi all,
> I have a command plugin that needs a table as an input parameter. There
> are plugins in the code base that take tables as output parameters (e.g.
> imagej.core.commands.display.ShowLUTAsTable), but I can't find an example
> of one as an input parameter. A ResultsTable is used as an output parameter
> in ShowLUTAsTable; an alternate choice might be to use a TableDisplay
> instead. Commands use ImageDisplay as an input - it would seem symmetrical
> to use TableDisplay for tables. I've tried using TableDisplay as an input
> and it works adequately, but I'd like to conform to the standard and avoid
> creating two ways of asking for table inputs and outputs.
>
> The problem with using ResultsTable as an input is that it's not
> registered in the ObjectService. I think the situation is simpler than for
> Data objects which have reference counts. The controlled type of a
> Display<T> is wholly owned by the display, so no reference count is needed
> and the Table can be added and removed from the ObjectService as it's added
> or removed from the Display via ObjectCreated and ObjectDeleted events.
> Perhaps this could be done in AbstractDisplay and be similarly applied to
> views? I guess you could sign me up for the work since I'll end up using
> and testing it.
>
> Alternatively, I am fine with using TableDisplay as input and ResultsTable
> as output, although future developers might suffer from the ambiguous
> nature of TableDisplay - which of the tables should be used for an
> operation if there are more than one? I think using TableDisplay as input
> and output is the best choice if ResultsTables aren't added to the
> ObjectService and existing plugins with ResultsTable outputs should be
> modified to output TableDisplay instead so that all ImageJ object parameter
> inputs and outputs can be fetched using the ObjectService.
>
> --Lee
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150821/419c113b/attachment.html>

From ctrueden at wisc.edu  Fri Aug 21 22:13:12 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Aug 2015 22:13:12 -0500
Subject: [ImageJ-devel] (headless) command execution
In-Reply-To: <20140416144752.GC28601@informatik.uni-halle.de>
References: <20140313093909.GC25772@informatik.uni-halle.de>
	<CADN69ymnF9NOppKn7_qjtxcxup2EM_UiCm=Dv3P6YXtq+Tg+2A@mail.gmail.com>
	<20140410140127.GR28601@informatik.uni-halle.de>
	<CADN69yk49kSFV7+4da+gvL=C=KQQzGRuo8DU+uONMp3_PCqMnA@mail.gmail.com>
	<20140414151648.GA17729@informatik.uni-halle.de>
	<20140416144752.GC28601@informatik.uni-halle.de>
Message-ID: <CADN69ym42=B9CuPFVZh2L6VY8ccAgWHYEzYQfazSCYcBE7Qntg@mail.gmail.com>

Hi Stefan and Birgit,

More than one year later! Better late than never, hopefully.

> > Maybe we need a way to formally flag these "required before
> > initialize" parameters in the annotation? What do you think?
> > Would that help you?
>
> This would be different from autoFill() ?

Yes. The autoFill attribute is a way of saying to preprocessors: "If you do
some sort of automatic value setting, do not do it to me." E.g., it lets
you have a single image or display input without the
ActiveImagePreprocessor or Active*DisplayPreprocessor populating it. In the
case of the ImageJ UI, the InputHarvester preprocessor will then include it
in the dialog box (since the parameter is still not marked resolved), so
the user can explicitly select the desired object.

> Yes and no.
>
> In a way it makes responsibilities clear, in so far I feel comfortable
> with it.

Agreed, I like the declaration of intent there. But I'm not sure it would
help anything programmatically.

> However, it seems to me that there are (potentially very heavy)
> restrictions on the parameters which may be filled in advance
> (automaticcal and not by the user) in a sensible way. As far as I
> understand ij2 fills in parameters with what I think you called
> AutoFooPreprocessors, so active image and active display?

Indeed. Preprocessor plugins are contextual, meaning they have access to
the entire state of the context. And since the context is extensible, I
really have no idea what sorts of parameters are "sensible" to fill or not.
It really depends on the use cases of the application(s) involved.

> I cannot come up with further ones. How would we fill in an int
> parameter without knowledge of its meaning/sematics?

Right. Of course, the meaning/semantics would need to be known somehow. But
that is outside the scope of the SciJava library design. As I said above, I
can imagine (abstractly) that someone designs an application with various
preprocessors that populate various parameters, including int[], in some
predefined way for its use cases.

> And even for images is only possible for commands with exactly one
> image or display. Obviously we could introduce a further flag for an
> image parameter to notify, that I what to be assigned the active image
> with. But this seems pretty specific. And probably not generic to be
> introduce to scijava but rather deferred to the "application", e.g.
> imagej.

I agree; that flag would be too specific. That's what the preprocessor
design is for: to avoid overspecifying how parameters might get populated,
and instead leave it to the extensions (preprocessors) available to the
context. The ImageJ paradigm is to have an "active image" which we can then
use for populating image parameters, but this is far from the only valid
paradigm.

> And there might be aplications which call for more the two layers?

In a way, the preprocessor design accommodates N layers, because the
preprocessors are run in priority order. But in practice there are two
layers when it comes to the initializers: preprocessors that come before
InitPreprocessor, and preprocessors that come after it. I think this is OK
and there is no need to subdivide initialization farther than that, but if
you have a use case that illustrates otherwise, we can figure it out.

> Summing up, I am afraid that I do not have a cute idea.

Well, your cute idea was in the follow-up mail. We'll get to that below...

> Of course I appreciate the functionality the set initial values or
> make the type of parameters depending on image features (like
> dimensionality, range of values). Still adding parameters seems
> awkward to be. Could we come by with "only" changing types of
> parameters. E.g. for DuplicateImage not add one parameter for each
> axes rather have one array parameter with its length determined by the
> dimensionality? And may be indicate via annotations, depending on
> which other parameter(s) the type of this parameter will change?

Yes, this is very related to a recent reply I sent to imagej-devel in
another thread [1]. I will recapitulate it here:

There are five different classes of modules:

1) Totally fixed, with inputs and outputs known in advance.
2) Updates parameter attributes (such as choices?but not # or type of
inputs/outputs) once during initialization.
3) Updates parameter number and type (i.e., adding/removing inputs/outputs)
once during initialization.
4) Updates parameter attributes repeatedly e.g. during callbacks.
5) Updates parameter number and type repeatedly e.g. during callbacks.

These five types of modules challenge us in different ways:

#1 is easy -- I think everything can support it easily.

#2 and #4 do not update the fundamental aspects of the module: the name and
types of the parameters are known. So such modules can be classified as
fundamentally "well behaved".

#3 and #5 are more difficult because they are fully dynamic: the names and
types of parameters are not known a priori.

I agree with you that it would be nice if #2 and #4 type commands did not
need to extend DynamicCommand, but instead some other abstract class that
indicates they are well behaved from a typing perspective.

I filed an issue for it:
https://github.com/scijava/scijava-common/issues/179

While at it, I also filed an issue for commands which are iteratively
dynamic (i.e., alter their parameters during callbacks):
https://github.com/scijava/scijava-common/issues/180

Though the distinction of "iteratively dynamic" may go away after
implementing your idea to totally eliminate initializers in favor of
callbacks.

And for what it's worth, I agree that better support for List and array
parameters will often times avoid the need to use dynamic modules at all.
This is something we have wanted for a long time:
https://github.com/scijava/scijava-common/issues/118

> Thinking of module and parameter intitalizers it seems to be that I
> get more unsure. Is it exactly to do processing between the two layers
> of parameters.

Yes, that is one of the purposes, as discussed above. But not the sole
purpose.

> And it is to add further parameters

In the case of dynamic modules, yes. And I would classify that as a
"processing between two layers" use case.

> and set initial values to parameters?

Yes, that was the primary intended use case: when you want to set the
initial value of a parameter and it cannot be expressed as a simple
assignment. That is: if you want the default sigma to be 2.5, you simply
write:

  @Parameter
  private double sigma = 2.5;

But if you want to define it by writing code -- presumably to somehow
derive its initial value from the application state -- you need an
initializer. It is not enough to write:

  @Parameter
  private double sigma = initialSigma();

  private double initialSigma() {
    ...
  }

Because in that case, the initialSigma method is called when the object is
first instantiated, but before any context is injected. The initializer,
conversely, is typically called at a very specific point in the
preprocessing chain.

> Are initial parameter values execulsively meant to serve as defaults
> for the user or is it required that some initial values are set (in
> order to properly run the command)?

There is no hard assumption that initializers leave parameters "open" for
further user alteration. Actually, a dynamic command could set any number
of parameters to resolved during initializer routines, and then those
parameters would not be shown to the user in the input harvester.

As discussed earlier in this thread, the precondition of run is that all
required parameters be non-null when run() is called. This can be achieved
by the preprocessing chain, or because some/all parameter values were
passed to the moduleService.run method and prepopulated that way.

> If so: would this mean that for running a command head less in a non
interactive way makes the distiction of two layers is obsolete?

The typically non-interactive use case is to pass all parameter values
explicitly, which would make all the initializer stuff moot, yes. But it is
not a hard requirement -- it really depends on your definition of
"non-interactive"; if the preprocessing chain fulfills missing parameters
in some other way, that is also acceptable from the standpoint of
fulfilling the preconditions of run().

> running the init preprocessor gives
> -----
> Exception in thread "main" java.lang.IllegalStateException: Context
> already injected: org.scijava.AbstractContextual#context

Given the long time frame since you sent this: did you resolve this issue
in an acceptable way? Or is it still a problem for you? If it is still a
problem, I will be happy to look in more detail and give some advice -- in
a much more timely fashion this time.

> Is this intended, i.e. that the init preprocessor for a module may be
> run only once?

Yes, module.initialize() is intended to be called only once. To execute a
module again, create a new instance each time. The current code does still
have this requirement, because CommandModule#initialize() injects the
context, which is only allowed once.

> What we want to do is essentially the following:
> * The user selects a Command via the GUI and we create a Window
> displaying the input parameters.
> * The user may change/supply these parameters and run the Command.
> * Upon return a window displaying the results pops up.
> * However, the first window displaying the input parameters is still
> available, the user may change one/some parameters an rerun the
> command.
> * This eases testing various parameter values or the same set of
> parameters on different images without the need to repeatatly select
> an operator/command.
>
> Have you further advise how we can accomplish this, i.e. reusing a
> command module?

I think you can accomplish all of the above without reusing the same module
instance, but instead creating a new one every time. Is that how you are
currently doing it these days?

Alternately, if you don't call initialize() beyond the first time, that
would probably do the trick as well, although reusing module instances is
not a use case we have considered much.

> BTW: I prefer to not set the parameters via the moduleService.run
> method, as the parameters are set elsewhere (either by the user via a
> GUI configuring the operator/command e.g. from grappa, or by parsing
> command line argument in case of the command line oprunner.
> Additionaly I rather invoke the moduls run-method directly, as it
> seems to me that via moduleservie a new thread is started, and at this
> point we like to have this under control.

All makes sense. You can populate the parameters prior to run() in whatever
way you see fit. If you want to do it after initialization, you could
create your own preprocessor that does it. Or just set them directly right
away. Whatever works.

> it seems, that the init preprocessor assigns the service parameters of
> a Command, not the Service preprocessor as I expected. Is the correct?
> (Probably related to "shadowing" the Service and Context parameters of
> a Command)

Yes, because the InitPreprocessor calls initialize() and for CommandModules
that injects the context. And InitPreprocessor happens before
ServicePreprocessor. I discussed this wrinkle in my previous reply.

> BTW: what is the sematics of injecting a context (into a module?)

Does this answer your question:
https://github.com/scijava/scijava-common/blob/scijava-common-2.44.2/src/main/java/org/scijava/Context.java#L340-L360
?

Note that "injecting a Context" is something done to Java objects, not
modules per se. Initializing a CommandModule instance injects its context
into its associated Command instance [2]. But for other sorts of modules
such as ScriptModule, there is no associated Java object.

> > Do you think that Commands should also include service and context
> > inputs when iterating them? If so, we can try removing that
> > exclusion and see what explodes... ;-)
>
> We would not need them rather hide the from the user.

OK, then I will not worry about changing this behavior any time soon -- I
think it is tolerable for the time being. But unfortunately, to fully
support all modules (not just commands), you still need the logic to hide
service and context inputs, since other modules types like scripts will
often have them.

> no, we are hapy with one, just have to get hold of it (and use it in a
> static way)

Since you only need a single Context, you presumably either: A) have a
standalone application, in which case you should just spin up a Context and
keep a reference to it; or: B) have an ImageJ plugin, in which case you
should implement Command and write "@Parameter private Context context" in
your command and you'll magically get the context injected. Actually, it is
most direct in that case to declare @Parameters for all your needed
services, rather than the context itself, since typically what you will
want to do is make various service calls.

> We think we could do without command and parameter initializers but
> work only with the parameter's callback function

Great idea. This would elegant, and often superior in case of later changes
to the relevant parameter(s). We can try to simplify this for SJC3, which
is slated for release within the next few months [3]. I filed an issue for
it [4]. There are some minor obstacles in certain cases, which I describe
on the issue if you are interested, but they all seem surmountable.

> What if this callback reqires/assumes one or several other parameters
> to aready have be set? It seems to be, that this necessarily is the
> responsibility of the callback function (resp. its programmer) to
> handle this.

Agreed. This is a secondary parameter which depends on multiple primary
parameters. So they all need callbacks which recompute the secondary
parameter -- presumably by calling the same helper method, which does
nothing if any of the needed primary parameters are still null.

> Otherwise the Command or its Parameters have to declare a predefine
> order in which parameters have to be set. (Which we have considered to
> introduce to alida/mitobo few years ago but abandoned this idea as it
> seems to messy/error prone.)

Again agreed: best not to mandate anything with respect to order.

> in case of command execution via GUI (in contrast to
> programmatically): what if not all parameters which add further
> parameters are filled before the GUI is created and presented to the
> user and are set by the user? What we are considering is that the GUI
> to figure out such events have happened and then to adapt the GUI
> accordingly.

Yes, ideally we should support that in the ImageJ UI. I believe that
CellProfiler handles it by rebuilding the UI every time anything changes
structurally. We could do the same thing, and it would be efficient enough
-- the ImageJ API requires specific method calls to mutate parameter
attributes, which would tell us when a UI rebuild of the input harvester is
necessary.

> How to figure out that set set of parameter (or the type of an already
> existing parameter) was change by a callback function?

When a parameter _value_ is changed in a callback, it is typically a direct
assignment to a field. So that would not trigger any additional callbacks.
This makes infinite loops impossible, but also means it becomes the
programmers responsibility to keep track of "transitive parameter
dependencies" and update all downstream parameters accordingly.

When a parameter attribute is changed in a callback (which only
DynamicCommands can do), we can easily make the framework publish some
event -- individual programmers would not need to deal with this, and
everything would "just work."

> I favour the following guideline: A parameter, e.g. inputDisplay, may
> add (or remove) parameters to the command exclusively depending of its
> own value. Furthermore the parameter (names) potentially added by this
> parameter are disjoint from those parameters added by other parameters
> of the command. However, it is probably not possible to check or
> enforce this restriction.

While that would certainly provide some guarantees, I agree that it is not
possible to enforce it. So I would favor not stating any restrictions of
that sort.

> A different issue I came across have a second look at the Parameter
> annotation, sepcifically its choices: The few examples of usage I had
> a look at are parameters of type String which announce valid values.
> It might me worth considering to drop this feature and use Enums
> instead of Strings which easily allows to generate an approprate
> selection by the GUI.

The problem with enums is they are not extensible. So if you want to
dynamically generate the choices via callbacks, an enum will not work.
IIRC, the module framework does already support enums as dropdown list
boxes. But I think there is still a place for the choices attribute, too.
Let me know if you see a way around it.

Regards,
Curtis

[1] http://imagej.net/pipermail/imagej-devel/2015-August/002661.html
[2]
https://github.com/scijava/scijava-common/blob/scijava-common-2.42.2/src/main/java/org/scijava/command/CommandModule.java#L146
[3] https://github.com/scijava/scijava-common/milestones/3.0.0
[4] https://github.com/scijava/scijava-common/issues/181



On Wed, Apr 16, 2014 at 9:47 AM, Stefan Posch <posch at informatik.uni-halle.de
> wrote:

> Hi Curtis,
>
> regarding the concept of initializers I had a discussion with Birgit
> yesterday
> and we came up with the following ideas.
>
> We think we could do without command and parameter initializers but work
> only with
> the parameter's callback function which - as currently - are to be invoked
> upon setting/changing the corresponding parameters value.
>
> As currently, depending on parameter values, e.g. the image assigned to a
> Dataset,
> the command may add (or remove) parameters. This would be accomplished
> by the callback functions of the parameter whose value is the cause for
> these new parameters.
> E.g. the callback function of the inputDisplay of DuplicateImage would add
> the parameters
> (which is currently done by the command initializer).
> If some parameters should get (initial) values depending on the value of
> other
> parameters (e.g. your example of setting default brightness/contrast
> min,max values
> to current min,max of the input image) would we again the responsibility of
> the callback function of the cause, i.e. the input image.
>
> This would eleviate us of the need to fill in parameters required for the
> command initializer.
> If a parameter's value is set (either by a pre processor or
> programmatically)
> its callback function takes care of taking the apropriate actions.
>
> If the pre processor is run, it just needs to set the parameter values it
> decides to,
> and the callback functions would be could automatically.
>
> What remains is of course:
> (i) assume a parameter's value is changed, and its callback method
>   called accordingly. What if this callback reqires/assumes one or several
> other parameters
>   to aready have be set? It seems to be, that this necessarily is the
> responsibility
>   of the callback function (resp. its programmer) to handle this. I.e. to
> check
>   the validity of other parameters it requires. Otherwise the Command or
> its Parameters
>   have to declare a predefine order in which parameters have to be set.
>   (Which we have considered to introduce to alida/mitobo few years ago but
> abandoned this
>   idea as it seems to messy/error prone.)
> (ii) in case of command execution via GUI (in contrast to
> programmatically):
>     what if not all parameters which add further parameters are
>     filled before the GUI is created and presented to the user and are set
> by the user?
>     What we are considering is that the GUI to figure out such events have
> happened
>     and then to adapt the GUI accordingly.
>
>     How to figure out that set set of parameter (or the type of an already
> existing parameter)
>     was change by a callback function?
>     We see two possibilities:
>     (a) a parameter may announce via its annotation that it (occasionally)
>         _may_ change paramter definitions and the GUI always assumes that
> this had happend,
>         is such a parameter's value has changed (which the GUI knows at it
> controls this processes).
>     (b) the callback function is to fire events in case it changes
> parameter definitions.
>
>     (a) might be similar or be used in analogy to your idea of a parameter
> to announce "required before initialize",
>        as the pre processor framework would know that setting of such a
> parameter probably/potentially
>        may add parameters and should better be set before creating the GUI
> to ask the user for
>        further parameters (and if it accomplishes to set all of those
> parameters and either excludes them from
>        the GUI - as currently done by IJ2 for input images - or prohibits
> changing these parameters,
>        we get rid of problem (i) stated above).
>
>
> To make things conceptionally easier (for me) I favour the following
> guideline:
> A parameter, e.g. inputDisplay, may add (or remove) parameters to the
> command
> exclusively depending of its own value. Furthermore the parameter (names)
> potentially
> added by this parameter are disjoint from those parameters added by other
> parameters of
> the command. However, it is probably not possible to check or enforce this
> restriction.
> As stated above in (ii) in my view it would be the task of the programmer
> of the Comand anyway
> to cope with more complicated situations and does not affect to supporting
> "runtime system",
> e.g. the functionality to run pre processors and creating GUIs to harvest
> input vlaues from the user.
>
>
> Best regards
>
> Stefan
>
> PS.:
> A different issue I came across have a second look at the Parameter
> annotation, sepcifically
> its choices: The few examples of usage I had a look at are parameters of
> type String which
> announce valid values. It might me worth considering to drop this feature
> and use Enums instead
> of Strings which easily allows to generate an approprate selection by the
> GUI.
> --
> Prof. Dr.-Ing. Stefan Posch,
>         Institut fuer Informatik, Martin-Luther-Universitaet
> Halle-Wittenberg
>         Von-Seckendorff-Platz 1, 06099 Halle (Saale)
> phone:  ++49 345 55-24728
> fax:    ++49 345 55-27039
> e-mail: Stefan.Posch at informatik.uni-halle.de
> www:    www.informatik.uni-halle.de/~posch/
>



On Mon, Apr 14, 2014 at 10:16 AM, Stefan Posch <
posch at informatik.uni-halle.de> wrote:

> Hi Curtis,
>
> thanks for your reply, we are getting ahead, but still questions for
> running commands
>
> >    * The run() method of a module can assume that all required input
> >    parameters have been filled (i.e., are non-null). And the
> corresponding
> >    post-condition of run() is that all required output parameters are now
> >    filled.
> perfect, the same with us
>
> >    * The initialize() method of a module cannot necessarily assume
> >    anything about the state of its parameters. As you pointed out,
> ImageJ2
> >    has various commands right now that *do* assume certain parameters
> have
> >    been filled via preprocessing. This works in practice (at least from
> >    the ImageJ application), but is not particularly rigorous.
> >    * Similarly, ImageJ2 has several commands which assume their
> >    initializer has been called, but it is not stated as a formal
> >    precondition. Most probably it makes sense to state that in the
> >    javadoc, would you agree? In other words: if you aren't going to
> >    include the InitPreprocessor in the preprocessing chain, you are still
> >    somehow responsible for calling module.initialize() before calling
> >    module.run(). Is that fair?
> again: perfect
>
> >    So the main sticky point is what to do about initialize() requiring
> >    certain parameters to be already filled. This is useful for dynamic
> >    modules, but also just for computing defaults -- e.g., setting default
> >    brightness/contrast min & max values to the current display min max of
> >    the input image. So it seems there are two "layers" of input
> >    parameters: those needed before initialize() and those not needed for
> >    it.
> >    Maybe we need a way to formally flag these "required before
> initialize"
> >    parameters in the annotation? What do you think? Would that help you?
> This would be different from autoFill() ?
>
> Yes and no.
>
> In a way it makes responsibilities clear, in so far I feel comfortable
> with it.
>
> However, it seems to me that there are (potentially very heavy)
> restrictions
> on the parameters which may be filled in advance (automaticcal and not by
> the user)
> in a sensible way. As far as I understand ij2 fills in parameters with
> what I think
> you called AutoFooPreprocessors, so active image and active display?
> I cannot come up with further ones. How would we fill in an int parameter
> without knowledge of its meaning/sematics?
> And even for images is only possible for commands with exactly one image
> or display.
> Obviously we could introduce a further flag for an image parameter to
> notify,
> that I what to be assigned the active image with. But this seems pretty
> specific.
> And probably not generic to be introduce to scijava but rather deferred to
> the
> "application", e.g. imagej.
> And there might be aplications which call for more the two layers?
>
> Summing up, I am afraid that I do not have a cute idea.
> Of course I appreciate the functionality the set initial values or make
> the type
> of parameters depending on image features (like dimensionality, range of
> values).
> Still adding parameters seems awkward to be. Could we come by with "only"
> changing
> types of parameters. E.g. for DuplicateImage not add one parameter for
> each axes rather
> have one array parameter with its length determined by the dimensionality?
> And may be indicate via annotations, depending on which other parameter(s)
> the
> type of this parameter will change?
>
> Rather more question:
> Thinking of module and parameter intitalizers it seems to be that I get
> more unsure.
> Is it exactly to do processing between the two layers of parameters.
> And it is to add further parameters and set initial values to parameters?
> Are initial parameter values execulsively meant to serve as defaults for
> the
> user or is it required that some initial values are set (in order to
> properly
> run the command)?
>
> If so: would this mean that for running a command head less in a non
> interactive way
> makes the distiction of two layers is obsolete?
>
> >    One thing that may interest you is the recent ImageJ OPS announcement:
> >       [1]http://developer.imagej.net/2014/04/04/announcing-imagej-ops
> >    An Op is just an ImageJ command intended to be fully functional --
> That sounds great ...
>
> >   Hi Stefan,
> >   Thanks. Rather than doing this:
> >     CommandInfo testopInfo = new CommandInfo(IJTestOp.class.getName());
> >     testopModule = (CommandModule) testopInfo.createModule();
> >   I suggest instead:
> >     CommandInfo testopInfo = commandService.getCommand(IJTestOp.class);
> >     testopModule = (CommandModule)
> >   moduleService.createModule(testopInfo);
>
> the advise you gave works fine, however only for running a module for a
> given Command once.
>   (see attached source of RunTestOp.java, the zip is a tiny maven project
> ready to import to eclipse.
>    hopefully I do not forget the attachment again :-)
>
>   in short we have
>         CommandInfo testopInfo =
> commandService.getCommand(IJTestOp.class.getName());
>         CommandModule testopModule =
> (CommandModule)moduleService.createModule( testopInfo);
>
>    set some parameters
>
>    run the service and init preprocessor on the module, then
>
>         testopModule.run();
>     or as an alternative
>         moduleService.run(testopModule, false);
>
>    running the init preprocessor gives
> -----
> Exception in thread "main" java.lang.IllegalStateException: Context
> already injected: org.scijava.AbstractContextual#context
>         at org.scijava.Context.inject(Context.java:293)
>         at imagej.command.CommandModule.initialize(CommandModule.java:144)
>         at
> imagej.module.process.InitPreprocessor.process(InitPreprocessor.java:61)
>         at mainroutine.RunTestOp.main(RunTestOp.java:62)
> ------
>
>   Creating a new module for the same CommandInfo fixes the problem (line
> 60)
>
>   Is this intended, i.e. that the init preprocessor for a module may be
> run only once?
>   This would pose a serious problem to us:
>
>   What we want to do is essentially the following:
>   The user selects a Command via the GUI and we create a Window displaying
> the input parameters.
>   The user may change/supply these parameters and run the Command.
>   Upon return a window displaying the results pops up.
>   However, the first window displaying the input parameters is still
> available, the user may
>   change one/some parameters an rerun the command.
>   This eases testing various parameter values or the same set of
> parameters on different
>   images without the need to repeatatly select an operator/command.
>
>   Have you further advise how we can accomplish this, i.e. reusing a
> command module?
>
>   BTW: I prefer to not set the parameters via the moduleService.run
> method, as the parameters
>        are set elsewhere (either by the user via a GUI configuring the
> operator/command e.g. from grappa,
>        or by parsing command line argument in case of the command line
> oprunner.
>        Additionaly I rather invoke the moduls run-method directly, as it
> seems to me that
>        via moduleservie a new thread is started, and at this point we like
> to have this under control.
>
>   it seems, that the init preprocessor assigns the service parameters of a
> Command,
>   not the Service preprocessor as I expected. Is the correct?
>   (Probably related to "shadowing" the Service and Context parameters of a
> Command)
>
>   BTW: what is the sematics of injecting a context (into a module?)
>
> >    So this is certainly inconsistent and confusing. Do you think that
> >    Commands should also include service and context inputs when iterating
> >    them? If so, we can try removing that exclusion and see what
> >    explodes... ;-)
> We would not need them rather hide the from the user.
>
> >    If you urgently need support for multiple simultaneous ImageJ contexts
> >    created with the default constructor while ij-legacy is on the
> >    classpath, and you want to try fixing the bug yourself, we would be
> >    happy to elaborate further so that you can give it a shot.
> no, we are hapy with one, just have to get hold of it (and use it in a
> static way)
>
> Again, thanks again
>
> best regards   Stefan
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150821/58d6159b/attachment-0001.html>

From ctrueden at wisc.edu  Fri Aug 21 22:35:17 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Aug 2015 22:35:17 -0500
Subject: [ImageJ-devel] Problems running Versatile Wand in batch mode
In-Reply-To: <5B1D9118-5E49-4040-B205-E50F6431A123@iap.tuwien.ac.at>
References: <CANOyR64M_g=1CpJng5PEtOF1zkzPv9MfvLaw59-j4OZPpk1OgA@mail.gmail.com>
	<E1A93E58-4DCE-48C4-9E79-C8DB9FD2894B@iap.tuwien.ac.at>
	<CANOyR67dDQG-ii3ckytSWCmgWqv0DKe8RCVo_Qjs+YbL9pLuPA@mail.gmail.com>
	<C02777A4-953F-44B0-9E9A-03578E882441@nih.gov>
	<CANOyR67LKHr4Bcgs+jJfb8ekSLt8nxpya93kHTbWq8-H_0YkUA@mail.gmail.com>
	<FAD7E785-6261-4F3C-B3AA-08EF5F1B96CE@nih.gov>
	<5A01E5F0-D745-48DD-9DC8-90ECF4EB648F@iap.tuwien.ac.at>
	<CADN69ynn21553Zr1CrOA1XCRcfepC+od6wKqL4hQNUsXgxKZvg@mail.gmail.com>
	<C414254E-C9C7-4210-A61B-6ED679C5FD0E@iap.tuwien.ac.at>
	<CADN69ymbm86DSYgS0Z=85SeGGCfDvVO7GtnVHLfYkp832DfJBw@mail.gmail.com>
	<5B1D9118-5E49-4040-B205-E50F6431A123@iap.tuwien.ac.at>
Message-ID: <CADN69yn0TVK3uBqs0+LhOSzUyaqo-2uMZCT5_rxE-7Rg-+q=xQ@mail.gmail.com>

Hi Michael,

Apologies for the long delay in follow up.

> Concerning the 'Compile&Run' command, this is EXTREMELY handy and it
> would be a major step backwards if this is not supported any more!

Just wanted to let you know that we are indeed planning to work on
restoring the Compile & Run command in ImageJ2:

   https://github.com/imagej/imagej-ui-swing/issues/48

We will have to address several related issues surrounding the javac
compiler, javax.tools, and the switch to Java 8. (E.g., right now, you
cannot develop Java code in the Script Editor when running with Java 7 or
Java 8.) The goal is to make (a version of) Compile & Run work again as
part of that effort.

Timeline might not be till first half of next year, but it is on the radar.

Regards,
Curtis

On Fri, May 29, 2015 at 4:02 AM, Michael Schmid <schmid at iap.tuwien.ac.at>
wrote:

> Hi Curtis,
>
> Thank you for the additional information.
>
> It seems that Avital's problem was related to compiling, not to the
> patches of the IJ1 code in Fiji.
>
> Concerning the 'Compile&Run' command, this is EXTREMELY handy and it would
> be a major step backwards if this is not supported any more!
> If I get the java sources of a plugin, and it does not work exactly as I
> want, I can quickly try any changes that come into my mind or insert
> debugging code, try/catch statements, etc., and with a single click on
> Compile&Run (and the RETURN key to accept the same filename as before) I am
> already testing it on an image.  This is independent of any programming
> environment, I can do it on any computer anywhere in a lab, or on the
> laptop of a colleague of mine who has a problem and asks me for help.  And
> there won't be any automatic update reverting it to the published version.
>
> Also, for publishing a plugin, it's simpler to provide the java code on a
> web page with the description than preparing an ImageJ update site in
> addition.  I can also send experimental plugin code to others by email,
> carry it around on a USB stick, etc.
> All this would be gone without Compile&Run!
>
> Best regards,
>
> Michael
> ________________________________________________________________
> On May 28, 2015, at 20:42, Curtis Rueden wrote:
>
> > Hi Michael,
> >
> > [Added the imagej-devel mailing list to CC, since this discussion may
> interest other ImageJ plugin developers.]
> >
> > > A quick search for PlugInFilterRunner in the ij1-patcher seems to
> > > indicate that the PlugInFilterRunner is not patched.
> >
> > There is another project on top of ij1-patcher that does the bulk of the
> actual patching for ImageJ2:
> >
> >     https://github.com/imagej/imagej-legacy
> >
> > And it does have logic that affects PlugInFilters:
> >
> >
> https://github.com/imagej/imagej-legacy/blob/imagej-legacy-0.15.0/src/main/java/net/imagej/legacy/IJ1Helper.java#L591-L621
> >
> > But at first glance, this is only used for the Script Editor's Run
> command in case the Java code being run is a PlugInFilter:
> >
> >
> https://github.com/imagej/imagej-legacy/blob/imagej-legacy-0.15.0/src/main/java/net/imagej/legacy/LegacyJavaRunner.java#L54
> >
> > I apologize that I will not have time to dig into this issue more over
> the summer -- but I'm insanely busy with work on the ImageJ Common data
> model and ImageJ OPS and SCIFIO APIs, ImageJ-OMERO integration, IT
> infrastructure resources and Fiji plugin maintenance, upcoming Madison
> ImageJ conference planning, paper writing, etc.
> >
> > Backwards compatibility with ImageJ1 is extremely challenging,
> especially as things continue to evolve -- e.g., the major changes to how
> Java works on OS X, and the breaking changes of Java 8. The best we can do
> right now is to prioritize work that critically affects a large number of
> ImageJ users, where no easy workaround is possible. In the case of
> compiling Java plugins, there are several ways of doing it that do not
> require "Compile and Run" and similar, so for now that's what I'll
> recommend. I hope that plugin developers will make installation easy for
> their users by creating ImageJ update sites, rather than shipping bare
> .java files.
> >
> > Regards,
> > Curtis
> >
> > P.S. When searching for code, you might try http://search.imagej.net/
> and click the GitHub button.
> >
> >
> > On Thu, May 21, 2015 at 3:01 PM, Michael Schmid <schmid at iap.tuwien.ac.at>
> wrote:
> > Hi Curtis,
> >
> > thank you!
> > My fault was looking at the fiji, not the imagej repository.
> >
> > A quick search for PlugInFilterRunner in the ij1-patcher seems to
> indicate that the PlugInFilterRunner is not patched.
> > I agree that the ij1-patcher is not easy too understand, and I did not
> find anything that looks like it could cause the problem of Avital.
> >
> > Michael
> > ________________________________________________________________
> > Michael Schmid                    email: schmid at iap.tuwien.ac.at
> > Institut f?r Angewandte Physik, Technische Universit?t Wien
> > Wiedner Hauptstr. 8-10/E134, A 1040 Wien, Austria
> > Tel. +43 1 58801-13452 or -13453, Fax +43 1 58801 13499
> > ________________________________________________________________
> >
> > On May 21, 2015, at 21:23, Curtis Rueden wrote:
> >
> > > Hi Michael,
> > >
> > > > [I must admit, I know nothing about how Fiji modifies ImageJ; in a
> > > > quick search I did not find anything on fiji.sc or the github]
> > >
> > > The relevant project is:
> > > https://github.com/imagej/ij1-patcher/
> > >
> > > But digging into it is a substantial endeavor.
> > >
> > > Regards,
> > > Curtis
> > >
> > > On Thu, May 21, 2015 at 1:35 PM, Michael Schmid <
> schmid at iap.tuwien.ac.at> wrote:
> > > Hi Wayne,
> > >
> > > thank you for finding this out!
> > >
> > > It must be a strange Fiji bug! When called like this, the Versatile
> Wand behaves like an ordinary ExtendedPlugInFilter. It uses the ImagePlus
> passed to the showDialog method, which comes directly from
> WindowManager.getCurrentImage() executed by the PlugInFilterRunner.
> > >
> > > [I must admit, I know nothing about how Fiji modifies ImageJ; in a
> quick search I did not find anything on fiji.sc or the github]
> > >
> > > Best regards,
> > >
> > > Michael
> > > ________________________________________________________________
> > > Michael Schmid                    email: schmid at iap.tuwien.ac.at
> > > Institut f?r Angewandte Physik, Technische Universit?t Wien
> > > Wiedner Hauptstr. 8-10/E134, A 1040 Wien, Austria
> > > Tel. +43 1 58801-13452 or -13453, Fax +43 1 58801 13499
> > > ________________________________________________________________
> > >
> > > On May 21, 2015, at 18:54, Rasband, Wayne (NIH/NIMH) [E] wrote:
> > >
> > > > Dear Avital,
> > > >
> > > > This is a Fiji issue. You should be able to work around it by
> deleting the file ?Versatile_Wand.java" (location is shown in Console error
> messages), copying Versatile_Wand.class into the Fiji.app/plugins folder,
> and restarting Fiji. I have attached a copy of Versatile_Wand.class or you
> can download it from the Versatile Wand webpage.
> > > >
> > > > Best regards,
> > > >
> > > > -wayne
> > > >
> > > >
> > > >> On May 21, 2015, at 3:03 AM, Avital Steinberg <
> steinbergavital at GMAIL.COM> wrote:
> > > >>
> > > >> Hi Wayne,
> > > >> When I run your code (in which you create 2 images), I get an error
> message - ROI manager, "the active image does not have a selection". Also,
> it didn't form an ROI - the ROI manager is empty.
> > > >>
> > > >> There is also a console window that shows red warnings - I've had
> it for a long time, ever since I upgraded imageJ. This console shows up
> both on my mac and also on my Linux machine. I don't remember when it first
> showed up. It didn't bother me, since everything was working then.
> > > >>
> > > >> Are the attached warning messages related to the problem?
> > > >>
> > > >> Thanks,
> > > >> Avital
> > > >>
> > > >> On Wed, May 20, 2015 at 6:42 PM, Rasband, Wayne (NIH/NIMH) [E] <
> rasbandw at mail.nih.gov> wrote:
> > > >> Dear Avital,
> > > >>
> > > >> The following version of your test macro creates a selection in the
> saved image.
> > > >>
> > > >> Best regards,
> > > >>
> > > >> -wayne
> > > >>
> > > >>   setBatchMode(true);
> > > >>   newImage("Untitled", "8-bit ramp", 500, 500, 1);
> > > >>   image1ID = getImageID();
> > > >>   newImage("Untitled", "8-bit ramp", 500, 500, 1);
> > > >>   image2ID = getImageID();
> > > >>   selectImage(image1ID);
> > > >>   if(isActive(image1ID))
> > > >>      print("The first image is active");
> > > >>   else
> > > >>      print("The first image isn't active");
> > > >>   if (isActive(image2ID))
> > > >>      print("The second image is active");
> > > >>   else
> > > >>      print("The second image isn't active");
> > > >>   run("Gaussian Blur...", "sigma=2");
> > > >>   run("Set Scale...", "distance=0");
> > > >>   run("Versatile Wand", "value=60 color=-100 gradient=10
> connectedness=8-connected x=2 y=2 do");
> > > >>   run("ROI Manager...");
> > > >>   roiManager("Add");
> > > >>   saveAs("tiff", getDirectory("home")+"test.tif?)
> > > >>
> > > >>
> > > >>> On May 20, 2015, at 5:35 AM, Avital Steinberg <
> steinbergavital at GMAIL.COM> wrote:
> > > >>>
> > > >>> Thanks, but the problem isn't solved. Can anyone else check if
> they're
> > > >>> having similar problems running this code? Does this code create a
> > > >>> selection in the saved image also for you?
> > > >>>
> > > >>> setBatchMode(true);
> > > >>> open();
> > > >>> image1ID = getImageID();
> > > >>> open();
> > > >>> image2ID = getImageID();
> > > >>> selectImage(image1ID);
> > > >>> if(isActive(image1ID)){
> > > >>>   print("The first image is active");
> > > >>> }
> > > >>> else {
> > > >>>   print("The first image isn't active");
> > > >>> }
> > > >>>
> > > >>> if(isActive(image2ID)){
> > > >>>   print("The second image is active");
> > > >>> }
> > > >>> else {
> > > >>>   print("The second image isn't active");
> > > >>> }
> > > >>> makePoint(1854, 726);
> > > >>> run("Gaussian Blur...", "sigma=2");
> > > >>> run("Set Scale...", "distance=0");
> > > >>> run("Versatile Wand", "value=60 color=-100 gradient=10
> > > >>> connectedness=8-connected x=2 y=2 do");
> > > >>> run("ROI Manager...");
> > > >>> roiManager("Add");
> > > >>> saveAs("Tiff");
> > > >>>
> > > >>>
> > > >>> I am using ImageJ 1.49t7, which came with Java 1.6.0_065 (64 bit).
> I am
> > > >>> running it on a mac, but I had the same problems also on a Linux
> machine
> > > >>> with ImageJ 1.49s and java 1.6.0_24.
> > > >>>
> > > >>> MakePoint isn't needed, but it's besides the point, since the bug
> has
> > > >>> nothing to do with it and exists also without it.
> > > >>>
> > > >>> Thanks,
> > > >>> Avital
> > > >>>
> > > >>> On Tue, May 19, 2015 at 6:25 PM, Michael Schmid <
> schmid at iap.tuwien.ac.at>
> > > >>> wrote:
> > > >>>
> > > >>>> Hi Avital,
> > > >>>>
> > > >>>> sorry, I can't reproduce the problem. Your macro works; it blurs
> the first
> > > >>>> image and does the wand selection on it. I also get the selection
> in the
> > > >>>> ROI Manager.
> > > >>>> I tried with both 8-bit grayscale as well as RGB images.
> > > >>>>
> > > >>>> What I don't understand is the "makePoint(1854, 726)" command;
> Gaussian
> > > >>>> Blur does not care about point selections. So it blurs the whole
> image.
> > > >>>>
> > > >>>> I am using ImageJ 1.49u4, Java 1.6.0_45.
> > > >>>>
> > > >>>> Michael
> > > >>>> ________________________________________________________________
> > > >>>> On May 19, 2015, at 17:01, Avital Steinberg wrote:
> > > >>>>
> > > >>>>> Hi,
> > > >>>>> I'm trying to use Versatile Wand in batch mode. The following
> macro works
> > > >>>>> well in batch mode:
> > > >>>>>
> > > >>>>> setBatchMode(true);
> > > >>>>> open();
> > > >>>>> makePoint(1854, 726);
> > > >>>>> run("Gaussian Blur...", "sigma=2");
> > > >>>>> run("Set Scale...", "distance=0");
> > > >>>>> run("Versatile Wand", "value=60 color=-100 gradient=10
> > > >>>>> connectedness=8-connected x=2 y=2 do");
> > > >>>>> run("ROI Manager...");
> > > >>>>> roiManager("Add");
> > > >>>>> saveAs("Tiff");
> > > >>>>>
> > > >>>>> However - when I try to work with multiple images, select the
> active
> > > >>>> image
> > > >>>>> and then use the Versatile Wand, no selection is created:
> > > >>>>>
> > > >>>>> setBatchMode(true);
> > > >>>>> open();
> > > >>>>> image1ID = getImageID();
> > > >>>>> open();
> > > >>>>> image2ID = getImageID();
> > > >>>>> selectImage(image1ID);
> > > >>>>> if(isActive(image1ID)){
> > > >>>>>  print("The first image is active");
> > > >>>>> }
> > > >>>>> else {
> > > >>>>>  print("The first image isn't active");
> > > >>>>> }
> > > >>>>>
> > > >>>>> if(isActive(image2ID)){
> > > >>>>>  print("The second image is active");
> > > >>>>> }
> > > >>>>> else {
> > > >>>>>  print("The second image isn't active");
> > > >>>>> }
> > > >>>>> makePoint(1854, 726);
> > > >>>>> run("Gaussian Blur...", "sigma=2");
> > > >>>>> run("Set Scale...", "distance=0");
> > > >>>>> run("Versatile Wand", "value=60 color=-100 gradient=10
> > > >>>> connectedness=8-connected x=2 y=2 do");
> > > >>>>> run("ROI Manager...");
> > > >>>>> roiManager("Add");
> > > >>>>> saveAs("Tiff");
> > > >>>>>
> > > >>>>> Why wouldn't this script work? Only one image is active.
> > > >>>>>
> > > >>>>> Thank you,
> > > >>>>> Avital
> > > >>>>
> > > >>>> --
> > > >>>> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
> > > >>>>
> > > >>>
> > > >>> --
> > > >>> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
> > > >>
> > > >>
> > > >> <OutputWindowsWaynesCode.jpg><ConsoleWindowRedWarnings.jpg>
> > > >
> > > > <Versatile_Wand.class>
> > >
> > >
> >
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150821/31ec36fd/attachment-0001.html>

From ctrueden at wisc.edu  Fri Aug 21 23:10:06 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Aug 2015 23:10:06 -0500
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <web-159742879@univ-paris7.fr>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
	<CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
	<web-159742879@univ-paris7.fr>
Message-ID: <CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>

Hi Adrian,

> Doesn't that allow doing what Felix would like to do, by populating
> the combobox through such an initialiser ?

I think what Felix wants is to set a parameter's "choices" attribute --
i.e., the values that will appear in the input harvester UI's dropdown list
box.

It can be done with a DynamicCommand, but right now it only works from an
initializer, not from a callback. So if you want to populate the choice
once from, say, the active Dataset, it works. But if you want to update the
choices e.g. every time the user moves a numerical slider, it will not work
because the UI will not update.

See also:
* https://github.com/scijava/scijava-common/issues/180
* https://github.com/scijava/scijava-common/issues/181

> Are the parameters populated/initialised in the order they appear? In
> particular, is the initialisation done serially or can there be
> parallel execution of initialisers ?

Initialization is currently implemented serially [1].

> I have parameters a, b, c whose initialisation depend on a common
> calculation (depending on the image gotten through a previous
> @Parameter ImagePlus imp): can I do this calculation in the
> initialiser for the first parameter a, and then in the initialisers of
> b and c rely on the fact that the calculation was already done ?

Perhaps simplest at the moment would be to give your command a global
initializer -- i.e., set the initializer method in the @Plugin annotation
itself, rather than on specific parameters. The ImagePlus will be populated
by a preprocessor _before_ the initialize method is called, so when your
global initializer gets called you will already have access to the
ImagePlus.

But again, scijava/scijava-common#181 is very relevant here.

Regards,
Curtis

[1]
https://github.com/scijava/scijava-common/blob/scijava-common-2.42.2/src/main/java/org/scijava/module/AbstractModule.java#L75-L88

On Fri, Aug 21, 2015 at 6:18 AM, Adrian Daerr <
adrian.daerr at univ-paris-diderot.fr> wrote:

> Hi Curtis, Felix, Jan, and others,
>
> In the CommandWithPreview tutorial example[*] that Curtis sent to
> the list a few weeks back, there is a @Parameter which is
> initialised to a value depending on the initialisation of another
> parameter:
>
> @Parameter private ImagePlus imp;
>
> @Parameter(persist = false, initializer = "initTitle") private String
> title;
>
> /** Initializes the {@link #title} parameter. */
> protected void initTitle() {
>         title = initialTitle = imp.getTitle();
> }
>
> [*]
>
> https://github.com/imagej/imagej-tutorials/blob/master/commands-with-preview/src/main/java/CommandWithPreview.java
>
> Doesn't that allow doing what Felix would like to do, by
> populating the combobox through such an initialiser ?
>
> Are the parameters populated/initialised in the order they
> appear? In particular, is the initialisation done serially or can
> there be parallel execution of initialisers ? I ask because I
> have parameters a, b, c whose initialisation depend on a common
> calculation (depending on the image gotten through a previous
> @Parameter ImagePlus imp): can I do this calculation in the
> initialiser for the first parameter a, and then in the
> initialisers of b and c rely on the fact that the calculation was
> already done ?
>
> cheers,
> Adrian
>
>
>
>
> On Thu, 20 Aug 2015 17:13:11 -0500
>  Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>> Hi Felix, Jan and everyone,
>>
>> I couldn?t find any hint that it is possible to update the choices of
>>> a parameter (declared with the annotator) in a callback that for
>>> another parameter.
>>>
>>
>> It is possible to dynamically adjust parameters from Java code [1]. You
>> can
>> also dynamically add and remove parameters. Such commands extend the
>> DynamicCommand class.
>>
>> There are many examples currently in the imagej-plugins-commands project;
>> e.g.:
>>
>> https://github.com/imagej/imagej-plugins-commands/blob/imagej-plugins-commands-0.5.1/src/main/java/net/imagej/plugins/commands/restructure/AddAxis.java
>>
>> However, a couple of notes:
>>
>> - This pattern makes the command less reusable from other contexts,
>> because
>> some contexts require a priori knowledge about the number and types of
>> input and output parameters.
>>
>> - The user interface currently does not properly refresh the input
>> harvester dialog if changes are made to parameters from a callback. So
>> while you can technically do things like change the choices array of a
>> multiple-choice input, the user will not actually see it.
>>
>> - What does work currently is to determine the multiple-choice values at
>> initialization time, based on the values of parameters which have already
>> been populated earlier, such as an active dataset. This is what many of
>> the
>> DynamicCommand implementations in imagej-plugins-commands do.
>>
>> Really, there are _five_ different classes of commands here:
>>
>> 1) Totally fixed, with inputs and outputs known in advance.
>> 2) Updates parameter attributes (such as choices?but not # or type of
>> inputs/outputs) once during initialization.
>> 3) Updates parameter number and type (i.e., adding/removing
>> inputs/outputs)
>> once during initialization.
>> 4) Updates parameter attributes repeatedly e.g. during callbacks.
>> 5) Updates parameter number and type repeatedly e.g. during callbacks.
>>
>> Of these, type #1 is most desirable for a variety of reasons. Failing
>> that,
>> types #2 and #3 can be done right now using DynamicCommand and it works
>> properly from the ImageJ UI?but not from other contexts like CellProfiler,
>> KNIME, etc. Types #4 and #5 can also be coded but will not work properly
>> from the UI in ImageJ because the input harvester is not rebuilt on
>> callbacks.
>>
>> See also:
>> * https://github.com/scijava/scijava-common/issues/42
>> * https://github.com/scijava/scijava-common/issues/43
>> * https://github.com/CellProfiler/CellProfiler/issues/647
>>
>> Regards,
>> Curtis
>>
>> [1] Dynamically updating parameters from scripts would be a different
>> story. No plans to do that any time soon...
>>
>> On Thu, Aug 20, 2015 at 6:50 AM, Jan Eglinger <jan.eglinger at gmail.com>
>> wrote:
>>
>> Hi Felix and all,
>>>
>>> On 20.08.2015 10:06, MEYENHOFER Felix wrote:
>>>
>>> I couldn?t find any hint that it is possible to update the choices of a
>>>> parameter (declared with the annotator) in a callback that for another
>>>> parameter. For example; I have a file chooser and once a file hase been
>>>> chosen, I want to read some file metadata and then update the choices of
>>>> the combobox that allows to select the images series.
>>>> Since I could not figure a way to do it, I wanted to ask here if it is
>>>> possible at all?
>>>>
>>>>
>>>> I think dynamic adjustment of parameters isn't possible currently, but I
>>> agree that it would be a great thing to have.
>>>
>>> I know quite some use cases where either a DialogListener or a series of
>>> subsequent dialogs are used in ImageJ 1.x plugins to adjust parameter
>>> choice to previously harvested input.
>>>
>>> Furthermore, is it possible to get a directory chooser instead of a file
>>>
>>>> chooser in the configuration dialog of a command using the @Parameter
>>>> annotation?
>>>>
>>>>
>>>> Yes, by using the
>>>     style = "directory"
>>> attribute. See *Templates > Python > Process Folder* in the script
>>> editor,
>>> and this related discussion:
>>>   https://github.com/imagej/imagej-legacy/pull/114
>>>
>>> Best,
>>> Jan
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
> --
> http://www.msc.univ-paris-diderot.fr/~daerr/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150821/d0a4b208/attachment.html>

From ctrueden at wisc.edu  Fri Aug 21 23:18:01 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 21 Aug 2015 23:18:01 -0500
Subject: [ImageJ-devel] RegionOfInterest vs Region
In-Reply-To: <0AE9F55B-E34D-4BE2-83F4-5B475816E5B2@gmail.com>
References: <0AE9F55B-E34D-4BE2-83F4-5B475816E5B2@gmail.com>
Message-ID: <CADN69ymRnn+6JXVbwFit-RY4f6-C0tkr-NuLaF4U3TK2GrrCCA@mail.gmail.com>

Hi Jay,

> Question about deprecated RegionOfInterest-related classes in
> ImgLib2-roi. What should I use instead?

Unfortunately, there are some things in ImgLib2 (e.g. RegionOfInterest) and
ImageJ2 (e.g. ImgPlus) that have been deprecated, but with no replacement
yet.

While the intent was to convey that the API is going to change, I now
believe these deprecations were premature: deprecation should wait till
there is a clear migration path, or else developers will simply suppress
the warnings.

Anyway, for now I would suggest using RegionOfInterest. And when something
better comes along, we'll let you know.

Regards,
Curtis

On Thu, Jun 11, 2015 at 10:37 AM, Jay Warrick <jay.w.warrick at gmail.com>
wrote:

> Hi All,
>
> Question about deprecated RegionOfInterest-related classes in ImgLib2-roi.
> What should I use instead?
>
> I think I can figure out how to do what I want to do with Labelings and
> LabelRegion etc but for some things it seems a simple RegionOfInterest sort
> of methodology might be a more straight forward solution.
>
> All suggestions welcome.
>
> Thanks!
>
> Jay
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150821/51b86101/attachment.html>

From jay.w.warrick at gmail.com  Sat Aug 22 03:46:04 2015
From: jay.w.warrick at gmail.com (Jay Warrick)
Date: Sat, 22 Aug 2015 03:46:04 -0500
Subject: [ImageJ-devel] RegionOfInterest vs Region
In-Reply-To: <CADN69ymRnn+6JXVbwFit-RY4f6-C0tkr-NuLaF4U3TK2GrrCCA@mail.gmail.com>
References: <0AE9F55B-E34D-4BE2-83F4-5B475816E5B2@gmail.com>
	<CADN69ymRnn+6JXVbwFit-RY4f6-C0tkr-NuLaF4U3TK2GrrCCA@mail.gmail.com>
Message-ID: <5A698C3B-39A9-4994-ACB8-017C6C00DD56@gmail.com>

Thanks

> On Aug 21, 2015, at 11:18 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
> 
> Hi Jay,
> 
> > Question about deprecated RegionOfInterest-related classes in
> > ImgLib2-roi. What should I use instead?
> 
> Unfortunately, there are some things in ImgLib2 (e.g. RegionOfInterest) and ImageJ2 (e.g. ImgPlus) that have been deprecated, but with no replacement yet.
> 
> While the intent was to convey that the API is going to change, I now believe these deprecations were premature: deprecation should wait till there is a clear migration path, or else developers will simply suppress the warnings.
> 
> Anyway, for now I would suggest using RegionOfInterest. And when something better comes along, we'll let you know.
> 
> Regards,
> Curtis
> 
> On Thu, Jun 11, 2015 at 10:37 AM, Jay Warrick <jay.w.warrick at gmail.com <mailto:jay.w.warrick at gmail.com>> wrote:
> Hi All,
> 
> Question about deprecated RegionOfInterest-related classes in ImgLib2-roi. What should I use instead?
> 
> I think I can figure out how to do what I want to do with Labelings and LabelRegion etc but for some things it seems a simple RegionOfInterest sort of methodology might be a more straight forward solution.
> 
> All suggestions welcome.
> 
> Thanks!
> 
> Jay
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
> http://imagej.net/mailman/listinfo/imagej-devel <http://imagej.net/mailman/listinfo/imagej-devel>
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150822/7f2fa57e/attachment-0001.html>

From adrian.daerr at univ-paris-diderot.fr  Sun Aug 23 06:30:17 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Sun, 23 Aug 2015 13:30:17 +0200
Subject: [ImageJ-devel] Status and API of ROIs in ImageJ2 ?
In-Reply-To: <web-159675194@univ-paris7.fr>
References: <55CF1F05.3050904@univ-paris-diderot.fr>
	<web-159675194@univ-paris7.fr>
Message-ID: <web-159791302@univ-paris7.fr>

Hello,

While I am still interested in answers concerning the 
status/API/roadmap for ROIs and overlays beyond what's on 
http://imagej.net/ROIs, I have solved the problem at hand which was 
keeping me from making progress, so I post the (rather obvious, once I 
found the net.imagej.overlay package) solution here for the record and 
to close this thread.

The easiest way to give a plugin a (rectangular) roi is to ...
just declare a net.imagej.overlay.RectangularOverlay as an input
parameter. It is properly populated by the origin and extent of a
rectangular selection drawn on the active image.

cheers,
Adrian


On Wed, 19 Aug 2015 17:10:06 +0200
  "Adrian Daerr" <adrian.daerr at univ-paris-diderot.fr> wrote:
> 
> Dear ImageJ developers,
> 
> I have included code from the AddROIs tutorial into the main()
> method of my plugin (for the moment essentially one of Curtis'
> commands-with-preview example), to select a Rectangle before
> calling the plugin. The source is available here:
> 
> https://gitlab.com/pendant-drop/pendant-drop
> (in Goutte_pendante.java)
> 
> If I launch the default UI, then the ROI will not show, but the
> plugin can launch. If on the other hand I launch the "swing" UI
> as in the tutorial, I do see the ROI (not until I call
> Image>Adjust>Brightness/Contrast..., but that's a minor detail),
> but now the invocation of the plugin at the end of main() will
> throw a MethodCallException with the stackTrace pasted below. How
> can the choice of a UI make the plugin execution fail ?
> 
> Is there any other way that main can set a ROI on a loaded image
> that the plugin, which still uses an ImagePlus as input
> parameter, will see when calling imp.getProcessor().getRoi() ?
> 
> TIA
> Adrian
> 
> 
> $> mvn package
> $> fiji --class-path target/pendant_drop-2.0.0-SNAPSHOT.jar 
>Goutte_pendante.class
> [INFO] Overriding About Pendant Drop; identifier: 
>command:About_Pendant_Drop; jar: 
>file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
> [INFO] Overriding Pendant Drop; identifier: command:Goutte_pendante; 
>jar: 
>file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
> [INFO] Populating metadata
> [INFO] Populating metadata
> [INFO] Found 10 JHotDraw adapters.
> org.scijava.module.MethodCallException: Error executing method: 
>Goutte_pendante#initTitle
>         at org.scijava.module.MethodRef.execute(MethodRef.java:73)
>         at 
> org.scijava.module.AbstractModuleItem.initialize(AbstractModuleItem.java:199)
>         at 
> org.scijava.module.AbstractModule.initialize(AbstractModule.java:86)
>         at 
> org.scijava.command.CommandModule.initialize(CommandModule.java:147)
>         at 
> org.scijava.module.process.InitPreprocessor.process(InitPreprocessor.java:60)
>         at 
> org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
>         at 
>org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
>         at 
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>         at 
>org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>         at 
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>         at 
> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>         at 
> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>         at 
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>         at java.lang.Thread.run(Thread.java:662)
> Caused by: java.lang.reflect.InvocationTargetException
>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
> Method)
>         at 
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>         at 
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>         at java.lang.reflect.Method.invoke(Method.java:597)
>         at org.scijava.module.MethodRef.execute(MethodRef.java:69)
>         ... 14 more
> Caused by: java.lang.NullPointerException
>         at Goutte_pendante.initTitle(Goutte_pendante.java:94)
>         ... 19 more
> [ERROR] Module threw exception
> java.lang.NullPointerException
>         at Goutte_pendante.cancel(Goutte_pendante.java:87)
>         at 
> org.scijava.command.CommandModule.cancel(CommandModule.java:140)
>         at 
> org.scijava.module.ModuleRunner.cleanupAndBroadcastCancelation(ModuleRunner.java:189)
>         at 
>org.scijava.module.ModuleRunner.run(ModuleRunner.java:161)
>         at 
> org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>         at 
>org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>         at 
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>         at 
> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>         at 
> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>         at 
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>         at java.lang.Thread.run(Thread.java:662)
> 
> 
> 
> On Sat, 15 Aug 2015 13:14:13 +0200
>  Adrian Daerr <adrian.daerr at univ-paris-diderot.fr> wrote:
>> Hello,
>> 
>> I am seizing a major rewrite of a plugin as an opportunity to switch
>> from ImageJ1 to ImageJ2, also to avoid concurrency issues[*], and 
>>now
>> lots of questions come up. Some concern the way ROIs are handled. 
>>What
>> has happened in this regard since
>>   http://imagej.net/ROIs
>> was last updated ?
>> 
>> [*] cf discussion on the ImageJ list archived at
>> http://imagej.1557.x6.nabble.com/ExtendedPlugInFilter-GenericDialog-and-synchronization-td5013333.html
>> 
>> Here are two concrete questions:
>> 
>> 1) My plugin relies on a rectangular ROI being drawn on the image to
>> know which area to include in the computation. How do I draw this 
>>ROI
>> once I have loaded the image as a dataset in the main() method that 
>>is
>> used for testing purposes ?
>> 
>> public static void main(final String... args) throws Exception {
>>     final String testImagePath = "testImage.jpg";
>> 
>>     // Launch ImageJ as usual.
>>     final ImageJ ij = net.imagej.Main.launch(args);
>> 
>>     // Open test image.
>>     final Dataset dataset = ij.dataset().open(testImagePath);
>> 
>>     // display the dataset
>>     ij.ui().show(dataset);
>> 
>>     // create rectangular ROI
>>     //imp.setRoi(120,60,340,420);// How to do this on a dataset ?
>> 
>>     // Launch the "Foo_Bar" command.
>>     ij.command().run(Foo_Bar.class, true);
>> }
>> 
>> (alternatively, how would I generate a new dataset, or I guess 
>>something like a "View" in ImageJ2 terminology, of the ROI sub-image 
>>of the original dataset ? I could then substitute the original 
>>dataset with this sub-image and have the plugin operate on the whole 
>>image by default)
>> 
>> 2) The plugin preview generates overlays using java.awt.geom.Path2D,
>> java.awt.geom.Area and java.awt.Shape, which are then converted via
>> ij.gui.ShapeRoi() and ij.gui.Overlay(), assembled with 
>>overlay.add(),
>> and drawn using imp.setOverlay(). Is there a new IJ2-way to do this
>> (especially since the cited web page (rightly) insists on separation
>> of selection and visualisation shapes) ?
>> 
>> TIA,
>> Adrian
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
> 
> -- 
> http://www.msc.univ-paris-diderot.fr/~daerr/
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-- 
http://www.msc.univ-paris-diderot.fr/~daerr/


From adrian.daerr at univ-paris-diderot.fr  Sun Aug 23 06:44:19 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Sun, 23 Aug 2015 13:44:19 +0200
Subject: [ImageJ-devel] Masking @Parameter from GUI harvesting ?
Message-ID: <web-159791561@univ-paris7.fr>

Dear ImageJ developers,

As I slowly learn more about IJ2 @Plugins, I have one question and 
three minor comments that I would like to submit to you.

1) How does one prevent a @Parameter from showing up in the harvesting
GUI dialog, in the manner of a '@Parameter LogService log'? (more 
below)

2) A net.imagej.overlay.RectangleOverlay parameter, although properly
populated, provoques an Exception after the execution of the command.
(more details and stacktraces below)

3) When a new preview is triggered, and that preview modifies numeric
parameters, then the numeric values visible in the gui dialog are
updated except for the NumericField on which input has triggered the
call to preview().

4) It would be nice if a parameter could have a label even if
ItemVisibility is MESSAGE:
   @Parameter(persist = false,
              visibility = org.scijava.ItemVisibility.MESSAGE,
              label = "Current foo value")
     private double foo = 0;
(currently, at least on my box, the label is not shown in this case)
Obviously a workaround is to build a String with label+foo instead.

cheers,
Adrian



ad 1)
How to prevent a @Parameter from showing up in the harvesting GUI
dialog? Some seem to be masked by default (ImagePlus, LogService), but
I did not find the appropriate annotation to make the parameter roi in
the following not show up, although it is already properly populated
by the rectangular selection of the active image ? There is no
meaningful thing I can do with the associated selector in the dialog.

     @Parameter private ImagePlus imp;
     @Parameter private RectangleOverlay roi;
     @Parameter private double a;


ad 2)
A net.imagej.overlay.RectangleOverlay parameter

   @Parameter private RectangleOverlay roi;

is properly populated when the Command is invoqued on an active image
containing a rectangular selection. However it provoques an Exception
after the execution of the command, when either the
DefaultPrefService, or the Recorder if a persist=false attribute is
added, apparently tries to record a 'null' value for an option. The
two stacktraces are

   [ERROR] Module threw exception
   java.lang.NullPointerException
	at 
java.util.prefs.AbstractPreferences.put(AbstractPreferences.java:224)
	at 
org.scijava.prefs.DefaultPrefService.put(DefaultPrefService.java:183)
	at 
org.scijava.module.DefaultModuleService.save(DefaultModuleService.java:278)
	at 
org.scijava.module.process.SaveInputsPreprocessor.saveValue(SaveInputsPreprocessor.java:74)
	at 
org.scijava.module.process.SaveInputsPreprocessor.process(SaveInputsPreprocessor.java:65)
	at org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
	at org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
	at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
	at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
	at 
org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at 
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)

   [ERROR] Module threw exception
   java.lang.NullPointerException
         at ij.plugin.frame.Recorder.addQuotes(Recorder.java:612)
         at ij.plugin.frame.Recorder.recordOption(Recorder.java:362)
         at 
net.imagej.legacy.IJ1Helper.recordOption(IJ1Helper.java:467)
         at 
net.imagej.legacy.plugin.MacroRecorderPostprocessor.process(MacroRecorderPostprocessor.java:70)
         at 
org.scijava.module.ModuleRunner.postProcess(ModuleRunner.java:116)
         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:176)
         at 
org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
         at 
org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
         at 
java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
         at 
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
         at 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
         at java.lang.Thread.run(Thread.java:662)


From ctrueden at wisc.edu  Sun Aug 23 16:12:47 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Sun, 23 Aug 2015 16:12:47 -0500
Subject: [ImageJ-devel] update site
In-Reply-To: <CAFV0ecba3BG23JxNL9xFJ4npKZoYvRv4E1jfYgdQDu+DsR6BHQ@mail.gmail.com>
References: <CAFV0ecba3BG23JxNL9xFJ4npKZoYvRv4E1jfYgdQDu+DsR6BHQ@mail.gmail.com>
Message-ID: <CADN69y=hqh-HJ0YLB64ai-1u9xBf4dTwkJZqfqkX4DUhc2wPsQ@mail.gmail.com>

Hi Dimiter,

Can you please file a bug report with details on steps to reproduce?

https://github.com/imagej/imagej-updater
http://imagej.net/Bug_reporting_best_practices

Thanks,
Curtis

On Sun, Aug 23, 2015 at 5:10 AM, Dimiter Prodanov <dimiterpp at gmail.com>
wrote:

> Hi Curtis,
>
> I get an error from the Windows site tying to configure an update site.
>
> best regards,
>
> Dimiter
>
> java.io.IOException: Cannot run program "rundll32
> url.dll,FileProtocolHandler": CreateProcess error=2, The system cannot find
> the file specified
> at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
> at java.lang.Runtime.exec(Runtime.java:620)
> at java.lang.Runtime.exec(Runtime.java:485)
> at
> org.scijava.platform.DefaultPlatformService.exec(DefaultPlatformService.java:117)
> at
> org.scijava.plugins.platforms.windows.WindowsPlatform.open(WindowsPlatform.java:62)
> at
> org.scijava.platform.DefaultPlatformService.open(DefaultPlatformService.java:102)
> at
> org.scijava.ui.swing.viewer.text.SwingTextDisplayPanel.hyperlinkActivate(SwingTextDisplayPanel.java:161)
> at
> org.scijava.ui.swing.viewer.text.SwingTextDisplayPanel.hyperlinkUpdate(SwingTextDisplayPanel.java:151)
> at javax.swing.JEditorPane.fireHyperlinkUpdate(JEditorPane.java:345)
> at
> javax.swing.text.html.HTMLEditorKit$LinkController.activateLink(HTMLEditorKit.java:875)
> at
> javax.swing.text.html.HTMLEditorKit$LinkController.mouseClicked(HTMLEditorKit.java:674)
> at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
> at java.awt.Component.processMouseEvent(Component.java:6528)
> at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
> at java.awt.Component.processEvent(Component.java:6290)
> at java.awt.Container.processEvent(Container.java:2234)
> at java.awt.Component.dispatchEventImpl(Component.java:4881)
> at java.awt.Container.dispatchEventImpl(Container.java:2292)
> at java.awt.Component.dispatchEvent(Component.java:4703)
> at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4898)
> at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4542)
> at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4462)
> at java.awt.Container.dispatchEventImpl(Container.java:2278)
> at java.awt.Window.dispatchEventImpl(Window.java:2750)
> at java.awt.Component.dispatchEvent(Component.java:4703)
> at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
> at java.awt.EventQueue.access$500(EventQueue.java:97)
> at java.awt.EventQueue$3.run(EventQueue.java:709)
> at java.awt.EventQueue$3.run(EventQueue.java:703)
> at java.security.AccessController.doPrivileged(Native Method)
> at
> java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
> at
> java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:86)
> at java.awt.EventQueue$4.run(EventQueue.java:731)
> at java.awt.EventQueue$4.run(EventQueue.java:729)
> at java.security.AccessController.doPrivileged(Native Method)
> at
> java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
> at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
> at
> java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
> at
> java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
> at
> java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
> at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
> at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
> at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
> Caused by: java.io.IOException: CreateProcess error=2, The system cannot
> find the file specified
> at java.lang.ProcessImpl.create(Native Method)
> at java.lang.ProcessImpl.<init>(ProcessImpl.java:386)
> at java.lang.ProcessImpl.start(ProcessImpl.java:137)
> at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
> ... 42 more
> action: changeuploadpassword
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150823/e989dae8/attachment.html>

From felix.meyenhofer at unifr.ch  Mon Aug 24 04:41:53 2015
From: felix.meyenhofer at unifr.ch (MEYENHOFER Felix)
Date: Mon, 24 Aug 2015 09:41:53 +0000
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
	<CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
	<web-159742879@univ-paris7.fr>
	<CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>
Message-ID: <5BEB299B-17B9-44E4-A451-788FF37E9B4A@unifr.ch>

Hi Adrian, Jan and Curtis

I went through the tutorials and found about the initialisation method. Curtis was absolutely right about what I wanted to do. Thanks for the detailed explanations. In fact I was aiming for the use case 4) update parameter attributes several times during callbacks. Since the file chooser could have its input changed several times (typically a click accident, mistake of choice or such), It would be odd for the user if the UI get?s updated only once.

The alternative of course is to use an OpenDialog previous to the configuration dialog. Or to program the the dialog from scratch (but this certainly does not improve reusability neither).

The proposal https://github.com/scijava/scijava-common/issues/181 sounds like a promising idea to me.

Felix

On 22 Aug 2015, at 6:10 , Curtis Rueden <ctrueden at wisc.edu<mailto:ctrueden at wisc.edu>> wrote:

Hi Adrian,

> Doesn't that allow doing what Felix would like to do, by populating
> the combobox through such an initialiser ?

I think what Felix wants is to set a parameter's "choices" attribute -- i.e., the values that will appear in the input harvester UI's dropdown list box.

It can be done with a DynamicCommand, but right now it only works from an initializer, not from a callback. So if you want to populate the choice once from, say, the active Dataset, it works. But if you want to update the choices e.g. every time the user moves a numerical slider, it will not work because the UI will not update.

See also:
* https://github.com/scijava/scijava-common/issues/180
* https://github.com/scijava/scijava-common/issues/181

> Are the parameters populated/initialised in the order they appear? In
> particular, is the initialisation done serially or can there be
> parallel execution of initialisers ?

Initialization is currently implemented serially [1].

> I have parameters a, b, c whose initialisation depend on a common
> calculation (depending on the image gotten through a previous
> @Parameter ImagePlus imp): can I do this calculation in the
> initialiser for the first parameter a, and then in the initialisers of
> b and c rely on the fact that the calculation was already done ?

Perhaps simplest at the moment would be to give your command a global initializer -- i.e., set the initializer method in the @Plugin annotation itself, rather than on specific parameters. The ImagePlus will be populated by a preprocessor _before_ the initialize method is called, so when your global initializer gets called you will already have access to the ImagePlus.

But again, scijava/scijava-common#181 is very relevant here.

Regards,
Curtis

[1] https://github.com/scijava/scijava-common/blob/scijava-common-2.42.2/src/main/java/org/scijava/module/AbstractModule.java#L75-L88

On Fri, Aug 21, 2015 at 6:18 AM, Adrian Daerr <adrian.daerr at univ-paris-diderot.fr<mailto:adrian.daerr at univ-paris-diderot.fr>> wrote:
Hi Curtis, Felix, Jan, and others,

In the CommandWithPreview tutorial example[*] that Curtis sent to
the list a few weeks back, there is a @Parameter which is
initialised to a value depending on the initialisation of another
parameter:

@Parameter private ImagePlus imp;

@Parameter(persist = false, initializer = "initTitle") private String title;

/** Initializes the {@link #title} parameter. */
protected void initTitle() {
        title = initialTitle = imp.getTitle();
}

[*]
https://github.com/imagej/imagej-tutorials/blob/master/commands-with-preview/src/main/java/CommandWithPreview.java

Doesn't that allow doing what Felix would like to do, by
populating the combobox through such an initialiser ?

Are the parameters populated/initialised in the order they
appear? In particular, is the initialisation done serially or can
there be parallel execution of initialisers ? I ask because I
have parameters a, b, c whose initialisation depend on a common
calculation (depending on the image gotten through a previous
@Parameter ImagePlus imp): can I do this calculation in the
initialiser for the first parameter a, and then in the
initialisers of b and c rely on the fact that the calculation was
already done ?

cheers,
Adrian




On Thu, 20 Aug 2015 17:13:11 -0500
 Curtis Rueden <ctrueden at wisc.edu<mailto:ctrueden at wisc.edu>> wrote:
Hi Felix, Jan and everyone,

I couldn?t find any hint that it is possible to update the choices of
a parameter (declared with the annotator) in a callback that for
another parameter.

It is possible to dynamically adjust parameters from Java code [1]. You can
also dynamically add and remove parameters. Such commands extend the
DynamicCommand class.

There are many examples currently in the imagej-plugins-commands project;
e.g.:
https://github.com/imagej/imagej-plugins-commands/blob/imagej-plugins-commands-0.5.1/src/main/java/net/imagej/plugins/commands/restructure/AddAxis.java

However, a couple of notes:

- This pattern makes the command less reusable from other contexts, because
some contexts require a priori knowledge about the number and types of
input and output parameters.

- The user interface currently does not properly refresh the input
harvester dialog if changes are made to parameters from a callback. So
while you can technically do things like change the choices array of a
multiple-choice input, the user will not actually see it.

- What does work currently is to determine the multiple-choice values at
initialization time, based on the values of parameters which have already
been populated earlier, such as an active dataset. This is what many of the
DynamicCommand implementations in imagej-plugins-commands do.

Really, there are _five_ different classes of commands here:

1) Totally fixed, with inputs and outputs known in advance.
2) Updates parameter attributes (such as choices?but not # or type of
inputs/outputs) once during initialization.
3) Updates parameter number and type (i.e., adding/removing inputs/outputs)
once during initialization.
4) Updates parameter attributes repeatedly e.g. during callbacks.
5) Updates parameter number and type repeatedly e.g. during callbacks.

Of these, type #1 is most desirable for a variety of reasons. Failing that,
types #2 and #3 can be done right now using DynamicCommand and it works
properly from the ImageJ UI?but not from other contexts like CellProfiler,
KNIME, etc. Types #4 and #5 can also be coded but will not work properly
from the UI in ImageJ because the input harvester is not rebuilt on
callbacks.

See also:
* https://github.com/scijava/scijava-common/issues/42
* https://github.com/scijava/scijava-common/issues/43
* https://github.com/CellProfiler/CellProfiler/issues/647

Regards,
Curtis

[1] Dynamically updating parameters from scripts would be a different
story. No plans to do that any time soon...

On Thu, Aug 20, 2015 at 6:50 AM, Jan Eglinger <jan.eglinger at gmail.com<mailto:jan.eglinger at gmail.com>>
wrote:

Hi Felix and all,

On 20.08.2015 10:06, MEYENHOFER Felix wrote:

I couldn?t find any hint that it is possible to update the choices of a
parameter (declared with the annotator) in a callback that for another
parameter. For example; I have a file chooser and once a file hase been
chosen, I want to read some file metadata and then update the choices of
the combobox that allows to select the images series.
Since I could not figure a way to do it, I wanted to ask here if it is
possible at all?


I think dynamic adjustment of parameters isn't possible currently, but I
agree that it would be a great thing to have.

I know quite some use cases where either a DialogListener or a series of
subsequent dialogs are used in ImageJ 1.x plugins to adjust parameter
choice to previously harvested input.

Furthermore, is it possible to get a directory chooser instead of a file
chooser in the configuration dialog of a command using the @Parameter
annotation?


Yes, by using the
    style = "directory"
attribute. See *Templates > Python > Process Folder* in the script editor,
and this related discussion:
  https://github.com/imagej/imagej-legacy/pull/114

Best,
Jan


_______________________________________________
ImageJ-devel mailing list
ImageJ-devel at imagej.net<mailto:ImageJ-devel at imagej.net>
http://imagej.net/mailman/listinfo/imagej-devel


--
http://www.msc.univ-paris-diderot.fr/~daerr/


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150824/a94ba250/attachment-0001.html>

From adrian.daerr at univ-paris-diderot.fr  Mon Aug 24 09:07:22 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Mon, 24 Aug 2015 16:07:22 +0200
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
	<CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
	<web-159742879@univ-paris7.fr>
	<CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>
Message-ID: <web-159836040@univ-paris7.fr>

Hi Curtis,

>> I have parameters a, b, c whose initialisation depend on a common
>> calculation (depending on the image gotten through a previous
>> @Parameter ImagePlus imp): can I do this calculation in the
>> initialiser for the first parameter a, and then in the initialisers 
>> of b and c rely on the fact that the calculation was already done ?
> 
> Perhaps simplest at the moment would be to give your command a 
> global initializer -- i.e., set the initializer method in the
> @Plugin annotation itself, rather than on specific parameters.
> The ImagePlus will be populated by a preprocessor _before_ the
> initialize method is called, so when your global initializer gets
> called you will already have access to the ImagePlus.

Thanks for the suggestion, which almost does the job, except that the 
initialization also depends on a parameter

@Parameter(persist = false) private RectangleOverlay roi;

which appears to be populated only after the initializer is called 
(its value is null in the initializer and valid in the run() method).

I am not sure how to solve this: do I have to write a Preprocessor of 
some sorts, or can the initializer 'manually' call the code which 
normally harvest the RectangleOverlay parameter later on ? Somehow the 
fact that ImagePlus is populated by a Preprocessor but 
RectangleOverlay isn't, seems linked to issues that I mentionned in 
another post[1], but even after some reading of the tutorials and the 
scijava source code around org.scijava.command.CommandInfo my 
understanding of how the plugin initialisation works is still poor.

[1]
(e.g. that the Overlay appears in the harvesting dialog, or that an 
Exception is thrown because of the overlay after command execution)
http://imagej-devel.54429.x6.nabble.com/Masking-Parameter-from-GUI-harvesting-td1098.html

> But again, scijava/scijava-common#181 is very relevant here.

Would it make sense to distinguish (by an annotation ?) parameters 
that are to be initialized from the context (i.e. services, active 
image, roi etc), and whose lack should be immediately fatal to the 
plugin (no UI harvesting, and in exchange can be assumed final for the 
rest of the command execution), from parameters that, if they cannot 
be populated from already available data, should be harvested through 
a dialog (and may change several times) ?

cheers,
Adrian


From ctrueden at wisc.edu  Mon Aug 24 10:25:59 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 24 Aug 2015 10:25:59 -0500
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <web-159836040@univ-paris7.fr>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
	<CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
	<web-159742879@univ-paris7.fr>
	<CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>
	<web-159836040@univ-paris7.fr>
Message-ID: <CADN69yndGthuWouZXfP_Q_=GrxkHDcbBNvRTQA6+-sqbp7n0QA@mail.gmail.com>

Hi Adrian,

> Thanks for the suggestion, which almost does the job, except that the
> initialization also depends on a parameter
>
> @Parameter(persist = false) private RectangleOverlay roi;
>
> which appears to be populated only after the initializer is called
> (its value is null in the initializer and valid in the run() method).

Hmm, that should not be the case. Commands that include a single overlay
parameter should automatically draw from the active image's active overlay,
when possible [1]. This happens _before_ the initializers are called [2]
(because Priority.VERY_HIGH_PRIORITY > Priority.HIGH_PRIORITY).

The issue might be typing-related: try using Overlay instead of
RectangleOverlay and see if that makes a difference. If so, it is probably
a limitation of the ActiveOverlayPreprocessor [1]; patches welcome.

Alternately: can you post an MVCE [3, 4] illustrating the issue?

> do I have to write a Preprocessor of some sorts

This is certainly possible to do, but I would hope not necessary.

> can the initializer 'manually' call the code which normally harvest
> the RectangleOverlay parameter later on ?

Sure, you can always code in whatever logic you want to the plugin
initializer method. But again, hopefully not necessary in this case.

> even after some reading of the tutorials and the scijava source code
> around org.scijava.command.CommandInfo my understanding of how the
> plugin initialisation works is still poor.

I am sorry?the tutorials need to be improved. What sort of tutorial do you
think would aid your understanding here? The "execute-commands" and
"custom-preprocessor-plugin" tutorials are probably touch on these topics
most closely, although neither provides a real overview of the
pre-/post-processing chain in conjunction with module execution.

> Would it make sense to distinguish (by an annotation ?) parameters
> that are to be initialized from the context (i.e. services, active
> image, roi etc), and whose lack should be immediately fatal to the
> plugin (no UI harvesting, and in exchange can be assumed final for the
> rest of the command execution), from parameters that, if they cannot
> be populated from already available data, should be harvested through
> a dialog (and may change several times) ?

Potentially, yes. Feel free to comment on the issue on GitHub!

Regards,
Curtis

[1]
https://github.com/imagej/imagej-common/blob/imagej-common-0.15.1/src/main/java/net/imagej/display/process/ActiveOverlayPreprocessor.java#L57

[2]
https://github.com/scijava/scijava-common/blob/scijava-common-2.44.2/src/main/java/org/scijava/module/process/InitPreprocessor.java#L49

[3] http://imagej.net/Bug_reporting_best_practices

[4] http://stackoverflow.com/help/mcve


On Mon, Aug 24, 2015 at 9:07 AM, Adrian Daerr <
adrian.daerr at univ-paris-diderot.fr> wrote:

> Hi Curtis,
>
> I have parameters a, b, c whose initialisation depend on a common
>>> calculation (depending on the image gotten through a previous
>>> @Parameter ImagePlus imp): can I do this calculation in the
>>> initialiser for the first parameter a, and then in the initialisers of b
>>> and c rely on the fact that the calculation was already done ?
>>>
>>
>> Perhaps simplest at the moment would be to give your command a global
>> initializer -- i.e., set the initializer method in the
>> @Plugin annotation itself, rather than on specific parameters.
>> The ImagePlus will be populated by a preprocessor _before_ the
>> initialize method is called, so when your global initializer gets
>> called you will already have access to the ImagePlus.
>>
>
> Thanks for the suggestion, which almost does the job, except that the
> initialization also depends on a parameter
>
> @Parameter(persist = false) private RectangleOverlay roi;
>
> which appears to be populated only after the initializer is called (its
> value is null in the initializer and valid in the run() method).
>
> I am not sure how to solve this: do I have to write a Preprocessor of some
> sorts, or can the initializer 'manually' call the code which normally
> harvest the RectangleOverlay parameter later on ? Somehow the fact that
> ImagePlus is populated by a Preprocessor but RectangleOverlay isn't, seems
> linked to issues that I mentionned in another post[1], but even after some
> reading of the tutorials and the scijava source code around
> org.scijava.command.CommandInfo my understanding of how the plugin
> initialisation works is still poor.
>
> [1]
> (e.g. that the Overlay appears in the harvesting dialog, or that an
> Exception is thrown because of the overlay after command execution)
>
> http://imagej-devel.54429.x6.nabble.com/Masking-Parameter-from-GUI-harvesting-td1098.html
>
> But again, scijava/scijava-common#181 is very relevant here.
>>
>
> Would it make sense to distinguish (by an annotation ?) parameters that
> are to be initialized from the context (i.e. services, active image, roi
> etc), and whose lack should be immediately fatal to the plugin (no UI
> harvesting, and in exchange can be assumed final for the rest of the
> command execution), from parameters that, if they cannot be populated from
> already available data, should be harvested through a dialog (and may
> change several times) ?
>
> cheers,
> Adrian
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150824/8476353a/attachment.html>

From ctrueden at wisc.edu  Mon Aug 24 15:31:07 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 24 Aug 2015 15:31:07 -0500
Subject: [ImageJ-devel] Masking @Parameter from GUI harvesting ?
In-Reply-To: <web-159791561@univ-paris7.fr>
References: <web-159791561@univ-paris7.fr>
Message-ID: <CADN69ymuUk=6z85na5aHFd_2rJcynvOFmB60jQKYfU9qrwxC+w@mail.gmail.com>

Hi Adrian,

> 1) How does one prevent a @Parameter from showing up in the harvesting
> GUI dialog, in the manner of a '@Parameter LogService log'? (more
> below)

Parameters which are resolved before the input harvester dialog pops up
will not show up.

They get resolved by the various preprocessors in the preprocessing chain,
which is applied before the module is actually run. The InputHarvester --
which is what pops the dialog box -- is (IIRC) the final preprocessing step
before run happens.

We could add a way to mark parameters which are not desired to be shown in
the dialog box. What is your use case for a parameter you want to have in
the script, but never shown to the user in cases where it is still null?

> 2) A net.imagej.overlay.RectangleOverlay parameter, although properly
> populated, provoques an Exception after the execution of the command.
> (more details and stacktraces below)

As I mentioned in the other thread: try with Overlay instead? We could
certainly make it autofill parameters with specific Overlay subclasses
too?just need to confirm first that that is indeed your problem.

> 3) When a new preview is triggered, and that preview modifies numeric
> parameters, then the numeric values visible in the gui dialog are
> updated except for the NumericField on which input has triggered the
> call to preview().

It is a programming error for the preview() function to modify parameter
values. Use callbacks instead, which occur before preview() is called [1].

> 4) It would be nice if a parameter could have a label even if
> ItemVisibility is MESSAGE

Fixed [2].

Regards,
Curtis

[1]
https://github.com/scijava/scijava-common/blob/scijava-common-2.44.2/src/main/java/org/scijava/widget/DefaultWidgetModel.java#L167-L169

[2]
https://github.com/scijava/scijava-ui-swing/commit/84c30c045bf3327a424f499f1f2fe867b0d9375e


On Sun, Aug 23, 2015 at 6:44 AM, Adrian Daerr <
adrian.daerr at univ-paris-diderot.fr> wrote:

> Dear ImageJ developers,
>
> As I slowly learn more about IJ2 @Plugins, I have one question and three
> minor comments that I would like to submit to you.
>
> 1) How does one prevent a @Parameter from showing up in the harvesting
> GUI dialog, in the manner of a '@Parameter LogService log'? (more below)
>
> 2) A net.imagej.overlay.RectangleOverlay parameter, although properly
> populated, provoques an Exception after the execution of the command.
> (more details and stacktraces below)
>
> 3) When a new preview is triggered, and that preview modifies numeric
> parameters, then the numeric values visible in the gui dialog are
> updated except for the NumericField on which input has triggered the
> call to preview().
>
> 4) It would be nice if a parameter could have a label even if
> ItemVisibility is MESSAGE:
>   @Parameter(persist = false,
>              visibility = org.scijava.ItemVisibility.MESSAGE,
>              label = "Current foo value")
>     private double foo = 0;
> (currently, at least on my box, the label is not shown in this case)
> Obviously a workaround is to build a String with label+foo instead.
>
> cheers,
> Adrian
>
>
>
> ad 1)
> How to prevent a @Parameter from showing up in the harvesting GUI
> dialog? Some seem to be masked by default (ImagePlus, LogService), but
> I did not find the appropriate annotation to make the parameter roi in
> the following not show up, although it is already properly populated
> by the rectangular selection of the active image ? There is no
> meaningful thing I can do with the associated selector in the dialog.
>
>     @Parameter private ImagePlus imp;
>     @Parameter private RectangleOverlay roi;
>     @Parameter private double a;
>
>
> ad 2)
> A net.imagej.overlay.RectangleOverlay parameter
>
>   @Parameter private RectangleOverlay roi;
>
> is properly populated when the Command is invoqued on an active image
> containing a rectangular selection. However it provoques an Exception
> after the execution of the command, when either the
> DefaultPrefService, or the Recorder if a persist=false attribute is
> added, apparently tries to record a 'null' value for an option. The
> two stacktraces are
>
>   [ERROR] Module threw exception
>   java.lang.NullPointerException
>         at
> java.util.prefs.AbstractPreferences.put(AbstractPreferences.java:224)
>         at
> org.scijava.prefs.DefaultPrefService.put(DefaultPrefService.java:183)
>         at
> org.scijava.module.DefaultModuleService.save(DefaultModuleService.java:278)
>         at
> org.scijava.module.process.SaveInputsPreprocessor.saveValue(SaveInputsPreprocessor.java:74)
>         at
> org.scijava.module.process.SaveInputsPreprocessor.process(SaveInputsPreprocessor.java:65)
>         at
> org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
>         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>         at
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>         at
> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>         at
> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>         at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>         at java.lang.Thread.run(Thread.java:662)
>
>   [ERROR] Module threw exception
>   java.lang.NullPointerException
>         at ij.plugin.frame.Recorder.addQuotes(Recorder.java:612)
>         at ij.plugin.frame.Recorder.recordOption(Recorder.java:362)
>         at net.imagej.legacy.IJ1Helper.recordOption(IJ1Helper.java:467)
>         at
> net.imagej.legacy.plugin.MacroRecorderPostprocessor.process(MacroRecorderPostprocessor.java:70)
>         at
> org.scijava.module.ModuleRunner.postProcess(ModuleRunner.java:116)
>         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:176)
>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>         at
> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>         at
> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>         at
> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>         at
> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>         at java.lang.Thread.run(Thread.java:662)
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150824/c21c3eb5/attachment.html>

From bnorthan at gmail.com  Mon Aug 24 16:04:12 2015
From: bnorthan at gmail.com (Brian Northan)
Date: Mon, 24 Aug 2015 17:04:12 -0400
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <00BC8CD6-A996-4F3E-A69B-9B5B002E4DF0@wisc.edu>
References: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
	<87AF0320-CDD6-4015-B5DC-92A1243E6DDB@wisc.edu>
	<CADN69ymcYGx0UngqHhVvP3oNc=yvMK_QNOuPr0f-N4zTGzzoWA@mail.gmail.com>
	<00BC8CD6-A996-4F3E-A69B-9B5B002E4DF0@wisc.edu>
Message-ID: <CAMWa8i0tybvb=bYq7new3xJYVzzuO1ZtnDT1xOeVESCR-A8LJg@mail.gmail.com>

Hi Christian

I hope you had a nice holiday.  Are you back now??

I found some example KNIME workflows for imagej/imagej2 integration here
https://tech.knime.org/community/imagej
.
The problem is that I cannot find the 'ImageJ Macro' or the 'Image2
integration' nodes.  I searched for 'imagej' in the node repository and
explored the community nodes.  I also looked for them using "Install KNIME
extensions...", but couldn't find anything imagej related.

Any suggestions??

Thanks

Brian

On Thu, Aug 20, 2015 at 10:50 AM, JAY W WARRICK <warrick at wisc.edu> wrote:

> It happens that I just put that in my calendar to try and attend (at least
> what I can fit in). Cool.
>
> J
>
> On Aug 20, 2015, at 9:47 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi Jay,
>
> Christian will not be at the IJ conference (conflict with another
> conference), but will be at the hackathon afterward.
>
> Regards,
> Curtis
> On Aug 20, 2015 9:42 AM, "JAY W WARRICK" <warrick at wisc.edu> wrote:
>
>> I'd be interested in keeping up with this conversation. We do the same
>> thing in JEX to expose ImageJ commands (that are headless and have a menu
>> path) as functions. Exposing some Ops would be great too. Will you be at
>> the imagej conference that I could pick your brain on related questions?
>>
>> Cheers,
>>
>> Jay
>>
>> On Aug 19, 2015, at 2:19 PM, Christian Dietz <
>> Christian.Dietz at uni-konstanz.de> wrote:
>>
>> Sorry, I was not really precise: all Commands which are declared as
>> headless and have a menu path.
>>
>> And yes: like this we could select the ops which are exposed as nodes.
>> Am 19.08.2015 8:00 nachm. schrieb Curtis Rueden <ctrueden at wisc.edu>:
>>
>> Hi Christian,
>>
>> > currently, we can automatically create nodes from Commands and not
>> > from ops.
>>
>> But all Ops are Commands...?
>>
>> > From a technical point of view it would be easy to adapt this
>> > mechanism to Ops, but I am not sure if we want that (as you dont want
>> > to create a node for each and every atomar op). I hope we will
>> > find a nice strategy when to expose an Op as a KNIME node.
>>
>> Possible solutions:
>> * Expose all Commands (including Ops) that declare a menu path.
>> * Expose Commands which have (or do not have) a particular attribute key.
>> We use this for ImageJ1, adding a "no-legacy" attribute for commands which
>> should not be exposed from the legacy ImageJ1 user interface.
>>
>> Regards,
>> Curtis
>>
>> On Wed, Aug 19, 2015 at 12:36 PM, Christian Dietz <
>> christian.dietz at uni-konstanz.de> wrote:
>>
>> Hi Brian,
>>
>> currently, we can automatically create nodes from Commands and not from
>> ops. From a technical point of view it would be easy to adapt this
>> mechanism to Ops, but I am not sure if we want that (as you dont want to
>> create a node for each and every atomar op). I hope we will find a nice
>> strategy when to expose an Op as a KNIME node.
>>
>> Anyway, Commands can be installed if the imagej2 extension is also
>> installed within KNIME. I can send you more details next Monday, when I'm
>> back from vacation.
>>
>> Hope this helps,
>>
>> Christian
>>
>> Am 19.08.2015 5:58 nachm. schrieb Brian Northan <bnorthan at gmail.com>:
>> >
>> > Hi
>> >
>> > I have a question for the KNIME folks.
>> >
>> > My understanding is that KNIME can auto-generate a node for every class
>> that implements an op.  Is this correct??  And if so does the current
>> release of KNIME recognize ops??  Or do I need a development version??
>> >
>> > How does one install an op to KNIME??  Do you just place the .jar file
>> in a certain directory??  Or do you have to go through the 'install KNIME
>> extensions' option??  Or something else??
>> >
>> > Thanks
>> >
>> > Brian
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150824/0bf333e8/attachment-0001.html>

From ctrueden at wisc.edu  Mon Aug 24 16:22:15 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 24 Aug 2015 16:22:15 -0500
Subject: [ImageJ-devel] Status and API of ROIs in ImageJ2 ?
In-Reply-To: <web-159791302@univ-paris7.fr>
References: <55CF1F05.3050904@univ-paris-diderot.fr>
	<web-159675194@univ-paris7.fr> <web-159791302@univ-paris7.fr>
Message-ID: <CADN69ymvzGSZqFs=JShxA+3iD=FYCk+V38MeTqaLqpf8ybawKw@mail.gmail.com>

Hi Adrian,

Glad to hear you found a working solution!

The short answer about ROIs is that they have not been a focus of ImageJ2
or ImgLib2 development in recent years. Support for labelings (highly
related to ROIs) was rewritten this January [1], but a rewrite of the core
ImgLib2 ROI library [2] is still pending. And there is a substantial
pending redesign of the ImageJ Common data model planned as well -- though
it is unlikely anyone will work on it this year.

At this juncture, the most effective balance for most plugin developers is
probably to use parameterized commands and/or scripts, but with the ImageJ1
data structures (ij.ImagePlus, etc.) -- unless you need access to a new
capability that ImageJ2 + ImgLib2 make possible (>5D images, very large
image planes, very large numbers of image planes, dynamically generated
images, images stored in places besides disk, cell-based image caching,
image types beyond uint8/uint16/float32, etc.).

That said, your feedback is very much appreciated.

And some issues will be ironed out in the next couple of weeks as we revamp
the tutorials for the upcoming ImageJ conference.

> The easiest way to give a plugin a (rectangular) roi is to ... just
> declare a net.imagej.overlay.RectangularOverlay as an input parameter.
> It is properly populated by the origin and extent of a rectangular
> selection drawn on the active image.

If all you care about is the bounding box of the active selection, you can
just do it the same way as the ImageJ2 CropImageJ command: by calling
OverlayService.getSelectionBounds [3]. Then you would avoid some of the
current weirdness associated with Overlay parameters.

> If I launch the default UI, then the ROI will not show, but the plugin
> can launch. If on the other hand I launch the "swing" UI as in the
> tutorial, I do see the ROI

Yes, that tutorial was written when the ImageJ2 Swing UI was still the
default. It is not tested/working with the Legacy UI (which is now the
default). I will try to remedy that very soon.

> (not until I call Image>Adjust>Brightness/Contrast..., but that's a
> minor detail),

Yes, that annoying bug has been around for quite a while. Many things that
refresh the display will do, such as pressing + then - to zoom in/out.

> but now the invocation of the plugin at the end of main() will throw a
> MethodCallException with the stackTrace pasted below. How can the
> choice of a UI make the plugin execution fail ?
...
> Caused by: java.lang.NullPointerException
>         at Goutte_pendante.initTitle(Goutte_pendante.java:94)

In 2014, we made a conscious decision to support the ImageJ 1.x classes
_only_ from the legacy UI. You cannot use them from the Swing UI. In your
case: the ActiveImagePlusPreprocessor cannot set the active ImagePlus
because WindowManager.getCurrentImage() returns null [4], because no ImageJ
1.x user interface exists. So it stays null and then your initializer
throws the NPE.

Regards,
Curtis

[1]
https://github.com/imglib/imglib2-roi/tree/imglib2-roi-0.3.2/src/main/java/net/imglib2/labeling

[2] https://github.com/imglib/imglib2-roi

[3]
https://github.com/imagej/imagej-plugins-commands/blob/imagej-plugins-commands-0.5.1/src/main/java/net/imagej/plugins/commands/imglib/CropImage.java#L104

[4]
https://github.com/imagej/imagej-legacy/blob/imagej-legacy-0.17.1/src/main/java/net/imagej/legacy/plugin/ActiveImagePlusPreprocessor.java#L49-L52


On Sun, Aug 23, 2015 at 6:30 AM, Adrian Daerr <
adrian.daerr at univ-paris-diderot.fr> wrote:

> Hello,
>
> While I am still interested in answers concerning the status/API/roadmap
> for ROIs and overlays beyond what's on http://imagej.net/ROIs, I have
> solved the problem at hand which was keeping me from making progress, so I
> post the (rather obvious, once I found the net.imagej.overlay package)
> solution here for the record and to close this thread.
>
> The easiest way to give a plugin a (rectangular) roi is to ...
> just declare a net.imagej.overlay.RectangularOverlay as an input
> parameter. It is properly populated by the origin and extent of a
> rectangular selection drawn on the active image.
>
> cheers,
> Adrian
>
>
> On Wed, 19 Aug 2015 17:10:06 +0200
>
>  "Adrian Daerr" <adrian.daerr at univ-paris-diderot.fr> wrote:
>
>>
>> Dear ImageJ developers,
>>
>> I have included code from the AddROIs tutorial into the main()
>> method of my plugin (for the moment essentially one of Curtis'
>> commands-with-preview example), to select a Rectangle before
>> calling the plugin. The source is available here:
>>
>> https://gitlab.com/pendant-drop/pendant-drop
>> (in Goutte_pendante.java)
>>
>> If I launch the default UI, then the ROI will not show, but the
>> plugin can launch. If on the other hand I launch the "swing" UI
>> as in the tutorial, I do see the ROI (not until I call
>> Image>Adjust>Brightness/Contrast..., but that's a minor detail),
>> but now the invocation of the plugin at the end of main() will
>> throw a MethodCallException with the stackTrace pasted below. How
>> can the choice of a UI make the plugin execution fail ?
>>
>> Is there any other way that main can set a ROI on a loaded image
>> that the plugin, which still uses an ImagePlus as input
>> parameter, will see when calling imp.getProcessor().getRoi() ?
>>
>> TIA
>> Adrian
>>
>>
>> $> mvn package
>> $> fiji --class-path target/pendant_drop-2.0.0-SNAPSHOT.jar
>> Goutte_pendante.class
>> [INFO] Overriding About Pendant Drop; identifier:
>> command:About_Pendant_Drop; jar:
>> file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
>> [INFO] Overriding Pendant Drop; identifier: command:Goutte_pendante; jar:
>> file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
>> [INFO] Populating metadata
>> [INFO] Populating metadata
>> [INFO] Found 10 JHotDraw adapters.
>> org.scijava.module.MethodCallException: Error executing method:
>> Goutte_pendante#initTitle
>>         at org.scijava.module.MethodRef.execute(MethodRef.java:73)
>>         at
>> org.scijava.module.AbstractModuleItem.initialize(AbstractModuleItem.java:199)
>>         at
>> org.scijava.module.AbstractModule.initialize(AbstractModule.java:86)
>>         at
>> org.scijava.command.CommandModule.initialize(CommandModule.java:147)
>>         at
>> org.scijava.module.process.InitPreprocessor.process(InitPreprocessor.java:60)
>>         at
>> org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
>>         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>         at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>         at
>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>         at java.lang.Thread.run(Thread.java:662)
>> Caused by: java.lang.reflect.InvocationTargetException
>>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>         at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>>         at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>>         at java.lang.reflect.Method.invoke(Method.java:597)
>>         at org.scijava.module.MethodRef.execute(MethodRef.java:69)
>>         ... 14 more
>> Caused by: java.lang.NullPointerException
>>         at Goutte_pendante.initTitle(Goutte_pendante.java:94)
>>         ... 19 more
>> [ERROR] Module threw exception
>> java.lang.NullPointerException
>>         at Goutte_pendante.cancel(Goutte_pendante.java:87)
>>         at
>> org.scijava.command.CommandModule.cancel(CommandModule.java:140)
>>         at
>> org.scijava.module.ModuleRunner.cleanupAndBroadcastCancelation(ModuleRunner.java:189)
>>         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:161)
>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>         at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>         at
>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>         at java.lang.Thread.run(Thread.java:662)
>>
>>
>>
>> On Sat, 15 Aug 2015 13:14:13 +0200
>>  Adrian Daerr <adrian.daerr at univ-paris-diderot.fr> wrote:
>>
>>> Hello,
>>>
>>> I am seizing a major rewrite of a plugin as an opportunity to switch
>>> from ImageJ1 to ImageJ2, also to avoid concurrency issues[*], and now
>>> lots of questions come up. Some concern the way ROIs are handled. What
>>> has happened in this regard since
>>>   http://imagej.net/ROIs
>>> was last updated ?
>>>
>>> [*] cf discussion on the ImageJ list archived at
>>>
>>> http://imagej.1557.x6.nabble.com/ExtendedPlugInFilter-GenericDialog-and-synchronization-td5013333.html
>>>
>>> Here are two concrete questions:
>>>
>>> 1) My plugin relies on a rectangular ROI being drawn on the image to
>>> know which area to include in the computation. How do I draw this ROI
>>> once I have loaded the image as a dataset in the main() method that is
>>> used for testing purposes ?
>>>
>>> public static void main(final String... args) throws Exception {
>>>     final String testImagePath = "testImage.jpg";
>>>
>>>     // Launch ImageJ as usual.
>>>     final ImageJ ij = net.imagej.Main.launch(args);
>>>
>>>     // Open test image.
>>>     final Dataset dataset = ij.dataset().open(testImagePath);
>>>
>>>     // display the dataset
>>>     ij.ui().show(dataset);
>>>
>>>     // create rectangular ROI
>>>     //imp.setRoi(120,60,340,420);// How to do this on a dataset ?
>>>
>>>     // Launch the "Foo_Bar" command.
>>>     ij.command().run(Foo_Bar.class, true);
>>> }
>>>
>>> (alternatively, how would I generate a new dataset, or I guess something
>>> like a "View" in ImageJ2 terminology, of the ROI sub-image of the original
>>> dataset ? I could then substitute the original dataset with this sub-image
>>> and have the plugin operate on the whole image by default)
>>>
>>> 2) The plugin preview generates overlays using java.awt.geom.Path2D,
>>> java.awt.geom.Area and java.awt.Shape, which are then converted via
>>> ij.gui.ShapeRoi() and ij.gui.Overlay(), assembled with overlay.add(),
>>> and drawn using imp.setOverlay(). Is there a new IJ2-way to do this
>>> (especially since the cited web page (rightly) insists on separation
>>> of selection and visualisation shapes) ?
>>>
>>> TIA,
>>> Adrian
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>
>> --
>> http://www.msc.univ-paris-diderot.fr/~daerr/
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
> --
> http://www.msc.univ-paris-diderot.fr/~daerr/
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150824/b5aa5379/attachment.html>

From christian.dietz at uni-konstanz.de  Tue Aug 25 02:57:43 2015
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Tue, 25 Aug 2015 09:57:43 +0200
Subject: [ImageJ-devel] KNIME and ops
In-Reply-To: <CAMWa8i0tybvb=bYq7new3xJYVzzuO1ZtnDT1xOeVESCR-A8LJg@mail.gmail.com>
References: <efe125b1-279f-436b-b09f-92e6a0ed605b@email.android.com>
	<87AF0320-CDD6-4015-B5DC-92A1243E6DDB@wisc.edu>
	<CADN69ymcYGx0UngqHhVvP3oNc=yvMK_QNOuPr0f-N4zTGzzoWA@mail.gmail.com>
	<00BC8CD6-A996-4F3E-A69B-9B5B002E4DF0@wisc.edu>
	<CAMWa8i0tybvb=bYq7new3xJYVzzuO1ZtnDT1xOeVESCR-A8LJg@mail.gmail.com>
Message-ID: <1440489463.2057.12.camel@uni-konstanz.de>

Hi Brian,

The ImageJ2 Extension of KNIME is not part of the "Trusted Community
Nodes", and therefore not visible directly in the "Trusted Community
Contributions" Update-Site, as some testing workflows are missing and
there will be some refactoring before it's considered as "trusted".
However, you can install it via the "Stable" or "Nightly" update-sites
of the KNIME Community Contributions (see "Step 2.2" in
https://tech.knime.org/wiki/install-knime-image-processing and
https://tech.knime.org/wiki/knime-image-processing-nightly-build ).

Let me know if you need further help.

Christian




On Mo, 2015-08-24 at 17:04 -0400, Brian Northan wrote: 
> Hi Christian
> 
> 
> I hope you had a nice holiday.  Are you back now??
> 
> 
> I found some example KNIME workflows for imagej/imagej2 integration
> here https://tech.knime.org/community/imagej
> .
> 
> The problem is that I cannot find the 'ImageJ Macro' or the 'Image2
> integration' nodes.  I searched for 'imagej' in the node repository
> and explored the community nodes.  I also looked for them using
> "Install KNIME extensions...", but couldn't find anything imagej
> related. 
> 
> 
> Any suggestions??
> 
> 
> Thanks
> 
> 
> Brian 
> 
> 
> On Thu, Aug 20, 2015 at 10:50 AM, JAY W WARRICK <warrick at wisc.edu>
> wrote:
>         It happens that I just put that in my calendar to try and
>         attend (at least what I can fit in). Cool.
>         
>         J 
>         
>         On Aug 20, 2015, at 9:47 AM, Curtis Rueden <ctrueden at wisc.edu>
>         wrote:
>         
>         
>         > Hi Jay,
>         > 
>         > Christian will not be at the IJ conference (conflict with
>         > another conference), but will be at the hackathon afterward.
>         > 
>         > Regards,
>         > Curtis
>         > 
>         > On Aug 20, 2015 9:42 AM, "JAY W WARRICK" <warrick at wisc.edu>
>         > wrote: 
>         >         I'd be interested in keeping up with this
>         >         conversation. We do the same thing in JEX to expose
>         >         ImageJ commands (that are headless and have a menu
>         >         path) as functions. Exposing some Ops would be great
>         >         too. Will you be at the imagej conference that I
>         >         could pick your brain on related questions? 
>         >         
>         >         
>         >         Cheers, 
>         >         
>         >         
>         >         Jay 
>         >         
>         >         > On Aug 19, 2015, at 2:19 PM, Christian Dietz
>         >         > <Christian.Dietz at uni-konstanz.de> wrote: 
>         >         > 
>         >         > Sorry, I was not really precise: all Commands
>         >         > which are declared as headless and have a menu
>         >         > path.
>         >         > 
>         >         > And yes: like this we could select the ops which
>         >         > are exposed as nodes.
>         >         > 
>         >         > Am 19.08.2015 8:00 nachm. schrieb Curtis Rueden
>         >         > <ctrueden at wisc.edu>: 
>         >         >         Hi Christian, 
>         >         >         
>         >         >         
>         >         >         > currently, we can automatically create
>         >         >         nodes from Commands and not 
>         >         >         > from ops. 
>         >         >         
>         >         >         
>         >         >         But all Ops are Commands...? 
>         >         >         
>         >         >         
>         >         >         > From a technical point of view it would
>         >         >         be easy to adapt this 
>         >         >         > mechanism to Ops, but I am not sure if
>         >         >         we want that (as you dont want 
>         >         >         > to create a node for each and every
>         >         >         atomar op). I hope we will 
>         >         >         > find a nice strategy when to expose an
>         >         >         Op as a KNIME node. 
>         >         >         
>         >         >         
>         >         >         Possible solutions: 
>         >         >         * Expose all Commands (including Ops) that
>         >         >         declare a menu path. 
>         >         >         * Expose Commands which have (or do not
>         >         >         have) a particular attribute key. We use
>         >         >         this for ImageJ1, adding a "no-legacy"
>         >         >         attribute for commands which should not be
>         >         >         exposed from the legacy ImageJ1 user
>         >         >         interface. 
>         >         >         
>         >         >         
>         >         >         Regards, 
>         >         >         Curtis 
>         >         >         
>         >         >         On Wed, Aug 19, 2015 at 12:36 PM,
>         >         >         Christian Dietz
>         >         >         <christian.dietz at uni-konstanz.de> wrote:
>         >         >                 Hi Brian,
>         >         >                 
>         >         >                 currently, we can automatically
>         >         >                 create nodes from Commands and not
>         >         >                 from ops. From a technical point
>         >         >                 of view it would be easy to adapt
>         >         >                 this mechanism to Ops, but I am
>         >         >                 not sure if we want that (as you
>         >         >                 dont want to create a node for
>         >         >                 each and every atomar op). I hope
>         >         >                 we will find a nice strategy when
>         >         >                 to expose an Op as a KNIME node.
>         >         >                 
>         >         >                 Anyway, Commands can be installed
>         >         >                 if the imagej2 extension is also
>         >         >                 installed within KNIME. I can send
>         >         >                 you more details next Monday, when
>         >         >                 I'm back from vacation.
>         >         >                 
>         >         >                 Hope this helps,
>         >         >                 
>         >         >                 Christian 
>         >         >                 
>         >         >                 Am 19.08.2015 5:58 nachm. schrieb
>         >         >                 Brian Northan
>         >         >                 <bnorthan at gmail.com>:
>         >         >                 >
>         >         >                 > Hi
>         >         >                 >
>         >         >                 > I have a question for the KNIME
>         >         >                 folks. 
>         >         >                 >
>         >         >                 > My understanding is that KNIME
>         >         >                 can auto-generate a node for every
>         >         >                 class that implements an op.  Is
>         >         >                 this correct??  And if so does the
>         >         >                 current release of KNIME recognize
>         >         >                 ops??  Or do I need a development
>         >         >                 version??
>         >         >                 >
>         >         >                 > How does one install an op to
>         >         >                 KNIME??  Do you just place
>         >         >                 the .jar file in a certain
>         >         >                 directory??  Or do you have to go
>         >         >                 through the 'install KNIME
>         >         >                 extensions' option??  Or something
>         >         >                 else??
>         >         >                 >
>         >         >                 > Thanks
>         >         >                 >
>         >         >                 > Brian
>         >         >                 
>         >         >                 _______________________________________________
>         >         >                 ImageJ-devel mailing list
>         >         >                 ImageJ-devel at imagej.net
>         >         >                 http://imagej.net/mailman/listinfo/imagej-devel 
>         >         >         
>         >         >         
>         >         > _______________________________________________
>         >         > ImageJ-devel mailing list
>         >         > ImageJ-devel at imagej.net
>         >         > http://imagej.net/mailman/listinfo/imagej-devel
>         >         > 
>         >         
>         >         
>         
>         _______________________________________________
>         ImageJ-devel mailing list
>         ImageJ-devel at imagej.net
>         http://imagej.net/mailman/listinfo/imagej-devel
>         
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel




From jan.eglinger at gmail.com  Wed Aug 26 09:46:57 2015
From: jan.eglinger at gmail.com (Jan Eglinger)
Date: Wed, 26 Aug 2015 16:46:57 +0200
Subject: [ImageJ-devel] Scripts calling scripts with @Parameters
Message-ID: <55DDD161.8080203@gmail.com>

Hi all,

how can I call a script using @Parameters (e.g. @ij.ImagePlus) from 
another script? Is this possible already?

I tried the following Javascript:

     // @ij.ImagePlus imp
     // @String name
     // @OUTPUT String result

     result = "Hello, " + name + ", the title is " + imp.getTitle();


and saved it into ./plugins/Print_Title.js
When I run it, the macro recorder records something like:

     IJ.run(imp, "Print Title", "imp=[img[blobs.gif (256x254x1x1x1)]] 
name=Jan");


When I now run this (Beanshell) script (with blobs.gif still open):

     import ij.IJ;

     imp = IJ.getImage();
     IJ.run(imp, "Print Title", "imp=[img[blobs.gif (256x254x1x1x1)]] 
name=Jan");

the String is initialized correctly, but `imp` seems to be `null`. 
(Leaving away the imp=.. yields an error "'imp' is required but unset.")

Is there a way to configure an ImagePlus (or Dataset or File) in this case?

Thx,
Jan


From ctrueden at wisc.edu  Wed Aug 26 14:18:56 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 26 Aug 2015 14:18:56 -0500
Subject: [ImageJ-devel] Python script: z projection
In-Reply-To: <CAEpSnnbODnFH3W59FbD4MmThMJ-Cg6tdVMRTTrU8WwC81LhSdw@mail.gmail.com>
References: <CAEpSnnZjsqkT0kcCRC0hAYPJzL28PmiucQDsxiFEerGh7KTKzA@mail.gmail.com>
	<CAEpSnnbCaphbgGaD8gq9L48xxmtukCGypBDRLSBGMah0a-=ZHQ@mail.gmail.com>
	<CAEpSnnbODnFH3W59FbD4MmThMJ-Cg6tdVMRTTrU8WwC81LhSdw@mail.gmail.com>
Message-ID: <CADN69ykVJMre7LD9TM2wvgdJ_JNjUyZBx7qDN_Tf-2rGo_2rbQ@mail.gmail.com>

Hi Hadrien,

> I am trying to write a small script to perform z projection on an
> image.

Thanks for playing with Ops, and sorry that no one replied to this thread
until now!

I just wanted to let you know that based on your attempts, we are preparing
a Z projection example with Ops for the upcoming 2015 ImageJ conference.

Preliminary work can be seen at:
https://github.com/imagej/imagej-tutorials/pull/16

It will merge to master within the next few days, and become available in
ImageJ's Script Editor in the Templates > Tutorials menu by the conference.

Regards,
Curtis

On Sat, Jan 24, 2015 at 4:29 PM, Hadrien Mary <hadrien.mary at gmail.com>
wrote:

> I tried another approach without success neither :
>
> -----------------------------------
> # @DatasetService data
> # @DisplayService display
> # @ImageJ ij
>
> from net.imagej.ops.statistics import Max
> from net.imagej.ops.statistics import Sum
> from net.imglib2.type.numeric import RealType
>
> from jarray import array
>
> fname = "/home/hadim/test_small.ome.tif"
> ds = data.open(fname)
>
> # TODO : find dimensions in ds object
> dims = array([136, 65], 'l')
> out = ij.op().createimg(dims)
>
> # Find ndim for project on Z axis
> ndim = 2
>
> op = ij.op().sum(RealType, out)
> ds2 = ij.op().project(out, ds, op, ndim)
>
> ij.ui().show(ds2.getName(), ds2)
>
> # TODO: should I delete out ?
> -------------------------------------
>
> --
> Hadrien Mary
>
> Ph.D student in Biology
> Tournier-Gachet Team
> CNRS - LBCMCP - UMR 5088
>
> Universit? de Toulouse - B?t. 4R3B1
> 118, route de Narbonne - 31062 Toulouse
>
>
> On Sat, Jan 24, 2015 at 9:35 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> > Last thing : I would like to run this script in headless mode on
> > pretty big images (17GB), so I would like to be sure wether `img =
> > data.open(fname)` use SCIFIO to open them.
> >
> > If it does I guess virtual stack is used in case the opened image is
> > big. Am I correct ?
> >
> > --
> > Hadrien Mary
> >
> > Ph.D student in Biology
> > Tournier-Gachet Team
> > CNRS - LBCMCP - UMR 5088
> >
> > Universit? de Toulouse - B?t. 4R3B1
> > 118, route de Narbonne - 31062 Toulouse
> >
> >
> > On Sat, Jan 24, 2015 at 9:25 PM, Hadrien Mary <hadrien.mary at gmail.com>
> wrote:
> >> Hi,
> >>
> >> I am trying to write a small script to perform z projection on an
> >> image. It seems that I use the wrong signature for ops.project()
> >> function. I tried many combinations without success...
> >>
> >> -------------------------------
> >> # @DatasetService data
> >> # @DisplayService display
> >> # @OpService ops
> >>
> >> from net.imagej.ops.statistics import Max
> >> from net.imglib2.type.numeric import RealType
> >>
> >> fname = "/home/hadim/test_small.ome.tif"
> >> img = data.open(fname)
> >> display.createDisplay(img.getName(), img)
> >>
> >> #op = ops.sum(RealType, img)
> >> img2 = ops.project(img, Max, 1)
> >> display.createDisplay(img2.getName(), img2)
> >>
> >> data.save(img2, "/home/hadim/projected.ome.tif")
> >> -----------------------------------
> >>
> >> I looked the doc, imagej-ops tests but I can't find the correct
> >> signature for python. Maybe you can help.
> >>
> >> Thank you
> >>
> >> --
> >> Hadrien Mary
> >>
> >> Ph.D student in Biology
> >> Tournier-Gachet Team
> >> CNRS - LBCMCP - UMR 5088
> >>
> >> Universit? de Toulouse - B?t. 4R3B1
> >> 118, route de Narbonne - 31062 Toulouse
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150826/18d49e9f/attachment.html>

From ctrueden at wisc.edu  Wed Aug 26 17:16:59 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 26 Aug 2015 17:16:59 -0500
Subject: [ImageJ-devel] Scripts calling scripts with @Parameters
In-Reply-To: <55DDD161.8080203@gmail.com>
References: <55DDD161.8080203@gmail.com>
Message-ID: <CADN69ymwRU1eb5Jv2irFmxa9fWkz_nJvPWS4b20K1+VOzO9DXQ@mail.gmail.com>

Hi Jan,

> Is there a way to configure an ImagePlus (or Dataset or File) in this
> case?

Thanks for reporting this issue!

It is (partially) fixed in:
https://github.com/imagej/imagej-legacy/commit/8cc4e7f37777bfe4d391e147d515238a8d0eaa23

At the moment, you will have to write:

  imp=blobs.gif

Or:

  imp=-2

(where -2 is the image ID you want)

instead of the string generated by the recorder.

I guess we could make that string (which is what ImagePlus.toString()
produces, probably) work as well, if you feel strongly. Though IMO it just
clutters the macro.

Regards,
Curtis

On Wed, Aug 26, 2015 at 9:46 AM, Jan Eglinger <jan.eglinger at gmail.com>
wrote:

> Hi all,
>
> how can I call a script using @Parameters (e.g. @ij.ImagePlus) from
> another script? Is this possible already?
>
> I tried the following Javascript:
>
>     // @ij.ImagePlus imp
>     // @String name
>     // @OUTPUT String result
>
>     result = "Hello, " + name + ", the title is " + imp.getTitle();
>
>
> and saved it into ./plugins/Print_Title.js
> When I run it, the macro recorder records something like:
>
>     IJ.run(imp, "Print Title", "imp=[img[blobs.gif (256x254x1x1x1)]]
> name=Jan");
>
>
> When I now run this (Beanshell) script (with blobs.gif still open):
>
>     import ij.IJ;
>
>     imp = IJ.getImage();
>     IJ.run(imp, "Print Title", "imp=[img[blobs.gif (256x254x1x1x1)]]
> name=Jan");
>
> the String is initialized correctly, but `imp` seems to be `null`.
> (Leaving away the imp=.. yields an error "'imp' is required but unset.")
>
> Is there a way to configure an ImagePlus (or Dataset or File) in this case?
>
> Thx,
> Jan
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150826/8ddb3200/attachment.html>

From ctrueden at wisc.edu  Wed Aug 26 21:44:10 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 26 Aug 2015 21:44:10 -0500
Subject: [ImageJ-devel] Scripts calling scripts with @Parameters
In-Reply-To: <CADN69ymwRU1eb5Jv2irFmxa9fWkz_nJvPWS4b20K1+VOzO9DXQ@mail.gmail.com>
References: <55DDD161.8080203@gmail.com>
	<CADN69ymwRU1eb5Jv2irFmxa9fWkz_nJvPWS4b20K1+VOzO9DXQ@mail.gmail.com>
Message-ID: <CADN69yk7OU_0uLEd6ZcXZY+n7B5GJSey0V7TN85qi0JS7Cq_xw@mail.gmail.com>

Hi again Jan,

I have now changed the macro recording to generate the correct string, with
image title as the value [1]. So when you record your Print Title script,
you will now see:

  run("Print Title", "imp=blobs.gif name=Jan");

And executing that line will repeat the action as expected.

These changes will be released and uploaded within the next few days.

Regards,
Curtis

[1]
https://github.com/imagej/imagej-legacy/commit/61a004c40988581529c35c0d1e312b0d20c0a7bb

On Wed, Aug 26, 2015 at 5:16 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Jan,
>
> > Is there a way to configure an ImagePlus (or Dataset or File) in this
> > case?
>
> Thanks for reporting this issue!
>
> It is (partially) fixed in:
>
> https://github.com/imagej/imagej-legacy/commit/8cc4e7f37777bfe4d391e147d515238a8d0eaa23
>
> At the moment, you will have to write:
>
>   imp=blobs.gif
>
> Or:
>
>   imp=-2
>
> (where -2 is the image ID you want)
>
> instead of the string generated by the recorder.
>
> I guess we could make that string (which is what ImagePlus.toString()
> produces, probably) work as well, if you feel strongly. Though IMO it just
> clutters the macro.
>
> Regards,
> Curtis
>
> On Wed, Aug 26, 2015 at 9:46 AM, Jan Eglinger <jan.eglinger at gmail.com>
> wrote:
>
>> Hi all,
>>
>> how can I call a script using @Parameters (e.g. @ij.ImagePlus) from
>> another script? Is this possible already?
>>
>> I tried the following Javascript:
>>
>>     // @ij.ImagePlus imp
>>     // @String name
>>     // @OUTPUT String result
>>
>>     result = "Hello, " + name + ", the title is " + imp.getTitle();
>>
>>
>> and saved it into ./plugins/Print_Title.js
>> When I run it, the macro recorder records something like:
>>
>>     IJ.run(imp, "Print Title", "imp=[img[blobs.gif (256x254x1x1x1)]]
>> name=Jan");
>>
>>
>> When I now run this (Beanshell) script (with blobs.gif still open):
>>
>>     import ij.IJ;
>>
>>     imp = IJ.getImage();
>>     IJ.run(imp, "Print Title", "imp=[img[blobs.gif (256x254x1x1x1)]]
>> name=Jan");
>>
>> the String is initialized correctly, but `imp` seems to be `null`.
>> (Leaving away the imp=.. yields an error "'imp' is required but unset.")
>>
>> Is there a way to configure an ImagePlus (or Dataset or File) in this
>> case?
>>
>> Thx,
>> Jan
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150826/221e9f66/attachment.html>

From adrian.daerr at univ-paris-diderot.fr  Thu Aug 27 10:25:55 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Thu, 27 Aug 2015 17:25:55 +0200
Subject: [ImageJ-devel] Status and API of ROIs in ImageJ2 ?
In-Reply-To: <CADN69ymvzGSZqFs=JShxA+3iD=FYCk+V38MeTqaLqpf8ybawKw@mail.gmail.com>
References: <55CF1F05.3050904@univ-paris-diderot.fr>
	<web-159675194@univ-paris7.fr> <web-159791302@univ-paris7.fr>
	<CADN69ymvzGSZqFs=JShxA+3iD=FYCk+V38MeTqaLqpf8ybawKw@mail.gmail.com>
Message-ID: <web-159984653@univ-paris7.fr>

Hi Curtis,

> At this juncture, the most effective balance for most plugin
> developers is probably to use parameterized commands and/or scripts,
> but with the ImageJ1 data structures (ij.ImagePlus, etc.)

Ok, this is what I will do then.

> If all you care about is the bounding box of the active selection,
> you can just do it the same way as the ImageJ2 CropImageJ command:
> by calling OverlayService.getSelectionBounds [3].

Works great now ! When I had tried it before it had always returned
the whole image dimensions, but that was because the test code
generating the image and the selection was missing a step: after
adding the overlay (along the lines of the add-rois tutorial) I did
not select it. It returns the correct bounds now that I added the
following (taken from the source of one command in net.imageJ.plugins
[1]) just before calling the plugin:

         for (final net.imagej.display.DataView view : imageDisplay) {
             if (view instanceof net.imagej.display.OverlayView) {
                 view.setSelected(true);
             }
         }

[1] 
https://github.com/imagej/imagej-plugins-commands/blob/master/src/main/java/net/imagej/plugins/commands/display/DeselectOverlays.java?L65-L69

For the moment I use an ImagePlus in the rest of the plugin, but for
OverlayService.getSelectionBounds() I also declare an ImageDisplay as
an input parameter. I hope that the two are always populated in a way
that makes them point to the same (active?) image.

>> [..] but now the invocation of the plugin at the end of main() will
>> throw a MethodCallException with the stackTrace pasted below. How
>> can the choice of a UI make the plugin execution fail ?
> 
> In 2014, we made a conscious decision to support the ImageJ 1.x
> classes _only_ from the legacy UI.

Oh, thanks for the explanation! I'd never have guessed.

cheers,
Adrian



On Mon, 24 Aug 2015 16:22:15 -0500
  Curtis Rueden <ctrueden at wisc.edu> wrote:
> Hi Adrian,
> 
> Glad to hear you found a working solution!
> 
> The short answer about ROIs is that they have not been a focus of 
>ImageJ2
> or ImgLib2 development in recent years. Support for labelings 
>(highly
> related to ROIs) was rewritten this January [1], but a rewrite of 
>the core
> ImgLib2 ROI library [2] is still pending. And there is a substantial
> pending redesign of the ImageJ Common data model planned as well -- 
>though
> it is unlikely anyone will work on it this year.
> 
> At this juncture, the most effective balance for most plugin 
>developers is
> probably to use parameterized commands and/or scripts, but with the 
>ImageJ1
> data structures (ij.ImagePlus, etc.) -- unless you need access to a 
>new
> capability that ImageJ2 + ImgLib2 make possible (>5D images, very 
>large
> image planes, very large numbers of image planes, dynamically 
>generated
> images, images stored in places besides disk, cell-based image 
>caching,
> image types beyond uint8/uint16/float32, etc.).
> 
> That said, your feedback is very much appreciated.
> 
> And some issues will be ironed out in the next couple of weeks as we 
>revamp
> the tutorials for the upcoming ImageJ conference.
> 
>> The easiest way to give a plugin a (rectangular) roi is to ... just
>> declare a net.imagej.overlay.RectangularOverlay as an input 
>>parameter.
>> It is properly populated by the origin and extent of a rectangular
>> selection drawn on the active image.
> 
> If all you care about is the bounding box of the active selection, 
>you can
> just do it the same way as the ImageJ2 CropImageJ command: by 
>calling
> OverlayService.getSelectionBounds [3]. Then you would avoid some of 
>the
> current weirdness associated with Overlay parameters.
> 
>> If I launch the default UI, then the ROI will not show, but the 
>>plugin
>> can launch. If on the other hand I launch the "swing" UI as in the
>> tutorial, I do see the ROI
> 
> Yes, that tutorial was written when the ImageJ2 Swing UI was still 
>the
> default. It is not tested/working with the Legacy UI (which is now 
>the
> default). I will try to remedy that very soon.
> 
>> (not until I call Image>Adjust>Brightness/Contrast..., but that's a
>> minor detail),
> 
> Yes, that annoying bug has been around for quite a while. Many 
>things that
> refresh the display will do, such as pressing + then - to zoom 
>in/out.
> 
>> but now the invocation of the plugin at the end of main() will throw 
>>a
>> MethodCallException with the stackTrace pasted below. How can the
>> choice of a UI make the plugin execution fail ?
> ...
>> Caused by: java.lang.NullPointerException
>>         at Goutte_pendante.initTitle(Goutte_pendante.java:94)
> 
> In 2014, we made a conscious decision to support the ImageJ 1.x 
>classes
> _only_ from the legacy UI. You cannot use them from the Swing UI. In 
>your
> case: the ActiveImagePlusPreprocessor cannot set the active 
>ImagePlus
> because WindowManager.getCurrentImage() returns null [4], because no 
>ImageJ
> 1.x user interface exists. So it stays null and then your 
>initializer
> throws the NPE.
> 
> Regards,
> Curtis
> 
> [1]
> https://github.com/imglib/imglib2-roi/tree/imglib2-roi-0.3.2/src/main/java/net/imglib2/labeling
> 
> [2] https://github.com/imglib/imglib2-roi
> 
> [3]
> https://github.com/imagej/imagej-plugins-commands/blob/imagej-plugins-commands-0.5.1/src/main/java/net/imagej/plugins/commands/imglib/CropImage.java#L104
> 
> [4]
> https://github.com/imagej/imagej-legacy/blob/imagej-legacy-0.17.1/src/main/java/net/imagej/legacy/plugin/ActiveImagePlusPreprocessor.java#L49-L52
> 
> 
> On Sun, Aug 23, 2015 at 6:30 AM, Adrian Daerr <
> adrian.daerr at univ-paris-diderot.fr> wrote:
> 
>> Hello,
>>
>> While I am still interested in answers concerning the 
>>status/API/roadmap
>> for ROIs and overlays beyond what's on http://imagej.net/ROIs, I 
>>have
>> solved the problem at hand which was keeping me from making 
>>progress, so I
>> post the (rather obvious, once I found the net.imagej.overlay 
>>package)
>> solution here for the record and to close this thread.
>>
>> The easiest way to give a plugin a (rectangular) roi is to ...
>> just declare a net.imagej.overlay.RectangularOverlay as an input
>> parameter. It is properly populated by the origin and extent of a
>> rectangular selection drawn on the active image.
>>
>> cheers,
>> Adrian
>>
>>
>> On Wed, 19 Aug 2015 17:10:06 +0200
>>
>>  "Adrian Daerr" <adrian.daerr at univ-paris-diderot.fr> wrote:
>>
>>>
>>> Dear ImageJ developers,
>>>
>>> I have included code from the AddROIs tutorial into the main()
>>> method of my plugin (for the moment essentially one of Curtis'
>>> commands-with-preview example), to select a Rectangle before
>>> calling the plugin. The source is available here:
>>>
>>> https://gitlab.com/pendant-drop/pendant-drop
>>> (in Goutte_pendante.java)
>>>
>>> If I launch the default UI, then the ROI will not show, but the
>>> plugin can launch. If on the other hand I launch the "swing" UI
>>> as in the tutorial, I do see the ROI (not until I call
>>> Image>Adjust>Brightness/Contrast..., but that's a minor detail),
>>> but now the invocation of the plugin at the end of main() will
>>> throw a MethodCallException with the stackTrace pasted below. How
>>> can the choice of a UI make the plugin execution fail ?
>>>
>>> Is there any other way that main can set a ROI on a loaded image
>>> that the plugin, which still uses an ImagePlus as input
>>> parameter, will see when calling imp.getProcessor().getRoi() ?
>>>
>>> TIA
>>> Adrian
>>>
>>>
>>> $> mvn package
>>> $> fiji --class-path target/pendant_drop-2.0.0-SNAPSHOT.jar
>>> Goutte_pendante.class
>>> [INFO] Overriding About Pendant Drop; identifier:
>>> command:About_Pendant_Drop; jar:
>>> file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
>>> [INFO] Overriding Pendant Drop; identifier: command:Goutte_pendante; 
>>>jar:
>>> file:/home/adrian/Programmes/plugins_ImageJ_src/Traitement_Gouttes/target/pendant_drop-2.0.0-SNAPSHOT.jar
>>> [INFO] Populating metadata
>>> [INFO] Populating metadata
>>> [INFO] Found 10 JHotDraw adapters.
>>> org.scijava.module.MethodCallException: Error executing method:
>>> Goutte_pendante#initTitle
>>>         at org.scijava.module.MethodRef.execute(MethodRef.java:73)
>>>         at
>>> org.scijava.module.AbstractModuleItem.initialize(AbstractModuleItem.java:199)
>>>         at
>>> org.scijava.module.AbstractModule.initialize(AbstractModule.java:86)
>>>         at
>>> org.scijava.command.CommandModule.initialize(CommandModule.java:147)
>>>         at
>>> org.scijava.module.process.InitPreprocessor.process(InitPreprocessor.java:60)
>>>         at
>>> org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
>>>         at 
>>>org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
>>>         at 
>>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>         at 
>>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>         at
>>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>>         at
>>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>         at
>>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>>         at
>>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>>         at java.lang.Thread.run(Thread.java:662)
>>> Caused by: java.lang.reflect.InvocationTargetException
>>>         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
>>>Method)
>>>         at
>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>>>         at
>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>>>         at java.lang.reflect.Method.invoke(Method.java:597)
>>>         at org.scijava.module.MethodRef.execute(MethodRef.java:69)
>>>         ... 14 more
>>> Caused by: java.lang.NullPointerException
>>>         at Goutte_pendante.initTitle(Goutte_pendante.java:94)
>>>         ... 19 more
>>> [ERROR] Module threw exception
>>> java.lang.NullPointerException
>>>         at Goutte_pendante.cancel(Goutte_pendante.java:87)
>>>         at
>>> org.scijava.command.CommandModule.cancel(CommandModule.java:140)
>>>         at
>>> org.scijava.module.ModuleRunner.cleanupAndBroadcastCancelation(ModuleRunner.java:189)
>>>         at 
>>>org.scijava.module.ModuleRunner.run(ModuleRunner.java:161)
>>>         at 
>>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>         at 
>>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>         at
>>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>>         at
>>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>         at
>>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>>         at
>>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>>         at java.lang.Thread.run(Thread.java:662)
>>>
>>>
>>>
>>> On Sat, 15 Aug 2015 13:14:13 +0200
>>>  Adrian Daerr <adrian.daerr at univ-paris-diderot.fr> wrote:
>>>
>>>> Hello,
>>>>
>>>> I am seizing a major rewrite of a plugin as an opportunity to switch
>>>> from ImageJ1 to ImageJ2, also to avoid concurrency issues[*], and 
>>>>now
>>>> lots of questions come up. Some concern the way ROIs are handled. 
>>>>What
>>>> has happened in this regard since
>>>>   http://imagej.net/ROIs
>>>> was last updated ?
>>>>
>>>> [*] cf discussion on the ImageJ list archived at
>>>>
>>>> http://imagej.1557.x6.nabble.com/ExtendedPlugInFilter-GenericDialog-and-synchronization-td5013333.html
>>>>
>>>> Here are two concrete questions:
>>>>
>>>> 1) My plugin relies on a rectangular ROI being drawn on the image to
>>>> know which area to include in the computation. How do I draw this 
>>>>ROI
>>>> once I have loaded the image as a dataset in the main() method that 
>>>>is
>>>> used for testing purposes ?
>>>>
>>>> public static void main(final String... args) throws Exception {
>>>>     final String testImagePath = "testImage.jpg";
>>>>
>>>>     // Launch ImageJ as usual.
>>>>     final ImageJ ij = net.imagej.Main.launch(args);
>>>>
>>>>     // Open test image.
>>>>     final Dataset dataset = ij.dataset().open(testImagePath);
>>>>
>>>>     // display the dataset
>>>>     ij.ui().show(dataset);
>>>>
>>>>     // create rectangular ROI
>>>>     //imp.setRoi(120,60,340,420);// How to do this on a dataset ?
>>>>
>>>>     // Launch the "Foo_Bar" command.
>>>>     ij.command().run(Foo_Bar.class, true);
>>>> }
>>>>
>>>> (alternatively, how would I generate a new dataset, or I guess 
>>>>something
>>>> like a "View" in ImageJ2 terminology, of the ROI sub-image of the 
>>>>original
>>>> dataset ? I could then substitute the original dataset with this 
>>>>sub-image
>>>> and have the plugin operate on the whole image by default)
>>>>
>>>> 2) The plugin preview generates overlays using java.awt.geom.Path2D,
>>>> java.awt.geom.Area and java.awt.Shape, which are then converted via
>>>> ij.gui.ShapeRoi() and ij.gui.Overlay(), assembled with 
>>>>overlay.add(),
>>>> and drawn using imp.setOverlay(). Is there a new IJ2-way to do this
>>>> (especially since the cited web page (rightly) insists on separation
>>>> of selection and visualisation shapes) ?
>>>>
>>>> TIA,
>>>> Adrian
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>
>>> --
>>> http://www.msc.univ-paris-diderot.fr/~daerr/
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>
>> --
>> http://www.msc.univ-paris-diderot.fr/~daerr/
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>

-- 
http://www.msc.univ-paris-diderot.fr/~daerr/


From adrian.daerr at univ-paris-diderot.fr  Thu Aug 27 10:35:32 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Thu, 27 Aug 2015 17:35:32 +0200
Subject: [ImageJ-devel] Masking @Parameter from GUI harvesting ?
In-Reply-To: <CADN69ymuUk=6z85na5aHFd_2rJcynvOFmB60jQKYfU9qrwxC+w@mail.gmail.com>
References: <web-159791561@univ-paris7.fr>
	<CADN69ymuUk=6z85na5aHFd_2rJcynvOFmB60jQKYfU9qrwxC+w@mail.gmail.com>
Message-ID: <web-159985074@univ-paris7.fr>

Hi Curtis,

Thanks for the explanations on how parameters are resolved.

> We could add a way to mark parameters which are not desired to be
> shown in the dialog box. What is your use case for a parameter you
> want to have in the script, but never shown to the user in cases
> where it is still null?

Upon reflection I don't see when this would be needed. I
misinterpreted the behaviour of the UI harvester in the case of a
net.imagej.overlay.RectangleOverlay, which was being properly
populated but which caused a strangely useless selector to appear in
the dialog (the selector seemed empty or possibly contained one empty
String). Of course the selector is really only usefull if there were
several RectangleOverlays to chose from, and they had meaningful
labels. In the case only one selection is defined one could just drop
the selector from the dialog. But I thought (should have checked) that
the UI would try to ask for a RectangleOverlay if none were found.
This is not the case: when there is no RectangleOverlay at all the
plugin fails just as in the absence of an image, which is what I want
(the user can then define a selection as usual and call the plugin
again). No need for any new annotation here.

>> 2) A net.imagej.overlay.RectangleOverlay parameter, although properly
>> populated, provoques an Exception after the execution of the command.
>> (more details and stacktraces below)
> 
> As I mentioned in the other thread: try with Overlay instead? We
> could certainly make it autofill parameters with specific Overlay
> subclasses too?just need to confirm first that that is indeed your
> problem.

No need, the OverlayService.getSelectionBounds() you mention in the
other thread behaves just fine.

>> 3) When a new preview is triggered, and that preview modifies numeric
>> parameters, then the numeric values visible in the gui dialog are
>> updated except for the NumericField on which input has triggered the
>> call to preview().
> 
> It is a programming error for the preview() function to modify
> parameter values. Use callbacks instead, which occur before
> preview() is called [1].

Ok, makes sense.

>> 4) It would be nice if a parameter could have a label even if
>> ItemVisibility is MESSAGE
> 
> Fixed [2].

Great, thanks a lot!

I have two new small comments (not sure they qualify as feature 
requests as I'm not sure they're necessarily good ideas):

5) Some parameters do not affect the preview, but preview() is called
nevertheless. Can we avoid calculating a new preview in this case ? Of
course we can check inside the preview() body, before performing the
actual calculation, whether any of the relevant parameters have
changed. A second possibility would be to introduce a new @Parameter
annotation to disable the preview() callback. A third way would be
to modify the framework to skip the preview() call on parameters which
register their own callback. It would be this callback's
responsibility to invoque preview() if desired. One could then easily
register an empty callback function on parameters for which preview()
should not be invoqued. The only drawback I see is that plugin authors
may not expect the fact that registering an explicit callback by
annotation unregisters/disables the preview callback. On the other
hand widgets such as Buttons which rely on their callback seem already
excluded from preview() invocation. One advantage is that the
programmer decides at which point in the callback, if at all,
preview() gets called, as opposed to the current situation where the
order is fixed: the specific callback is invoqued before preview().

6) Really a minor detail: If I want a parameter to be strictly
positive (so I can divide by it without checking for zero), it appears
that I need to specify a small non-negative number explicitely in the
min="" annotation:

@Parameter(min = "1e-300") private double capillary_length;

I cannot specify Double.MIN_VALUE because the 'min' attribute requires
a String, nor Double.toString(Double.MIN_VALUE) as it is not a
constant to the compiler. If the constraint of positivity is
sufficiently common to warrant a small hack, one could allow e.g.
"epsilon" or "positive" as special value for the annotation 'min' that
would be translated to <T>.MIN_VALUE

cheers,
Adrian


On Mon, 24 Aug 2015 15:31:07 -0500
  Curtis Rueden <ctrueden at wisc.edu> wrote:
> Hi Adrian,
> 
>> 1) How does one prevent a @Parameter from showing up in the 
>>harvesting
>> GUI dialog, in the manner of a '@Parameter LogService log'? (more
>> below)
> 
> Parameters which are resolved before the input harvester dialog pops 
>up
> will not show up.
> 
> They get resolved by the various preprocessors in the preprocessing 
>chain,
> which is applied before the module is actually run. The 
>InputHarvester --
> which is what pops the dialog box -- is (IIRC) the final 
>preprocessing step
> before run happens.
> 
> We could add a way to mark parameters which are not desired to be 
>shown in
> the dialog box. What is your use case for a parameter you want to 
>have in
> the script, but never shown to the user in cases where it is still 
>null?
> 
>> 2) A net.imagej.overlay.RectangleOverlay parameter, although 
>>properly
>> populated, provoques an Exception after the execution of the 
>>command.
>> (more details and stacktraces below)
> 
> As I mentioned in the other thread: try with Overlay instead? We 
>could
> certainly make it autofill parameters with specific Overlay 
>subclasses
> too?just need to confirm first that that is indeed your problem.
> 
>> 3) When a new preview is triggered, and that preview modifies 
>>numeric
>> parameters, then the numeric values visible in the gui dialog are
>> updated except for the NumericField on which input has triggered the
>> call to preview().
> 
> It is a programming error for the preview() function to modify 
>parameter
> values. Use callbacks instead, which occur before preview() is 
>called [1].
> 
>> 4) It would be nice if a parameter could have a label even if
>> ItemVisibility is MESSAGE
> 
>Fixed [2].
> 
> Regards,
> Curtis
> 
> [1]
> https://github.com/scijava/scijava-common/blob/scijava-common-2.44.2/src/main/java/org/scijava/widget/DefaultWidgetModel.java#L167-L169
> 
> [2]
> https://github.com/scijava/scijava-ui-swing/commit/84c30c045bf3327a424f499f1f2fe867b0d9375e
> 
> 
> On Sun, Aug 23, 2015 at 6:44 AM, Adrian Daerr <
> adrian.daerr at univ-paris-diderot.fr> wrote:
> 
>> Dear ImageJ developers,
>>
>> As I slowly learn more about IJ2 @Plugins, I have one question and 
>>three
>> minor comments that I would like to submit to you.
>>
>> 1) How does one prevent a @Parameter from showing up in the 
>>harvesting
>> GUI dialog, in the manner of a '@Parameter LogService log'? (more 
>>below)
>>
>> 2) A net.imagej.overlay.RectangleOverlay parameter, although 
>>properly
>> populated, provoques an Exception after the execution of the 
>>command.
>> (more details and stacktraces below)
>>
>> 3) When a new preview is triggered, and that preview modifies 
>>numeric
>> parameters, then the numeric values visible in the gui dialog are
>> updated except for the NumericField on which input has triggered the
>> call to preview().
>>
>> 4) It would be nice if a parameter could have a label even if
>> ItemVisibility is MESSAGE:
>>   @Parameter(persist = false,
>>              visibility = org.scijava.ItemVisibility.MESSAGE,
>>              label = "Current foo value")
>>     private double foo = 0;
>> (currently, at least on my box, the label is not shown in this case)
>> Obviously a workaround is to build a String with label+foo instead.
>>
>> cheers,
>> Adrian
>>
>>
>>
>> ad 1)
>> How to prevent a @Parameter from showing up in the harvesting GUI
>> dialog? Some seem to be masked by default (ImagePlus, LogService), 
>>but
>> I did not find the appropriate annotation to make the parameter roi 
>>in
>> the following not show up, although it is already properly populated
>> by the rectangular selection of the active image ? There is no
>> meaningful thing I can do with the associated selector in the 
>>dialog.
>>
>>     @Parameter private ImagePlus imp;
>>     @Parameter private RectangleOverlay roi;
>>     @Parameter private double a;
>>
>>
>> ad 2)
>> A net.imagej.overlay.RectangleOverlay parameter
>>
>>   @Parameter private RectangleOverlay roi;
>>
>> is properly populated when the Command is invoqued on an active 
>>image
>> containing a rectangular selection. However it provoques an 
>>Exception
>> after the execution of the command, when either the
>> DefaultPrefService, or the Recorder if a persist=false attribute is
>> added, apparently tries to record a 'null' value for an option. The
>> two stacktraces are
>>
>>   [ERROR] Module threw exception
>>   java.lang.NullPointerException
>>         at
>> java.util.prefs.AbstractPreferences.put(AbstractPreferences.java:224)
>>         at
>> org.scijava.prefs.DefaultPrefService.put(DefaultPrefService.java:183)
>>         at
>> org.scijava.module.DefaultModuleService.save(DefaultModuleService.java:278)
>>         at
>> org.scijava.module.process.SaveInputsPreprocessor.saveValue(SaveInputsPreprocessor.java:74)
>>         at
>> org.scijava.module.process.SaveInputsPreprocessor.process(SaveInputsPreprocessor.java:65)
>>         at
>> org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
>>         at 
>>org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
>>         at 
>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>         at 
>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>         at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>         at
>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>         at java.lang.Thread.run(Thread.java:662)
>>
>>   [ERROR] Module threw exception
>>   java.lang.NullPointerException
>>         at ij.plugin.frame.Recorder.addQuotes(Recorder.java:612)
>>         at ij.plugin.frame.Recorder.recordOption(Recorder.java:362)
>>         at 
>>net.imagej.legacy.IJ1Helper.recordOption(IJ1Helper.java:467)
>>         at
>> net.imagej.legacy.plugin.MacroRecorderPostprocessor.process(MacroRecorderPostprocessor.java:70)
>>         at
>> org.scijava.module.ModuleRunner.postProcess(ModuleRunner.java:116)
>>         at 
>>org.scijava.module.ModuleRunner.run(ModuleRunner.java:176)
>>         at 
>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>         at 
>>org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>         at
>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>         at
>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>         at
>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>         at java.lang.Thread.run(Thread.java:662)
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>

-- 
http://www.msc.univ-paris-diderot.fr/~daerr/


From ctrueden at wisc.edu  Thu Aug 27 13:54:22 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 27 Aug 2015 13:54:22 -0500
Subject: [ImageJ-devel] Masking @Parameter from GUI harvesting ?
In-Reply-To: <web-159985074@univ-paris7.fr>
References: <web-159791561@univ-paris7.fr>
	<CADN69ymuUk=6z85na5aHFd_2rJcynvOFmB60jQKYfU9qrwxC+w@mail.gmail.com>
	<web-159985074@univ-paris7.fr>
Message-ID: <CADN69y=G+1aVwWwaNdZdKCEweJJFCgA4TSX5mJ6asj00hAYUrQ@mail.gmail.com>

Hi Adrian,

> Some parameters do not affect the preview, but preview() is called
> nevertheless. Can we avoid calculating a new preview in this case ? Of
> course we can check inside the preview() body, before performing the
> actual calculation, whether any of the relevant parameters have
> changed.

Checking inside preview() is the approach I favor in general, because your
constraints on what triggers a preview recomputation could be based on
anything.

That said, perhaps it would make sense to make the really common case easy:
add a flag "boolean preview" to the @Parameter annotation (and
corresponding ModuleItem#isPreviewed() method). I filed an issue:

https://github.com/scijava/scijava-common/issues/184

> If I want a parameter to be strictly positive (so I can divide by it
> without checking for zero), it appears that I need to specify a small
> non-negative number explicitely in the min="" annotation:

More generally, it would be nice if you could annotate min and/or max as an
exclusive bound rather than an inclusive one. This would solve your
non-zero problem. Issue filed:

https://github.com/scijava/scijava-common/issues/183

Regards,
Curtis

On Thu, Aug 27, 2015 at 10:35 AM, Adrian Daerr <
adrian.daerr at univ-paris-diderot.fr> wrote:

> Hi Curtis,
>
> Thanks for the explanations on how parameters are resolved.
>
> We could add a way to mark parameters which are not desired to be
>> shown in the dialog box. What is your use case for a parameter you
>> want to have in the script, but never shown to the user in cases
>> where it is still null?
>>
>
> Upon reflection I don't see when this would be needed. I
> misinterpreted the behaviour of the UI harvester in the case of a
> net.imagej.overlay.RectangleOverlay, which was being properly
> populated but which caused a strangely useless selector to appear in
> the dialog (the selector seemed empty or possibly contained one empty
> String). Of course the selector is really only usefull if there were
> several RectangleOverlays to chose from, and they had meaningful
> labels. In the case only one selection is defined one could just drop
> the selector from the dialog. But I thought (should have checked) that
> the UI would try to ask for a RectangleOverlay if none were found.
> This is not the case: when there is no RectangleOverlay at all the
> plugin fails just as in the absence of an image, which is what I want
> (the user can then define a selection as usual and call the plugin
> again). No need for any new annotation here.
>
> 2) A net.imagej.overlay.RectangleOverlay parameter, although properly
>>> populated, provoques an Exception after the execution of the command.
>>> (more details and stacktraces below)
>>>
>>
>> As I mentioned in the other thread: try with Overlay instead? We
>> could certainly make it autofill parameters with specific Overlay
>> subclasses too?just need to confirm first that that is indeed your
>> problem.
>>
>
> No need, the OverlayService.getSelectionBounds() you mention in the
> other thread behaves just fine.
>
> 3) When a new preview is triggered, and that preview modifies numeric
>>> parameters, then the numeric values visible in the gui dialog are
>>> updated except for the NumericField on which input has triggered the
>>> call to preview().
>>>
>>
>> It is a programming error for the preview() function to modify
>> parameter values. Use callbacks instead, which occur before
>> preview() is called [1].
>>
>
> Ok, makes sense.
>
> 4) It would be nice if a parameter could have a label even if
>>> ItemVisibility is MESSAGE
>>>
>>
>> Fixed [2].
>>
>
> Great, thanks a lot!
>
> I have two new small comments (not sure they qualify as feature requests
> as I'm not sure they're necessarily good ideas):
>
> 5) Some parameters do not affect the preview, but preview() is called
> nevertheless. Can we avoid calculating a new preview in this case ? Of
> course we can check inside the preview() body, before performing the
> actual calculation, whether any of the relevant parameters have
> changed. A second possibility would be to introduce a new @Parameter
> annotation to disable the preview() callback. A third way would be
> to modify the framework to skip the preview() call on parameters which
> register their own callback. It would be this callback's
> responsibility to invoque preview() if desired. One could then easily
> register an empty callback function on parameters for which preview()
> should not be invoqued. The only drawback I see is that plugin authors
> may not expect the fact that registering an explicit callback by
> annotation unregisters/disables the preview callback. On the other
> hand widgets such as Buttons which rely on their callback seem already
> excluded from preview() invocation. One advantage is that the
> programmer decides at which point in the callback, if at all,
> preview() gets called, as opposed to the current situation where the
> order is fixed: the specific callback is invoqued before preview().
>
> 6) Really a minor detail: If I want a parameter to be strictly
> positive (so I can divide by it without checking for zero), it appears
> that I need to specify a small non-negative number explicitely in the
> min="" annotation:
>
> @Parameter(min = "1e-300") private double capillary_length;
>
> I cannot specify Double.MIN_VALUE because the 'min' attribute requires
> a String, nor Double.toString(Double.MIN_VALUE) as it is not a
> constant to the compiler. If the constraint of positivity is
> sufficiently common to warrant a small hack, one could allow e.g.
> "epsilon" or "positive" as special value for the annotation 'min' that
> would be translated to <T>.MIN_VALUE
>
> cheers,
> Adrian
>
>
>
> On Mon, 24 Aug 2015 15:31:07 -0500
>  Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>> Hi Adrian,
>>
>> 1) How does one prevent a @Parameter from showing up in the harvesting
>>> GUI dialog, in the manner of a '@Parameter LogService log'? (more
>>> below)
>>>
>>
>> Parameters which are resolved before the input harvester dialog pops up
>> will not show up.
>>
>> They get resolved by the various preprocessors in the preprocessing chain,
>> which is applied before the module is actually run. The InputHarvester --
>> which is what pops the dialog box -- is (IIRC) the final preprocessing
>> step
>> before run happens.
>>
>> We could add a way to mark parameters which are not desired to be shown in
>> the dialog box. What is your use case for a parameter you want to have in
>> the script, but never shown to the user in cases where it is still null?
>>
>> 2) A net.imagej.overlay.RectangleOverlay parameter, although properly
>>> populated, provoques an Exception after the execution of the command.
>>> (more details and stacktraces below)
>>>
>>
>> As I mentioned in the other thread: try with Overlay instead? We could
>> certainly make it autofill parameters with specific Overlay subclasses
>> too?just need to confirm first that that is indeed your problem.
>>
>> 3) When a new preview is triggered, and that preview modifies numeric
>>> parameters, then the numeric values visible in the gui dialog are
>>> updated except for the NumericField on which input has triggered the
>>> call to preview().
>>>
>>
>> It is a programming error for the preview() function to modify parameter
>> values. Use callbacks instead, which occur before preview() is called [1].
>>
>> 4) It would be nice if a parameter could have a label even if
>>> ItemVisibility is MESSAGE
>>>
>>
>> Fixed [2].
>>
>> Regards,
>> Curtis
>>
>> [1]
>>
>> https://github.com/scijava/scijava-common/blob/scijava-common-2.44.2/src/main/java/org/scijava/widget/DefaultWidgetModel.java#L167-L169
>>
>> [2]
>>
>> https://github.com/scijava/scijava-ui-swing/commit/84c30c045bf3327a424f499f1f2fe867b0d9375e
>>
>>
>> On Sun, Aug 23, 2015 at 6:44 AM, Adrian Daerr <
>> adrian.daerr at univ-paris-diderot.fr> wrote:
>>
>> Dear ImageJ developers,
>>>
>>> As I slowly learn more about IJ2 @Plugins, I have one question and three
>>> minor comments that I would like to submit to you.
>>>
>>> 1) How does one prevent a @Parameter from showing up in the harvesting
>>> GUI dialog, in the manner of a '@Parameter LogService log'? (more below)
>>>
>>> 2) A net.imagej.overlay.RectangleOverlay parameter, although properly
>>> populated, provoques an Exception after the execution of the command.
>>> (more details and stacktraces below)
>>>
>>> 3) When a new preview is triggered, and that preview modifies numeric
>>> parameters, then the numeric values visible in the gui dialog are
>>> updated except for the NumericField on which input has triggered the
>>> call to preview().
>>>
>>> 4) It would be nice if a parameter could have a label even if
>>> ItemVisibility is MESSAGE:
>>>   @Parameter(persist = false,
>>>              visibility = org.scijava.ItemVisibility.MESSAGE,
>>>              label = "Current foo value")
>>>     private double foo = 0;
>>> (currently, at least on my box, the label is not shown in this case)
>>> Obviously a workaround is to build a String with label+foo instead.
>>>
>>> cheers,
>>> Adrian
>>>
>>>
>>>
>>> ad 1)
>>> How to prevent a @Parameter from showing up in the harvesting GUI
>>> dialog? Some seem to be masked by default (ImagePlus, LogService), but
>>> I did not find the appropriate annotation to make the parameter roi in
>>> the following not show up, although it is already properly populated
>>> by the rectangular selection of the active image ? There is no
>>> meaningful thing I can do with the associated selector in the dialog.
>>>
>>>     @Parameter private ImagePlus imp;
>>>     @Parameter private RectangleOverlay roi;
>>>     @Parameter private double a;
>>>
>>>
>>> ad 2)
>>> A net.imagej.overlay.RectangleOverlay parameter
>>>
>>>   @Parameter private RectangleOverlay roi;
>>>
>>> is properly populated when the Command is invoqued on an active image
>>> containing a rectangular selection. However it provoques an Exception
>>> after the execution of the command, when either the
>>> DefaultPrefService, or the Recorder if a persist=false attribute is
>>> added, apparently tries to record a 'null' value for an option. The
>>> two stacktraces are
>>>
>>>   [ERROR] Module threw exception
>>>   java.lang.NullPointerException
>>>         at
>>> java.util.prefs.AbstractPreferences.put(AbstractPreferences.java:224)
>>>         at
>>> org.scijava.prefs.DefaultPrefService.put(DefaultPrefService.java:183)
>>>         at
>>>
>>> org.scijava.module.DefaultModuleService.save(DefaultModuleService.java:278)
>>>         at
>>>
>>> org.scijava.module.process.SaveInputsPreprocessor.saveValue(SaveInputsPreprocessor.java:74)
>>>         at
>>>
>>> org.scijava.module.process.SaveInputsPreprocessor.process(SaveInputsPreprocessor.java:65)
>>>         at
>>> org.scijava.module.ModuleRunner.preProcess(ModuleRunner.java:104)
>>>         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:156)
>>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>         at
>>>
>>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>>         at
>>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>         at
>>>
>>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>>         at
>>>
>>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>>         at java.lang.Thread.run(Thread.java:662)
>>>
>>>   [ERROR] Module threw exception
>>>   java.lang.NullPointerException
>>>         at ij.plugin.frame.Recorder.addQuotes(Recorder.java:612)
>>>         at ij.plugin.frame.Recorder.recordOption(Recorder.java:362)
>>>         at net.imagej.legacy.IJ1Helper.recordOption(IJ1Helper.java:467)
>>>         at
>>>
>>> net.imagej.legacy.plugin.MacroRecorderPostprocessor.process(MacroRecorderPostprocessor.java:70)
>>>         at
>>> org.scijava.module.ModuleRunner.postProcess(ModuleRunner.java:116)
>>>         at org.scijava.module.ModuleRunner.run(ModuleRunner.java:176)
>>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:126)
>>>         at org.scijava.module.ModuleRunner.call(ModuleRunner.java:65)
>>>         at
>>>
>>> org.scijava.thread.DefaultThreadService$2.call(DefaultThreadService.java:191)
>>>         at
>>> java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
>>>         at java.util.concurrent.FutureTask.run(FutureTask.java:138)
>>>         at
>>>
>>> java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
>>>         at
>>>
>>> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
>>>         at java.lang.Thread.run(Thread.java:662)
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
> --
> http://www.msc.univ-paris-diderot.fr/~daerr/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150827/2437d645/attachment-0001.html>

From adrian.daerr at univ-paris-diderot.fr  Thu Aug 27 14:18:33 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Thu, 27 Aug 2015 21:18:33 +0200
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <CADN69yndGthuWouZXfP_Q_=GrxkHDcbBNvRTQA6+-sqbp7n0QA@mail.gmail.com>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
	<CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
	<web-159742879@univ-paris7.fr>
	<CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>
	<web-159836040@univ-paris7.fr>
	<CADN69yndGthuWouZXfP_Q_=GrxkHDcbBNvRTQA6+-sqbp7n0QA@mail.gmail.com>
Message-ID: <web-159992129@univ-paris7.fr>

Hello Curtis,

>> @Parameter(persist = false) private RectangleOverlay roi;
>>
>> which appears to be populated only after the initializer is called
>> (its value is null in the initializer and valid in the run() 
>>method).
> 
> Hmm, that should not be the case. [..]
> The issue might be typing-related: try using Overlay instead of
> RectangleOverlay and see if that makes a difference.
>
> Alternately: can you post an MVCE [3, 4] illustrating the issue?

https://gitlab.com/pendant-drop/pendant-drop.git
(checkout branch overlay_issue (commit 2887f8ec))

This is a MVCE that has parameters

     @Parameter
     private ImagePlus imp;

     @Parameter(persist = false)
     private RectangleOverlay region;

     @Parameter(persist = false)
     private Overlay overlay;

It compiles and executes with

mvn -o package && fiji --class-path \
target/pendant_drop-2.0.0-SNAPSHOT.jar Goutte_pendante.class

and logs the following to the console:

[INFO] imp parameter in initializer(): non-null
[INFO] region parameter in initializer(): null
[INFO] overlay parameter in initializer(): null
[INFO] imp parameter in preview(): non-null
[INFO] region parameter in preview(): non-null
[INFO] overlay parameter in preview(): non-null
[INFO] imp parameter in run(): non-null
[INFO] region parameter in run(): non-null
[INFO] overlay parameter in run(): non-null
[ERROR] Module threw exception
java.lang.NullPointerException
         at ij.plugin.frame.Recorder.addQuotes(Recorder.java:612)
...

Note 1) Since I switched to the OverlayService.getSelectionBounds()
solution you suggested in another thread, do not bother looking into
this for me. I just submit this MVCE in case the issue is more
important than I suspect.

Note 2) It appears (RectangleOverlay).toString() returns null in any
case.

Note 3) Overlay and RectangleOverlay have the same issue with respect
to initialization, but the reason I used RectangleOverlay is that I
did not see how to get the bounds of an Overlay.

> I am sorry?the tutorials need to be improved. What sort of tutorial 
> do you think would aid your understanding here?

More than a tutorial I missed some explanations on the technical
design of, and the interplay between, the different parts that now
make up ImageJ2. Instead of one single place to find the API and
Source of ij.*, things are split up into packages (org.scijava.*,
net.imagej.*, imglib) and it takes a bit to figure out how things are
organized and why this division of labour makes sense. So deciding
e.g. where to look for ROI/Overlay related stuff was not easy
(net.imagej? imglib? both seem to have bits). For someone used to the
often static, in any case ultra specific ImageJ1 API, understanding
what a context is, what Services are good for, how menus, views, even
whole GUIs are flexibly handled, how roughly plugins are recognized,
how and when annotations are parsed (what's an annotation anyway from
a Java perspective ?) and how they are instantiated and executed, well
all this is quite a lot of new stuff. Not to speak about understanding
how the new Dataset/ImageDisplay/Views classes replacing ImageJ1's
ImagePlus/ImageWindow/.. work together, and why some of them are
already deprecated ;-)

Now this very design still seems to be changing, so I understand
writing up something might be a bit early. Besides, it's a good thing
not to pin it down to early, and producing documentation wikis that
may soon prove outdated can be not only a waste of time, but even
prove quite perturbing later when they contradict reality. Even if I'd
like to see some gently (but technically oriented) introduction to the
class zoo and ecosystem of ImageJ2, and also a guide to plugin
programming specifically for the ImageJ1 veteran (with, for now, your
recommendation to just take advantage of the parameter harvesting
features but to stick to IJ1 data structures), I think this is
probably too early to do. But I just opened a sheet in an editor on
which I will jot down notes as I go ahead with my plugin, about
problems, discoveries and things I suddenly understand. Maybe this can
be a starting point or contribution for a transition guide.

If I do have ideas about specific programming examples for the
imagej-tutorials, I'll voice them of course.

In any case your reactivity on this list is simply invaluable, thanks
a lot for adding communication efforts to your programming mission.

best regards,
Adrian



On Mon, 24 Aug 2015 10:25:59 -0500
  Curtis Rueden <ctrueden at wisc.edu> wrote:
> Hi Adrian,
> 
>> Thanks for the suggestion, which almost does the job, except that 
>>the
>> initialization also depends on a parameter
>>
>> @Parameter(persist = false) private RectangleOverlay roi;
>>
>> which appears to be populated only after the initializer is called
>> (its value is null in the initializer and valid in the run() 
>>method).
> 
> Hmm, that should not be the case. Commands that include a single 
>overlay
> parameter should automatically draw from the active image's active 
>overlay,
> when possible [1]. This happens _before_ the initializers are called 
>[2]
> (because Priority.VERY_HIGH_PRIORITY > Priority.HIGH_PRIORITY).
> 
> The issue might be typing-related: try using Overlay instead of
> RectangleOverlay and see if that makes a difference. If so, it is 
>probably
> a limitation of the ActiveOverlayPreprocessor [1]; patches welcome.
> 
> Alternately: can you post an MVCE [3, 4] illustrating the issue?
> 
>> do I have to write a Preprocessor of some sorts
> 
> This is certainly possible to do, but I would hope not necessary.
> 
>> can the initializer 'manually' call the code which normally harvest
>> the RectangleOverlay parameter later on ?
> 
> Sure, you can always code in whatever logic you want to the plugin
> initializer method. But again, hopefully not necessary in this case.
> 
>> even after some reading of the tutorials and the scijava source code
>> around org.scijava.command.CommandInfo my understanding of how the
>> plugin initialisation works is still poor.
> 
> I am sorry?the tutorials need to be improved. What sort of tutorial 
>do you
> think would aid your understanding here? The "execute-commands" and
> "custom-preprocessor-plugin" tutorials are probably touch on these 
>topics
> most closely, although neither provides a real overview of the
> pre-/post-processing chain in conjunction with module execution.
> 
>> Would it make sense to distinguish (by an annotation ?) parameters
>> that are to be initialized from the context (i.e. services, active
>> image, roi etc), and whose lack should be immediately fatal to the
>> plugin (no UI harvesting, and in exchange can be assumed final for 
>>the
>> rest of the command execution), from parameters that, if they cannot
>> be populated from already available data, should be harvested 
>>through
>> a dialog (and may change several times) ?
> 
> Potentially, yes. Feel free to comment on the issue on GitHub!
> 
> Regards,
> Curtis
> 
> [1]
> https://github.com/imagej/imagej-common/blob/imagej-common-0.15.1/src/main/java/net/imagej/display/process/ActiveOverlayPreprocessor.java#L57
> 
> [2]
> https://github.com/scijava/scijava-common/blob/scijava-common-2.44.2/src/main/java/org/scijava/module/process/InitPreprocessor.java#L49
> 
> [3] http://imagej.net/Bug_reporting_best_practices
> 
> [4] http://stackoverflow.com/help/mcve
> 
> 
> On Mon, Aug 24, 2015 at 9:07 AM, Adrian Daerr <
> adrian.daerr at univ-paris-diderot.fr> wrote:
> 
>> Hi Curtis,
>>
>> I have parameters a, b, c whose initialisation depend on a common
>>>> calculation (depending on the image gotten through a previous
>>>> @Parameter ImagePlus imp): can I do this calculation in the
>>>> initialiser for the first parameter a, and then in the initialisers 
>>>>of b
>>>> and c rely on the fact that the calculation was already done ?
>>>>
>>>
>>> Perhaps simplest at the moment would be to give your command a 
>>>global
>>> initializer -- i.e., set the initializer method in the
>>> @Plugin annotation itself, rather than on specific parameters.
>>> The ImagePlus will be populated by a preprocessor _before_ the
>>> initialize method is called, so when your global initializer gets
>>> called you will already have access to the ImagePlus.
>>>
>>
>> Thanks for the suggestion, which almost does the job, except that 
>>the
>> initialization also depends on a parameter
>>
>> @Parameter(persist = false) private RectangleOverlay roi;
>>
>> which appears to be populated only after the initializer is called 
>>(its
>> value is null in the initializer and valid in the run() method).
>>
>> I am not sure how to solve this: do I have to write a Preprocessor 
>>of some
>> sorts, or can the initializer 'manually' call the code which 
>>normally
>> harvest the RectangleOverlay parameter later on ? Somehow the fact 
>>that
>> ImagePlus is populated by a Preprocessor but RectangleOverlay isn't, 
>>seems
>> linked to issues that I mentionned in another post[1], but even 
>>after some
>> reading of the tutorials and the scijava source code around
>> org.scijava.command.CommandInfo my understanding of how the plugin
>> initialisation works is still poor.
>>
>> [1]
>> (e.g. that the Overlay appears in the harvesting dialog, or that an
>> Exception is thrown because of the overlay after command execution)
>>
>> http://imagej-devel.54429.x6.nabble.com/Masking-Parameter-from-GUI-harvesting-td1098.html
>>
>> But again, scijava/scijava-common#181 is very relevant here.
>>>
>>
>> Would it make sense to distinguish (by an annotation ?) parameters 
>>that
>> are to be initialized from the context (i.e. services, active image, 
>>roi
>> etc), and whose lack should be immediately fatal to the plugin (no 
>>UI
>> harvesting, and in exchange can be assumed final for the rest of the
>> command execution), from parameters that, if they cannot be 
>>populated from
>> already available data, should be harvested through a dialog (and 
>>may
>> change several times) ?
>>
>> cheers,
>> Adrian
>>

-- 
http://www.msc.univ-paris-diderot.fr/~daerr/


From ctrueden at wisc.edu  Thu Aug 27 16:33:03 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 27 Aug 2015 16:33:03 -0500
Subject: [ImageJ-devel] @parameter choice update in component callback
In-Reply-To: <web-159992129@univ-paris7.fr>
References: <27DF46BD-B36D-4FD6-B11C-9FC9D98D8399@unifr.ch>
	<55D5BEFC.30400@gmail.com>
	<CADN69ym=Lg=5zQON72DLfyU1mqYxV8ep-y2J-toyrv2Of4BiGg@mail.gmail.com>
	<web-159742879@univ-paris7.fr>
	<CADN69y=pm0FPELAC0yp9hnOjET8gRAeL=_gS30qLk5euP98=vg@mail.gmail.com>
	<web-159836040@univ-paris7.fr>
	<CADN69yndGthuWouZXfP_Q_=GrxkHDcbBNvRTQA6+-sqbp7n0QA@mail.gmail.com>
	<web-159992129@univ-paris7.fr>
Message-ID: <CADN69ymOX27DZWkbCsQmnzwoo8-4w89uhMsCjfGGed6DrtPdZQ@mail.gmail.com>

Hi Adrian,

> https://gitlab.com/pendant-drop/pendant-drop.git
> (checkout branch overlay_issue (commit 2887f8ec))
>
> This is a MVCE that has parameters

Thanks, I was able to replicate the problems using your code.

I tried to reproduce using a script with various parameter combinations
mirroring yours, but was initially unsuccessful. It seems the problem is a
little subtle.

It is likely related to the syncing of IJ1 and IJ2 data structures. So I'm
not going to worry about further for the time being?that logic will be
revised in the future anyway.

> More than a tutorial I missed some explanations on the technical
> design of, and the interplay between, the different parts that now
> make up ImageJ2.

The best I have to offer right now is:
* http://imagej.net/Architecture
* http://imagej.net/Development

> I just opened a sheet in an editor on which I will jot down notes as I
> go ahead with my plugin, about problems, discoveries and things I
> suddenly understand. Maybe this can be a starting point or
> contribution for a transition guide.

That would be fantastic! It is physically impossible for Mark and me to
write the entire wiki...

Regards,
Curtis

On Thu, Aug 27, 2015 at 2:18 PM, Adrian Daerr <
adrian.daerr at univ-paris-diderot.fr> wrote:

> Hello Curtis,
>
> @Parameter(persist = false) private RectangleOverlay roi;
>>>
>>> which appears to be populated only after the initializer is called
>>> (its value is null in the initializer and valid in the run() method).
>>>
>>
>> Hmm, that should not be the case. [..]
>> The issue might be typing-related: try using Overlay instead of
>> RectangleOverlay and see if that makes a difference.
>>
>> Alternately: can you post an MVCE [3, 4] illustrating the issue?
>>
>
> https://gitlab.com/pendant-drop/pendant-drop.git
> (checkout branch overlay_issue (commit 2887f8ec))
>
> This is a MVCE that has parameters
>
>     @Parameter
>     private ImagePlus imp;
>
>     @Parameter(persist = false)
>     private RectangleOverlay region;
>
>     @Parameter(persist = false)
>     private Overlay overlay;
>
> It compiles and executes with
>
> mvn -o package && fiji --class-path \
> target/pendant_drop-2.0.0-SNAPSHOT.jar Goutte_pendante.class
>
> and logs the following to the console:
>
> [INFO] imp parameter in initializer(): non-null
> [INFO] region parameter in initializer(): null
> [INFO] overlay parameter in initializer(): null
> [INFO] imp parameter in preview(): non-null
> [INFO] region parameter in preview(): non-null
> [INFO] overlay parameter in preview(): non-null
> [INFO] imp parameter in run(): non-null
> [INFO] region parameter in run(): non-null
> [INFO] overlay parameter in run(): non-null
> [ERROR] Module threw exception
> java.lang.NullPointerException
>         at ij.plugin.frame.Recorder.addQuotes(Recorder.java:612)
> ...
>
> Note 1) Since I switched to the OverlayService.getSelectionBounds()
> solution you suggested in another thread, do not bother looking into
> this for me. I just submit this MVCE in case the issue is more
> important than I suspect.
>
> Note 2) It appears (RectangleOverlay).toString() returns null in any
> case.
>
> Note 3) Overlay and RectangleOverlay have the same issue with respect
> to initialization, but the reason I used RectangleOverlay is that I
> did not see how to get the bounds of an Overlay.
>
> I am sorry?the tutorials need to be improved. What sort of tutorial do you
>> think would aid your understanding here?
>>
>
> More than a tutorial I missed some explanations on the technical
> design of, and the interplay between, the different parts that now
> make up ImageJ2. Instead of one single place to find the API and
> Source of ij.*, things are split up into packages (org.scijava.*,
> net.imagej.*, imglib) and it takes a bit to figure out how things are
> organized and why this division of labour makes sense. So deciding
> e.g. where to look for ROI/Overlay related stuff was not easy
> (net.imagej? imglib? both seem to have bits). For someone used to the
> often static, in any case ultra specific ImageJ1 API, understanding
> what a context is, what Services are good for, how menus, views, even
> whole GUIs are flexibly handled, how roughly plugins are recognized,
> how and when annotations are parsed (what's an annotation anyway from
> a Java perspective ?) and how they are instantiated and executed, well
> all this is quite a lot of new stuff. Not to speak about understanding
> how the new Dataset/ImageDisplay/Views classes replacing ImageJ1's
> ImagePlus/ImageWindow/.. work together, and why some of them are
> already deprecated ;-)
>
> Now this very design still seems to be changing, so I understand
> writing up something might be a bit early. Besides, it's a good thing
> not to pin it down to early, and producing documentation wikis that
> may soon prove outdated can be not only a waste of time, but even
> prove quite perturbing later when they contradict reality. Even if I'd
> like to see some gently (but technically oriented) introduction to the
> class zoo and ecosystem of ImageJ2, and also a guide to plugin
> programming specifically for the ImageJ1 veteran (with, for now, your
> recommendation to just take advantage of the parameter harvesting
> features but to stick to IJ1 data structures), I think this is
> probably too early to do. But I just opened a sheet in an editor on
> which I will jot down notes as I go ahead with my plugin, about
> problems, discoveries and things I suddenly understand. Maybe this can
> be a starting point or contribution for a transition guide.
>
> If I do have ideas about specific programming examples for the
> imagej-tutorials, I'll voice them of course.
>
> In any case your reactivity on this list is simply invaluable, thanks
> a lot for adding communication efforts to your programming mission.
>
> best regards,
> Adrian
>
>
>
>
> On Mon, 24 Aug 2015 10:25:59 -0500
>  Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>> Hi Adrian,
>>
>> Thanks for the suggestion, which almost does the job, except that the
>>> initialization also depends on a parameter
>>>
>>> @Parameter(persist = false) private RectangleOverlay roi;
>>>
>>> which appears to be populated only after the initializer is called
>>> (its value is null in the initializer and valid in the run() method).
>>>
>>
>> Hmm, that should not be the case. Commands that include a single overlay
>> parameter should automatically draw from the active image's active
>> overlay,
>> when possible [1]. This happens _before_ the initializers are called [2]
>> (because Priority.VERY_HIGH_PRIORITY > Priority.HIGH_PRIORITY).
>>
>> The issue might be typing-related: try using Overlay instead of
>> RectangleOverlay and see if that makes a difference. If so, it is probably
>> a limitation of the ActiveOverlayPreprocessor [1]; patches welcome.
>>
>> Alternately: can you post an MVCE [3, 4] illustrating the issue?
>>
>> do I have to write a Preprocessor of some sorts
>>>
>>
>> This is certainly possible to do, but I would hope not necessary.
>>
>> can the initializer 'manually' call the code which normally harvest
>>> the RectangleOverlay parameter later on ?
>>>
>>
>> Sure, you can always code in whatever logic you want to the plugin
>> initializer method. But again, hopefully not necessary in this case.
>>
>> even after some reading of the tutorials and the scijava source code
>>> around org.scijava.command.CommandInfo my understanding of how the
>>> plugin initialisation works is still poor.
>>>
>>
>> I am sorry?the tutorials need to be improved. What sort of tutorial do you
>> think would aid your understanding here? The "execute-commands" and
>> "custom-preprocessor-plugin" tutorials are probably touch on these topics
>> most closely, although neither provides a real overview of the
>> pre-/post-processing chain in conjunction with module execution.
>>
>> Would it make sense to distinguish (by an annotation ?) parameters
>>> that are to be initialized from the context (i.e. services, active
>>> image, roi etc), and whose lack should be immediately fatal to the
>>> plugin (no UI harvesting, and in exchange can be assumed final for the
>>> rest of the command execution), from parameters that, if they cannot
>>> be populated from already available data, should be harvested through
>>> a dialog (and may change several times) ?
>>>
>>
>> Potentially, yes. Feel free to comment on the issue on GitHub!
>>
>> Regards,
>> Curtis
>>
>> [1]
>>
>> https://github.com/imagej/imagej-common/blob/imagej-common-0.15.1/src/main/java/net/imagej/display/process/ActiveOverlayPreprocessor.java#L57
>>
>> [2]
>>
>> https://github.com/scijava/scijava-common/blob/scijava-common-2.44.2/src/main/java/org/scijava/module/process/InitPreprocessor.java#L49
>>
>> [3] http://imagej.net/Bug_reporting_best_practices
>>
>> [4] http://stackoverflow.com/help/mcve
>>
>>
>> On Mon, Aug 24, 2015 at 9:07 AM, Adrian Daerr <
>> adrian.daerr at univ-paris-diderot.fr> wrote:
>>
>> Hi Curtis,
>>>
>>> I have parameters a, b, c whose initialisation depend on a common
>>>
>>>> calculation (depending on the image gotten through a previous
>>>>> @Parameter ImagePlus imp): can I do this calculation in the
>>>>> initialiser for the first parameter a, and then in the initialisers of
>>>>> b
>>>>> and c rely on the fact that the calculation was already done ?
>>>>>
>>>>>
>>>> Perhaps simplest at the moment would be to give your command a global
>>>> initializer -- i.e., set the initializer method in the
>>>> @Plugin annotation itself, rather than on specific parameters.
>>>> The ImagePlus will be populated by a preprocessor _before_ the
>>>> initialize method is called, so when your global initializer gets
>>>> called you will already have access to the ImagePlus.
>>>>
>>>>
>>> Thanks for the suggestion, which almost does the job, except that the
>>> initialization also depends on a parameter
>>>
>>> @Parameter(persist = false) private RectangleOverlay roi;
>>>
>>> which appears to be populated only after the initializer is called (its
>>> value is null in the initializer and valid in the run() method).
>>>
>>> I am not sure how to solve this: do I have to write a Preprocessor of
>>> some
>>> sorts, or can the initializer 'manually' call the code which normally
>>> harvest the RectangleOverlay parameter later on ? Somehow the fact that
>>> ImagePlus is populated by a Preprocessor but RectangleOverlay isn't,
>>> seems
>>> linked to issues that I mentionned in another post[1], but even after
>>> some
>>> reading of the tutorials and the scijava source code around
>>> org.scijava.command.CommandInfo my understanding of how the plugin
>>> initialisation works is still poor.
>>>
>>> [1]
>>> (e.g. that the Overlay appears in the harvesting dialog, or that an
>>> Exception is thrown because of the overlay after command execution)
>>>
>>>
>>> http://imagej-devel.54429.x6.nabble.com/Masking-Parameter-from-GUI-harvesting-td1098.html
>>>
>>> But again, scijava/scijava-common#181 is very relevant here.
>>>
>>>>
>>>>
>>> Would it make sense to distinguish (by an annotation ?) parameters that
>>> are to be initialized from the context (i.e. services, active image, roi
>>> etc), and whose lack should be immediately fatal to the plugin (no UI
>>> harvesting, and in exchange can be assumed final for the rest of the
>>> command execution), from parameters that, if they cannot be populated
>>> from
>>> already available data, should be harvested through a dialog (and may
>>> change several times) ?
>>>
>>> cheers,
>>> Adrian
>>>
>>>
> --
> http://www.msc.univ-paris-diderot.fr/~daerr/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150827/850e279c/attachment-0001.html>

From adrian.daerr at univ-paris-diderot.fr  Fri Aug 28 11:59:49 2015
From: adrian.daerr at univ-paris-diderot.fr (Adrian Daerr)
Date: Fri, 28 Aug 2015 18:59:49 +0200
Subject: [ImageJ-devel] feature request: disable Button from plugin callback
Message-ID: <web-160031239@univ-paris7.fr>

Hello all,

It would be nice if a org.scijava.widget.Button could
be disabled (e.g. grayed out) and enabled in the UI parameter
harvesting dialog (from within some @Parameter callback) if the
current parameters do not allow its action.

This seems different from the problems associated with dynamically
changing parameter number and/or properties [1], as no reconfiguration
of the UI is required beyond a redraw. The widget should still be
displayed, only its status toggled (one could e.g. add the enabling
condition to the description/tooltip to give the user a hint).

Does this sound reasonable or should such a feature be included in 
tracker issue 42 [1]?

cheers,
Adrian

[1] https://github.com/scijava/scijava-common/issues/42
"Allow plugin parameters to be hidden"


From ctrueden at wisc.edu  Fri Aug 28 12:09:21 2015
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 28 Aug 2015 12:09:21 -0500
Subject: [ImageJ-devel] feature request: disable Button from plugin
	callback
In-Reply-To: <web-160031239@univ-paris7.fr>
References: <web-160031239@univ-paris7.fr>
Message-ID: <CADN69y=oTnAFNaQ_jKMD4=KXXiEcT6G9=kgrZ3ZfT2HGn0mwoQ@mail.gmail.com>

Hi Adrian,

Yes, I suggest commenting on issue 42. In that issue, I wrote that graying
out makes less sense than setting visible/invisible, though I am not sure
that's really true in every case. Worth having a discussion there.

And note that technically in code, there is little difference between
calling widget.setVisible(false) and widget.setEnabled(false). The former
makes the widget disappear, and the latter grays it out. (I can't remember
whether the containing ancestor panes automatically redo their layout when
setVisible on a child component is called, though.)

Regards,
Curtis

On Fri, Aug 28, 2015 at 11:59 AM, Adrian Daerr <
adrian.daerr at univ-paris-diderot.fr> wrote:

> Hello all,
>
> It would be nice if a org.scijava.widget.Button could
> be disabled (e.g. grayed out) and enabled in the UI parameter
> harvesting dialog (from within some @Parameter callback) if the
> current parameters do not allow its action.
>
> This seems different from the problems associated with dynamically
> changing parameter number and/or properties [1], as no reconfiguration
> of the UI is required beyond a redraw. The widget should still be
> displayed, only its status toggled (one could e.g. add the enabling
> condition to the description/tooltip to give the user a hint).
>
> Does this sound reasonable or should such a feature be included in tracker
> issue 42 [1]?
>
> cheers,
> Adrian
>
> [1] https://github.com/scijava/scijava-common/issues/42
> "Allow plugin parameters to be hidden"
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20150828/2bc76aee/attachment.html>

