From michael.ellis at dsuk.biz  Tue Dec  2 18:05:24 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Wed, 3 Dec 2014 00:05:24 +0000
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2 project
	to open a TIFF file
In-Reply-To: <43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
Message-ID: <9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>

I am investigating the using ImgLib2 for a project.

I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.

I now want to add the least possible requirements for the purpose of opening some image files.

How do I establish what Maven projects I need to include? 

I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.

When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.

I am completely new to maven and so do not know what I am doing with it!

? Michael Ellis
Digital Scientific UK Ltd.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141203/0c70e72d/attachment.html>

From ctrueden at wisc.edu  Wed Dec  3 13:31:59 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 3 Dec 2014 13:31:59 -0600
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
 project to open a TIFF file
In-Reply-To: <9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
Message-ID: <CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>

Hi Michael,

> How do I establish what Maven projects I need to include?

One way to check is using the dependency-maven-plugin like so:

    mvn dependency:analyze

This will tell you:

A) Dependencies you declared but do not actually use; and
B) Dependencies you did not declare directly, but actually need.

Note that this will only work if your project compiles successfully. In
other words, it is easier to start with "too many" dependencies and pare
down, rather than trying to "build up" from zero.

So in your case, you can start with the ImgLib2 Examples dependencies
block, run dependency:analyze, and adjust the POM according to its
recommendations.

> When I go to my NetBeans project dependence, select Add dependency,
> then type SCIF to the query text box, I get a huge list of
> possibilities.

The dependency you probably want is io.scif:scifio (i.e.: a groupId of
io.scif, and an artifactId of scifio). Presumably at the latest version.
You can search for that here:

   http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~

So your dependency block in this case would be:

    <dependency>
      <groupId>io.scif</groupId>
      <artifactId>scifio</artifactId>
      <version>0.17.1</version>
    </dependency>

Note that that block of XML is available for copy-pasting from the link
above.

> I am completely new to maven

For more information, see:
    http://imagej.net/Maven

Regards,
Curtis

On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:

> I am investigating the using ImgLib2 for a project.
>
> I am using NetBeans and have managed to create a NetBeans Mavern project
> and have  added a dependency for ImgLib2 Core Library and that seems to be
> working OK.
>
> I now want to add the least possible requirements for the purpose of
> opening some image files.
>
> How do I establish what Maven projects I need to include?
>
> I have cloned  the ImgLib2 Examples project and got that working but that
> seems to include all manner of things that I suspect I do not need.
>
> When I go to my NetBeans project dependence, select Add dependency, then
> type SCIF to the query text box, I get a huge list of possibilities.
>
> I am completely new to maven and so do not know what I am doing with it!
>
> ? Michael Ellis
> Digital Scientific UK Ltd.
>
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141203/114d2c95/attachment.html>

From warrick at wisc.edu  Thu Dec  4 01:25:54 2014
From: warrick at wisc.edu (Jay Warrick)
Date: Thu, 04 Dec 2014 01:25:54 -0600
Subject: [ImageJ-devel] Fwd: Build failed in Jenkins: JEX #34
References: <3197271.410.1417676115986.JavaMail.jenkins@dev>
Message-ID: <E42FC454-2A3D-4CFD-A9B6-B4A92E03156A@wisc.edu>

Hi All,

Just wondering what might have happened here. Any ideas? All I did was create a README.md file on the git repository of my project since the last successful build. It's complaining about a missing package but it looks like it exists on maven.imagej.net and it shows it in the dependency hierarchy so it would seem that maven is expecting to have to retrieve it.

Sorry I didn't check to see if it ran before committing. Just didn't expect this to be an issue and now not sure how to diagnose.

Thanks in advance,

Jay

> Begin forwarded message:
> 
> Date: December 4, 2014 at 12:55:15 AM CST
> From: jenkins at imagej.net
> To: warrick at wisc.edu, eberthier at wisc.edu, ctrueden at wisc.edu
> Subject: Build failed in Jenkins: JEX #34
> 
> See <http://jenkins.imagej.net/job/JEX/34/changes>
> 
> Changes:
> 
> [Jay Warrick] Update README.md
> 
> ------------------------------------------
> [...truncated 4 lines...]
> Checking out Revision 956550f99b35c21e944ba6ea71a9927483e10cee (origin/master)
> [workspace] $ /bin/sh -xe /tmp/hudson8350546447354885372.sh
> + git clean -dfx
> Removing core/target/
> [workspace] $ mvn -U -Pdeploy-to-imagej clean deploy
> [INFO] Scanning for projects...
> [INFO] ------------------------------------------------------------------------
> [INFO] Reactor Build Order:
> [INFO] 
> [INFO] JEX Multi-Module Build
> [INFO] JEX core functionality
> [INFO] JEX
> [INFO]                                                                         
> [INFO] ------------------------------------------------------------------------
> [INFO] Building JEX Multi-Module Build 0.0.4-SNAPSHOT
> [INFO] ------------------------------------------------------------------------
> [INFO] 
> [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ pom-jex ---
> [INFO] 
> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ pom-jex ---
> [INFO] Executing: /bin/sh -c cd /data/devel/jenkins/jobs/JEX/workspace && git rev-parse --verify HEAD
> [INFO] Working directory: /data/devel/jenkins/jobs/JEX/workspace
> [INFO] Storing buildNumber: 956550f99b35c21e944ba6ea71a9927483e10cee at timestamp: 1417676099431
> [WARNING] Cannot get the branch information from the git repository: 
> Detecting the current branch failed: fatal: ref HEAD is not a symbolic ref
> 
> [INFO] Executing: /bin/sh -c cd /data/devel/jenkins/jobs/JEX/workspace && git rev-parse --verify HEAD
> [INFO] Working directory: /data/devel/jenkins/jobs/JEX/workspace
> [INFO] Storing buildScmBranch: UNKNOWN
> [INFO] 
> [INFO] >>> maven-source-plugin:2.3:jar (default) @ pom-jex >>>
> [INFO] 
> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ pom-jex ---
> [INFO] 
> [INFO] <<< maven-source-plugin:2.3:jar (default) @ pom-jex <<<
> [INFO] 
> [INFO] --- maven-source-plugin:2.3:jar (default) @ pom-jex ---
> [INFO] 
> [INFO] --- maven-install-plugin:2.5.1:install (default-install) @ pom-jex ---
> [INFO] Installing /data/devel/jenkins/jobs/JEX/workspace/pom.xml to /var/lib/jenkins/.m2/repository/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-SNAPSHOT.pom
> [INFO] 
> [INFO] --- maven-deploy-plugin:2.8.1:deploy (default-deploy) @ pom-jex ---
> Downloading: dav:http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml
> 606/606 B   
> 
> Downloaded: dav:http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml (606 B at 7.0 KB/sec)
> Uploading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 2/2 KB      
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 4/2 KB   
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 
> Uploaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom (4 KB at 18.1 KB/sec)
> Downloading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml
> 467/467 B   
> 
> Downloaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml (467 B at 32.6 KB/sec)
> Uploading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 606/606 B   
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 1212/606 B   
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 
> Uploaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml (2 KB at 11.8 KB/sec)
> Uploading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 467/467 B    
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 934/467 B   
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 
> Uploaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml (934 B at 11.0 KB/sec)
> [INFO]                                                                         
> [INFO] ------------------------------------------------------------------------
> [INFO] Building JEX core functionality 0.0.4-SNAPSHOT
> [INFO] ------------------------------------------------------------------------
> Downloading: http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml
> 608/608 B   
> 
> Downloaded: http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml (608 B at 8.6 KB/sec)
> [WARNING] The POM for sc.fiji:TrackMate_:jar:2.5.0 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
> Downloading: http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml
> Downloading: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml
> 605/605 B   
> 
> Downloaded: http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml (605 B at 5.2 KB/sec)
> 400/400 B   
> 400/400 B   400/400 B   
> 
> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml (400 B at 0.7 KB/sec)
> 
> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml (400 B at 0.7 KB/sec)
> 695/695 B               
> 
> Downloaded: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml (695 B at 0.4 KB/sec)
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> Downloading: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> 981/981 B   
> 
> Downloaded: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml (981 B at 43.5 KB/sec)
> 981/981 B   
> 981/981 B   981/981 B   
> 
> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml (981 B at 6.9 KB/sec)
> 
> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml (981 B at 6.7 KB/sec)
> Downloading: http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml
> Downloading: http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml
> 362/362 B               
> 
> Downloaded: http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml (362 B at 5.5 KB/sec)
> 
> 
> 362/362 B   
> 
> Downloaded: http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml (362 B at 0.1 KB/sec)
> Downloading: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> Downloading: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> 436/436 B   
> 369/369 B   436/436 B   
> 
> Downloaded: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml (436 B at 4.5 KB/sec)
> 
> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml (369 B at 2.9 KB/sec)
> 478/478 B               
> 
> Downloaded: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml (478 B at 0.3 KB/sec)
> Downloading: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> Downloading: https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> Downloading: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> 527/527 B   
> 
> Downloaded: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml (527 B at 9.0 KB/sec)
> 
> 527/527 B   
> 
> Downloaded: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml (527 B at 0.4 KB/sec)
> [INFO] 
> [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ jex-core ---
> [INFO] 
> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ jex-core ---
> [INFO] 
> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ jex-core ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] Copying 170 resources
> [INFO] 
> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ jex-core ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 666 source files to /data/devel/jenkins/jobs/JEX/workspace/core/target/classes
> [INFO] -------------------------------------------------------------
> [WARNING] COMPILATION WARNING : 
> [INFO] -------------------------------------------------------------
> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/old/JEX_Filters.java: Some input files use or override a deprecated API.
> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/old/JEX_Filters.java: Recompile with -Xlint:deprecation for details.
> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/plugins/labelManager/XPrefListManager.java: Some input files use unchecked or unsafe operations.
> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/plugins/labelManager/XPrefListManager.java: Recompile with -Xlint:unchecked for details.
> [INFO] 4 warnings 
> [INFO] -------------------------------------------------------------
> [INFO] -------------------------------------------------------------
> [ERROR] COMPILATION ERROR : 
> [INFO] -------------------------------------------------------------
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[132,63] cannot find symbol
>  symbol:   variable DataTools
>  location: class function.plugin.plugins.Import.ImportND2Files
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[135,63] cannot find symbol
>  symbol:   variable DataTools
>  location: class image.roi.PointTester
> [INFO] 8 errors 
> [INFO] -------------------------------------------------------------
> [INFO] ------------------------------------------------------------------------
> [INFO] Reactor Summary:
> [INFO] 
> [INFO] JEX Multi-Module Build ............................ SUCCESS [1.623s]
> [INFO] JEX core functionality ............................ FAILURE [15.130s]
> [INFO] JEX ............................................... SKIPPED
> [INFO] ------------------------------------------------------------------------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------------
> [INFO] Total time: 17.436s
> [INFO] Finished at: Thu Dec 04 00:55:15 CST 2014
> [INFO] Final Memory: 29M/473M
> [INFO] ------------------------------------------------------------------------
> [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project jex-core: Compilation failure: Compilation failure:
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[132,63] cannot find symbol
> [ERROR] symbol:   variable DataTools
> [ERROR] location: class function.plugin.plugins.Import.ImportND2Files
> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[135,63] cannot find symbol
> [ERROR] symbol:   variable DataTools
> [ERROR] location: class image.roi.PointTester
> [ERROR] -> [Help 1]
> [ERROR] 
> [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
> [ERROR] 
> [ERROR] For more information about the errors and possible solutions, please read the following articles:
> [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
> [ERROR] 
> [ERROR] After correcting the problems, you can resume the build with the command
> [ERROR]   mvn <goals> -rf :jex-core
> Build step 'Invoke top-level Maven targets' marked build as failure
> Archiving artifacts
> Build step 'Groovy Postbuild' marked build as failure

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141204/c27ccc5c/attachment-0001.html>

From ctrueden at wisc.edu  Thu Dec  4 11:40:14 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 4 Dec 2014 11:40:14 -0600
Subject: [ImageJ-devel] Fwd: Build failed in Jenkins: JEX #34
In-Reply-To: <E42FC454-2A3D-4CFD-A9B6-B4A92E03156A@wisc.edu>
References: <3197271.410.1417676115986.JavaMail.jenkins@dev>
	<E42FC454-2A3D-4CFD-A9B6-B4A92E03156A@wisc.edu>
Message-ID: <CADN69ynhrCmcDi_1ZKKHEtq4g5XYrqdmz7M6Zt9kCFD1Y6VgRA@mail.gmail.com>

Hi Jay,

> Just wondering what might have happened here. Any ideas? All I did was
> create a README.md file on the git repository of my project since the
> last successful build.

Yeah, I do not know why the build failure only triggered now. It may be
that the Jenkins build didn't trigger correctly before. But I was able to
reproduce the failure on the command line on my system.

I pushed a commit that upgrades to new versions of the components, and
fixes the build errors:

https://github.com/jaywarrick/JEX/commit/4102978037a234ea780b1165251bc6542f9e5fbc

I also had to disable the enforcer checks for now since there are issues
compiling Java-7-based projects at the moment. We hope to sort that out
soon.

Regards,
Curtis

On Thu, Dec 4, 2014 at 1:25 AM, Jay Warrick <warrick at wisc.edu> wrote:

> Hi All,
>
> Just wondering what might have happened here. Any ideas? All I did was
> create a README.md file on the git repository of my project since the last
> successful build. It's complaining about a missing package but it looks
> like it exists on maven.imagej.net and it shows it in the dependency
> hierarchy so it would seem that maven is expecting to have to retrieve it.
>
> Sorry I didn't check to see if it ran before committing. Just didn't
> expect this to be an issue and now not sure how to diagnose.
>
> Thanks in advance,
>
> Jay
>
> Begin forwarded message:
>
> *Date: *December 4, 2014 at 12:55:15 AM CST
> *From: *jenkins at imagej.net
> *To: *warrick at wisc.edu, eberthier at wisc.edu, ctrueden at wisc.edu
> *Subject: **Build failed in Jenkins: JEX #34*
>
> See <http://jenkins.imagej.net/job/JEX/34/changes>
>
> Changes:
>
> [Jay Warrick] Update README.md
>
> ------------------------------------------
> [...truncated 4 lines...]
> Checking out Revision 956550f99b35c21e944ba6ea71a9927483e10cee
> (origin/master)
> [workspace] $ /bin/sh -xe /tmp/hudson8350546447354885372.sh
> + git clean -dfx
> Removing core/target/
> [workspace] $ mvn -U -Pdeploy-to-imagej clean deploy
> [INFO] Scanning for projects...
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Reactor Build Order:
> [INFO]
> [INFO] JEX Multi-Module Build
> [INFO] JEX core functionality
> [INFO] JEX
> [INFO]
>
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Building JEX Multi-Module Build 0.0.4-SNAPSHOT
> [INFO]
> ------------------------------------------------------------------------
> [INFO]
> [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ pom-jex ---
> [INFO]
> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ pom-jex ---
> [INFO] Executing: /bin/sh -c cd /data/devel/jenkins/jobs/JEX/workspace &&
> git rev-parse --verify HEAD
> [INFO] Working directory: /data/devel/jenkins/jobs/JEX/workspace
> [INFO] Storing buildNumber: 956550f99b35c21e944ba6ea71a9927483e10cee at
> timestamp: 1417676099431
> [WARNING] Cannot get the branch information from the git repository:
> Detecting the current branch failed: fatal: ref HEAD is not a symbolic ref
>
> [INFO] Executing: /bin/sh -c cd /data/devel/jenkins/jobs/JEX/workspace &&
> git rev-parse --verify HEAD
> [INFO] Working directory: /data/devel/jenkins/jobs/JEX/workspace
> [INFO] Storing buildScmBranch: UNKNOWN
> [INFO]
> [INFO] >>> maven-source-plugin:2.3:jar (default) @ pom-jex >>>
> [INFO]
> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ pom-jex ---
> [INFO]
> [INFO] <<< maven-source-plugin:2.3:jar (default) @ pom-jex <<<
> [INFO]
> [INFO] --- maven-source-plugin:2.3:jar (default) @ pom-jex ---
> [INFO]
> [INFO] --- maven-install-plugin:2.5.1:install (default-install) @ pom-jex
> ---
> [INFO] Installing /data/devel/jenkins/jobs/JEX/workspace/pom.xml to
> /var/lib/jenkins/.m2/repository/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-SNAPSHOT.pom
> [INFO]
> [INFO] --- maven-deploy-plugin:2.8.1:deploy (default-deploy) @ pom-jex ---
> Downloading: dav:http://
> maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml
> 606/606 B
>
> Downloaded: dav:http://
> maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml
> (606 B at 7.0 KB/sec)
> Uploading:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 2/2 KB
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 4/2 KB
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
>
> Uploaded:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom
> (4 KB at 18.1 KB/sec)
> Downloading:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml
> 467/467 B
>
> Downloaded:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml
> (467 B at 32.6 KB/sec)
> Uploading:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 606/606 B
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 1212/606 B
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
>
> Uploaded:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml
> (2 KB at 11.8 KB/sec)
> Uploading:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 467/467 B
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> 934/467 B
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 04, 2014 12:55:00 AM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
>
> Uploaded:
> http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml
> (934 B at 11.0 KB/sec)
> [INFO]
>
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Building JEX core functionality 0.0.4-SNAPSHOT
> [INFO]
> ------------------------------------------------------------------------
> Downloading:
> http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml
> 608/608 B
>
> Downloaded:
> http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml
> (608 B at 8.6 KB/sec)
> [WARNING] The POM for sc.fiji:TrackMate_:jar:2.5.0 is invalid, transitive
> dependencies (if any) will not be available, enable debug logging for more
> details
> Downloading:
> http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml
> Downloading:
> http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml
> 605/605 B
>
> Downloaded:
> http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml
> (605 B at 5.2 KB/sec)
> 400/400 B
> 400/400 B   400/400 B
>
> Downloaded:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml
> (400 B at 0.7 KB/sec)
>
> Downloaded:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml
> (400 B at 0.7 KB/sec)
> 695/695 B
>
> Downloaded:
> http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml
> (695 B at 0.4 KB/sec)
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> Downloading:
> http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> 981/981 B
>
> Downloaded:
> http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> (981 B at 43.5 KB/sec)
> 981/981 B
> 981/981 B   981/981 B
>
> Downloaded:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> (981 B at 6.9 KB/sec)
>
> Downloaded:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml
> (981 B at 6.7 KB/sec)
> Downloading:
> http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml
> Downloading:
> http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml
> 362/362 B
>
> Downloaded:
> http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml
> (362 B at 5.5 KB/sec)
>
>
> 362/362 B
>
> Downloaded:
> http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml
> (362 B at 0.1 KB/sec)
> Downloading:
> http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> Downloading:
> http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> 436/436 B
> 369/369 B   436/436 B
>
> Downloaded:
> http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> (436 B at 4.5 KB/sec)
>
> Downloaded:
> https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> (369 B at 2.9 KB/sec)
> 478/478 B
>
> Downloaded:
> http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml
> (478 B at 0.3 KB/sec)
> Downloading:
> http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> Downloading:
> https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> Downloading:
> http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> 527/527 B
>
> Downloaded:
> http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> (527 B at 9.0 KB/sec)
>
> 527/527 B
>
> Downloaded:
> http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml
> (527 B at 0.4 KB/sec)
> [INFO]
> [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ jex-core ---
> [INFO]
> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ jex-core ---
> [INFO]
> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
> jex-core ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] Copying 170 resources
> [INFO]
> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ jex-core
> ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 666 source files to
> /data/devel/jenkins/jobs/JEX/workspace/core/target/classes
> [INFO] -------------------------------------------------------------
> [WARNING] COMPILATION WARNING :
> [INFO] -------------------------------------------------------------
> [WARNING]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/old/JEX_Filters.java:
> Some input files use or override a deprecated API.
> [WARNING]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/old/JEX_Filters.java:
> Recompile with -Xlint:deprecation for details.
> [WARNING]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/plugins/labelManager/XPrefListManager.java:
> Some input files use unchecked or unsafe operations.
> [WARNING]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/plugins/labelManager/XPrefListManager.java:
> Recompile with -Xlint:unchecked for details.
> [INFO] 4 warnings
> [INFO] -------------------------------------------------------------
> [INFO] -------------------------------------------------------------
> [ERROR] COMPILATION ERROR :
> [INFO] -------------------------------------------------------------
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134]
> package loci.formats does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134]
> package loci.formats does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[132,63]
> cannot find symbol
>  symbol:   variable DataTools
>  location: class function.plugin.plugins.Import.ImportND2Files
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[135,63]
> cannot find symbol
>  symbol:   variable DataTools
>  location: class image.roi.PointTester
> [INFO] 8 errors
> [INFO] -------------------------------------------------------------
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Reactor Summary:
> [INFO]
> [INFO] JEX Multi-Module Build ............................ SUCCESS [1.623s]
> [INFO] JEX core functionality ............................ FAILURE
> [15.130s]
> [INFO] JEX ............................................... SKIPPED
> [INFO]
> ------------------------------------------------------------------------
> [INFO] BUILD FAILURE
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Total time: 17.436s
> [INFO] Finished at: Thu Dec 04 00:55:15 CST 2014
> [INFO] Final Memory: 29M/473M
> [INFO]
> ------------------------------------------------------------------------
> [ERROR] Failed to execute goal
> org.apache.maven.plugins:maven-compiler-plugin:3.1:compile
> (default-compile) on project jex-core: Compilation failure: Compilation
> failure:
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134]
> package loci.formats does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19]
> package loci.common does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134]
> package loci.formats does not exist
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[132,63]
> cannot find symbol
> [ERROR] symbol:   variable DataTools
> [ERROR] location: class function.plugin.plugins.Import.ImportND2Files
> [ERROR]
> /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[135,63]
> cannot find symbol
> [ERROR] symbol:   variable DataTools
> [ERROR] location: class image.roi.PointTester
> [ERROR] -> [Help 1]
> [ERROR]
> [ERROR] To see the full stack trace of the errors, re-run Maven with the
> -e switch.
> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
> [ERROR]
> [ERROR] For more information about the errors and possible solutions,
> please read the following articles:
> [ERROR] [Help 1]
> http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
> [ERROR]
> [ERROR] After correcting the problems, you can resume the build with the
> command
> [ERROR]   mvn <goals> -rf :jex-core
> Build step 'Invoke top-level Maven targets' marked build as failure
> Archiving artifacts
> Build step 'Groovy Postbuild' marked build as failure
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141204/f8a3daa1/attachment-0001.html>

From warrick at wisc.edu  Thu Dec  4 11:51:02 2014
From: warrick at wisc.edu (Jay Warrick)
Date: Thu, 04 Dec 2014 11:51:02 -0600
Subject: [ImageJ-devel] Fwd: Build failed in Jenkins: JEX #34
In-Reply-To: <CADN69ynhrCmcDi_1ZKKHEtq4g5XYrqdmz7M6Zt9kCFD1Y6VgRA@mail.gmail.com>
References: <3197271.410.1417676115986.JavaMail.jenkins@dev>
	<E42FC454-2A3D-4CFD-A9B6-B4A92E03156A@wisc.edu>
	<CADN69ynhrCmcDi_1ZKKHEtq4g5XYrqdmz7M6Zt9kCFD1Y6VgRA@mail.gmail.com>
Message-ID: <2DDB4807-CFDF-4FAD-9E84-070AF58DBE83@wisc.edu>

Your amazing. Thanks. Put it on my tab of things I owe you for.

Thanks for the help in updating from the scijava parent pom to image parent pom. Given all the things you guys did to organize the interrelationships between all these packages (sicjava, imagej, scifio, imagejops etc), I was a little hesitant to see how things might change upon updating to the new poms. Seemed like everything converted pretty smoothly though.

Thanks!!!

Jay


> On Dec 4, 2014, at 11:40 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:
> 
> Hi Jay,
> 
> > Just wondering what might have happened here. Any ideas? All I did was
> > create a README.md file on the git repository of my project since the
> > last successful build.
> 
> Yeah, I do not know why the build failure only triggered now. It may be that the Jenkins build didn't trigger correctly before. But I was able to reproduce the failure on the command line on my system.
> 
> I pushed a commit that upgrades to new versions of the components, and fixes the build errors:
>    https://github.com/jaywarrick/JEX/commit/4102978037a234ea780b1165251bc6542f9e5fbc <https://github.com/jaywarrick/JEX/commit/4102978037a234ea780b1165251bc6542f9e5fbc>
> 
> I also had to disable the enforcer checks for now since there are issues compiling Java-7-based projects at the moment. We hope to sort that out soon.
> 
> Regards,
> Curtis
> 
> On Thu, Dec 4, 2014 at 1:25 AM, Jay Warrick <warrick at wisc.edu <mailto:warrick at wisc.edu>> wrote:
> Hi All,
> 
> Just wondering what might have happened here. Any ideas? All I did was create a README.md file on the git repository of my project since the last successful build. It's complaining about a missing package but it looks like it exists on maven.imagej.net <http://maven.imagej.net/> and it shows it in the dependency hierarchy so it would seem that maven is expecting to have to retrieve it.
> 
> Sorry I didn't check to see if it ran before committing. Just didn't expect this to be an issue and now not sure how to diagnose.
> 
> Thanks in advance,
> 
> Jay
> 
>> Begin forwarded message:
>> 
>> Date: December 4, 2014 at 12:55:15 AM CST
>> From: jenkins at imagej.net <mailto:jenkins at imagej.net>
>> To: warrick at wisc.edu <mailto:warrick at wisc.edu>, eberthier at wisc.edu <mailto:eberthier at wisc.edu>, ctrueden at wisc.edu <mailto:ctrueden at wisc.edu>
>> Subject: Build failed in Jenkins: JEX #34
>> 
>> See <http://jenkins.imagej.net/job/JEX/34/changes <http://jenkins.imagej.net/job/JEX/34/changes>>
>> 
>> Changes:
>> 
>> [Jay Warrick] Update README.md
>> 
>> ------------------------------------------
>> [...truncated 4 lines...]
>> Checking out Revision 956550f99b35c21e944ba6ea71a9927483e10cee (origin/master)
>> [workspace] $ /bin/sh -xe /tmp/hudson8350546447354885372.sh
>> + git clean -dfx
>> Removing core/target/
>> [workspace] $ mvn -U -Pdeploy-to-imagej clean deploy
>> [INFO] Scanning for projects...
>> [INFO] ------------------------------------------------------------------------
>> [INFO] Reactor Build Order:
>> [INFO] 
>> [INFO] JEX Multi-Module Build
>> [INFO] JEX core functionality
>> [INFO] JEX
>> [INFO]                                                                         
>> [INFO] ------------------------------------------------------------------------
>> [INFO] Building JEX Multi-Module Build 0.0.4-SNAPSHOT
>> [INFO] ------------------------------------------------------------------------
>> [INFO] 
>> [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ pom-jex ---
>> [INFO] 
>> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ pom-jex ---
>> [INFO] Executing: /bin/sh -c cd /data/devel/jenkins/jobs/JEX/workspace && git rev-parse --verify HEAD
>> [INFO] Working directory: /data/devel/jenkins/jobs/JEX/workspace
>> [INFO] Storing buildNumber: 956550f99b35c21e944ba6ea71a9927483e10cee at timestamp: 1417676099431
>> [WARNING] Cannot get the branch information from the git repository: 
>> Detecting the current branch failed: fatal: ref HEAD is not a symbolic ref
>> 
>> [INFO] Executing: /bin/sh -c cd /data/devel/jenkins/jobs/JEX/workspace && git rev-parse --verify HEAD
>> [INFO] Working directory: /data/devel/jenkins/jobs/JEX/workspace
>> [INFO] Storing buildScmBranch: UNKNOWN
>> [INFO] 
>> [INFO] >>> maven-source-plugin:2.3:jar (default) @ pom-jex >>>
>> [INFO] 
>> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ pom-jex ---
>> [INFO] 
>> [INFO] <<< maven-source-plugin:2.3:jar (default) @ pom-jex <<<
>> [INFO] 
>> [INFO] --- maven-source-plugin:2.3:jar (default) @ pom-jex ---
>> [INFO] 
>> [INFO] --- maven-install-plugin:2.5.1:install (default-install) @ pom-jex ---
>> [INFO] Installing /data/devel/jenkins/jobs/JEX/workspace/pom.xml to /var/lib/jenkins/.m2/repository/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-SNAPSHOT.pom
>> [INFO] 
>> [INFO] --- maven-deploy-plugin:2.8.1:deploy (default-deploy) @ pom-jex ---
>> Downloading: dav:http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml>
>> 606/606 B   
>> 
>> Downloaded: dav:http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml> (606 B at 7.0 KB/sec)
>> Uploading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom>
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 2/2 KB      
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 4/2 KB   
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 
>> Uploaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/pom-jex-0.0.4-20141204.065500-13.pom> (4 KB at 18.1 KB/sec)
>> Downloading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml>
>> 467/467 B   
>> 
>> Downloaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml> (467 B at 32.6 KB/sec)
>> Uploading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml>
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 606/606 B   
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 1212/606 B   
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 
>> Uploaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/0.0.4-SNAPSHOT/maven-metadata.xml> (2 KB at 11.8 KB/sec)
>> Uploading: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml>
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 467/467 B    
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 934/467 B   
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 04, 2014 12:55:00 AM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> 
>> Uploaded: http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml <http://maven.imagej.net/content/repositories/snapshots/io/github/jaywarrick/pom-jex/maven-metadata.xml> (934 B at 11.0 KB/sec)
>> [INFO]                                                                         
>> [INFO] ------------------------------------------------------------------------
>> [INFO] Building JEX core functionality 0.0.4-SNAPSHOT
>> [INFO] ------------------------------------------------------------------------
>> Downloading: http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml>
>> 608/608 B   
>> 
>> Downloaded: http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/groups/public/sc/fiji/pom-fiji/2.0.0-beta-1-SNAPSHOT/maven-metadata.xml> (608 B at 8.6 KB/sec)
>> [WARNING] The POM for sc.fiji:TrackMate_:jar:2.5.0 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
>> Downloading: http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml <http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml>
>> Downloading: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml <http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml>
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml>
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml>
>> 605/605 B   
>> 
>> Downloaded: http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml <http://repo.maven.apache.org/maven2/com/github/jnr/jffi/maven-metadata.xml> (605 B at 5.2 KB/sec)
>> 400/400 B   
>> 400/400 B   400/400 B   
>> 
>> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml> (400 B at 0.7 KB/sec)
>> 
>> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/maven-metadata.xml> (400 B at 0.7 KB/sec)
>> 695/695 B               
>> 
>> Downloaded: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml <http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/maven-metadata.xml> (695 B at 0.4 KB/sec)
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml>
>> Downloading: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml>
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml>
>> 981/981 B   
>> 
>> Downloaded: http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml <http://maven.imagej.net/content/groups/public/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml> (981 B at 43.5 KB/sec)
>> 981/981 B   
>> 981/981 B   981/981 B   
>> 
>> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml> (981 B at 6.9 KB/sec)
>> 
>> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jffi/1.2.8-SNAPSHOT/maven-metadata.xml> (981 B at 6.7 KB/sec)
>> Downloading: http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml <http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml>
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml>
>> Downloading: http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml <http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml>
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/com/github/jnr/jnr-x86asm/maven-metadata.xml>
>> 362/362 B               
>> 
>> Downloaded: http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml <http://repo.maven.apache.org/maven2/com/github/jnr/jnr-x86asm/maven-metadata.xml> (362 B at 5.5 KB/sec)
>> 
>> 
>> 362/362 B   
>> 
>> Downloaded: http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml <http://maven.imagej.net/content/groups/public/com/github/jnr/jnr-x86asm/maven-metadata.xml> (362 B at 0.1 KB/sec)
>> Downloading: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml <http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml>
>> Downloading: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml <http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml>
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml>
>> 436/436 B   
>> 369/369 B   436/436 B   
>> 
>> Downloaded: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml <http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/moa/moa/maven-metadata.xml> (436 B at 4.5 KB/sec)
>> 
>> Downloaded: https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/moa/moa/maven-metadata.xml> (369 B at 2.9 KB/sec)
>> 478/478 B               
>> 
>> Downloaded: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml <http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/moa/moa/maven-metadata.xml> (478 B at 0.3 KB/sec)
>> Downloading: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml <http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml>
>> Downloading: https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml <https://oss.sonatype.org/content/repositories/snapshots/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml>
>> Downloading: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml <http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml>
>> 527/527 B   
>> 
>> Downloaded: http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml <http://repo.maven.apache.org/maven2/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml> (527 B at 9.0 KB/sec)
>> 
>> 527/527 B   
>> 
>> Downloaded: http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml <http://maven.imagej.net/content/groups/public/nz/ac/waikato/cms/weka/weka-dev/maven-metadata.xml> (527 B at 0.4 KB/sec)
>> [INFO] 
>> [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ jex-core ---
>> [INFO] 
>> [INFO] --- buildnumber-maven-plugin:1.3:create (default) @ jex-core ---
>> [INFO] 
>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ jex-core ---
>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>> [INFO] Copying 170 resources
>> [INFO] 
>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ jex-core ---
>> [INFO] Changes detected - recompiling the module!
>> [INFO] Compiling 666 source files to /data/devel/jenkins/jobs/JEX/workspace/core/target/classes
>> [INFO] -------------------------------------------------------------
>> [WARNING] COMPILATION WARNING : 
>> [INFO] -------------------------------------------------------------
>> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/old/JEX_Filters.java: Some input files use or override a deprecated API.
>> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/old/JEX_Filters.java: Recompile with -Xlint:deprecation for details.
>> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/plugins/labelManager/XPrefListManager.java: Some input files use unchecked or unsafe operations.
>> [WARNING] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/plugins/labelManager/XPrefListManager.java: Recompile with -Xlint:unchecked for details.
>> [INFO] 4 warnings 
>> [INFO] -------------------------------------------------------------
>> [INFO] -------------------------------------------------------------
>> [ERROR] COMPILATION ERROR : 
>> [INFO] -------------------------------------------------------------
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[132,63] cannot find symbol
>>  symbol:   variable DataTools
>>  location: class function.plugin.plugins.Import.ImportND2Files
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[135,63] cannot find symbol
>>  symbol:   variable DataTools
>>  location: class image.roi.PointTester
>> [INFO] 8 errors 
>> [INFO] -------------------------------------------------------------
>> [INFO] ------------------------------------------------------------------------
>> [INFO] Reactor Summary:
>> [INFO] 
>> [INFO] JEX Multi-Module Build ............................ SUCCESS [1.623s]
>> [INFO] JEX core functionality ............................ FAILURE [15.130s]
>> [INFO] JEX ............................................... SKIPPED
>> [INFO] ------------------------------------------------------------------------
>> [INFO] BUILD FAILURE
>> [INFO] ------------------------------------------------------------------------
>> [INFO] Total time: 17.436s
>> [INFO] Finished at: Thu Dec 04 00:55:15 CST 2014
>> [INFO] Final Memory: 29M/473M
>> [INFO] ------------------------------------------------------------------------
>> [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project jex-core: Compilation failure: Compilation failure:
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[22,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[51,19] package loci.common does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[109,134] package loci.formats does not exist
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/function/plugin/plugins/Import/ImportND2Files.java:[132,63] cannot find symbol
>> [ERROR] symbol:   variable DataTools
>> [ERROR] location: class function.plugin.plugins.Import.ImportND2Files
>> [ERROR] /data/devel/jenkins/jobs/JEX/workspace/core/src/main/java/image/roi/PointTester.java:[135,63] cannot find symbol
>> [ERROR] symbol:   variable DataTools
>> [ERROR] location: class image.roi.PointTester
>> [ERROR] -> [Help 1]
>> [ERROR] 
>> [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
>> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
>> [ERROR] 
>> [ERROR] For more information about the errors and possible solutions, please read the following articles:
>> [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException <http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException>
>> [ERROR] 
>> [ERROR] After correcting the problems, you can resume the build with the command
>> [ERROR]   mvn <goals> -rf :jex-core
>> Build step 'Invoke top-level Maven targets' marked build as failure
>> Archiving artifacts
>> Build step 'Groovy Postbuild' marked build as failure
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net <mailto:ImageJ-devel at imagej.net>
> http://imagej.net/mailman/listinfo/imagej-devel <http://imagej.net/mailman/listinfo/imagej-devel>
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141204/60c6fdfc/attachment-0001.html>

From michael.ellis at dsuk.biz  Fri Dec  5 06:07:17 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Fri, 5 Dec 2014 12:07:17 +0000
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
	project to open a TIFF file
In-Reply-To: <CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
Message-ID: <5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>

I have followed the advice offered by Curtis regarding adding the io.scif: scifio dependency to my POM

The dependency part of my POM looks like this:

    <dependencies>
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2</artifactId>
            <version>2.2.1-SNAPSHOT</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>io.scif</groupId>
            <artifactId>scifio</artifactId>
            <version>0.17.1</version>
            <type>jar</type>
        </dependency>
    </dependencies>

I am using NetBeans IDE, configured for use with maven project (I am slo using Java 8 and JavaFX)

However when I attempt to Build (or Build with Dependencies)  within NetBeans, I get the following error message:
============================================================

cd /Users/michaelellis/Documents/Development/MavenImgLib2FX; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home "/Applications/NetBeans/NetBeans 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
Scanning for projects...
                                                                        
------------------------------------------------------------------------
Building MavenImgLib2FX 1.0-SNAPSHOT
------------------------------------------------------------------------
The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency information available
------------------------------------------------------------------------
BUILD FAILURE
------------------------------------------------------------------------
Total time: 0.341s
Finished at: Fri Dec 05 10:34:41 GMT 2014
Final Memory: 7M/245M
------------------------------------------------------------------------
Failed to execute goal on project MavenImgLib2FX: Could not resolve dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]

To see the full stack trace of the errors, re-run Maven with the -e switch.
Re-run Maven using the -X switch to enable full debug logging.

For more information about the errors and possible solutions, please read the following articles:
[Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException

============================================================

If I open a terminal window and cd into the project directory and:

	mvn clean package

It succeeds.

However, when I then attempt to run the project with:

	java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp

The application starts to execute but throws ?No compatible service: io.scif.SCIFIOService? exception.
============================================================

img1=CellImg [20x30]
BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha = false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1 dataOff[0] = 0
Loading image...
Exception in Application start method
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
Caused by: java.lang.RuntimeException: Exception in Application start method
	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
	at com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: No compatible service: io.scif.SCIFIOService
	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
	at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
	at org.scijava.Context.<init>(Context.java:244)
	at org.scijava.Context.<init>(Context.java:203)
	at org.scijava.Context.<init>(Context.java:142)
	at org.scijava.Context.<init>(Context.java:128)
	at io.scif.SCIFIO.<init>(SCIFIO.java:81)
	at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
	at com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
	at com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown Source)
	at com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
	at com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
	at com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown Source)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
Exception running application biz.dsuk.mavenimglib2fx.MainApp
============================================================

If I remove the calls to the SCIO code and build and run from the command line, all works well.

The SCIO source code that I am using is lifted/amended from one of the tutorials and is as follows:

============================================================
            imagePath = "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
            System.out.println("Loading image... '" + imagePath + "'");
            SCIFIO scifio = new SCIFIO();
            final Reader reader = scifio.initializer().initializeReader(imagePath);
============================================================

This source code works file in the SCIFIO tutorial.

Any help gratefully appreciated!!!!!

? Michael Ellis




On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:

> Hi Michael,
> 
> > How do I establish what Maven projects I need to include? 
> 
> One way to check is using the dependency-maven-plugin like so:
> 
>     mvn dependency:analyze
> 
> This will tell you:
> 
> A) Dependencies you declared but do not actually use; and
> B) Dependencies you did not declare directly, but actually need.
> 
> Note that this will only work if your project compiles successfully. In other words, it is easier to start with "too many" dependencies and pare down, rather than trying to "build up" from zero.
> 
> So in your case, you can start with the ImgLib2 Examples dependencies block, run dependency:analyze, and adjust the POM according to its recommendations.
> 
> > When I go to my NetBeans project dependence, select Add dependency,
> > then type SCIF to the query text box, I get a huge list of
> > possibilities.
> 
> The dependency you probably want is io.scif:scifio (i.e.: a groupId of io.scif, and an artifactId of scifio). Presumably at the latest version. You can search for that here:
> 
>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
> 
> So your dependency block in this case would be:
> 
>     <dependency>
>       <groupId>io.scif</groupId>
>       <artifactId>scifio</artifactId>
>       <version>0.17.1</version>
>     </dependency>
> 
> Note that that block of XML is available for copy-pasting from the link above.
> 
> > I am completely new to maven
> 
> For more information, see:
>     http://imagej.net/Maven
> 
> Regards,
> Curtis
> 
> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> I am investigating the using ImgLib2 for a project.
> 
> I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.
> 
> I now want to add the least possible requirements for the purpose of opening some image files.
> 
> How do I establish what Maven projects I need to include? 
> 
> I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.
> 
> When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.
> 
> I am completely new to maven and so do not know what I am doing with it!
> 
> ? Michael Ellis
> Digital Scientific UK Ltd.
> 
> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/ca8e5fb4/attachment-0001.html>

From pietzsch at mpi-cbg.de  Fri Dec  5 07:54:27 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Fri, 5 Dec 2014 14:54:27 +0100
Subject: [ImageJ-devel] moving to Java 7
Message-ID: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>

Hi all,

what is everyones opinion on moving the IJ2/Fiji stack to a new version of Java, i.e., Java 7.
Java 7 has been around for more than 3 years now. The end-of-life final public release of Java 6 was more than 1.5 years ago.

Benefits I see are the following:

* We could use the ?new" Java 7 libraries. For example the Fork/Join framework would come handy in defining multi-threading interfaces in scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff (java.nio.file)

* We would benefit from improvements of type inference for generics in the compiler. No more jumping through hoops to fix ?errors? in code that should compile with Java 6 but doesn?t. (Plus we could use the diamond operator to shorten generics instantiations.)

* We could use third-party libraries that only support Java 7. For example I?m using Jetty in a project that can therefore not be part of Fiji currently. (This mail was more or less triggered by me looking into http://ojalgo.org who maybe went a bit over the top and already abandoned Java 7 for Java 8). I think it is only a matter of time until we will have a problem with third-party libraries that we already use abandoning Java 6.


I do not have a clear picture of what the downsides would be. Johannes always said that people on old macs are tied to an old java version and that we do not want to leave those users behind. It would be interesting to know how many people that actually would impact.


What do you think?

best regards,
Tobias
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/a60ba35d/attachment.pgp>

From michael.ellis at dsuk.biz  Fri Dec  5 07:59:51 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Fri, 5 Dec 2014 13:59:51 +0000
Subject: [ImageJ-devel] moving to Java 7
In-Reply-To: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
Message-ID: <CEA45C1B-951A-4B06-AB60-9B1E08C936CE@dsuk.biz>

It gets my vote (if I have a vote).

Java 7 try with resources certainly helped tighten up on some of my resource leaks.

NIO has been a benefit too.

When replying to a post like this, is it the done thing to reply to the list in general or should I be replying just to the original poster?

? Michael Ellis

On 5 Dec 2014, at 13:54, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:

> Hi all,
> 
> what is everyones opinion on moving the IJ2/Fiji stack to a new version of Java, i.e., Java 7.
> Java 7 has been around for more than 3 years now. The end-of-life final public release of Java 6 was more than 1.5 years ago.
> 
> Benefits I see are the following:
> 
> * We could use the ?new" Java 7 libraries. For example the Fork/Join framework would come handy in defining multi-threading interfaces in scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff (java.nio.file)
> 
> * We would benefit from improvements of type inference for generics in the compiler. No more jumping through hoops to fix ?errors? in code that should compile with Java 6 but doesn?t. (Plus we could use the diamond operator to shorten generics instantiations.)
> 
> * We could use third-party libraries that only support Java 7. For example I?m using Jetty in a project that can therefore not be part of Fiji currently. (This mail was more or less triggered by me looking into http://ojalgo.org who maybe went a bit over the top and already abandoned Java 7 for Java 8). I think it is only a matter of time until we will have a problem with third-party libraries that we already use abandoning Java 6.
> 
> 
> I do not have a clear picture of what the downsides would be. Johannes always said that people on old macs are tied to an old java version and that we do not want to leave those users behind. It would be interesting to know how many people that actually would impact.
> 
> 
> What do you think?
> 
> best regards,
> Tobias
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel



From warrick at wisc.edu  Fri Dec  5 08:30:04 2014
From: warrick at wisc.edu (Jay Warrick)
Date: Fri, 05 Dec 2014 08:30:04 -0600
Subject: [ImageJ-devel] moving to Java 7
In-Reply-To: <CEA45C1B-951A-4B06-AB60-9B1E08C936CE@dsuk.biz>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CEA45C1B-951A-4B06-AB60-9B1E08C936CE@dsuk.biz>
Message-ID: <809C6822-C93F-4FB1-8017-8471C69CBA69@wisc.edu>

Not that it is a game-changing consideration, but, thought I would mention it. After upgrading to the newest Mac OSX, it essentially removed my Java 6 and thus couldn't open FIJI etc. after upgrade. Upon opening the app it told me of the non-existent Java 6 and prompted me to install Java 6 via a site/mechanism that wasn't what I remembered or was familiar with. I typically go to oracle. Still was pretty easy, just saying that it becomes a bit "non-standard" to install Java 6 and might cause confusion, especially for novices trying FIJI etc for the first time after upgrading their OSX. Can anyone else confirm this experience?

Cheers,

Jay

> On Dec 5, 2014, at 7:59 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> 
> It gets my vote (if I have a vote).
> 
> Java 7 try with resources certainly helped tighten up on some of my resource leaks.
> 
> NIO has been a benefit too.
> 
> When replying to a post like this, is it the done thing to reply to the list in general or should I be replying just to the original poster?
> 
> ? Michael Ellis
> 
> On 5 Dec 2014, at 13:54, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
> 
>> Hi all,
>> 
>> what is everyones opinion on moving the IJ2/Fiji stack to a new version of Java, i.e., Java 7.
>> Java 7 has been around for more than 3 years now. The end-of-life final public release of Java 6 was more than 1.5 years ago.
>> 
>> Benefits I see are the following:
>> 
>> * We could use the ?new" Java 7 libraries. For example the Fork/Join framework would come handy in defining multi-threading interfaces in scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff (java.nio.file)
>> 
>> * We would benefit from improvements of type inference for generics in the compiler. No more jumping through hoops to fix ?errors? in code that should compile with Java 6 but doesn?t. (Plus we could use the diamond operator to shorten generics instantiations.)
>> 
>> * We could use third-party libraries that only support Java 7. For example I?m using Jetty in a project that can therefore not be part of Fiji currently. (This mail was more or less triggered by me looking into http://ojalgo.org who maybe went a bit over the top and already abandoned Java 7 for Java 8). I think it is only a matter of time until we will have a problem with third-party libraries that we already use abandoning Java 6.
>> 
>> 
>> I do not have a clear picture of what the downsides would be. Johannes always said that people on old macs are tied to an old java version and that we do not want to leave those users behind. It would be interesting to know how many people that actually would impact.
>> 
>> 
>> What do you think?
>> 
>> best regards,
>> Tobias
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel



From christian.dietz at uni-konstanz.de  Fri Dec  5 08:32:00 2014
From: christian.dietz at uni-konstanz.de (Christian Dietz)
Date: Fri, 05 Dec 2014 15:32:00 +0100
Subject: [ImageJ-devel] moving to Java 7
In-Reply-To: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
Message-ID: <5481C1E0.6000204@uni-konstanz.de>

Hi,

as we work with Java 7 anyway, I vote for Java 7.

Christian


On 05.12.2014 14:54, Tobias Pietzsch wrote:
> Hi all,
>
> what is everyones opinion on moving the IJ2/Fiji stack to a new version of Java, i.e., Java 7.
> Java 7 has been around for more than 3 years now. The end-of-life final public release of Java 6 was more than 1.5 years ago.
>
> Benefits I see are the following:
>
> * We could use the ?new" Java 7 libraries. For example the Fork/Join framework would come handy in defining multi-threading interfaces in scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff (java.nio.file)
>
> * We would benefit from improvements of type inference for generics in the compiler. No more jumping through hoops to fix ?errors? in code that should compile with Java 6 but doesn?t. (Plus we could use the diamond operator to shorten generics instantiations.)
>
> * We could use third-party libraries that only support Java 7. For example I?m using Jetty in a project that can therefore not be part of Fiji currently. (This mail was more or less triggered by me looking into http://ojalgo.org who maybe went a bit over the top and already abandoned Java 7 for Java 8). I think it is only a matter of time until we will have a problem with third-party libraries that we already use abandoning Java 6.
>
>
> I do not have a clear picture of what the downsides would be. Johannes always said that people on old macs are tied to an old java version and that we do not want to leave those users behind. It would be interesting to know how many people that actually would impact.
>
>
> What do you think?
>
> best regards,
> Tobias
>   
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/0daee667/attachment.html>

From leek at broadinstitute.org  Fri Dec  5 08:56:36 2014
From: leek at broadinstitute.org (Lee Kamentsky)
Date: Fri, 5 Dec 2014 09:56:36 -0500
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
Message-ID: <CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>

For CelllProfiler, there's some packaging work that would need to be done
(we bundle the JRE with the Windows version and the Centos 6 RPM has Java 6
as a dependency). We rely on the system Java for the Mac presently and I
don't have a clear idea of what range of Java 7 support to expect on our
user's Macs.

It certainly seems like there is a lot of pressure to move to Java 7, so my
vote would be to move to Java 7, even considering the above.

On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:

> Hi all,
>
> what is everyones opinion on moving the IJ2/Fiji stack to a new version of
> Java, i.e., Java 7.
> Java 7 has been around for more than 3 years now. The end-of-life final
> public release of Java 6 was more than 1.5 years ago.
>
> Benefits I see are the following:
>
> * We could use the ?new" Java 7 libraries. For example the Fork/Join
> framework would come handy in defining multi-threading interfaces in
> scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff
> (java.nio.file)
>
> * We would benefit from improvements of type inference for generics in the
> compiler. No more jumping through hoops to fix ?errors? in code that should
> compile with Java 6 but doesn?t. (Plus we could use the diamond operator to
> shorten generics instantiations.)
>
> * We could use third-party libraries that only support Java 7. For example
> I?m using Jetty in a project that can therefore not be part of Fiji
> currently. (This mail was more or less triggered by me looking into
> http://ojalgo.org who maybe went a bit over the top and already abandoned
> Java 7 for Java 8). I think it is only a matter of time until we will have
> a problem with third-party libraries that we already use abandoning Java 6.
>
>
> I do not have a clear picture of what the downsides would be. Johannes
> always said that people on old macs are tied to an old java version and
> that we do not want to leave those users behind. It would be interesting to
> know how many people that actually would impact.
>
>
> What do you think?
>
> best regards,
> Tobias
>
>
> --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
>
> Mailing list web interface: http://groups.google.com/group/fiji-devel
>
> ---
> You received this message because you are subscribed to the Google Groups
> "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/5d2fc57f/attachment-0001.html>

From hiner at wisc.edu  Fri Dec  5 09:58:15 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Fri, 5 Dec 2014 09:58:15 -0600
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>
Message-ID: <CA+B=mGosdShDF9Yh9X_NmSTGkrVU=dqqyYhU=4CAFoYmgFCA8A@mail.gmail.com>

Jay,
>Can anyone else confirm this experience?
Yep, Yosemite dropped Java 6. Definitely an annoying extra barrier for
developers. But there's a FAQ entry
<http://imagej.net/Frequently_Asked_Questions#How_do_I_set_up_Java_6_on_OS_X.3F>
now!

Michael,
>When replying to a post like this, is it the done thing to reply to the
list in general or should I be replying just to the original poster?
You did the right thing - reply to the whole list. That way there is a
complete record of any discussion-especially important on a general topic
like this. Personally, if I ever get a private mail in response to
something, I cc the list in my reply (see also:
http://imagej.net/Philosophy#Open_source)

Out of curiosity, how do people feel about establishing set guidelines for
when to advance Java versions (e.g. if it's 18 months past the end-of-life
release and under 2% of the users would be affected, just upgrade)? There
will certainly be times when this question will come up again... and my
only hesitation towards agreeing with consensus here is that these
particular mailing lists seem likely to be biased towards active developers
(who I would expect to prefer newer Java versions).

Best,
Mark

P.S. Thanks for starting this thread Tobias!

On Fri, Dec 5, 2014 at 8:56 AM, Lee Kamentsky <leek at broadinstitute.org>
wrote:

> For CelllProfiler, there's some packaging work that would need to be done
> (we bundle the JRE with the Windows version and the Centos 6 RPM has Java 6
> as a dependency). We rely on the system Java for the Mac presently and I
> don't have a clear idea of what range of Java 7 support to expect on our
> user's Macs.
>
> It certainly seems like there is a lot of pressure to move to Java 7, so
> my vote would be to move to Java 7, even considering the above.
>
> On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
> wrote:
>
>> Hi all,
>>
>> what is everyones opinion on moving the IJ2/Fiji stack to a new version
>> of Java, i.e., Java 7.
>> Java 7 has been around for more than 3 years now. The end-of-life final
>> public release of Java 6 was more than 1.5 years ago.
>>
>> Benefits I see are the following:
>>
>> * We could use the ?new" Java 7 libraries. For example the Fork/Join
>> framework would come handy in defining multi-threading interfaces in
>> scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff
>> (java.nio.file)
>>
>> * We would benefit from improvements of type inference for generics in
>> the compiler. No more jumping through hoops to fix ?errors? in code that
>> should compile with Java 6 but doesn?t. (Plus we could use the diamond
>> operator to shorten generics instantiations.)
>>
>> * We could use third-party libraries that only support Java 7. For
>> example I?m using Jetty in a project that can therefore not be part of Fiji
>> currently. (This mail was more or less triggered by me looking into
>> http://ojalgo.org who maybe went a bit over the top and already
>> abandoned Java 7 for Java 8). I think it is only a matter of time until we
>> will have a problem with third-party libraries that we already use
>> abandoning Java 6.
>>
>>
>> I do not have a clear picture of what the downsides would be. Johannes
>> always said that people on old macs are tied to an old java version and
>> that we do not want to leave those users behind. It would be interesting to
>> know how many people that actually would impact.
>>
>>
>> What do you think?
>>
>> best regards,
>> Tobias
>>
>>
>> --
>> --
>> Please avoid top-posting, and please make sure to reply-to-all!
>>
>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>
>> ---
>> You received this message because you are subscribed to the Google Groups
>> "Fiji-devel" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to fiji-devel+unsubscribe at googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>>
>
>  --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
>
> Mailing list web interface: http://groups.google.com/group/fiji-devel
>
> ---
> You received this message because you are subscribed to the Google Groups
> "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/fbcf7154/attachment.html>

From bschlining at gmail.com  Fri Dec  5 10:16:05 2014
From: bschlining at gmail.com (Brian Schlining)
Date: Fri, 5 Dec 2014 08:16:05 -0800
Subject: [ImageJ-devel] moving to Java 7
In-Reply-To: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
Message-ID: <etPan.5481da45.6b8b4567.48b5@zen>

We?re already moving over to Java 8 for many things. So, sure, Java 7 is a fine target.



From:?Tobias Pietzsch <pietzsch at mpi-cbg.de>
Reply:?Tobias Pietzsch <pietzsch at mpi-cbg.de>>
Date:?December 5, 2014 at 5:54:36 AM
To:?ImageJ Developers <imagej-devel at imagej.net>>, Fiji Developers <fiji-devel at googlegroups.com>>
Subject:? [ImageJ-devel] moving to Java 7  

Hi all,  

what is everyones opinion on moving the IJ2/Fiji stack to a new version of Java, i.e., Java 7.  
Java 7 has been around for more than 3 years now. The end-of-life final public release of Java 6 was more than 1.5 years ago.  

Benefits I see are the following:  

* We could use the ?new" Java 7 libraries. For example the Fork/Join framework would come handy in defining multi-threading interfaces in scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff (java.nio.file)  

* We would benefit from improvements of type inference for generics in the compiler. No more jumping through hoops to fix ?errors? in code that should compile with Java 6 but doesn?t. (Plus we could use the diamond operator to shorten generics instantiations.)  

* We could use third-party libraries that only support Java 7. For example I?m using Jetty in a project that can therefore not be part of Fiji currently. (This mail was more or less triggered by me looking into http://ojalgo.org who maybe went a bit over the top and already abandoned Java 7 for Java 8). I think it is only a matter of time until we will have a problem with third-party libraries that we already use abandoning Java 6.  


I do not have a clear picture of what the downsides would be. Johannes always said that people on old macs are tied to an old java version and that we do not want to leave those users behind. It would be interesting to know how many people that actually would impact.  


What do you think?  

best regards,  
Tobias  

_______________________________________________  
ImageJ-devel mailing list  
ImageJ-devel at imagej.net  
http://imagej.net/mailman/listinfo/imagej-devel  
--?
Brian Schlining
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/699889c8/attachment.html>

From ctrueden at wisc.edu  Fri Dec  5 10:23:29 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 5 Dec 2014 10:23:29 -0600
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <CA+B=mGosdShDF9Yh9X_NmSTGkrVU=dqqyYhU=4CAFoYmgFCA8A@mail.gmail.com>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>
	<CA+B=mGosdShDF9Yh9X_NmSTGkrVU=dqqyYhU=4CAFoYmgFCA8A@mail.gmail.com>
Message-ID: <CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>

Hi all,

Mark Hiner wrote:
> my only hesitation towards agreeing with consensus here is that these
> particular mailing lists seem likely to be biased towards active
> developers (who I would expect to prefer newer Java versions).

I agree. While personally I would love to move to Java 7 or even Java 8,
and even if we all support that here, we must then ask on the main ImageJ
mailing list to get feedback from all users first.

Regards,
Curtis

On Fri, Dec 5, 2014 at 9:58 AM, Mark Hiner <hiner at wisc.edu> wrote:

> Jay,
> >Can anyone else confirm this experience?
> Yep, Yosemite dropped Java 6. Definitely an annoying extra barrier for
> developers. But there's a FAQ entry
> <http://imagej.net/Frequently_Asked_Questions#How_do_I_set_up_Java_6_on_OS_X.3F>
> now!
>
> Michael,
> >When replying to a post like this, is it the done thing to reply to the
> list in general or should I be replying just to the original poster?
> You did the right thing - reply to the whole list. That way there is a
> complete record of any discussion-especially important on a general topic
> like this. Personally, if I ever get a private mail in response to
> something, I cc the list in my reply (see also:
> http://imagej.net/Philosophy#Open_source)
>
> Out of curiosity, how do people feel about establishing set guidelines for
> when to advance Java versions (e.g. if it's 18 months past the end-of-life
> release and under 2% of the users would be affected, just upgrade)? There
> will certainly be times when this question will come up again... and my
> only hesitation towards agreeing with consensus here is that these
> particular mailing lists seem likely to be biased towards active developers
> (who I would expect to prefer newer Java versions).
>
> Best,
> Mark
>
> P.S. Thanks for starting this thread Tobias!
>
> On Fri, Dec 5, 2014 at 8:56 AM, Lee Kamentsky <leek at broadinstitute.org>
> wrote:
>
>> For CelllProfiler, there's some packaging work that would need to be done
>> (we bundle the JRE with the Windows version and the Centos 6 RPM has Java 6
>> as a dependency). We rely on the system Java for the Mac presently and I
>> don't have a clear idea of what range of Java 7 support to expect on our
>> user's Macs.
>>
>> It certainly seems like there is a lot of pressure to move to Java 7, so
>> my vote would be to move to Java 7, even considering the above.
>>
>> On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
>> wrote:
>>
>>> Hi all,
>>>
>>> what is everyones opinion on moving the IJ2/Fiji stack to a new version
>>> of Java, i.e., Java 7.
>>> Java 7 has been around for more than 3 years now. The end-of-life final
>>> public release of Java 6 was more than 1.5 years ago.
>>>
>>> Benefits I see are the following:
>>>
>>> * We could use the ?new" Java 7 libraries. For example the Fork/Join
>>> framework would come handy in defining multi-threading interfaces in
>>> scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff
>>> (java.nio.file)
>>>
>>> * We would benefit from improvements of type inference for generics in
>>> the compiler. No more jumping through hoops to fix ?errors? in code that
>>> should compile with Java 6 but doesn?t. (Plus we could use the diamond
>>> operator to shorten generics instantiations.)
>>>
>>> * We could use third-party libraries that only support Java 7. For
>>> example I?m using Jetty in a project that can therefore not be part of Fiji
>>> currently. (This mail was more or less triggered by me looking into
>>> http://ojalgo.org who maybe went a bit over the top and already
>>> abandoned Java 7 for Java 8). I think it is only a matter of time until we
>>> will have a problem with third-party libraries that we already use
>>> abandoning Java 6.
>>>
>>>
>>> I do not have a clear picture of what the downsides would be. Johannes
>>> always said that people on old macs are tied to an old java version and
>>> that we do not want to leave those users behind. It would be interesting to
>>> know how many people that actually would impact.
>>>
>>>
>>> What do you think?
>>>
>>> best regards,
>>> Tobias
>>>
>>>
>>> --
>>> --
>>> Please avoid top-posting, and please make sure to reply-to-all!
>>>
>>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>>
>>> ---
>>> You received this message because you are subscribed to the Google
>>> Groups "Fiji-devel" group.
>>> To unsubscribe from this group and stop receiving emails from it, send
>>> an email to fiji-devel+unsubscribe at googlegroups.com.
>>> For more options, visit https://groups.google.com/d/optout.
>>>
>>
>>  --
>> --
>> Please avoid top-posting, and please make sure to reply-to-all!
>>
>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>
>> ---
>> You received this message because you are subscribed to the Google Groups
>> "Fiji-devel" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to fiji-devel+unsubscribe at googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>>
>
>  --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
>
> Mailing list web interface: http://groups.google.com/group/fiji-devel
>
> ---
> You received this message because you are subscribed to the Google Groups
> "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/cbfbfebb/attachment-0001.html>

From ctrueden at wisc.edu  Fri Dec  5 10:35:23 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 5 Dec 2014 10:35:23 -0600
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
 project to open a TIFF file
In-Reply-To: <5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
Message-ID: <CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>

Hi Michael,

> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
> information available

Make sure you have the following <repositories> block in your POM:

<repositories>
<repository>
<id>imagej.public</id>
<url>http://maven.imagej.net/content/groups/public</url>
</repository>
</repositories>

Then rebuild with the "-U" flag. I don't know how to do this from NetBeans,
but you only need to do it once from the CLI -- then you can return to
NetBeans and it should work.

Regards,
Curtis

On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:

> I have followed the advice offered by Curtis regarding adding
> the io.scif: scifio dependency to my POM
>
> The dependency part of my POM looks like this:
>
>     <dependencies>
>         <dependency>
>             <groupId>net.imglib2</groupId>
>             <artifactId>imglib2</artifactId>
>             <version>2.2.1-SNAPSHOT</version>
>             <type>jar</type>
>         </dependency>
>         <dependency>
>             <groupId>io.scif</groupId>
>             <artifactId>scifio</artifactId>
>             <version>0.17.1</version>
>             <type>jar</type>
>         </dependency>
>     </dependencies>
>
> I am using NetBeans IDE, configured for use with maven project (I am slo
> using Java 8 and JavaFX)
>
> However when I attempt to Build (or Build with Dependencies)  within
> NetBeans, I get the following error message:
> ============================================================
>
> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX;
> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
> "/Applications/NetBeans/NetBeans
> 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
> Scanning for projects...
>
> ------------------------------------------------------------------------
> Building MavenImgLib2FX 1.0-SNAPSHOT
> ------------------------------------------------------------------------
> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
> information available
> ------------------------------------------------------------------------
> BUILD FAILURE
> ------------------------------------------------------------------------
> Total time: 0.341s
> Finished at: Fri Dec 05 10:34:41 GMT 2014
> Final Memory: 7M/245M
> ------------------------------------------------------------------------
> Failed to execute goal on project MavenImgLib2FX: Could not resolve
> dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure
> to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2
> was cached in the local repository, resolution will not be reattempted
> until the update interval of central has elapsed or updates are forced ->
> [Help 1]
>
> To see the full stack trace of the errors, re-run Maven with the -e switch.
> Re-run Maven using the -X switch to enable full debug logging.
>
> For more information about the errors and possible solutions, please read
> the following articles:
> [Help 1]
> http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>
> ============================================================
>
> If I open a terminal window and cd into the project directory and:
>
> mvn clean package
>
> It succeeds.
>
> However, when I then attempt to run the project with:
>
> java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>
> The application starts to execute but throws ?No compatible service:
> io.scif.SCIFIOService? exception.
> ============================================================
>
> img1=CellImg [20x30]
> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits =
> 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f
> transparency = 1 has alpha = false isAlphaPre = false
> ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1
> dataOff[0] = 0
> Loading image...
> Exception in Application start method
> java.lang.reflect.InvocationTargetException
> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> at java.lang.reflect.Method.invoke(Method.java:497)
> at
> com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
> at
> com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
> at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> at java.lang.reflect.Method.invoke(Method.java:497)
> at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
> Caused by: java.lang.RuntimeException: Exception in Application start
> method
> at
> com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
> at
> com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
> at
> com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown
> Source)
> at java.lang.Thread.run(Thread.java:745)
> Caused by: java.lang.IllegalArgumentException: No compatible service:
> io.scif.SCIFIOService
> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
> at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
> at org.scijava.Context.<init>(Context.java:244)
> at org.scijava.Context.<init>(Context.java:203)
> at org.scijava.Context.<init>(Context.java:142)
> at org.scijava.Context.<init>(Context.java:128)
> at io.scif.SCIFIO.<init>(SCIFIO.java:81)
> at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
> at
> com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
> at
> com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown
> Source)
> at
> com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
> at
> com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown
> Source)
> at
> com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
> at
> com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown
> Source)
> at java.security.AccessController.doPrivileged(Native Method)
> at
> com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
> at
> com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown
> Source)
> at
> com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
> Exception running application biz.dsuk.mavenimglib2fx.MainApp
> ============================================================
>
> If I remove the calls to the SCIO code and build and run from the command
> line, all works well.
>
> The SCIO source code that I am using is lifted/amended from one of the
> tutorials and is as follows:
>
> ============================================================
>             imagePath =
> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>             System.out.println("Loading image... '" + imagePath + "'");
>             SCIFIO scifio = new SCIFIO();
>             final Reader reader =
> scifio.initializer().initializeReader(imagePath);
> ============================================================
>
> This source code works file in the SCIFIO tutorial.
>
> Any help gratefully appreciated!!!!!
>
> ? Michael Ellis
>
>
>
>
> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>
> Hi Michael,
>
> > How do I establish what Maven projects I need to include?
>
> One way to check is using the dependency-maven-plugin like so:
>
>     mvn dependency:analyze
>
> This will tell you:
>
> A) Dependencies you declared but do not actually use; and
> B) Dependencies you did not declare directly, but actually need.
>
> Note that this will only work if your project compiles successfully. In
> other words, it is easier to start with "too many" dependencies and pare
> down, rather than trying to "build up" from zero.
>
> So in your case, you can start with the ImgLib2 Examples dependencies
> block, run dependency:analyze, and adjust the POM according to its
> recommendations.
>
> > When I go to my NetBeans project dependence, select Add dependency,
> > then type SCIF to the query text box, I get a huge list of
> > possibilities.
>
> The dependency you probably want is io.scif:scifio (i.e.: a groupId of
> io.scif, and an artifactId of scifio). Presumably at the latest version.
> You can search for that here:
>
>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>
> So your dependency block in this case would be:
>
>     <dependency>
>       <groupId>io.scif</groupId>
>       <artifactId>scifio</artifactId>
>       <version>0.17.1</version>
>     </dependency>
>
> Note that that block of XML is available for copy-pasting from the link
> above.
>
> > I am completely new to maven
>
> For more information, see:
>     http://imagej.net/Maven
>
> Regards,
> Curtis
>
> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>
>> I am investigating the using ImgLib2 for a project.
>>
>> I am using NetBeans and have managed to create a NetBeans Mavern project
>> and have  added a dependency for ImgLib2 Core Library and that seems to be
>> working OK.
>>
>> I now want to add the least possible requirements for the purpose of
>> opening some image files.
>>
>> How do I establish what Maven projects I need to include?
>>
>> I have cloned  the ImgLib2 Examples project and got that working but that
>> seems to include all manner of things that I suspect I do not need.
>>
>> When I go to my NetBeans project dependence, select Add dependency, then
>> type SCIF to the query text box, I get a huge list of possibilities.
>>
>> I am completely new to maven and so do not know what I am doing with it!
>>
>> ? Michael Ellis
>> Digital Scientific UK Ltd.
>>
>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/fc473841/attachment-0001.html>

From michael.ellis at dsuk.biz  Fri Dec  5 11:03:32 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Fri, 5 Dec 2014 17:03:32 +0000
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
	project to open a TIFF file
In-Reply-To: <CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
Message-ID: <6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>

Curtis,

Thanks but it is still not working.

I have cut out using NetBeans and am now just using the CLI and a text editor. 

POM as follows:

========================================================
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mycompany.app</groupId>
  <artifactId>my-app</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>my-app</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
	<repositories>
		<repository>
			<id>imagej.public</id>
			<url>http://maven.imagej.net/content/groups/public</url>
		</repository>
	</repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
	<dependency>
	  <groupId>io.scif</groupId>
	  <artifactId>scifio</artifactId>
	  <version>0.17.1</version>
	</dependency>
    
  </dependencies>
</project>
========================================================

File hierarchy:

.
./.DS_Store
./pom.xml
./src
./src/main
./src/main/java
./src/main/java/com
./src/main/java/com/mycompany
./src/main/java/com/mycompany/app
./src/main/java/com/mycompany/app/App.java
./src/test
./src/test/java
./src/test/java/com
./src/test/java/com/mycompany
./src/test/java/com/mycompany/app
./src/test/java/com/mycompany/app/AppTest.java
========================================================

App.java as follows:

package com.mycompany.app;

import io.scif.FormatException;
import io.scif.ImageMetadata;
import io.scif.Plane;
import io.scif.Reader;
import io.scif.SCIFIO;

public class App 
{
    public static void main( String[] args )
    {
		try {
    	    System.out.println( "Hello World!" );
			SCIFIO scifio = new SCIFIO();
			String sampleImage
					= "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
			final Reader reader = scifio.initializer().initializeReader(sampleImage);
			System.out.printf("reader=%s%n", reader );
        } catch (Exception e) {
	        System.out.printf("Exception: %s%n", e.getMessage() );
        }
    }
}

========================================================

mvm -U install

[Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building my-app 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ my-app ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ my-app ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ my-app ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
[INFO] Surefire report directory: /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.mycompany.app.AppTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[INFO] 
[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
[INFO] Building jar: /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
[INFO] Installing /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
[INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.962 s
[INFO] Finished at: 2014-12-05T16:59:50+00:00
[INFO] Final Memory: 18M/242M
[INFO] ????????????????????????????????????

========================================================

mvn claims to build everything OK there seems to be no inclusion of any scif libraries or class files.


When I run it I get:

[Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
Error: A JNI error has occurred, please check your installation and try again
Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
	at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
	at java.lang.Class.getMethod0(Class.java:3016)
	at java.lang.Class.getMethod(Class.java:1782)
	at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 7 more


========================================================

I?ve been banging my head against this for two days now. 

So any help appreciated


On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:

> Hi Michael,
> 
> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
> > information available
> 
> Make sure you have the following <repositories> block in your POM:
> 
> 	<repositories>
> 		<repository>
> 			<id>imagej.public</id>
> 			<url>http://maven.imagej.net/content/groups/public</url>
> 		</repository>
> 	</repositories>
> 
> Then rebuild with the "-U" flag. I don't know how to do this from NetBeans, but you only need to do it once from the CLI -- then you can return to NetBeans and it should work.
> 
> Regards,
> Curtis
> 
> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> I have followed the advice offered by Curtis regarding adding the io.scif: scifio dependency to my POM
> 
> The dependency part of my POM looks like this:
> 
>     <dependencies>
>         <dependency>
>             <groupId>net.imglib2</groupId>
>             <artifactId>imglib2</artifactId>
>             <version>2.2.1-SNAPSHOT</version>
>             <type>jar</type>
>         </dependency>
>         <dependency>
>             <groupId>io.scif</groupId>
>             <artifactId>scifio</artifactId>
>             <version>0.17.1</version>
>             <type>jar</type>
>         </dependency>
>     </dependencies>
> 
> I am using NetBeans IDE, configured for use with maven project (I am slo using Java 8 and JavaFX)
> 
> However when I attempt to Build (or Build with Dependencies)  within NetBeans, I get the following error message:
> ============================================================
> 
> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home "/Applications/NetBeans/NetBeans 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
> Scanning for projects...
>                                                                         
> ------------------------------------------------------------------------
> Building MavenImgLib2FX 1.0-SNAPSHOT
> ------------------------------------------------------------------------
> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency information available
> ------------------------------------------------------------------------
> BUILD FAILURE
> ------------------------------------------------------------------------
> Total time: 0.341s
> Finished at: Fri Dec 05 10:34:41 GMT 2014
> Final Memory: 7M/245M
> ------------------------------------------------------------------------
> Failed to execute goal on project MavenImgLib2FX: Could not resolve dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]
> 
> To see the full stack trace of the errors, re-run Maven with the -e switch.
> Re-run Maven using the -X switch to enable full debug logging.
> 
> For more information about the errors and possible solutions, please read the following articles:
> [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
> 
> ============================================================
> 
> If I open a terminal window and cd into the project directory and:
> 
> 	mvn clean package
> 
> It succeeds.
> 
> However, when I then attempt to run the project with:
> 
> 	java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
> 
> The application starts to execute but throws ?No compatible service: io.scif.SCIFIOService? exception.
> ============================================================
> 
> img1=CellImg [20x30]
> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha = false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1 dataOff[0] = 0
> Loading image...
> Exception in Application start method
> java.lang.reflect.InvocationTargetException
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> 	at java.lang.reflect.Method.invoke(Method.java:497)
> 	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
> 	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
> 	at java.lang.reflect.Method.invoke(Method.java:497)
> 	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
> Caused by: java.lang.RuntimeException: Exception in Application start method
> 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
> 	at com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown Source)
> 	at java.lang.Thread.run(Thread.java:745)
> Caused by: java.lang.IllegalArgumentException: No compatible service: io.scif.SCIFIOService
> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
> 	at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
> 	at org.scijava.Context.<init>(Context.java:244)
> 	at org.scijava.Context.<init>(Context.java:203)
> 	at org.scijava.Context.<init>(Context.java:142)
> 	at org.scijava.Context.<init>(Context.java:128)
> 	at io.scif.SCIFIO.<init>(SCIFIO.java:81)
> 	at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
> 	at com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown Source)
> 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
> 	at com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown Source)
> 	at com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
> 	at com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown Source)
> 	at java.security.AccessController.doPrivileged(Native Method)
> 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
> 	at com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown Source)
> 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
> Exception running application biz.dsuk.mavenimglib2fx.MainApp
> ============================================================
> 
> If I remove the calls to the SCIO code and build and run from the command line, all works well.
> 
> The SCIO source code that I am using is lifted/amended from one of the tutorials and is as follows:
> 
> ============================================================
>             imagePath = "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>             System.out.println("Loading image... '" + imagePath + "'");
>             SCIFIO scifio = new SCIFIO();
>             final Reader reader = scifio.initializer().initializeReader(imagePath);
> ============================================================
> 
> This source code works file in the SCIFIO tutorial.
> 
> Any help gratefully appreciated!!!!!
> 
> ? Michael Ellis
> 
> 
> 
> 
> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
> 
>> Hi Michael,
>> 
>> > How do I establish what Maven projects I need to include? 
>> 
>> One way to check is using the dependency-maven-plugin like so:
>> 
>>     mvn dependency:analyze
>> 
>> This will tell you:
>> 
>> A) Dependencies you declared but do not actually use; and
>> B) Dependencies you did not declare directly, but actually need.
>> 
>> Note that this will only work if your project compiles successfully. In other words, it is easier to start with "too many" dependencies and pare down, rather than trying to "build up" from zero.
>> 
>> So in your case, you can start with the ImgLib2 Examples dependencies block, run dependency:analyze, and adjust the POM according to its recommendations.
>> 
>> > When I go to my NetBeans project dependence, select Add dependency,
>> > then type SCIF to the query text box, I get a huge list of
>> > possibilities.
>> 
>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of io.scif, and an artifactId of scifio). Presumably at the latest version. You can search for that here:
>> 
>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>> 
>> So your dependency block in this case would be:
>> 
>>     <dependency>
>>       <groupId>io.scif</groupId>
>>       <artifactId>scifio</artifactId>
>>       <version>0.17.1</version>
>>     </dependency>
>> 
>> Note that that block of XML is available for copy-pasting from the link above.
>> 
>> > I am completely new to maven
>> 
>> For more information, see:
>>     http://imagej.net/Maven
>> 
>> Regards,
>> Curtis
>> 
>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>> I am investigating the using ImgLib2 for a project.
>> 
>> I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.
>> 
>> I now want to add the least possible requirements for the purpose of opening some image files.
>> 
>> How do I establish what Maven projects I need to include? 
>> 
>> I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.
>> 
>> When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.
>> 
>> I am completely new to maven and so do not know what I am doing with it!
>> 
>> ? Michael Ellis
>> Digital Scientific UK Ltd.
>> 
>> 
>> 
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>> 
>> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/c6a66f83/attachment-0001.html>

From ctrueden at wisc.edu  Fri Dec  5 11:17:20 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 5 Dec 2014 11:17:20 -0600
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
 project to open a TIFF file
In-Reply-To: <6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
Message-ID: <CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>

Hi Michael,

> mvn claims to build everything OK

Yep, it did build successfully.

> % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
> Error: A JNI error has occurred, please check your installation and try
again
> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO

Maven is primarily a build tool. It puts the correct JARs on your classpath
at compile time. In your case, that is scifio-0.17.1.jar and its
dependencies.

However, the way you are launching your program is not putting the required
dependencies on the classpath. You put only my-app-1.0-SNAPSHOT.jar on the
classpath, and its dependencies are missing. So of course Java cannot find
the needed classes.

The gist is: it is your responsibility to assemble the dependencies and
ensure they are on the classpath somehow when you launch your application.

There are several ways to accomplish this. Here is one generally useful way
using Maven, which does not assume you are doing anything ImageJ-related:

    $ mvn dependency:copy-dependencies
    $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*'
com.mycompany.app.App

The "copy-dependencies" goal copies all the JAR files needed by your
program into the target/dependency folder, for easy subsequent consumption.

Alternately, the "ImageJ way" of dealing with deployment is to ship all
needed dependencies in the "jars" folder of your ImageJ application. We
created a Maven goal for this too, which you can use as follows:

    $ mvn -Dimagej.app.directory=/Applications/ImageJ.app
-Ddelete.other.versions=true

Which will copy your JAR and its dependencies into your ImageJ installation
at /Applications/ImageJ.app. But note that in order for this goal to work,
you must extend the pom-imagej parent (see
https://github.com/imagej/minimal-ij1-plugin for an example).

A third solution is to use the exec-maven-plugin to launch your application
directly using Maven. E.g.:
https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278

Regards,
Curtis

On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:

> Curtis,
>
> Thanks but it is still not working.
>
> I have cut out using NetBeans and am now just using the CLI and a text
> editor.
>
> POM as follows:
>
> ========================================================
> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="
> http://www.w3.org/2001/XMLSchema-instance"
>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
> http://maven.apache.org/xsd/maven-4.0.0.xsd">
>   <modelVersion>4.0.0</modelVersion>
>
>   <groupId>com.mycompany.app</groupId>
>   <artifactId>my-app</artifactId>
>   <version>1.0-SNAPSHOT</version>
>   <packaging>jar</packaging>
>
>   <name>my-app</name>
>   <url>http://maven.apache.org</url>
>
>   <properties>
>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>   </properties>
>
> <repositories>
> <repository>
> <id>imagej.public</id>
> <url>http://maven.imagej.net/content/groups/public</url>
> </repository>
> </repositories>
>
>   <dependencies>
>     <dependency>
>       <groupId>junit</groupId>
>       <artifactId>junit</artifactId>
>       <version>3.8.1</version>
>       <scope>test</scope>
>     </dependency>
>
> <dependency>
>   <groupId>io.scif</groupId>
>   <artifactId>scifio</artifactId>
>   <version>0.17.1</version>
> </dependency>
>
>   </dependencies>
> </project>
> ========================================================
>
> File hierarchy:
>
> .
> ./.DS_Store
> ./pom.xml
> ./src
> ./src/main
> ./src/main/java
> ./src/main/java/com
> ./src/main/java/com/mycompany
> ./src/main/java/com/mycompany/app
> ./src/main/java/com/mycompany/app/App.java
> ./src/test
> ./src/test/java
> ./src/test/java/com
> ./src/test/java/com/mycompany
> ./src/test/java/com/mycompany/app
> ./src/test/java/com/mycompany/app/AppTest.java
> ========================================================
>
> App.java as follows:
>
> package com.mycompany.app;
>
> import io.scif.FormatException;
> import io.scif.ImageMetadata;
> import io.scif.Plane;
> import io.scif.Reader;
> import io.scif.SCIFIO;
>
> public class App
> {
>     public static void main( String[] args )
>     {
> try {
>         System.out.println( "Hello World!" );
> SCIFIO scifio = new SCIFIO();
> String sampleImage
> =
> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
> final Reader reader = scifio.initializer().initializeReader(sampleImage);
> System.out.printf("reader=%s%n", reader );
>         } catch (Exception e) {
>         System.out.printf("Exception: %s%n", e.getMessage() );
>         }
>     }
> }
>
> ========================================================
>
> mvm -U install
>
> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
> [INFO] Scanning for projects...
> [INFO]
>
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Building my-app 1.0-SNAPSHOT
> [INFO]
> ------------------------------------------------------------------------
> [INFO]
> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
> my-app ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] skip non existing resourceDirectory
> /Users/michaelellis/temp/deleteme/my-app/src/main/resources
> [INFO]
> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 1 source file to
> /Users/michaelellis/temp/deleteme/my-app/target/classes
> [INFO]
> [INFO] --- maven-resources-plugin:2.6:testResources
> (default-testResources) @ my-app ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] skip non existing resourceDirectory
> /Users/michaelellis/temp/deleteme/my-app/src/test/resources
> [INFO]
> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @
> my-app ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 1 source file to
> /Users/michaelellis/temp/deleteme/my-app/target/test-classes
> [INFO]
> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
> [INFO] Surefire report directory:
> /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>
> -------------------------------------------------------
>  T E S T S
> -------------------------------------------------------
> Running com.mycompany.app.AppTest
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
>
> Results :
>
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>
> [INFO]
> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
> [INFO] Building jar:
> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
> [INFO]
> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
> [INFO] Installing
> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to
> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to
> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
> [INFO]
> ------------------------------------------------------------------------
> [INFO] BUILD SUCCESS
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Total time: 1.962 s
> [INFO] Finished at: 2014-12-05T16:59:50+00:00
> [INFO] Final Memory: 18M/242M
> [INFO] ????????????????????????????????????
>
> ========================================================
>
> mvn claims to build everything OK there seems to be no inclusion of any
> scif libraries or class files.
>
>
> When I run it I get:
>
> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp
> target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
> Error: A JNI error has occurred, please check your installation and try
> again
> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
> at java.lang.Class.getDeclaredMethods0(Native Method)
> at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
> at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
> at java.lang.Class.getMethod0(Class.java:3016)
> at java.lang.Class.getMethod(Class.java:1782)
> at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
> at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
> at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
> at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
> at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
> at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
> ... 7 more
>
>
> ========================================================
>
> I?ve been banging my head against this for two days now.
>
> So any help appreciated
>
>
> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>
> Hi Michael,
>
> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
> > information available
>
> Make sure you have the following <repositories> block in your POM:
>
> <repositories>
> <repository>
> <id>imagej.public</id>
> <url>http://maven.imagej.net/content/groups/public</url>
> </repository>
> </repositories>
>
> Then rebuild with the "-U" flag. I don't know how to do this from
> NetBeans, but you only need to do it once from the CLI -- then you can
> return to NetBeans and it should work.
>
> Regards,
> Curtis
>
> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>
>> I have followed the advice offered by Curtis regarding adding
>> the io.scif: scifio dependency to my POM
>>
>> The dependency part of my POM looks like this:
>>
>>     <dependencies>
>>         <dependency>
>>             <groupId>net.imglib2</groupId>
>>             <artifactId>imglib2</artifactId>
>>             <version>2.2.1-SNAPSHOT</version>
>>             <type>jar</type>
>>         </dependency>
>>         <dependency>
>>             <groupId>io.scif</groupId>
>>             <artifactId>scifio</artifactId>
>>             <version>0.17.1</version>
>>             <type>jar</type>
>>         </dependency>
>>     </dependencies>
>>
>> I am using NetBeans IDE, configured for use with maven project (I am slo
>> using Java 8 and JavaFX)
>>
>> However when I attempt to Build (or Build with Dependencies)  within
>> NetBeans, I get the following error message:
>> ============================================================
>>
>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX;
>> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
>> "/Applications/NetBeans/NetBeans
>> 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>> Scanning for projects...
>>
>> ------------------------------------------------------------------------
>> Building MavenImgLib2FX 1.0-SNAPSHOT
>> ------------------------------------------------------------------------
>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>> information available
>> ------------------------------------------------------------------------
>> BUILD FAILURE
>> ------------------------------------------------------------------------
>> Total time: 0.341s
>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>> Final Memory: 7M/245M
>> ------------------------------------------------------------------------
>> Failed to execute goal on project MavenImgLib2FX: Could not resolve
>> dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure
>> to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2
>> was cached in the local repository, resolution will not be reattempted
>> until the update interval of central has elapsed or updates are forced ->
>> [Help 1]
>>
>> To see the full stack trace of the errors, re-run Maven with the -e
>> switch.
>> Re-run Maven using the -X switch to enable full debug logging.
>>
>> For more information about the errors and possible solutions, please read
>> the following articles:
>> [Help 1]
>> http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>
>> ============================================================
>>
>> If I open a terminal window and cd into the project directory and:
>>
>> mvn clean package
>>
>> It succeeds.
>>
>> However, when I then attempt to run the project with:
>>
>> java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>>
>> The application starts to execute but throws ?No compatible service:
>> io.scif.SCIFIOService? exception.
>> ============================================================
>>
>> img1=CellImg [20x30]
>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits =
>> 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f
>> transparency = 1 has alpha = false isAlphaPre = false
>> ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1
>> dataOff[0] = 0
>> Loading image...
>> Exception in Application start method
>> java.lang.reflect.InvocationTargetException
>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>> at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> at java.lang.reflect.Method.invoke(Method.java:497)
>> at
>> com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>> at
>> com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>> at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> at java.lang.reflect.Method.invoke(Method.java:497)
>> at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>> Caused by: java.lang.RuntimeException: Exception in Application start
>> method
>> at
>> com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>> at
>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>> at
>> com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown
>> Source)
>> at java.lang.Thread.run(Thread.java:745)
>> Caused by: java.lang.IllegalArgumentException: No compatible service:
>> io.scif.SCIFIOService
>> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>> at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>> at org.scijava.Context.<init>(Context.java:244)
>> at org.scijava.Context.<init>(Context.java:203)
>> at org.scijava.Context.<init>(Context.java:142)
>> at org.scijava.Context.<init>(Context.java:128)
>> at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>> at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>> at
>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>> at
>> com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown
>> Source)
>> at
>> com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>> at
>> com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown
>> Source)
>> at
>> com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>> at
>> com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown
>> Source)
>> at java.security.AccessController.doPrivileged(Native Method)
>> at
>> com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>> at
>> com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown
>> Source)
>> at
>> com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>> ============================================================
>>
>> If I remove the calls to the SCIO code and build and run from the command
>> line, all works well.
>>
>> The SCIO source code that I am using is lifted/amended from one of the
>> tutorials and is as follows:
>>
>> ============================================================
>>             imagePath =
>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>             System.out.println("Loading image... '" + imagePath + "'");
>>             SCIFIO scifio = new SCIFIO();
>>             final Reader reader =
>> scifio.initializer().initializeReader(imagePath);
>> ============================================================
>>
>> This source code works file in the SCIFIO tutorial.
>>
>> Any help gratefully appreciated!!!!!
>>
>> ? Michael Ellis
>>
>>
>>
>>
>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>
>> Hi Michael,
>>
>> > How do I establish what Maven projects I need to include?
>>
>> One way to check is using the dependency-maven-plugin like so:
>>
>>     mvn dependency:analyze
>>
>> This will tell you:
>>
>> A) Dependencies you declared but do not actually use; and
>> B) Dependencies you did not declare directly, but actually need.
>>
>> Note that this will only work if your project compiles successfully. In
>> other words, it is easier to start with "too many" dependencies and pare
>> down, rather than trying to "build up" from zero.
>>
>> So in your case, you can start with the ImgLib2 Examples dependencies
>> block, run dependency:analyze, and adjust the POM according to its
>> recommendations.
>>
>> > When I go to my NetBeans project dependence, select Add dependency,
>> > then type SCIF to the query text box, I get a huge list of
>> > possibilities.
>>
>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of
>> io.scif, and an artifactId of scifio). Presumably at the latest version.
>> You can search for that here:
>>
>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>
>> So your dependency block in this case would be:
>>
>>     <dependency>
>>       <groupId>io.scif</groupId>
>>       <artifactId>scifio</artifactId>
>>       <version>0.17.1</version>
>>     </dependency>
>>
>> Note that that block of XML is available for copy-pasting from the link
>> above.
>>
>> > I am completely new to maven
>>
>> For more information, see:
>>     http://imagej.net/Maven
>>
>> Regards,
>> Curtis
>>
>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz>
>> wrote:
>>
>>> I am investigating the using ImgLib2 for a project.
>>>
>>> I am using NetBeans and have managed to create a NetBeans Mavern project
>>> and have  added a dependency for ImgLib2 Core Library and that seems to be
>>> working OK.
>>>
>>> I now want to add the least possible requirements for the purpose of
>>> opening some image files.
>>>
>>> How do I establish what Maven projects I need to include?
>>>
>>> I have cloned  the ImgLib2 Examples project and got that working but
>>> that seems to include all manner of things that I suspect I do not need.
>>>
>>> When I go to my NetBeans project dependence, select Add dependency, then
>>> type SCIF to the query text box, I get a huge list of possibilities.
>>>
>>> I am completely new to maven and so do not know what I am doing with it!
>>>
>>> ? Michael Ellis
>>> Digital Scientific UK Ltd.
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/6f27e33a/attachment-0001.html>

From michael.ellis at dsuk.biz  Fri Dec  5 12:03:56 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Fri, 5 Dec 2014 18:03:56 +0000
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
	project to open a TIFF file
In-Reply-To: <CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
Message-ID: <86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>

Adding a build section to the POM:

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>com.mycompany.app.App</Main-Class>
                    <Build-Number>123</Build-Number>
                  </manifestEntries>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

To the POM gives me a self contained runnable jar. Progress! I?m learning.

BUT as before when I run the jar, I get the Exception: No compatible service: org.scijava.service.SciJavaService
=================================================================

[Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar target/my-app-1.0-SNAPSHOT.jar 
Hello World!
Exception: No compatible service: org.scijava.service.SciJavaService
=================================================================

Still vexed!


On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Michael,
> 
> > mvn claims to build everything OK
> 
> Yep, it did build successfully.
> 
> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
> > Error: A JNI error has occurred, please check your installation and try again
> > Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
> 
> Maven is primarily a build tool. It puts the correct JARs on your classpath at compile time. In your case, that is scifio-0.17.1.jar and its dependencies.
> 
> However, the way you are launching your program is not putting the required dependencies on the classpath. You put only my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing. So of course Java cannot find the needed classes.
> 
> The gist is: it is your responsibility to assemble the dependencies and ensure they are on the classpath somehow when you launch your application.
> 
> There are several ways to accomplish this. Here is one generally useful way using Maven, which does not assume you are doing anything ImageJ-related:
> 
>     $ mvn dependency:copy-dependencies
>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*' com.mycompany.app.App
> 
> The "copy-dependencies" goal copies all the JAR files needed by your program into the target/dependency folder, for easy subsequent consumption.
> 
> Alternately, the "ImageJ way" of dealing with deployment is to ship all needed dependencies in the "jars" folder of your ImageJ application. We created a Maven goal for this too, which you can use as follows:
> 
>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app -Ddelete.other.versions=true
> 
> Which will copy your JAR and its dependencies into your ImageJ installation at /Applications/ImageJ.app. But note that in order for this goal to work, you must extend the pom-imagej parent (see https://github.com/imagej/minimal-ij1-plugin for an example).
> 
> A third solution is to use the exec-maven-plugin to launch your application directly using Maven. E.g.: https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
> 
> Regards,
> Curtis
> 
> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> Curtis,
> 
> Thanks but it is still not working.
> 
> I have cut out using NetBeans and am now just using the CLI and a text editor. 
> 
> POM as follows:
> 
> ========================================================
> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
>   <modelVersion>4.0.0</modelVersion>
> 
>   <groupId>com.mycompany.app</groupId>
>   <artifactId>my-app</artifactId>
>   <version>1.0-SNAPSHOT</version>
>   <packaging>jar</packaging>
> 
>   <name>my-app</name>
>   <url>http://maven.apache.org</url>
> 
>   <properties>
>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>   </properties>
>   
> 	<repositories>
> 		<repository>
> 			<id>imagej.public</id>
> 			<url>http://maven.imagej.net/content/groups/public</url>
> 		</repository>
> 	</repositories>
> 
>   <dependencies>
>     <dependency>
>       <groupId>junit</groupId>
>       <artifactId>junit</artifactId>
>       <version>3.8.1</version>
>       <scope>test</scope>
>     </dependency>
>     
> 	<dependency>
> 	  <groupId>io.scif</groupId>
> 	  <artifactId>scifio</artifactId>
> 	  <version>0.17.1</version>
> 	</dependency>
>     
>   </dependencies>
> </project>
> ========================================================
> 
> File hierarchy:
> 
> .
> ./.DS_Store
> ./pom.xml
> ./src
> ./src/main
> ./src/main/java
> ./src/main/java/com
> ./src/main/java/com/mycompany
> ./src/main/java/com/mycompany/app
> ./src/main/java/com/mycompany/app/App.java
> ./src/test
> ./src/test/java
> ./src/test/java/com
> ./src/test/java/com/mycompany
> ./src/test/java/com/mycompany/app
> ./src/test/java/com/mycompany/app/AppTest.java
> ========================================================
> 
> App.java as follows:
> 
> package com.mycompany.app;
> 
> import io.scif.FormatException;
> import io.scif.ImageMetadata;
> import io.scif.Plane;
> import io.scif.Reader;
> import io.scif.SCIFIO;
> 
> public class App 
> {
>     public static void main( String[] args )
>     {
> 		try {
>     	    System.out.println( "Hello World!" );
> 			SCIFIO scifio = new SCIFIO();
> 			String sampleImage
> 					= "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
> 			final Reader reader = scifio.initializer().initializeReader(sampleImage);
> 			System.out.printf("reader=%s%n", reader );
>         } catch (Exception e) {
> 	        System.out.printf("Exception: %s%n", e.getMessage() );
>         }
>     }
> }
> 
> ========================================================
> 
> mvm -U install
> 
> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
> [INFO] Scanning for projects...
> [INFO]                                                                         
> [INFO] ------------------------------------------------------------------------
> [INFO] Building my-app 1.0-SNAPSHOT
> [INFO] ------------------------------------------------------------------------
> [INFO] 
> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ my-app ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/main/resources
> [INFO] 
> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/classes
> [INFO] 
> [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ my-app ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/test/resources
> [INFO] 
> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ my-app ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/test-classes
> [INFO] 
> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
> [INFO] Surefire report directory: /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
> 
> -------------------------------------------------------
>  T E S T S
> -------------------------------------------------------
> Running com.mycompany.app.AppTest
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
> 
> Results :
> 
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
> 
> [INFO] 
> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
> [INFO] Building jar: /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
> [INFO] 
> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
> [INFO] ------------------------------------------------------------------------
> [INFO] BUILD SUCCESS
> [INFO] ------------------------------------------------------------------------
> [INFO] Total time: 1.962 s
> [INFO] Finished at: 2014-12-05T16:59:50+00:00
> [INFO] Final Memory: 18M/242M
> [INFO] ????????????????????????????????????
> 
> ========================================================
> 
> mvn claims to build everything OK there seems to be no inclusion of any scif libraries or class files.
> 
> 
> When I run it I get:
> 
> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
> Error: A JNI error has occurred, please check your installation and try again
> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
> 	at java.lang.Class.getDeclaredMethods0(Native Method)
> 	at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
> 	at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
> 	at java.lang.Class.getMethod0(Class.java:3016)
> 	at java.lang.Class.getMethod(Class.java:1782)
> 	at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
> 	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
> 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
> 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
> 	... 7 more
> 
> 
> ========================================================
> 
> I?ve been banging my head against this for two days now. 
> 
> So any help appreciated
> 
> 
> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
> 
>> Hi Michael,
>> 
>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>> > information available
>> 
>> Make sure you have the following <repositories> block in your POM:
>> 
>> 	<repositories>
>> 		<repository>
>> 			<id>imagej.public</id>
>> 			<url>http://maven.imagej.net/content/groups/public</url>
>> 		</repository>
>> 	</repositories>
>> 
>> Then rebuild with the "-U" flag. I don't know how to do this from NetBeans, but you only need to do it once from the CLI -- then you can return to NetBeans and it should work.
>> 
>> Regards,
>> Curtis
>> 
>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>> I have followed the advice offered by Curtis regarding adding the io.scif: scifio dependency to my POM
>> 
>> The dependency part of my POM looks like this:
>> 
>>     <dependencies>
>>         <dependency>
>>             <groupId>net.imglib2</groupId>
>>             <artifactId>imglib2</artifactId>
>>             <version>2.2.1-SNAPSHOT</version>
>>             <type>jar</type>
>>         </dependency>
>>         <dependency>
>>             <groupId>io.scif</groupId>
>>             <artifactId>scifio</artifactId>
>>             <version>0.17.1</version>
>>             <type>jar</type>
>>         </dependency>
>>     </dependencies>
>> 
>> I am using NetBeans IDE, configured for use with maven project (I am slo using Java 8 and JavaFX)
>> 
>> However when I attempt to Build (or Build with Dependencies)  within NetBeans, I get the following error message:
>> ============================================================
>> 
>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home "/Applications/NetBeans/NetBeans 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>> Scanning for projects...
>>                                                                         
>> ------------------------------------------------------------------------
>> Building MavenImgLib2FX 1.0-SNAPSHOT
>> ------------------------------------------------------------------------
>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency information available
>> ------------------------------------------------------------------------
>> BUILD FAILURE
>> ------------------------------------------------------------------------
>> Total time: 0.341s
>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>> Final Memory: 7M/245M
>> ------------------------------------------------------------------------
>> Failed to execute goal on project MavenImgLib2FX: Could not resolve dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]
>> 
>> To see the full stack trace of the errors, re-run Maven with the -e switch.
>> Re-run Maven using the -X switch to enable full debug logging.
>> 
>> For more information about the errors and possible solutions, please read the following articles:
>> [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>> 
>> ============================================================
>> 
>> If I open a terminal window and cd into the project directory and:
>> 
>> 	mvn clean package
>> 
>> It succeeds.
>> 
>> However, when I then attempt to run the project with:
>> 
>> 	java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>> 
>> The application starts to execute but throws ?No compatible service: io.scif.SCIFIOService? exception.
>> ============================================================
>> 
>> img1=CellImg [20x30]
>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha = false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1 dataOff[0] = 0
>> Loading image...
>> Exception in Application start method
>> java.lang.reflect.InvocationTargetException
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>> 	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>> 	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>> 	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>> Caused by: java.lang.RuntimeException: Exception in Application start method
>> 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown Source)
>> 	at java.lang.Thread.run(Thread.java:745)
>> Caused by: java.lang.IllegalArgumentException: No compatible service: io.scif.SCIFIOService
>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>> 	at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>> 	at org.scijava.Context.<init>(Context.java:244)
>> 	at org.scijava.Context.<init>(Context.java:203)
>> 	at org.scijava.Context.<init>(Context.java:142)
>> 	at org.scijava.Context.<init>(Context.java:128)
>> 	at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>> 	at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown Source)
>> 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown Source)
>> 	at com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown Source)
>> 	at java.security.AccessController.doPrivileged(Native Method)
>> 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown Source)
>> 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>> ============================================================
>> 
>> If I remove the calls to the SCIO code and build and run from the command line, all works well.
>> 
>> The SCIO source code that I am using is lifted/amended from one of the tutorials and is as follows:
>> 
>> ============================================================
>>             imagePath = "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>             System.out.println("Loading image... '" + imagePath + "'");
>>             SCIFIO scifio = new SCIFIO();
>>             final Reader reader = scifio.initializer().initializeReader(imagePath);
>> ============================================================
>> 
>> This source code works file in the SCIFIO tutorial.
>> 
>> Any help gratefully appreciated!!!!!
>> 
>> ? Michael Ellis
>> 
>> 
>> 
>> 
>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>> 
>>> Hi Michael,
>>> 
>>> > How do I establish what Maven projects I need to include? 
>>> 
>>> One way to check is using the dependency-maven-plugin like so:
>>> 
>>>     mvn dependency:analyze
>>> 
>>> This will tell you:
>>> 
>>> A) Dependencies you declared but do not actually use; and
>>> B) Dependencies you did not declare directly, but actually need.
>>> 
>>> Note that this will only work if your project compiles successfully. In other words, it is easier to start with "too many" dependencies and pare down, rather than trying to "build up" from zero.
>>> 
>>> So in your case, you can start with the ImgLib2 Examples dependencies block, run dependency:analyze, and adjust the POM according to its recommendations.
>>> 
>>> > When I go to my NetBeans project dependence, select Add dependency,
>>> > then type SCIF to the query text box, I get a huge list of
>>> > possibilities.
>>> 
>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of io.scif, and an artifactId of scifio). Presumably at the latest version. You can search for that here:
>>> 
>>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>> 
>>> So your dependency block in this case would be:
>>> 
>>>     <dependency>
>>>       <groupId>io.scif</groupId>
>>>       <artifactId>scifio</artifactId>
>>>       <version>0.17.1</version>
>>>     </dependency>
>>> 
>>> Note that that block of XML is available for copy-pasting from the link above.
>>> 
>>> > I am completely new to maven
>>> 
>>> For more information, see:
>>>     http://imagej.net/Maven
>>> 
>>> Regards,
>>> Curtis
>>> 
>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>> I am investigating the using ImgLib2 for a project.
>>> 
>>> I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.
>>> 
>>> I now want to add the least possible requirements for the purpose of opening some image files.
>>> 
>>> How do I establish what Maven projects I need to include? 
>>> 
>>> I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.
>>> 
>>> When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.
>>> 
>>> I am completely new to maven and so do not know what I am doing with it!
>>> 
>>> ? Michael Ellis
>>> Digital Scientific UK Ltd.
>>> 
>>> 
>>> 
>>> 
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>> 
>>> 
>> 
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>> 
>> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/de1fe666/attachment-0001.html>

From michael.ellis at dsuk.biz  Fri Dec  5 12:10:26 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Fri, 5 Dec 2014 18:10:26 +0000
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
	project to open a TIFF file
In-Reply-To: <CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
Message-ID: <E28C0AF2-C9AC-4D35-8AB2-4F4086C83BB3@dsuk.biz>

Curtis, 

Apoligies,

I pasted a reply I was preparing into your last post, not having read it, thinking it was your precious reply)

I?ve got it working with your help!

Many many thanks!

- Michael Ellis

On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Michael,
> 
> > mvn claims to build everything OK
> 
> Yep, it did build successfully.
> 
> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
> > Error: A JNI error has occurred, please check your installation and try again
> > Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
> 
> Maven is primarily a build tool. It puts the correct JARs on your classpath at compile time. In your case, that is scifio-0.17.1.jar and its dependencies.
> 
> However, the way you are launching your program is not putting the required dependencies on the classpath. You put only my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing. So of course Java cannot find the needed classes.
> 
> The gist is: it is your responsibility to assemble the dependencies and ensure they are on the classpath somehow when you launch your application.
> 
> There are several ways to accomplish this. Here is one generally useful way using Maven, which does not assume you are doing anything ImageJ-related:
> 
>     $ mvn dependency:copy-dependencies
>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*' com.mycompany.app.App
> 
> The "copy-dependencies" goal copies all the JAR files needed by your program into the target/dependency folder, for easy subsequent consumption.
> 
> Alternately, the "ImageJ way" of dealing with deployment is to ship all needed dependencies in the "jars" folder of your ImageJ application. We created a Maven goal for this too, which you can use as follows:
> 
>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app -Ddelete.other.versions=true
> 
> Which will copy your JAR and its dependencies into your ImageJ installation at /Applications/ImageJ.app. But note that in order for this goal to work, you must extend the pom-imagej parent (see https://github.com/imagej/minimal-ij1-plugin for an example).
> 
> A third solution is to use the exec-maven-plugin to launch your application directly using Maven. E.g.: https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
> 
> Regards,
> Curtis
> 
> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> Curtis,
> 
> Thanks but it is still not working.
> 
> I have cut out using NetBeans and am now just using the CLI and a text editor. 
> 
> POM as follows:
> 
> ========================================================
> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
>   <modelVersion>4.0.0</modelVersion>
> 
>   <groupId>com.mycompany.app</groupId>
>   <artifactId>my-app</artifactId>
>   <version>1.0-SNAPSHOT</version>
>   <packaging>jar</packaging>
> 
>   <name>my-app</name>
>   <url>http://maven.apache.org</url>
> 
>   <properties>
>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>   </properties>
>   
> 	<repositories>
> 		<repository>
> 			<id>imagej.public</id>
> 			<url>http://maven.imagej.net/content/groups/public</url>
> 		</repository>
> 	</repositories>
> 
>   <dependencies>
>     <dependency>
>       <groupId>junit</groupId>
>       <artifactId>junit</artifactId>
>       <version>3.8.1</version>
>       <scope>test</scope>
>     </dependency>
>     
> 	<dependency>
> 	  <groupId>io.scif</groupId>
> 	  <artifactId>scifio</artifactId>
> 	  <version>0.17.1</version>
> 	</dependency>
>     
>   </dependencies>
> </project>
> ========================================================
> 
> File hierarchy:
> 
> .
> ./.DS_Store
> ./pom.xml
> ./src
> ./src/main
> ./src/main/java
> ./src/main/java/com
> ./src/main/java/com/mycompany
> ./src/main/java/com/mycompany/app
> ./src/main/java/com/mycompany/app/App.java
> ./src/test
> ./src/test/java
> ./src/test/java/com
> ./src/test/java/com/mycompany
> ./src/test/java/com/mycompany/app
> ./src/test/java/com/mycompany/app/AppTest.java
> ========================================================
> 
> App.java as follows:
> 
> package com.mycompany.app;
> 
> import io.scif.FormatException;
> import io.scif.ImageMetadata;
> import io.scif.Plane;
> import io.scif.Reader;
> import io.scif.SCIFIO;
> 
> public class App 
> {
>     public static void main( String[] args )
>     {
> 		try {
>     	    System.out.println( "Hello World!" );
> 			SCIFIO scifio = new SCIFIO();
> 			String sampleImage
> 					= "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
> 			final Reader reader = scifio.initializer().initializeReader(sampleImage);
> 			System.out.printf("reader=%s%n", reader );
>         } catch (Exception e) {
> 	        System.out.printf("Exception: %s%n", e.getMessage() );
>         }
>     }
> }
> 
> ========================================================
> 
> mvm -U install
> 
> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
> [INFO] Scanning for projects...
> [INFO]                                                                         
> [INFO] ------------------------------------------------------------------------
> [INFO] Building my-app 1.0-SNAPSHOT
> [INFO] ------------------------------------------------------------------------
> [INFO] 
> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ my-app ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/main/resources
> [INFO] 
> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/classes
> [INFO] 
> [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ my-app ---
> [INFO] Using 'UTF-8' encoding to copy filtered resources.
> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/test/resources
> [INFO] 
> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ my-app ---
> [INFO] Changes detected - recompiling the module!
> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/test-classes
> [INFO] 
> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
> [INFO] Surefire report directory: /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
> 
> -------------------------------------------------------
>  T E S T S
> -------------------------------------------------------
> Running com.mycompany.app.AppTest
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
> 
> Results :
> 
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
> 
> [INFO] 
> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
> [INFO] Building jar: /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
> [INFO] 
> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
> [INFO] ------------------------------------------------------------------------
> [INFO] BUILD SUCCESS
> [INFO] ------------------------------------------------------------------------
> [INFO] Total time: 1.962 s
> [INFO] Finished at: 2014-12-05T16:59:50+00:00
> [INFO] Final Memory: 18M/242M
> [INFO] ????????????????????????????????????
> 
> ========================================================
> 
> mvn claims to build everything OK there seems to be no inclusion of any scif libraries or class files.
> 
> 
> When I run it I get:
> 
> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
> Error: A JNI error has occurred, please check your installation and try again
> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
> 	at java.lang.Class.getDeclaredMethods0(Native Method)
> 	at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
> 	at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
> 	at java.lang.Class.getMethod0(Class.java:3016)
> 	at java.lang.Class.getMethod(Class.java:1782)
> 	at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
> 	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
> 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
> 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
> 	... 7 more
> 
> 
> ========================================================
> 
> I?ve been banging my head against this for two days now. 
> 
> So any help appreciated
> 
> 
> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
> 
>> Hi Michael,
>> 
>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>> > information available
>> 
>> Make sure you have the following <repositories> block in your POM:
>> 
>> 	<repositories>
>> 		<repository>
>> 			<id>imagej.public</id>
>> 			<url>http://maven.imagej.net/content/groups/public</url>
>> 		</repository>
>> 	</repositories>
>> 
>> Then rebuild with the "-U" flag. I don't know how to do this from NetBeans, but you only need to do it once from the CLI -- then you can return to NetBeans and it should work.
>> 
>> Regards,
>> Curtis
>> 
>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>> I have followed the advice offered by Curtis regarding adding the io.scif: scifio dependency to my POM
>> 
>> The dependency part of my POM looks like this:
>> 
>>     <dependencies>
>>         <dependency>
>>             <groupId>net.imglib2</groupId>
>>             <artifactId>imglib2</artifactId>
>>             <version>2.2.1-SNAPSHOT</version>
>>             <type>jar</type>
>>         </dependency>
>>         <dependency>
>>             <groupId>io.scif</groupId>
>>             <artifactId>scifio</artifactId>
>>             <version>0.17.1</version>
>>             <type>jar</type>
>>         </dependency>
>>     </dependencies>
>> 
>> I am using NetBeans IDE, configured for use with maven project (I am slo using Java 8 and JavaFX)
>> 
>> However when I attempt to Build (or Build with Dependencies)  within NetBeans, I get the following error message:
>> ============================================================
>> 
>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home "/Applications/NetBeans/NetBeans 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>> Scanning for projects...
>>                                                                         
>> ------------------------------------------------------------------------
>> Building MavenImgLib2FX 1.0-SNAPSHOT
>> ------------------------------------------------------------------------
>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency information available
>> ------------------------------------------------------------------------
>> BUILD FAILURE
>> ------------------------------------------------------------------------
>> Total time: 0.341s
>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>> Final Memory: 7M/245M
>> ------------------------------------------------------------------------
>> Failed to execute goal on project MavenImgLib2FX: Could not resolve dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]
>> 
>> To see the full stack trace of the errors, re-run Maven with the -e switch.
>> Re-run Maven using the -X switch to enable full debug logging.
>> 
>> For more information about the errors and possible solutions, please read the following articles:
>> [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>> 
>> ============================================================
>> 
>> If I open a terminal window and cd into the project directory and:
>> 
>> 	mvn clean package
>> 
>> It succeeds.
>> 
>> However, when I then attempt to run the project with:
>> 
>> 	java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>> 
>> The application starts to execute but throws ?No compatible service: io.scif.SCIFIOService? exception.
>> ============================================================
>> 
>> img1=CellImg [20x30]
>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha = false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1 dataOff[0] = 0
>> Loading image...
>> Exception in Application start method
>> java.lang.reflect.InvocationTargetException
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>> 	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>> 	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>> 	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>> Caused by: java.lang.RuntimeException: Exception in Application start method
>> 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown Source)
>> 	at java.lang.Thread.run(Thread.java:745)
>> Caused by: java.lang.IllegalArgumentException: No compatible service: io.scif.SCIFIOService
>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>> 	at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>> 	at org.scijava.Context.<init>(Context.java:244)
>> 	at org.scijava.Context.<init>(Context.java:203)
>> 	at org.scijava.Context.<init>(Context.java:142)
>> 	at org.scijava.Context.<init>(Context.java:128)
>> 	at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>> 	at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown Source)
>> 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown Source)
>> 	at com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown Source)
>> 	at java.security.AccessController.doPrivileged(Native Method)
>> 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown Source)
>> 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>> ============================================================
>> 
>> If I remove the calls to the SCIO code and build and run from the command line, all works well.
>> 
>> The SCIO source code that I am using is lifted/amended from one of the tutorials and is as follows:
>> 
>> ============================================================
>>             imagePath = "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>             System.out.println("Loading image... '" + imagePath + "'");
>>             SCIFIO scifio = new SCIFIO();
>>             final Reader reader = scifio.initializer().initializeReader(imagePath);
>> ============================================================
>> 
>> This source code works file in the SCIFIO tutorial.
>> 
>> Any help gratefully appreciated!!!!!
>> 
>> ? Michael Ellis
>> 
>> 
>> 
>> 
>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>> 
>>> Hi Michael,
>>> 
>>> > How do I establish what Maven projects I need to include? 
>>> 
>>> One way to check is using the dependency-maven-plugin like so:
>>> 
>>>     mvn dependency:analyze
>>> 
>>> This will tell you:
>>> 
>>> A) Dependencies you declared but do not actually use; and
>>> B) Dependencies you did not declare directly, but actually need.
>>> 
>>> Note that this will only work if your project compiles successfully. In other words, it is easier to start with "too many" dependencies and pare down, rather than trying to "build up" from zero.
>>> 
>>> So in your case, you can start with the ImgLib2 Examples dependencies block, run dependency:analyze, and adjust the POM according to its recommendations.
>>> 
>>> > When I go to my NetBeans project dependence, select Add dependency,
>>> > then type SCIF to the query text box, I get a huge list of
>>> > possibilities.
>>> 
>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of io.scif, and an artifactId of scifio). Presumably at the latest version. You can search for that here:
>>> 
>>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>> 
>>> So your dependency block in this case would be:
>>> 
>>>     <dependency>
>>>       <groupId>io.scif</groupId>
>>>       <artifactId>scifio</artifactId>
>>>       <version>0.17.1</version>
>>>     </dependency>
>>> 
>>> Note that that block of XML is available for copy-pasting from the link above.
>>> 
>>> > I am completely new to maven
>>> 
>>> For more information, see:
>>>     http://imagej.net/Maven
>>> 
>>> Regards,
>>> Curtis
>>> 
>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>> I am investigating the using ImgLib2 for a project.
>>> 
>>> I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.
>>> 
>>> I now want to add the least possible requirements for the purpose of opening some image files.
>>> 
>>> How do I establish what Maven projects I need to include? 
>>> 
>>> I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.
>>> 
>>> When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.
>>> 
>>> I am completely new to maven and so do not know what I am doing with it!
>>> 
>>> ? Michael Ellis
>>> Digital Scientific UK Ltd.
>>> 
>>> 
>>> 
>>> 
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>> 
>>> 
>> 
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>> 
>> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/b3c407e9/attachment-0001.html>

From ctrueden at wisc.edu  Fri Dec  5 12:13:53 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 5 Dec 2014 12:13:53 -0600
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
 project to open a TIFF file
In-Reply-To: <86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
Message-ID: <CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>

Hi Michael,

> gives me a self contained runnable jar. Progress! I?m learning.
>
> BUT as before when I run the jar, I get the Exception: No compatible
> service: org.scijava.service.SciJavaService

Self contained runnable JARs (i.e., uber-jars) are convenient in some ways,
but come with a host of problems.

1) If you do not shade your dependencies (i.e., rename their packages),
then you may ship duplicate and/or incompatible classes with other
libraries. This makes your library much harder to reuse in a shared system
such as an ImageJ installation.

2) You cannot ship piecemeal updates to individual dependencies -- i.e.,
every time your code changes, you must ship a new (possibly very large) new
JAR file to your users.

3) The SciJava annotation processor, responsible for indexing the @Plugin
annotations that drive SciJava/ImageJ2/etc. plugins, writes the metadata
into a resource file at META-INF/json/org.scijava.plugin.Plugin within the
JAR. If you try to create an uber-jar via the assembly or shade plugin, the
default combination algorithm will overwrite those files, stomping the
annotations.

We wrote some code which offers one way around this:

https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631

For more on uber-jars, see also:

http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F

The gist is: avoid using an uber-jar unless you really need it.

> I?ve got it working with your help!

Awesome, congratulations. Let us know if you encounter any more roadblocks.

Regards,
Curtis

On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:

> Adding a build section to the POM:
>
>   <build>
>     <plugins>
>       <plugin>
>         <groupId>org.apache.maven.plugins</groupId>
>         <artifactId>maven-shade-plugin</artifactId>
>         <version>2.3</version>
>         <executions>
>           <execution>
>             <phase>package</phase>
>             <goals>
>               <goal>shade</goal>
>             </goals>
>             <configuration>
>               <transformers>
>                 <transformer
> implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>                   <manifestEntries>
>                     <Main-Class>com.mycompany.app.App</Main-Class>
>                     <Build-Number>123</Build-Number>
>                   </manifestEntries>
>                 </transformer>
>               </transformers>
>             </configuration>
>           </execution>
>         </executions>
>       </plugin>
>     </plugins>
>   </build>
>
> To the POM gives me a self contained runnable jar. Progress! I?m learning.
>
> BUT as before when I run the jar, I get the Exception: No compatible
> service: org.scijava.service.SciJavaService
> =================================================================
>
> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar
> target/my-app-1.0-SNAPSHOT.jar
> Hello World!
> Exception: No compatible service: org.scijava.service.SciJavaService
> =================================================================
>
> Still vexed!
>
>
> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi Michael,
>
> > mvn claims to build everything OK
>
> Yep, it did build successfully.
>
> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
> > Error: A JNI error has occurred, please check your installation and try
> again
> > Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>
> Maven is primarily a build tool. It puts the correct JARs on your
> classpath at compile time. In your case, that is scifio-0.17.1.jar and its
> dependencies.
>
> However, the way you are launching your program is not putting the
> required dependencies on the classpath. You put only
> my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing.
> So of course Java cannot find the needed classes.
>
> The gist is: it is your responsibility to assemble the dependencies and
> ensure they are on the classpath somehow when you launch your application.
>
> There are several ways to accomplish this. Here is one generally useful
> way using Maven, which does not assume you are doing anything
> ImageJ-related:
>
>     $ mvn dependency:copy-dependencies
>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*'
> com.mycompany.app.App
>
> The "copy-dependencies" goal copies all the JAR files needed by your
> program into the target/dependency folder, for easy subsequent consumption.
>
> Alternately, the "ImageJ way" of dealing with deployment is to ship all
> needed dependencies in the "jars" folder of your ImageJ application. We
> created a Maven goal for this too, which you can use as follows:
>
>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app
> -Ddelete.other.versions=true
>
> Which will copy your JAR and its dependencies into your ImageJ
> installation at /Applications/ImageJ.app. But note that in order for this
> goal to work, you must extend the pom-imagej parent (see
> https://github.com/imagej/minimal-ij1-plugin for an example).
>
> A third solution is to use the exec-maven-plugin to launch your
> application directly using Maven. E.g.:
> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>
> Regards,
> Curtis
>
> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>
>> Curtis,
>>
>> Thanks but it is still not working.
>>
>> I have cut out using NetBeans and am now just using the CLI and a text
>> editor.
>>
>> POM as follows:
>>
>> ========================================================
>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="
>> http://www.w3.org/2001/XMLSchema-instance"
>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
>> http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>   <modelVersion>4.0.0</modelVersion>
>>
>>   <groupId>com.mycompany.app</groupId>
>>   <artifactId>my-app</artifactId>
>>   <version>1.0-SNAPSHOT</version>
>>   <packaging>jar</packaging>
>>
>>   <name>my-app</name>
>>   <url>http://maven.apache.org</url>
>>
>>   <properties>
>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>   </properties>
>>
>> <repositories>
>> <repository>
>> <id>imagej.public</id>
>> <url>http://maven.imagej.net/content/groups/public</url>
>> </repository>
>> </repositories>
>>
>>   <dependencies>
>>     <dependency>
>>       <groupId>junit</groupId>
>>       <artifactId>junit</artifactId>
>>       <version>3.8.1</version>
>>       <scope>test</scope>
>>     </dependency>
>>
>> <dependency>
>>   <groupId>io.scif</groupId>
>>   <artifactId>scifio</artifactId>
>>   <version>0.17.1</version>
>> </dependency>
>>
>>   </dependencies>
>> </project>
>> ========================================================
>>
>> File hierarchy:
>>
>> .
>> ./.DS_Store
>> ./pom.xml
>> ./src
>> ./src/main
>> ./src/main/java
>> ./src/main/java/com
>> ./src/main/java/com/mycompany
>> ./src/main/java/com/mycompany/app
>> ./src/main/java/com/mycompany/app/App.java
>> ./src/test
>> ./src/test/java
>> ./src/test/java/com
>> ./src/test/java/com/mycompany
>> ./src/test/java/com/mycompany/app
>> ./src/test/java/com/mycompany/app/AppTest.java
>> ========================================================
>>
>> App.java as follows:
>>
>> package com.mycompany.app;
>>
>> import io.scif.FormatException;
>> import io.scif.ImageMetadata;
>> import io.scif.Plane;
>> import io.scif.Reader;
>> import io.scif.SCIFIO;
>>
>> public class App
>> {
>>     public static void main( String[] args )
>>     {
>> try {
>>         System.out.println( "Hello World!" );
>> SCIFIO scifio = new SCIFIO();
>> String sampleImage
>> =
>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>> final Reader reader = scifio.initializer().initializeReader(sampleImage);
>> System.out.printf("reader=%s%n", reader );
>>         } catch (Exception e) {
>>         System.out.printf("Exception: %s%n", e.getMessage() );
>>         }
>>     }
>> }
>>
>> ========================================================
>>
>> mvm -U install
>>
>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>> [INFO] Scanning for projects...
>> [INFO]
>>
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO] Building my-app 1.0-SNAPSHOT
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO]
>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
>> my-app ---
>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>> [INFO] skip non existing resourceDirectory
>> /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>> [INFO]
>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app
>> ---
>> [INFO] Changes detected - recompiling the module!
>> [INFO] Compiling 1 source file to
>> /Users/michaelellis/temp/deleteme/my-app/target/classes
>> [INFO]
>> [INFO] --- maven-resources-plugin:2.6:testResources
>> (default-testResources) @ my-app ---
>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>> [INFO] skip non existing resourceDirectory
>> /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>> [INFO]
>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @
>> my-app ---
>> [INFO] Changes detected - recompiling the module!
>> [INFO] Compiling 1 source file to
>> /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>> [INFO]
>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
>> [INFO] Surefire report directory:
>> /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>
>> -------------------------------------------------------
>>  T E S T S
>> -------------------------------------------------------
>> Running com.mycompany.app.AppTest
>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
>>
>> Results :
>>
>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>
>> [INFO]
>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>> [INFO] Building jar:
>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>> [INFO]
>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
>> [INFO] Installing
>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to
>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to
>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO] BUILD SUCCESS
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO] Total time: 1.962 s
>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>> [INFO] Final Memory: 18M/242M
>> [INFO] ????????????????????????????????????
>>
>> ========================================================
>>
>> mvn claims to build everything OK there seems to be no inclusion of any
>> scif libraries or class files.
>>
>>
>> When I run it I get:
>>
>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp
>> target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>> Error: A JNI error has occurred, please check your installation and try
>> again
>> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>> at java.lang.Class.getDeclaredMethods0(Native Method)
>> at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>> at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>> at java.lang.Class.getMethod0(Class.java:3016)
>> at java.lang.Class.getMethod(Class.java:1782)
>> at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>> at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>> at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>> at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>> at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>> at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>> ... 7 more
>>
>>
>> ========================================================
>>
>> I?ve been banging my head against this for two days now.
>>
>> So any help appreciated
>>
>>
>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>
>> Hi Michael,
>>
>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>> > information available
>>
>> Make sure you have the following <repositories> block in your POM:
>>
>> <repositories>
>> <repository>
>> <id>imagej.public</id>
>> <url>http://maven.imagej.net/content/groups/public</url>
>> </repository>
>> </repositories>
>>
>> Then rebuild with the "-U" flag. I don't know how to do this from
>> NetBeans, but you only need to do it once from the CLI -- then you can
>> return to NetBeans and it should work.
>>
>> Regards,
>> Curtis
>>
>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz>
>> wrote:
>>
>>> I have followed the advice offered by Curtis regarding adding
>>> the io.scif: scifio dependency to my POM
>>>
>>> The dependency part of my POM looks like this:
>>>
>>>     <dependencies>
>>>         <dependency>
>>>             <groupId>net.imglib2</groupId>
>>>             <artifactId>imglib2</artifactId>
>>>             <version>2.2.1-SNAPSHOT</version>
>>>             <type>jar</type>
>>>         </dependency>
>>>         <dependency>
>>>             <groupId>io.scif</groupId>
>>>             <artifactId>scifio</artifactId>
>>>             <version>0.17.1</version>
>>>             <type>jar</type>
>>>         </dependency>
>>>     </dependencies>
>>>
>>> I am using NetBeans IDE, configured for use with maven project (I am slo
>>> using Java 8 and JavaFX)
>>>
>>> However when I attempt to Build (or Build with Dependencies)  within
>>> NetBeans, I get the following error message:
>>> ============================================================
>>>
>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX;
>>> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
>>> "/Applications/NetBeans/NetBeans
>>> 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>> Scanning for projects...
>>>
>>> ------------------------------------------------------------------------
>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>> ------------------------------------------------------------------------
>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>> information available
>>> ------------------------------------------------------------------------
>>> BUILD FAILURE
>>> ------------------------------------------------------------------------
>>> Total time: 0.341s
>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>> Final Memory: 7M/245M
>>> ------------------------------------------------------------------------
>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve
>>> dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure
>>> to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2
>>> was cached in the local repository, resolution will not be reattempted
>>> until the update interval of central has elapsed or updates are forced ->
>>> [Help 1]
>>>
>>> To see the full stack trace of the errors, re-run Maven with the -e
>>> switch.
>>> Re-run Maven using the -X switch to enable full debug logging.
>>>
>>> For more information about the errors and possible solutions, please
>>> read the following articles:
>>> [Help 1]
>>> http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>
>>> ============================================================
>>>
>>> If I open a terminal window and cd into the project directory and:
>>>
>>> mvn clean package
>>>
>>> It succeeds.
>>>
>>> However, when I then attempt to run the project with:
>>>
>>> java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>>>
>>> The application starts to execute but throws ?No compatible service:
>>> io.scif.SCIFIOService? exception.
>>> ============================================================
>>>
>>> img1=CellImg [20x30]
>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits
>>> = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f
>>> transparency = 1 has alpha = false isAlphaPre = false
>>> ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1
>>> dataOff[0] = 0
>>> Loading image...
>>> Exception in Application start method
>>> java.lang.reflect.InvocationTargetException
>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>> at
>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>> at
>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>> at
>>> com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>> at
>>> com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>> at
>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>> at
>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>> at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>> Caused by: java.lang.RuntimeException: Exception in Application start
>>> method
>>> at
>>> com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>> at
>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>> at
>>> com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown
>>> Source)
>>> at java.lang.Thread.run(Thread.java:745)
>>> Caused by: java.lang.IllegalArgumentException: No compatible service:
>>> io.scif.SCIFIOService
>>> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>> at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>> at org.scijava.Context.<init>(Context.java:244)
>>> at org.scijava.Context.<init>(Context.java:203)
>>> at org.scijava.Context.<init>(Context.java:142)
>>> at org.scijava.Context.<init>(Context.java:128)
>>> at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>> at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>> at
>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>> at
>>> com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown
>>> Source)
>>> at
>>> com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>> at
>>> com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown
>>> Source)
>>> at
>>> com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>> at
>>> com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown
>>> Source)
>>> at java.security.AccessController.doPrivileged(Native Method)
>>> at
>>> com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>> at
>>> com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown
>>> Source)
>>> at
>>> com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>> ============================================================
>>>
>>> If I remove the calls to the SCIO code and build and run from the
>>> command line, all works well.
>>>
>>> The SCIO source code that I am using is lifted/amended from one of the
>>> tutorials and is as follows:
>>>
>>> ============================================================
>>>             imagePath =
>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>             System.out.println("Loading image... '" + imagePath + "'");
>>>             SCIFIO scifio = new SCIFIO();
>>>             final Reader reader =
>>> scifio.initializer().initializeReader(imagePath);
>>> ============================================================
>>>
>>> This source code works file in the SCIFIO tutorial.
>>>
>>> Any help gratefully appreciated!!!!!
>>>
>>> ? Michael Ellis
>>>
>>>
>>>
>>>
>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>
>>> Hi Michael,
>>>
>>> > How do I establish what Maven projects I need to include?
>>>
>>> One way to check is using the dependency-maven-plugin like so:
>>>
>>>     mvn dependency:analyze
>>>
>>> This will tell you:
>>>
>>> A) Dependencies you declared but do not actually use; and
>>> B) Dependencies you did not declare directly, but actually need.
>>>
>>> Note that this will only work if your project compiles successfully. In
>>> other words, it is easier to start with "too many" dependencies and pare
>>> down, rather than trying to "build up" from zero.
>>>
>>> So in your case, you can start with the ImgLib2 Examples dependencies
>>> block, run dependency:analyze, and adjust the POM according to its
>>> recommendations.
>>>
>>> > When I go to my NetBeans project dependence, select Add dependency,
>>> > then type SCIF to the query text box, I get a huge list of
>>> > possibilities.
>>>
>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of
>>> io.scif, and an artifactId of scifio). Presumably at the latest version.
>>> You can search for that here:
>>>
>>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>
>>> So your dependency block in this case would be:
>>>
>>>     <dependency>
>>>       <groupId>io.scif</groupId>
>>>       <artifactId>scifio</artifactId>
>>>       <version>0.17.1</version>
>>>     </dependency>
>>>
>>> Note that that block of XML is available for copy-pasting from the link
>>> above.
>>>
>>> > I am completely new to maven
>>>
>>> For more information, see:
>>>     http://imagej.net/Maven
>>>
>>> Regards,
>>> Curtis
>>>
>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz>
>>> wrote:
>>>
>>>> I am investigating the using ImgLib2 for a project.
>>>>
>>>> I am using NetBeans and have managed to create a NetBeans Mavern
>>>> project and have  added a dependency for ImgLib2 Core Library and that
>>>> seems to be working OK.
>>>>
>>>> I now want to add the least possible requirements for the purpose of
>>>> opening some image files.
>>>>
>>>> How do I establish what Maven projects I need to include?
>>>>
>>>> I have cloned  the ImgLib2 Examples project and got that working but
>>>> that seems to include all manner of things that I suspect I do not need.
>>>>
>>>> When I go to my NetBeans project dependence, select Add dependency,
>>>> then type SCIF to the query text box, I get a huge list of possibilities.
>>>>
>>>> I am completely new to maven and so do not know what I am doing with it!
>>>>
>>>> ? Michael Ellis
>>>> Digital Scientific UK Ltd.
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/a79d4c0c/attachment-0001.html>

From ctrueden at wisc.edu  Fri Dec  5 12:31:10 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 5 Dec 2014 12:31:10 -0600
Subject: [ImageJ-devel] What do I need to add to my NetBeans ImgLib2
 project to open a TIFF file
In-Reply-To: <D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
	<CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>
	<D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
Message-ID: <CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>

Hi Michael,

> It looks like there is a new FFT but the tutorials use the older
> version.
>
> What should I go with?

The library for doing FFT is imglib2-algorithm-fft:
    https://github.com/imglib/imglib2-algorithm-fft

Regarding the "new FFT", perhaps you refer to this?
    https://github.com/imglib/imglib2-algorithm-fft/pull/1

At the moment there are licensing issues with imglib2-algorithm-fft (it
depends on the Mines JTK library which has a license incompatible with
GPL). That PR addresses the issues by using the JTransforms library instead.

You also might want to consider using the higher level ImageJ OPS library:
    https://github.com/imagej/imagej-ops

Thanks to the efforts of Brian Northan, we are about to merge an OP wrapper
for FFT:
    https://github.com/imagej/imagej-ops/pull/76

Note that these components are still in the 0.x incubation phase, meaning
they do not have stable APIs. That said, we would really appreciate early
adopters who can try out the code and help drive things in the right
direction.

We will be reviewing and merging these improvements over the next few days,
then cutting new releases of imglib2-algorithm-fft and imagej-ops. At that
point, it should be easier for you to try them out.

The relevant tutorials are based on imglib2-algorithm-fft:

https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6b.java

https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6c.java

And IIUC the changes above are internal so the tutorial code should not
requiring updating (beyond an update to the version of
imglib2-algorithm-fft in the POM, of course).

Regards,
Curtis

On Fri, Dec 5, 2014 at 12:21 PM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:

> Once again, Curtis
>
> I really appreciate your help with this.
>
> Next questions on the horizon will involve the ImgLib2 algorithm FFT
> classes. It looks like there is a new FFT but the tutorials use the older
> version.
>
> What should I go with?
>
> My aim is build an application, which as part of it will be doing image
> alignment using FFT phase correlation.
>
> Regards ? Michael Ellis
>
>
> On 5 Dec 2014, at 18:13, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi Michael,
>
> > gives me a self contained runnable jar. Progress! I?m learning.
> >
> > BUT as before when I run the jar, I get the Exception: No compatible
> > service: org.scijava.service.SciJavaService
>
> Self contained runnable JARs (i.e., uber-jars) are convenient in some
> ways, but come with a host of problems.
>
> 1) If you do not shade your dependencies (i.e., rename their packages),
> then you may ship duplicate and/or incompatible classes with other
> libraries. This makes your library much harder to reuse in a shared system
> such as an ImageJ installation.
>
> 2) You cannot ship piecemeal updates to individual dependencies -- i.e.,
> every time your code changes, you must ship a new (possibly very large) new
> JAR file to your users.
>
> 3) The SciJava annotation processor, responsible for indexing the @Plugin
> annotations that drive SciJava/ImageJ2/etc. plugins, writes the metadata
> into a resource file at META-INF/json/org.scijava.plugin.Plugin within the
> JAR. If you try to create an uber-jar via the assembly or shade plugin, the
> default combination algorithm will overwrite those files, stomping the
> annotations.
>
> We wrote some code which offers one way around this:
>
> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631
>
> For more on uber-jars, see also:
>
> http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F
>
> The gist is: avoid using an uber-jar unless you really need it.
>
> > I?ve got it working with your help!
>
> Awesome, congratulations. Let us know if you encounter any more roadblocks.
>
> Regards,
> Curtis
>
> On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>
>> Adding a build section to the POM:
>>
>>   <build>
>>     <plugins>
>>       <plugin>
>>         <groupId>org.apache.maven.plugins</groupId>
>>         <artifactId>maven-shade-plugin</artifactId>
>>         <version>2.3</version>
>>         <executions>
>>           <execution>
>>             <phase>package</phase>
>>             <goals>
>>               <goal>shade</goal>
>>             </goals>
>>             <configuration>
>>               <transformers>
>>                 <transformer
>> implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>>                   <manifestEntries>
>>                     <Main-Class>com.mycompany.app.App</Main-Class>
>>                     <Build-Number>123</Build-Number>
>>                   </manifestEntries>
>>                 </transformer>
>>               </transformers>
>>             </configuration>
>>           </execution>
>>         </executions>
>>       </plugin>
>>     </plugins>
>>   </build>
>>
>> To the POM gives me a self contained runnable jar. Progress! I?m learning.
>>
>> BUT as before when I run the jar, I get the Exception: No compatible
>> service: org.scijava.service.SciJavaService
>> =================================================================
>>
>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar
>> target/my-app-1.0-SNAPSHOT.jar
>> Hello World!
>> Exception: No compatible service: org.scijava.service.SciJavaService
>> =================================================================
>>
>> Still vexed!
>>
>>
>> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>
>> Hi Michael,
>>
>> > mvn claims to build everything OK
>>
>> Yep, it did build successfully.
>>
>> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>> > Error: A JNI error has occurred, please check your installation and try
>> again
>> > Exception in thread "main" java.lang.NoClassDefFoundError:
>> io/scif/SCIFIO
>>
>> Maven is primarily a build tool. It puts the correct JARs on your
>> classpath at compile time. In your case, that is scifio-0.17.1.jar and its
>> dependencies.
>>
>> However, the way you are launching your program is not putting the
>> required dependencies on the classpath. You put only
>> my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing.
>> So of course Java cannot find the needed classes.
>>
>> The gist is: it is your responsibility to assemble the dependencies and
>> ensure they are on the classpath somehow when you launch your application.
>>
>> There are several ways to accomplish this. Here is one generally useful
>> way using Maven, which does not assume you are doing anything
>> ImageJ-related:
>>
>>     $ mvn dependency:copy-dependencies
>>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*'
>> com.mycompany.app.App
>>
>> The "copy-dependencies" goal copies all the JAR files needed by your
>> program into the target/dependency folder, for easy subsequent consumption.
>>
>> Alternately, the "ImageJ way" of dealing with deployment is to ship all
>> needed dependencies in the "jars" folder of your ImageJ application. We
>> created a Maven goal for this too, which you can use as follows:
>>
>>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app
>> -Ddelete.other.versions=true
>>
>> Which will copy your JAR and its dependencies into your ImageJ
>> installation at /Applications/ImageJ.app. But note that in order for this
>> goal to work, you must extend the pom-imagej parent (see
>> https://github.com/imagej/minimal-ij1-plugin for an example).
>>
>> A third solution is to use the exec-maven-plugin to launch your
>> application directly using Maven. E.g.:
>> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>>
>> Regards,
>> Curtis
>>
>> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz>
>> wrote:
>>
>>> Curtis,
>>>
>>> Thanks but it is still not working.
>>>
>>> I have cut out using NetBeans and am now just using the CLI and a text
>>> editor.
>>>
>>> POM as follows:
>>>
>>> ========================================================
>>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="
>>> http://www.w3.org/2001/XMLSchema-instance"
>>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
>>> http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>>   <modelVersion>4.0.0</modelVersion>
>>>
>>>   <groupId>com.mycompany.app</groupId>
>>>   <artifactId>my-app</artifactId>
>>>   <version>1.0-SNAPSHOT</version>
>>>   <packaging>jar</packaging>
>>>
>>>   <name>my-app</name>
>>>   <url>http://maven.apache.org</url>
>>>
>>>   <properties>
>>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>>   </properties>
>>>
>>> <repositories>
>>> <repository>
>>> <id>imagej.public</id>
>>> <url>http://maven.imagej.net/content/groups/public</url>
>>> </repository>
>>> </repositories>
>>>
>>>   <dependencies>
>>>     <dependency>
>>>       <groupId>junit</groupId>
>>>       <artifactId>junit</artifactId>
>>>       <version>3.8.1</version>
>>>       <scope>test</scope>
>>>     </dependency>
>>>
>>> <dependency>
>>>   <groupId>io.scif</groupId>
>>>   <artifactId>scifio</artifactId>
>>>   <version>0.17.1</version>
>>> </dependency>
>>>
>>>   </dependencies>
>>> </project>
>>> ========================================================
>>>
>>> File hierarchy:
>>>
>>> .
>>> ./.DS_Store
>>> ./pom.xml
>>> ./src
>>> ./src/main
>>> ./src/main/java
>>> ./src/main/java/com
>>> ./src/main/java/com/mycompany
>>> ./src/main/java/com/mycompany/app
>>> ./src/main/java/com/mycompany/app/App.java
>>> ./src/test
>>> ./src/test/java
>>> ./src/test/java/com
>>> ./src/test/java/com/mycompany
>>> ./src/test/java/com/mycompany/app
>>> ./src/test/java/com/mycompany/app/AppTest.java
>>> ========================================================
>>>
>>> App.java as follows:
>>>
>>> package com.mycompany.app;
>>>
>>> import io.scif.FormatException;
>>> import io.scif.ImageMetadata;
>>> import io.scif.Plane;
>>> import io.scif.Reader;
>>> import io.scif.SCIFIO;
>>>
>>> public class App
>>> {
>>>     public static void main( String[] args )
>>>     {
>>> try {
>>>         System.out.println( "Hello World!" );
>>> SCIFIO scifio = new SCIFIO();
>>> String sampleImage
>>> =
>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>> final Reader reader = scifio.initializer().initializeReader(sampleImage);
>>> System.out.printf("reader=%s%n", reader );
>>>         } catch (Exception e) {
>>>         System.out.printf("Exception: %s%n", e.getMessage() );
>>>         }
>>>     }
>>> }
>>>
>>> ========================================================
>>>
>>> mvm -U install
>>>
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>>> [INFO] Scanning for projects...
>>> [INFO]
>>>
>>> [INFO]
>>> ------------------------------------------------------------------------
>>> [INFO] Building my-app 1.0-SNAPSHOT
>>> [INFO]
>>> ------------------------------------------------------------------------
>>> [INFO]
>>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
>>> my-app ---
>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>> [INFO] skip non existing resourceDirectory
>>> /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>>> [INFO]
>>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app
>>> ---
>>> [INFO] Changes detected - recompiling the module!
>>> [INFO] Compiling 1 source file to
>>> /Users/michaelellis/temp/deleteme/my-app/target/classes
>>> [INFO]
>>> [INFO] --- maven-resources-plugin:2.6:testResources
>>> (default-testResources) @ my-app ---
>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>> [INFO] skip non existing resourceDirectory
>>> /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>>> [INFO]
>>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @
>>> my-app ---
>>> [INFO] Changes detected - recompiling the module!
>>> [INFO] Compiling 1 source file to
>>> /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>>> [INFO]
>>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
>>> [INFO] Surefire report directory:
>>> /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>>
>>> -------------------------------------------------------
>>>  T E S T S
>>> -------------------------------------------------------
>>> Running com.mycompany.app.AppTest
>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
>>>
>>> Results :
>>>
>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>>
>>> [INFO]
>>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>>> [INFO] Building jar:
>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>>> [INFO]
>>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app
>>> ---
>>> [INFO] Installing
>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to
>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to
>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>>> [INFO]
>>> ------------------------------------------------------------------------
>>> [INFO] BUILD SUCCESS
>>> [INFO]
>>> ------------------------------------------------------------------------
>>> [INFO] Total time: 1.962 s
>>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>>> [INFO] Final Memory: 18M/242M
>>> [INFO] ????????????????????????????????????
>>>
>>> ========================================================
>>>
>>> mvn claims to build everything OK there seems to be no inclusion of any
>>> scif libraries or class files.
>>>
>>>
>>> When I run it I get:
>>>
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp
>>> target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>> Error: A JNI error has occurred, please check your installation and try
>>> again
>>> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>>> at java.lang.Class.getDeclaredMethods0(Native Method)
>>> at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>>> at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>>> at java.lang.Class.getMethod0(Class.java:3016)
>>> at java.lang.Class.getMethod(Class.java:1782)
>>> at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>>> at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>>> at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>>> at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>>> ... 7 more
>>>
>>>
>>> ========================================================
>>>
>>> I?ve been banging my head against this for two days now.
>>>
>>> So any help appreciated
>>>
>>>
>>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>
>>> Hi Michael,
>>>
>>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>> > information available
>>>
>>> Make sure you have the following <repositories> block in your POM:
>>>
>>> <repositories>
>>> <repository>
>>> <id>imagej.public</id>
>>> <url>http://maven.imagej.net/content/groups/public</url>
>>> </repository>
>>> </repositories>
>>>
>>> Then rebuild with the "-U" flag. I don't know how to do this from
>>> NetBeans, but you only need to do it once from the CLI -- then you can
>>> return to NetBeans and it should work.
>>>
>>> Regards,
>>> Curtis
>>>
>>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz>
>>> wrote:
>>>
>>>> I have followed the advice offered by Curtis regarding adding
>>>> the io.scif: scifio dependency to my POM
>>>>
>>>> The dependency part of my POM looks like this:
>>>>
>>>>     <dependencies>
>>>>         <dependency>
>>>>             <groupId>net.imglib2</groupId>
>>>>             <artifactId>imglib2</artifactId>
>>>>             <version>2.2.1-SNAPSHOT</version>
>>>>             <type>jar</type>
>>>>         </dependency>
>>>>         <dependency>
>>>>             <groupId>io.scif</groupId>
>>>>             <artifactId>scifio</artifactId>
>>>>             <version>0.17.1</version>
>>>>             <type>jar</type>
>>>>         </dependency>
>>>>     </dependencies>
>>>>
>>>> I am using NetBeans IDE, configured for use with maven project (I am
>>>> slo using Java 8 and JavaFX)
>>>>
>>>> However when I attempt to Build (or Build with Dependencies)  within
>>>> NetBeans, I get the following error message:
>>>> ============================================================
>>>>
>>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX;
>>>> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
>>>> "/Applications/NetBeans/NetBeans
>>>> 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>>> Scanning for projects...
>>>>
>>>> ------------------------------------------------------------------------
>>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>>> ------------------------------------------------------------------------
>>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>> information available
>>>> ------------------------------------------------------------------------
>>>> BUILD FAILURE
>>>> ------------------------------------------------------------------------
>>>> Total time: 0.341s
>>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>>> Final Memory: 7M/245M
>>>> ------------------------------------------------------------------------
>>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve
>>>> dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure
>>>> to find io.scif:scifio:jar:0.17.1 in
>>>> http://repo.maven.apache.org/maven2 was cached in the local
>>>> repository, resolution will not be reattempted until the update interval of
>>>> central has elapsed or updates are forced -> [Help 1]
>>>>
>>>> To see the full stack trace of the errors, re-run Maven with the -e
>>>> switch.
>>>> Re-run Maven using the -X switch to enable full debug logging.
>>>>
>>>> For more information about the errors and possible solutions, please
>>>> read the following articles:
>>>> [Help 1]
>>>> http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>>
>>>> ============================================================
>>>>
>>>> If I open a terminal window and cd into the project directory and:
>>>>
>>>> mvn clean package
>>>>
>>>> It succeeds.
>>>>
>>>> However, when I then attempt to run the project with:
>>>>
>>>> java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>>>>
>>>> The application starts to execute but throws ?No compatible service:
>>>> io.scif.SCIFIOService? exception.
>>>> ============================================================
>>>>
>>>> img1=CellImg [20x30]
>>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits
>>>> = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f
>>>> transparency = 1 has alpha = false isAlphaPre = false
>>>> ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1
>>>> dataOff[0] = 0
>>>> Loading image...
>>>> Exception in Application start method
>>>> java.lang.reflect.InvocationTargetException
>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>> at
>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>> at
>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>> at
>>>> com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>>> at
>>>> com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>> at
>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>> at
>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>> at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>>> Caused by: java.lang.RuntimeException: Exception in Application start
>>>> method
>>>> at
>>>> com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>>> at
>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>>> at
>>>> com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown
>>>> Source)
>>>> at java.lang.Thread.run(Thread.java:745)
>>>> Caused by: java.lang.IllegalArgumentException: No compatible service:
>>>> io.scif.SCIFIOService
>>>> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>>> at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>>> at
>>>> org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>>> at org.scijava.Context.<init>(Context.java:244)
>>>> at org.scijava.Context.<init>(Context.java:203)
>>>> at org.scijava.Context.<init>(Context.java:142)
>>>> at org.scijava.Context.<init>(Context.java:128)
>>>> at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>>> at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>>> at
>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>>> at
>>>> com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown
>>>> Source)
>>>> at
>>>> com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>>> at
>>>> com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown
>>>> Source)
>>>> at
>>>> com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>>> at
>>>> com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown
>>>> Source)
>>>> at java.security.AccessController.doPrivileged(Native Method)
>>>> at
>>>> com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>>> at
>>>> com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown
>>>> Source)
>>>> at
>>>> com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>>> ============================================================
>>>>
>>>> If I remove the calls to the SCIO code and build and run from the
>>>> command line, all works well.
>>>>
>>>> The SCIO source code that I am using is lifted/amended from one of the
>>>> tutorials and is as follows:
>>>>
>>>> ============================================================
>>>>             imagePath =
>>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>             System.out.println("Loading image... '" + imagePath + "'");
>>>>             SCIFIO scifio = new SCIFIO();
>>>>             final Reader reader =
>>>> scifio.initializer().initializeReader(imagePath);
>>>> ============================================================
>>>>
>>>> This source code works file in the SCIFIO tutorial.
>>>>
>>>> Any help gratefully appreciated!!!!!
>>>>
>>>> ? Michael Ellis
>>>>
>>>>
>>>>
>>>>
>>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>
>>>> Hi Michael,
>>>>
>>>> > How do I establish what Maven projects I need to include?
>>>>
>>>> One way to check is using the dependency-maven-plugin like so:
>>>>
>>>>     mvn dependency:analyze
>>>>
>>>> This will tell you:
>>>>
>>>> A) Dependencies you declared but do not actually use; and
>>>> B) Dependencies you did not declare directly, but actually need.
>>>>
>>>> Note that this will only work if your project compiles successfully. In
>>>> other words, it is easier to start with "too many" dependencies and pare
>>>> down, rather than trying to "build up" from zero.
>>>>
>>>> So in your case, you can start with the ImgLib2 Examples dependencies
>>>> block, run dependency:analyze, and adjust the POM according to its
>>>> recommendations.
>>>>
>>>> > When I go to my NetBeans project dependence, select Add dependency,
>>>> > then type SCIF to the query text box, I get a huge list of
>>>> > possibilities.
>>>>
>>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of
>>>> io.scif, and an artifactId of scifio). Presumably at the latest version.
>>>> You can search for that here:
>>>>
>>>>
>>>> http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>>
>>>> So your dependency block in this case would be:
>>>>
>>>>     <dependency>
>>>>       <groupId>io.scif</groupId>
>>>>       <artifactId>scifio</artifactId>
>>>>       <version>0.17.1</version>
>>>>     </dependency>
>>>>
>>>> Note that that block of XML is available for copy-pasting from the link
>>>> above.
>>>>
>>>> > I am completely new to maven
>>>>
>>>> For more information, see:
>>>>     http://imagej.net/Maven
>>>>
>>>> Regards,
>>>> Curtis
>>>>
>>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz>
>>>> wrote:
>>>>
>>>>> I am investigating the using ImgLib2 for a project.
>>>>>
>>>>> I am using NetBeans and have managed to create a NetBeans Mavern
>>>>> project and have  added a dependency for ImgLib2 Core Library and that
>>>>> seems to be working OK.
>>>>>
>>>>> I now want to add the least possible requirements for the purpose of
>>>>> opening some image files.
>>>>>
>>>>> How do I establish what Maven projects I need to include?
>>>>>
>>>>> I have cloned  the ImgLib2 Examples project and got that working but
>>>>> that seems to include all manner of things that I suspect I do not need.
>>>>>
>>>>> When I go to my NetBeans project dependence, select Add dependency,
>>>>> then type SCIF to the query text box, I get a huge list of possibilities.
>>>>>
>>>>> I am completely new to maven and so do not know what I am doing with
>>>>> it!
>>>>>
>>>>> ? Michael Ellis
>>>>> Digital Scientific UK Ltd.
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/fcf30a10/attachment-0001.html>

From ctrueden at wisc.edu  Fri Dec  5 14:20:42 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 5 Dec 2014 14:20:42 -0600
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>
	<CA+B=mGosdShDF9Yh9X_NmSTGkrVU=dqqyYhU=4CAFoYmgFCA8A@mail.gmail.com>
	<CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
Message-ID: <CADN69ykEHo-e50qB1JJotfHjkCVKBb0SYEVT05qWR_2tRtVBBg@mail.gmail.com>

Hi everyone,

> I do not have a clear picture of what the downsides would be. Johannes
> always said that people on old macs are tied to an old java version
> and that we do not want to leave those users behind. It would be
> interesting to know how many people that actually would impact.

I compiled a Java/OS version spreadsheet a while back, which is relevant
here:


https://docs.google.com/spreadsheet/pub?key=0AkWOpXiooWpDdHhMZXFXVG9RaHhPelp2LVdfX1RMNHc&output=html

Furthermore, I researched this a couple of different times in recent
months. The results are part of the ImageJ FAQ:

    http://imagej.net/FAQ#Why_does_ImageJ_still_target_Java_6.3F

As of this writing, around 11% of OS X systems still run version 10.6 Snow
Leopard or older.
* As of June 2014, it was ~19%.
* In December 2013, it was ~25%.

And OS X only has ~7% market share right now, meaning that the actual
market share for 10.6 and older is only ~0.8%.

Of course, none of these statistics are ImageJ-specific. A somewhat higher
percentage of ImageJ users use OS X: from the weblogs of sites.imagej.net,
we know that it is about 10.6% of the traffic, but the logs don't tell us
the version breakdown of OS X. (We would know for certain had the usage
statistics not been kiboshed.)

So TL;DR: with some minimal assumptions, ~1.2% of ImageJ users still use
Snow Leopard are earlier.

Regards,
Curtis

On Fri, Dec 5, 2014 at 10:23 AM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi all,
>
> Mark Hiner wrote:
> > my only hesitation towards agreeing with consensus here is that these
> > particular mailing lists seem likely to be biased towards active
> > developers (who I would expect to prefer newer Java versions).
>
> I agree. While personally I would love to move to Java 7 or even Java 8,
> and even if we all support that here, we must then ask on the main ImageJ
> mailing list to get feedback from all users first.
>
> Regards,
> Curtis
>
> On Fri, Dec 5, 2014 at 9:58 AM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> Jay,
>> >Can anyone else confirm this experience?
>> Yep, Yosemite dropped Java 6. Definitely an annoying extra barrier for
>> developers. But there's a FAQ entry
>> <http://imagej.net/Frequently_Asked_Questions#How_do_I_set_up_Java_6_on_OS_X.3F>
>> now!
>>
>> Michael,
>> >When replying to a post like this, is it the done thing to reply to the
>> list in general or should I be replying just to the original poster?
>> You did the right thing - reply to the whole list. That way there is a
>> complete record of any discussion-especially important on a general topic
>> like this. Personally, if I ever get a private mail in response to
>> something, I cc the list in my reply (see also:
>> http://imagej.net/Philosophy#Open_source)
>>
>> Out of curiosity, how do people feel about establishing set guidelines
>> for when to advance Java versions (e.g. if it's 18 months past the
>> end-of-life release and under 2% of the users would be affected, just
>> upgrade)? There will certainly be times when this question will come up
>> again... and my only hesitation towards agreeing with consensus here is
>> that these particular mailing lists seem likely to be biased towards active
>> developers (who I would expect to prefer newer Java versions).
>>
>> Best,
>> Mark
>>
>> P.S. Thanks for starting this thread Tobias!
>>
>> On Fri, Dec 5, 2014 at 8:56 AM, Lee Kamentsky <leek at broadinstitute.org>
>> wrote:
>>
>>> For CelllProfiler, there's some packaging work that would need to be
>>> done (we bundle the JRE with the Windows version and the Centos 6 RPM has
>>> Java 6 as a dependency). We rely on the system Java for the Mac presently
>>> and I don't have a clear idea of what range of Java 7 support to expect on
>>> our user's Macs.
>>>
>>> It certainly seems like there is a lot of pressure to move to Java 7, so
>>> my vote would be to move to Java 7, even considering the above.
>>>
>>> On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
>>> wrote:
>>>
>>>> Hi all,
>>>>
>>>> what is everyones opinion on moving the IJ2/Fiji stack to a new version
>>>> of Java, i.e., Java 7.
>>>> Java 7 has been around for more than 3 years now. The end-of-life final
>>>> public release of Java 6 was more than 1.5 years ago.
>>>>
>>>> Benefits I see are the following:
>>>>
>>>> * We could use the ?new" Java 7 libraries. For example the Fork/Join
>>>> framework would come handy in defining multi-threading interfaces in
>>>> scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff
>>>> (java.nio.file)
>>>>
>>>> * We would benefit from improvements of type inference for generics in
>>>> the compiler. No more jumping through hoops to fix ?errors? in code that
>>>> should compile with Java 6 but doesn?t. (Plus we could use the diamond
>>>> operator to shorten generics instantiations.)
>>>>
>>>> * We could use third-party libraries that only support Java 7. For
>>>> example I?m using Jetty in a project that can therefore not be part of Fiji
>>>> currently. (This mail was more or less triggered by me looking into
>>>> http://ojalgo.org who maybe went a bit over the top and already
>>>> abandoned Java 7 for Java 8). I think it is only a matter of time until we
>>>> will have a problem with third-party libraries that we already use
>>>> abandoning Java 6.
>>>>
>>>>
>>>> I do not have a clear picture of what the downsides would be. Johannes
>>>> always said that people on old macs are tied to an old java version and
>>>> that we do not want to leave those users behind. It would be interesting to
>>>> know how many people that actually would impact.
>>>>
>>>>
>>>> What do you think?
>>>>
>>>> best regards,
>>>> Tobias
>>>>
>>>>
>>>> --
>>>> --
>>>> Please avoid top-posting, and please make sure to reply-to-all!
>>>>
>>>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>>>
>>>> ---
>>>> You received this message because you are subscribed to the Google
>>>> Groups "Fiji-devel" group.
>>>> To unsubscribe from this group and stop receiving emails from it, send
>>>> an email to fiji-devel+unsubscribe at googlegroups.com.
>>>> For more options, visit https://groups.google.com/d/optout.
>>>>
>>>
>>>  --
>>> --
>>> Please avoid top-posting, and please make sure to reply-to-all!
>>>
>>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>>
>>> ---
>>> You received this message because you are subscribed to the Google
>>> Groups "Fiji-devel" group.
>>> To unsubscribe from this group and stop receiving emails from it, send
>>> an email to fiji-devel+unsubscribe at googlegroups.com.
>>> For more options, visit https://groups.google.com/d/optout.
>>>
>>
>>  --
>> --
>> Please avoid top-posting, and please make sure to reply-to-all!
>>
>> Mailing list web interface: http://groups.google.com/group/fiji-devel
>>
>> ---
>> You received this message because you are subscribed to the Google Groups
>> "Fiji-devel" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to fiji-devel+unsubscribe at googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141205/f6d02bdf/attachment.html>

From pietzsch at mpi-cbg.de  Sat Dec  6 19:51:35 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Sun, 7 Dec 2014 02:51:35 +0100
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>
	<CA+B=mGosdShDF9Yh9X_NmSTGkrVU=dqqyYhU=4CAFoYmgFCA8A@mail.gmail.com>
	<CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
Message-ID: <FA85C85E-1EA6-46B8-B5A4-E02C148CCECA@mpi-cbg.de>

Hi,

we are considering to increase the required Java version for ImageJ2/Fiji from 6 to 7.
Java 6 has been unsupported (ie, no more fixes and updates) for over 1.5 years now, Java 7 is around for a long time, and developers are moving on to Java 8 even.

Before we just move to Java 7, we want to see what users would think about this. So, are there any strong opinions out there?

best regards,
Tobias

On 05 Dec 2014, at 17:23, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi all,
> 
> Mark Hiner wrote:
> > my only hesitation towards agreeing with consensus here is that these
> > particular mailing lists seem likely to be biased towards active
> > developers (who I would expect to prefer newer Java versions).
> 
> I agree. While personally I would love to move to Java 7 or even Java 8, and even if we all support that here, we must then ask on the main ImageJ mailing list to get feedback from all users first.
> 
> Regards,
> Curtis
> 
> On Fri, Dec 5, 2014 at 9:58 AM, Mark Hiner <hiner at wisc.edu> wrote:
> Jay,
> >Can anyone else confirm this experience?
> Yep, Yosemite dropped Java 6. Definitely an annoying extra barrier for developers. But there's a FAQ entry now!
> 
> Michael,
> >When replying to a post like this, is it the done thing to reply to the list in general or should I be replying just to the original poster?
> You did the right thing - reply to the whole list. That way there is a complete record of any discussion-especially important on a general topic like this. Personally, if I ever get a private mail in response to something, I cc the list in my reply (see also: http://imagej.net/Philosophy#Open_source)
> 
> Out of curiosity, how do people feel about establishing set guidelines for when to advance Java versions (e.g. if it's 18 months past the end-of-life release and under 2% of the users would be affected, just upgrade)? There will certainly be times when this question will come up again... and my only hesitation towards agreeing with consensus here is that these particular mailing lists seem likely to be biased towards active developers (who I would expect to prefer newer Java versions).
> 
> Best,
> Mark
> 
> P.S. Thanks for starting this thread Tobias!
> 
> On Fri, Dec 5, 2014 at 8:56 AM, Lee Kamentsky <leek at broadinstitute.org> wrote:
> For CelllProfiler, there's some packaging work that would need to be done (we bundle the JRE with the Windows version and the Centos 6 RPM has Java 6 as a dependency). We rely on the system Java for the Mac presently and I don't have a clear idea of what range of Java 7 support to expect on our user's Macs.
> 
> It certainly seems like there is a lot of pressure to move to Java 7, so my vote would be to move to Java 7, even considering the above.
> 
> On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
> Hi all,
> 
> what is everyones opinion on moving the IJ2/Fiji stack to a new version of Java, i.e., Java 7.
> Java 7 has been around for more than 3 years now. The end-of-life final public release of Java 6 was more than 1.5 years ago.
> 
> Benefits I see are the following:
> 
> * We could use the ?new" Java 7 libraries. For example the Fork/Join framework would come handy in defining multi-threading interfaces in scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff (java.nio.file)
> 
> * We would benefit from improvements of type inference for generics in the compiler. No more jumping through hoops to fix ?errors? in code that should compile with Java 6 but doesn?t. (Plus we could use the diamond operator to shorten generics instantiations.)
> 
> * We could use third-party libraries that only support Java 7. For example I?m using Jetty in a project that can therefore not be part of Fiji currently. (This mail was more or less triggered by me looking into http://ojalgo.org who maybe went a bit over the top and already abandoned Java 7 for Java 8). I think it is only a matter of time until we will have a problem with third-party libraries that we already use abandoning Java 6.
> 
> 
> I do not have a clear picture of what the downsides would be. Johannes always said that people on old macs are tied to an old java version and that we do not want to leave those users behind. It would be interesting to know how many people that actually would impact.
> 
> 
> What do you think?
> 
> best regards,
> Tobias
> 
> 
> --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
> 
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> ---
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
> 
> 
> -- 
> -- 
> Please avoid top-posting, and please make sure to reply-to-all!
>  
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> --- 
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
> 
> 
> -- 
> -- 
> Please avoid top-posting, and please make sure to reply-to-all!
>  
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> --- 
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
> 
> 
> -- 
> -- 
> Please avoid top-posting, and please make sure to reply-to-all!
>  
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> --- 
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141207/49b3b2f9/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141207/49b3b2f9/attachment.pgp>

From G.Landini at bham.ac.uk  Sun Dec  7 04:25:45 2014
From: G.Landini at bham.ac.uk (Gabriel Landini)
Date: Sun, 07 Dec 2014 10:25:45 +0000
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <FA85C85E-1EA6-46B8-B5A4-E02C148CCECA@mpi-cbg.de>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
	<FA85C85E-1EA6-46B8-B5A4-E02C148CCECA@mpi-cbg.de>
Message-ID: <8391712.GzCbXzIIyQ@linux-g.site>

On Sunday 07 Dec 2014 02:51:35 Tobias Pietzsch wrote:
> we are considering to increase the required Java version for ImageJ2/Fiji
> from 6 to 7. Java 6 has been unsupported (ie, no more fixes and updates)
> for over 1.5 years now, Java 7 is around for a long time, and developers
> are moving on to Java 8 even.
> 
> Before we just move to Java 7, we want to see what users would think about
> this. So, are there any strong opinions out there?

I have no strong opinion, but under opensuse linux 13.2, IJ1 with oracle Java 
1.6, when I run this 1 line macro alone:

setPixel(2,2, 32);

it shows a window with a "no image open" error message, and an "OK" button.

With openjdk OR oracle 1.7, the window is blank, with no button, making it 
impossible to do any further with IJ, close the window or close IJ.
I have to kill Java from the System Activity list to exit.

Under fiji the macro seems to be OK, but I guess this is because it is using 
Java 1.6. Maybe it is a simple bug, but I think it is better to check that 
this does not happen before moving to 1.7.
Cheers

Gabriel




From pietzsch at mpi-cbg.de  Sun Dec  7 08:11:38 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Sun, 7 Dec 2014 15:11:38 +0100
Subject: [ImageJ-devel] moving to Java 7
In-Reply-To: <CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>
	<CA+B=mGosdShDF9Yh9X_NmSTGkrVU=dqqyYhU=4CAFoYmgFCA8A@mail.gmail.com>
	<CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
Message-ID: <6BCF924B-EB87-4C45-8298-B91E4D641572@mpi-cbg.de>

Hi,

we are considering to increase the required Java version for ImageJ2/Fiji from 6 to 7.
Java 6 has been unsupported (ie, no more fixes and updates) for over 1.5 years now, Java 7 is around for a long time, and developers are moving on to Java 8 even.

Before we just move to Java 7, we want to see what users would think about this. So, are there any strong opinions out there?

best regards,
Tobias

On 05 Dec 2014, at 17:23, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi all,
> 
> Mark Hiner wrote:
> > my only hesitation towards agreeing with consensus here is that these
> > particular mailing lists seem likely to be biased towards active
> > developers (who I would expect to prefer newer Java versions).
> 
> I agree. While personally I would love to move to Java 7 or even Java 8, and even if we all support that here, we must then ask on the main ImageJ mailing list to get feedback from all users first.
> 
> Regards,
> Curtis
> 
> On Fri, Dec 5, 2014 at 9:58 AM, Mark Hiner <hiner at wisc.edu> wrote:
> Jay,
> >Can anyone else confirm this experience?
> Yep, Yosemite dropped Java 6. Definitely an annoying extra barrier for developers. But there's a FAQ entry now!
> 
> Michael,
> >When replying to a post like this, is it the done thing to reply to the list in general or should I be replying just to the original poster?
> You did the right thing - reply to the whole list. That way there is a complete record of any discussion-especially important on a general topic like this. Personally, if I ever get a private mail in response to something, I cc the list in my reply (see also: http://imagej.net/Philosophy#Open_source)
> 
> Out of curiosity, how do people feel about establishing set guidelines for when to advance Java versions (e.g. if it's 18 months past the end-of-life release and under 2% of the users would be affected, just upgrade)? There will certainly be times when this question will come up again... and my only hesitation towards agreeing with consensus here is that these particular mailing lists seem likely to be biased towards active developers (who I would expect to prefer newer Java versions).
> 
> Best,
> Mark
> 
> P.S. Thanks for starting this thread Tobias!
> 
> On Fri, Dec 5, 2014 at 8:56 AM, Lee Kamentsky <leek at broadinstitute.org> wrote:
> For CelllProfiler, there's some packaging work that would need to be done (we bundle the JRE with the Windows version and the Centos 6 RPM has Java 6 as a dependency). We rely on the system Java for the Mac presently and I don't have a clear idea of what range of Java 7 support to expect on our user's Macs.
> 
> It certainly seems like there is a lot of pressure to move to Java 7, so my vote would be to move to Java 7, even considering the above.
> 
> On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
> Hi all,
> 
> what is everyones opinion on moving the IJ2/Fiji stack to a new version of Java, i.e., Java 7.
> Java 7 has been around for more than 3 years now. The end-of-life final public release of Java 6 was more than 1.5 years ago.
> 
> Benefits I see are the following:
> 
> * We could use the ?new" Java 7 libraries. For example the Fork/Join framework would come handy in defining multi-threading interfaces in scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff (java.nio.file)
> 
> * We would benefit from improvements of type inference for generics in the compiler. No more jumping through hoops to fix ?errors? in code that should compile with Java 6 but doesn?t. (Plus we could use the diamond operator to shorten generics instantiations.)
> 
> * We could use third-party libraries that only support Java 7. For example I?m using Jetty in a project that can therefore not be part of Fiji currently. (This mail was more or less triggered by me looking into http://ojalgo.org who maybe went a bit over the top and already abandoned Java 7 for Java 8). I think it is only a matter of time until we will have a problem with third-party libraries that we already use abandoning Java 6.
> 
> 
> I do not have a clear picture of what the downsides would be. Johannes always said that people on old macs are tied to an old java version and that we do not want to leave those users behind. It would be interesting to know how many people that actually would impact.
> 
> 
> What do you think?
> 
> best regards,
> Tobias
> 
> 
> --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
> 
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> ---
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
> 
> 
> -- 
> -- 
> Please avoid top-posting, and please make sure to reply-to-all!
>  
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> --- 
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
> 
> 
> -- 
> -- 
> Please avoid top-posting, and please make sure to reply-to-all!
>  
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> --- 
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
> 
> 
> -- 
> -- 
> Please avoid top-posting, and please make sure to reply-to-all!
>  
> Mailing list web interface: http://groups.google.com/group/fiji-devel
> 
> --- 
> You received this message because you are subscribed to the Google Groups "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141207/d8e2242b/attachment-0001.html>

From birgit.moeller at informatik.uni-halle.de  Sun Dec  7 12:13:43 2014
From: birgit.moeller at informatik.uni-halle.de (=?windows-1252?Q?Birgit_M=F6ller?=)
Date: Sun, 07 Dec 2014 19:13:43 +0100
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <mailman.1592.1417961502.3596.imagej-devel@imagej.net>
References: <mailman.1592.1417961502.3596.imagej-devel@imagej.net>
Message-ID: <548498D7.3080409@informatik.uni-halle.de>

Hi all,
for Alida/MiToBo we also tested ImageJ with Orcale Java 7 a while ago.
We only used the platform-independent Jar archive compiled with Java
1.6 for our tests and did not try to compile ImageJ with Java 7
ourselves. Anyway, running the ImageJ jar archive for Java 1.6 as
available from the ImageJ website with Java 7 we noticed some serious
problems on (Ubuntu) linux quite similar to those that Gabriel
mentioned. In particular, we got exceptions on closing windows, e.g.,
the ROI manager window. It closed, however, afterwards could never be
opened again. The same happened to other windows so that interaction
with ImageJ was seriously hampered after the exception appeared once.
The problems were restricted to special versions of Java 7 and also to
Linux, i.e. not all update versions seemed to be affected and on
Windows no such problems occurred at all. As we did this tests some
time ago unfortunately I don't know the exact exceptions and versions
of Java 7 anymore. In any case it appeared as if the way how ImageJ
closes windows and releases resources needs some updates to become
compatible with Java 7 - but this is just a guess.
Best regards,

 Birgit


> ------------------------------
> 
> Message: 2 Date: Sun, 07 Dec 2014 10:25:45 +0000 From: Gabriel
> Landini <G.Landini at bham.ac.uk> To: fiji-devel at googlegroups.com Cc:
> IMAGEJ at list.nih.gov, ImageJ Developers <imagej-devel at imagej.net> 
> Subject: Re: [ImageJ-devel] [fiji-devel] moving to Java 7 
> Message-ID: <8391712.GzCbXzIIyQ at linux-g.site> Content-Type:
> text/plain; charset="us-ascii"
> 
> On Sunday 07 Dec 2014 02:51:35 Tobias Pietzsch wrote:
>> we are considering to increase the required Java version for
>> ImageJ2/Fiji from 6 to 7. Java 6 has been unsupported (ie, no
>> more fixes and updates) for over 1.5 years now, Java 7 is around
>> for a long time, and developers are moving on to Java 8 even.
>> 
>> Before we just move to Java 7, we want to see what users would
>> think about this. So, are there any strong opinions out there?
> 
> I have no strong opinion, but under opensuse linux 13.2, IJ1 with
> oracle Java 1.6, when I run this 1 line macro alone:
> 
> setPixel(2,2, 32);
> 
> it shows a window with a "no image open" error message, and an "OK"
> button.
> 
> With openjdk OR oracle 1.7, the window is blank, with no button,
> making it impossible to do any further with IJ, close the window or
> close IJ. I have to kill Java from the System Activity list to
> exit.
> 
> Under fiji the macro seems to be OK, but I guess this is because it
> is using Java 1.6. Maybe it is a simple bug, but I think it is
> better to check that this does not happen before moving to 1.7. 
> Cheers
> 
> Gabriel
> 
> 
> 
> 
> 
> ------------------------------
> 
> Message: 3 Date: Sun, 7 Dec 2014 15:11:38 +0100 From: Tobias
> Pietzsch <pietzsch at mpi-cbg.de> To: IMAGEJ at LIST.NIH.GOV Cc: Fiji
> Developers <fiji-devel at googlegroups.com>,	ImageJ Developers 
> <imagej-devel at imagej.net> Subject: [ImageJ-devel] moving to Java 7 
> Message-ID: <6BCF924B-EB87-4C45-8298-B91E4D641572 at mpi-cbg.de> 
> Content-Type: text/plain; charset="windows-1252"
> 
> Hi,
> 
> we are considering to increase the required Java version for
> ImageJ2/Fiji from 6 to 7. Java 6 has been unsupported (ie, no more
> fixes and updates) for over 1.5 years now, Java 7 is around for a
> long time, and developers are moving on to Java 8 even.
> 
> Before we just move to Java 7, we want to see what users would
> think about this. So, are there any strong opinions out there?
> 
> best regards, Tobias
> 
> On 05 Dec 2014, at 17:23, Curtis Rueden <ctrueden at wisc.edu> wrote:
> 
>> Hi all,
>> 
>> Mark Hiner wrote:
>>> my only hesitation towards agreeing with consensus here is that
>>> these particular mailing lists seem likely to be biased towards
>>> active developers (who I would expect to prefer newer Java
>>> versions).
>> 
>> I agree. While personally I would love to move to Java 7 or even
>> Java 8, and even if we all support that here, we must then ask on
>> the main ImageJ mailing list to get feedback from all users
>> first.
>> 
>> Regards, Curtis
>> 
>> On Fri, Dec 5, 2014 at 9:58 AM, Mark Hiner <hiner at wisc.edu>
>> wrote: Jay,
>>> Can anyone else confirm this experience?
>> Yep, Yosemite dropped Java 6. Definitely an annoying extra
>> barrier for developers. But there's a FAQ entry now!
>> 
>> Michael,
>>> When replying to a post like this, is it the done thing to
>>> reply to the list in general or should I be replying just to
>>> the original poster?
>> You did the right thing - reply to the whole list. That way there
>> is a complete record of any discussion-especially important on a
>> general topic like this. Personally, if I ever get a private mail
>> in response to something, I cc the list in my reply (see also:
>> http://imagej.net/Philosophy#Open_source)
>> 
>> Out of curiosity, how do people feel about establishing set
>> guidelines for when to advance Java versions (e.g. if it's 18
>> months past the end-of-life release and under 2% of the users
>> would be affected, just upgrade)? There will certainly be times
>> when this question will come up again... and my only hesitation
>> towards agreeing with consensus here is that these particular
>> mailing lists seem likely to be biased towards active developers
>> (who I would expect to prefer newer Java versions).
>> 
>> Best, Mark
>> 
>> P.S. Thanks for starting this thread Tobias!
>> 
>> On Fri, Dec 5, 2014 at 8:56 AM, Lee Kamentsky
>> <leek at broadinstitute.org> wrote: For CelllProfiler, there's some
>> packaging work that would need to be done (we bundle the JRE with
>> the Windows version and the Centos 6 RPM has Java 6 as a
>> dependency). We rely on the system Java for the Mac presently and
>> I don't have a clear idea of what range of Java 7 support to
>> expect on our user's Macs.
>> 
>> It certainly seems like there is a lot of pressure to move to
>> Java 7, so my vote would be to move to Java 7, even considering
>> the above.
>> 
>> On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch
>> <pietzsch at mpi-cbg.de> wrote: Hi all,
>> 
>> what is everyones opinion on moving the IJ2/Fiji stack to a new
>> version of Java, i.e., Java 7. Java 7 has been around for more
>> than 3 years now. The end-of-life final public release of Java 6
>> was more than 1.5 years ago.
>> 
>> Benefits I see are the following:
>> 
>> * We could use the ?new" Java 7 libraries. For example the
>> Fork/Join framework would come handy in defining multi-threading
>> interfaces in scijava-common (to be used in imagej-ops for
>> example). Or the NIO2 stuff (java.nio.file)
>> 
>> * We would benefit from improvements of type inference for
>> generics in the compiler. No more jumping through hoops to fix
>> ?errors? in code that should compile with Java 6 but doesn?t.
>> (Plus we could use the diamond operator to shorten generics
>> instantiations.)
>> 
>> * We could use third-party libraries that only support Java 7.
>> For example I?m using Jetty in a project that can therefore not
>> be part of Fiji currently. (This mail was more or less triggered
>> by me looking into http://ojalgo.org who maybe went a bit over
>> the top and already abandoned Java 7 for Java 8). I think it is
>> only a matter of time until we will have a problem with
>> third-party libraries that we already use abandoning Java 6.
>> 
>> 
>> I do not have a clear picture of what the downsides would be.
>> Johannes always said that people on old macs are tied to an old
>> java version and that we do not want to leave those users behind.
>> It would be interesting to know how many people that actually
>> would impact.
>> 
>> 
>> What do you think?
>> 
>> best regards, Tobias
>> 
>> 
>> -- -- Please avoid top-posting, and please make sure to
>> reply-to-all!
>> 
>> Mailing list web interface:
>> http://groups.google.com/group/fiji-devel
>> 
>> --- You received this message because you are subscribed to the
>> Google Groups "Fiji-devel" group. To unsubscribe from this group
>> and stop receiving emails from it, send an email to
>> fiji-devel+unsubscribe at googlegroups.com. For more options, visit
>> https://groups.google.com/d/optout.
>> 
>> 
>> -- -- Please avoid top-posting, and please make sure to
>> reply-to-all!
>> 
>> Mailing list web interface:
>> http://groups.google.com/group/fiji-devel
>> 
>> --- You received this message because you are subscribed to the
>> Google Groups "Fiji-devel" group. To unsubscribe from this group
>> and stop receiving emails from it, send an email to
>> fiji-devel+unsubscribe at googlegroups.com. For more options, visit
>> https://groups.google.com/d/optout.
>> 
>> 
>> -- -- Please avoid top-posting, and please make sure to
>> reply-to-all!
>> 
>> Mailing list web interface:
>> http://groups.google.com/group/fiji-devel
>> 
>> --- You received this message because you are subscribed to the
>> Google Groups "Fiji-devel" group. To unsubscribe from this group
>> and stop receiving emails from it, send an email to
>> fiji-devel+unsubscribe at googlegroups.com. For more options, visit
>> https://groups.google.com/d/optout.
>> 
>> 
>> -- -- Please avoid top-posting, and please make sure to
>> reply-to-all!
>> 
>> Mailing list web interface:
>> http://groups.google.com/group/fiji-devel
>> 
>> --- You received this message because you are subscribed to the
>> Google Groups "Fiji-devel" group. To unsubscribe from this group
>> and stop receiving emails from it, send an email to
>> fiji-devel+unsubscribe at googlegroups.com. For more options, visit
>> https://groups.google.com/d/optout.
> 
> -------------- next part -------------- An HTML attachment was
> scrubbed... URL:
> <http://imagej.net/pipermail/imagej-devel/attachments/20141207/d8e2242b/attachment.html>
>
>  ------------------------------
> 
> _______________________________________________ ImageJ-devel
> mailing list ImageJ-devel at imagej.net 
> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 
> End of ImageJ-devel Digest, Vol 62, Issue 16 
> ********************************************
> 


From ctrueden at wisc.edu  Sun Dec  7 14:30:12 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Sun, 7 Dec 2014 14:30:12 -0600
Subject: [ImageJ-devel] [fiji-devel] moving to Java 7
In-Reply-To: <6BCF924B-EB87-4C45-8298-B91E4D641572@mpi-cbg.de>
References: <2DC4B5C6-DD9B-44D6-8BFA-5E9CC79BC7B5@mpi-cbg.de>
	<CAHLFyjeJSQTfjqN5BZiC=nxQS_uCeQNiaDMxVqEgEodB--LwSA@mail.gmail.com>
	<CA+B=mGosdShDF9Yh9X_NmSTGkrVU=dqqyYhU=4CAFoYmgFCA8A@mail.gmail.com>
	<CADN69y=ZRGmiFJg1mL-J5W7Xadr62wJqTFa-uOEi5Ertqkd_UA@mail.gmail.com>
	<6BCF924B-EB87-4C45-8298-B91E4D641572@mpi-cbg.de>
Message-ID: <CADN69ynEcP-+q_e5CcQV8g2tM4KMYnB8Lb1b5FB-sq3yGhoJOg@mail.gmail.com>

Hi everyone,

> we are considering to increase the required Java version for
> ImageJ2/Fiji from 6 to 7.

Such a change is not something that could happen overnight. To elaborate a
bit on the challenges and logistics:

- Java 7 is not available to everyone. In particular, it is not available
for OS X 10.6 Snow Leopard and earlier. Our current estimate is that ~1% of
users use such operating systems. While upgrading is an option for some, it
is not possible on older hardware.

- As Michael & Birgit point out, ImageJ has problems when run with Java 7
in some scenarios, and on some platforms. Also, as I mentioned on another
recent thread, there are performance issues with repainting on OS X with
Java 7 (but not, it seems, with Java 6 or 8).

- Existing Fiji installations using a bundled Java -- the majority of them:
the Windows and Linux bundles -- would need to be upgraded somehow. But the
ImageJ Updater does not support upgrading the version of Java. Either: A)
someone would need to do the work of improving the Updater to upgrade Java
automatically; or B) all Fiji users would need to manually upgrade it,
and/or download and unpack a new Fiji. I would strongly prefer option A,
but the work is involved and I personally would not have time to do it any
time soon.

With these points in mind, my current preference is to keep supporting Java
6 for the time being. For developers wishing to use Java-7-specific
features, a separate update site would be a safer route.

That said, if a motivated party is able to:

1) Make the Updater smarter about versions of Java -- ideally, implementing
UI that lets the user specify and switch between JREs similar to e.g.
Eclipse.

2) Verify that the most critical problems in behavior are already fixed,
and/or fix them.

3) Thoroughly test on all three major platforms -- ideally with both Oracle
Java 7 and OpenJDK 7.

Then moving forward with the switch would be feasible.

Regards,
Curtis


On Sun, Dec 7, 2014 at 8:11 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:

> Hi,
>
> we are considering to increase the required Java version for ImageJ2/Fiji
> from 6 to 7.
> Java 6 has been unsupported (ie, no more fixes and updates) for over 1.5
> years now, Java 7 is around for a long time, and developers are moving on
> to Java 8 even.
>
> Before we just move to Java 7, we want to see what users would think about
> this. So, are there any strong opinions out there?
>
> best regards,
> Tobias
>
> On 05 Dec 2014, at 17:23, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi all,
>
> Mark Hiner wrote:
> > my only hesitation towards agreeing with consensus here is that these
> > particular mailing lists seem likely to be biased towards active
> > developers (who I would expect to prefer newer Java versions).
>
> I agree. While personally I would love to move to Java 7 or even Java 8,
> and even if we all support that here, we must then ask on the main ImageJ
> mailing list to get feedback from all users first.
>
> Regards,
> Curtis
>
> On Fri, Dec 5, 2014 at 9:58 AM, Mark Hiner <hiner at wisc.edu> wrote:
>
>> Jay,
>> >Can anyone else confirm this experience?
>> Yep, Yosemite dropped Java 6. Definitely an annoying extra barrier for
>> developers. But there's a FAQ entry
>> <http://imagej.net/Frequently_Asked_Questions#How_do_I_set_up_Java_6_on_OS_X.3F>
>> now!
>>
>> Michael,
>> >When replying to a post like this, is it the done thing to reply to the
>> list in general or should I be replying just to the original poster?
>> You did the right thing - reply to the whole list. That way there is a
>> complete record of any discussion-especially important on a general topic
>> like this. Personally, if I ever get a private mail in response to
>> something, I cc the list in my reply (see also:
>> http://imagej.net/Philosophy#Open_source)
>>
>> Out of curiosity, how do people feel about establishing set guidelines
>> for when to advance Java versions (e.g. if it's 18 months past the
>> end-of-life release and under 2% of the users would be affected, just
>> upgrade)? There will certainly be times when this question will come up
>> again... and my only hesitation towards agreeing with consensus here is
>> that these particular mailing lists seem likely to be biased towards active
>> developers (who I would expect to prefer newer Java versions).
>>
>> Best,
>> Mark
>>
>> P.S. Thanks for starting this thread Tobias!
>>
>> On Fri, Dec 5, 2014 at 8:56 AM, Lee Kamentsky <leek at broadinstitute.org>
>> wrote:
>>
>>> For CelllProfiler, there's some packaging work that would need to be
>>> done (we bundle the JRE with the Windows version and the Centos 6 RPM has
>>> Java 6 as a dependency). We rely on the system Java for the Mac presently
>>> and I don't have a clear idea of what range of Java 7 support to expect on
>>> our user's Macs.
>>>
>>> It certainly seems like there is a lot of pressure to move to Java 7, so
>>> my vote would be to move to Java 7, even considering the above.
>>>
>>> On Fri, Dec 5, 2014 at 8:54 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
>>> wrote:
>>>
>>>> Hi all,
>>>>
>>>> what is everyones opinion on moving the IJ2/Fiji stack to a new version
>>>> of Java, i.e., Java 7.
>>>> Java 7 has been around for more than 3 years now. The end-of-life final
>>>> public release of Java 6 was more than 1.5 years ago.
>>>>
>>>> Benefits I see are the following:
>>>>
>>>> * We could use the ?new" Java 7 libraries. For example the Fork/Join
>>>> framework would come handy in defining multi-threading interfaces in
>>>> scijava-common (to be used in imagej-ops for example). Or the NIO2 stuff
>>>> (java.nio.file)
>>>>
>>>> * We would benefit from improvements of type inference for generics in
>>>> the compiler. No more jumping through hoops to fix ?errors? in code that
>>>> should compile with Java 6 but doesn?t. (Plus we could use the diamond
>>>> operator to shorten generics instantiations.)
>>>>
>>>> * We could use third-party libraries that only support Java 7. For
>>>> example I?m using Jetty in a project that can therefore not be part of Fiji
>>>> currently. (This mail was more or less triggered by me looking into
>>>> http://ojalgo.org who maybe went a bit over the top and already
>>>> abandoned Java 7 for Java 8). I think it is only a matter of time until we
>>>> will have a problem with third-party libraries that we already use
>>>> abandoning Java 6.
>>>>
>>>>
>>>> I do not have a clear picture of what the downsides would be. Johannes
>>>> always said that people on old macs are tied to an old java version and
>>>> that we do not want to leave those users behind. It would be interesting to
>>>> know how many people that actually would impact.
>>>>
>>>>
>>>> What do you think?
>>>>
>>>> best regards,
>>>> Tobias
>>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141207/1e2d859d/attachment-0001.html>

From warrick at wisc.edu  Tue Dec  9 16:44:01 2014
From: warrick at wisc.edu (Jay Warrick)
Date: Tue, 09 Dec 2014 16:44:01 -0600
Subject: [ImageJ-devel] HiDPI
Message-ID: <4211FA02-D2FF-4016-AF93-1A3EF9E998C8@wisc.edu>

Can anyone point me to some good ImageJ/SciJava/ImgLib2 classes/info to look in for tips on drawing images in general as well as drawing on HiDPI screens? My search is going very slow, any hints would be great. Thanks.

Thanks!

Jay



From michael.ellis at dsuk.biz  Wed Dec 10 13:09:54 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Wed, 10 Dec 2014 19:09:54 +0000
Subject: [ImageJ-devel] How do I Perform an Image Convolution?
In-Reply-To: <CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
	<CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>
	<D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
	<CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>
Message-ID: <00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>

Curtis,

Thanks for this reply and I am now turning my attention to use of the FFT. 

It seems the FFT was moved from imglib2-algorithm to imglib2-algorithm-fft (due I think to licensing issues).

I need to achieve what is done in imglib2-tutorials/Example6c.java at master ? imglib/imglib2-tutorials

The Example6c has not been updated to reflect the new way of doing things. If I clone the imglib/imglib2-tutorials project I see the following are all deprecated.

import net.imglib2.algorithm.fft.FourierConvolution;
import net.imglib2.algorithm.fft.FourierTransform;
import net.imglib2.algorithm.fft.InverseFourierTransform;

I have managed to make progress and think I have got fourier and inverse fourier transforms working. So that just leaves the convolution.

You previously pointed me at the ImageJ OPS library. Is that th best way of achieving the convolution?

The ImageJ OPS example however depends on ImageJ. The ImageJ OPS test programs don?t help me either since the test classes do some magic wizardry that I do not understand at all i.e. with Contexts, Java annotations and some injection stuff.

So what are the minimal hoops I need to jump though to setup ops such that the code below will compile? (I want to avoid dragging in any ImageJ 1 legacy code)

        Img<FloatType> result = image.copy(); 
        Op op = ops.op("convolve", result, image, templateInverse);

Also in downloading the ImageJ-Ops project and running maven compile, I get the following. I realise that I am at Java8 and that might be jumping the gun a bit, but Java 6 is well past its sell by date and if you are on a new Apple Mac, Java 6 is not a comfortable option.

[INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system contains com/sun/codemodel/internal/ClassType.class targeted to JDK 1.8
[WARNING] Rule 1: org.apache.maven.plugins.enforcer.EnforceBytecodeVersion failed with message:
Found Banned Dependency: com.sun:tools:jar:1.4.2

For the record, I am suspicious about Java annotations! *For me at least* They fro not help with trying to understand code as I cannot make out how to call the code in question. The feel rather like something layered on top of a language rather than an intrinsic built in.  They give me that uncomfortable feeling that C++ Standard Template Library did - and that gave me nightmares when it came time to debug code.

Thanks in anticipation of any light you can throw into my darkness!

? Michael Ellis


 




On 5 Dec 2014, at 18:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:

> Hi Michael,
> 
> > It looks like there is a new FFT but the tutorials use the older
> > version. 
> > 
> > What should I go with?
> 
> The library for doing FFT is imglib2-algorithm-fft:
>     https://github.com/imglib/imglib2-algorithm-fft
> 
> Regarding the "new FFT", perhaps you refer to this?
>     https://github.com/imglib/imglib2-algorithm-fft/pull/1
> 
> At the moment there are licensing issues with imglib2-algorithm-fft (it depends on the Mines JTK library which has a license incompatible with GPL). That PR addresses the issues by using the JTransforms library instead.
> 
> You also might want to consider using the higher level ImageJ OPS library:
>     https://github.com/imagej/imagej-ops
> 
> Thanks to the efforts of Brian Northan, we are about to merge an OP wrapper for FFT:
>     https://github.com/imagej/imagej-ops/pull/76
> 
> Note that these components are still in the 0.x incubation phase, meaning they do not have stable APIs. That said, we would really appreciate early adopters who can try out the code and help drive things in the right direction.
> 
> We will be reviewing and merging these improvements over the next few days, then cutting new releases of imglib2-algorithm-fft and imagej-ops. At that point, it should be easier for you to try them out.
> 
> The relevant tutorials are based on imglib2-algorithm-fft:
>     https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6b.java
>     https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6c.java
> 
> And IIUC the changes above are internal so the tutorial code should not requiring updating (beyond an update to the version of imglib2-algorithm-fft in the POM, of course).
> 
> Regards,
> Curtis
> 
> On Fri, Dec 5, 2014 at 12:21 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> Once again, Curtis
> 
> I really appreciate your help with this.
> 
> Next questions on the horizon will involve the ImgLib2 algorithm FFT classes. It looks like there is a new FFT but the tutorials use the older version. 
> 
> What should I go with?
> 
> My aim is build an application, which as part of it will be doing image alignment using FFT phase correlation.
> 
> Regards ? Michael Ellis
> 
> 
> On 5 Dec 2014, at 18:13, Curtis Rueden <ctrueden at wisc.edu> wrote:
> 
>> Hi Michael,
>> 
>> > gives me a self contained runnable jar. Progress! I?m learning.
>> > 
>> > BUT as before when I run the jar, I get the Exception: No compatible
>> > service: org.scijava.service.SciJavaService
>> 
>> Self contained runnable JARs (i.e., uber-jars) are convenient in some ways, but come with a host of problems.
>> 
>> 1) If you do not shade your dependencies (i.e., rename their packages), then you may ship duplicate and/or incompatible classes with other libraries. This makes your library much harder to reuse in a shared system such as an ImageJ installation.
>> 
>> 2) You cannot ship piecemeal updates to individual dependencies -- i.e., every time your code changes, you must ship a new (possibly very large) new JAR file to your users.
>> 
>> 3) The SciJava annotation processor, responsible for indexing the @Plugin annotations that drive SciJava/ImageJ2/etc. plugins, writes the metadata into a resource file at META-INF/json/org.scijava.plugin.Plugin within the JAR. If you try to create an uber-jar via the assembly or shade plugin, the default combination algorithm will overwrite those files, stomping the annotations.
>> 
>> We wrote some code which offers one way around this:
>>    https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631
>> 
>> For more on uber-jars, see also:
>>    http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F
>> 
>> The gist is: avoid using an uber-jar unless you really need it.
>> 
>> > I?ve got it working with your help!
>> 
>> Awesome, congratulations. Let us know if you encounter any more roadblocks.
>> 
>> Regards,
>> Curtis
>> 
>> On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>> Adding a build section to the POM:
>> 
>>   <build>
>>     <plugins>
>>       <plugin>
>>         <groupId>org.apache.maven.plugins</groupId>
>>         <artifactId>maven-shade-plugin</artifactId>
>>         <version>2.3</version>
>>         <executions>
>>           <execution>
>>             <phase>package</phase>
>>             <goals>
>>               <goal>shade</goal>
>>             </goals>
>>             <configuration>
>>               <transformers>
>>                 <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>>                   <manifestEntries>
>>                     <Main-Class>com.mycompany.app.App</Main-Class>
>>                     <Build-Number>123</Build-Number>
>>                   </manifestEntries>
>>                 </transformer>
>>               </transformers>
>>             </configuration>
>>           </execution>
>>         </executions>
>>       </plugin>
>>     </plugins>
>>   </build>
>> 
>> To the POM gives me a self contained runnable jar. Progress! I?m learning.
>> 
>> BUT as before when I run the jar, I get the Exception: No compatible service: org.scijava.service.SciJavaService
>> =================================================================
>> 
>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar target/my-app-1.0-SNAPSHOT.jar 
>> Hello World!
>> Exception: No compatible service: org.scijava.service.SciJavaService
>> =================================================================
>> 
>> Still vexed!
>> 
>> 
>> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>> 
>>> Hi Michael,
>>> 
>>> > mvn claims to build everything OK
>>> 
>>> Yep, it did build successfully.
>>> 
>>> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>> > Error: A JNI error has occurred, please check your installation and try again
>>> > Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>>> 
>>> Maven is primarily a build tool. It puts the correct JARs on your classpath at compile time. In your case, that is scifio-0.17.1.jar and its dependencies.
>>> 
>>> However, the way you are launching your program is not putting the required dependencies on the classpath. You put only my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing. So of course Java cannot find the needed classes.
>>> 
>>> The gist is: it is your responsibility to assemble the dependencies and ensure they are on the classpath somehow when you launch your application.
>>> 
>>> There are several ways to accomplish this. Here is one generally useful way using Maven, which does not assume you are doing anything ImageJ-related:
>>> 
>>>     $ mvn dependency:copy-dependencies
>>>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*' com.mycompany.app.App
>>> 
>>> The "copy-dependencies" goal copies all the JAR files needed by your program into the target/dependency folder, for easy subsequent consumption.
>>> 
>>> Alternately, the "ImageJ way" of dealing with deployment is to ship all needed dependencies in the "jars" folder of your ImageJ application. We created a Maven goal for this too, which you can use as follows:
>>> 
>>>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app -Ddelete.other.versions=true
>>> 
>>> Which will copy your JAR and its dependencies into your ImageJ installation at /Applications/ImageJ.app. But note that in order for this goal to work, you must extend the pom-imagej parent (see https://github.com/imagej/minimal-ij1-plugin for an example).
>>> 
>>> A third solution is to use the exec-maven-plugin to launch your application directly using Maven. E.g.: https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>>> 
>>> Regards,
>>> Curtis
>>> 
>>> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>> Curtis,
>>> 
>>> Thanks but it is still not working.
>>> 
>>> I have cut out using NetBeans and am now just using the CLI and a text editor. 
>>> 
>>> POM as follows:
>>> 
>>> ========================================================
>>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>>   <modelVersion>4.0.0</modelVersion>
>>> 
>>>   <groupId>com.mycompany.app</groupId>
>>>   <artifactId>my-app</artifactId>
>>>   <version>1.0-SNAPSHOT</version>
>>>   <packaging>jar</packaging>
>>> 
>>>   <name>my-app</name>
>>>   <url>http://maven.apache.org</url>
>>> 
>>>   <properties>
>>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>>   </properties>
>>>   
>>> 	<repositories>
>>> 		<repository>
>>> 			<id>imagej.public</id>
>>> 			<url>http://maven.imagej.net/content/groups/public</url>
>>> 		</repository>
>>> 	</repositories>
>>> 
>>>   <dependencies>
>>>     <dependency>
>>>       <groupId>junit</groupId>
>>>       <artifactId>junit</artifactId>
>>>       <version>3.8.1</version>
>>>       <scope>test</scope>
>>>     </dependency>
>>>     
>>> 	<dependency>
>>> 	  <groupId>io.scif</groupId>
>>> 	  <artifactId>scifio</artifactId>
>>> 	  <version>0.17.1</version>
>>> 	</dependency>
>>>     
>>>   </dependencies>
>>> </project>
>>> ========================================================
>>> 
>>> File hierarchy:
>>> 
>>> .
>>> ./.DS_Store
>>> ./pom.xml
>>> ./src
>>> ./src/main
>>> ./src/main/java
>>> ./src/main/java/com
>>> ./src/main/java/com/mycompany
>>> ./src/main/java/com/mycompany/app
>>> ./src/main/java/com/mycompany/app/App.java
>>> ./src/test
>>> ./src/test/java
>>> ./src/test/java/com
>>> ./src/test/java/com/mycompany
>>> ./src/test/java/com/mycompany/app
>>> ./src/test/java/com/mycompany/app/AppTest.java
>>> ========================================================
>>> 
>>> App.java as follows:
>>> 
>>> package com.mycompany.app;
>>> 
>>> import io.scif.FormatException;
>>> import io.scif.ImageMetadata;
>>> import io.scif.Plane;
>>> import io.scif.Reader;
>>> import io.scif.SCIFIO;
>>> 
>>> public class App 
>>> {
>>>     public static void main( String[] args )
>>>     {
>>> 		try {
>>>     	    System.out.println( "Hello World!" );
>>> 			SCIFIO scifio = new SCIFIO();
>>> 			String sampleImage
>>> 					= "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>> 			final Reader reader = scifio.initializer().initializeReader(sampleImage);
>>> 			System.out.printf("reader=%s%n", reader );
>>>         } catch (Exception e) {
>>> 	        System.out.printf("Exception: %s%n", e.getMessage() );
>>>         }
>>>     }
>>> }
>>> 
>>> ========================================================
>>> 
>>> mvm -U install
>>> 
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>>> [INFO] Scanning for projects...
>>> [INFO]                                                                         
>>> [INFO] ------------------------------------------------------------------------
>>> [INFO] Building my-app 1.0-SNAPSHOT
>>> [INFO] ------------------------------------------------------------------------
>>> [INFO] 
>>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ my-app ---
>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>>> [INFO] 
>>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---
>>> [INFO] Changes detected - recompiling the module!
>>> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/classes
>>> [INFO] 
>>> [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ my-app ---
>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>>> [INFO] 
>>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ my-app ---
>>> [INFO] Changes detected - recompiling the module!
>>> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>>> [INFO] 
>>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
>>> [INFO] Surefire report directory: /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>> 
>>> -------------------------------------------------------
>>>  T E S T S
>>> -------------------------------------------------------
>>> Running com.mycompany.app.AppTest
>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
>>> 
>>> Results :
>>> 
>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>> 
>>> [INFO] 
>>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>>> [INFO] Building jar: /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>>> [INFO] 
>>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>>> [INFO] ------------------------------------------------------------------------
>>> [INFO] BUILD SUCCESS
>>> [INFO] ------------------------------------------------------------------------
>>> [INFO] Total time: 1.962 s
>>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>>> [INFO] Final Memory: 18M/242M
>>> [INFO] ????????????????????????????????????
>>> 
>>> ========================================================
>>> 
>>> mvn claims to build everything OK there seems to be no inclusion of any scif libraries or class files.
>>> 
>>> 
>>> When I run it I get:
>>> 
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>> Error: A JNI error has occurred, please check your installation and try again
>>> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>>> 	at java.lang.Class.getDeclaredMethods0(Native Method)
>>> 	at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>>> 	at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>>> 	at java.lang.Class.getMethod0(Class.java:3016)
>>> 	at java.lang.Class.getMethod(Class.java:1782)
>>> 	at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>>> 	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>>> 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>>> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>>> 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>>> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>>> 	... 7 more
>>> 
>>> 
>>> ========================================================
>>> 
>>> I?ve been banging my head against this for two days now. 
>>> 
>>> So any help appreciated
>>> 
>>> 
>>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>> 
>>>> Hi Michael,
>>>> 
>>>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>> > information available
>>>> 
>>>> Make sure you have the following <repositories> block in your POM:
>>>> 
>>>> 	<repositories>
>>>> 		<repository>
>>>> 			<id>imagej.public</id>
>>>> 			<url>http://maven.imagej.net/content/groups/public</url>
>>>> 		</repository>
>>>> 	</repositories>
>>>> 
>>>> Then rebuild with the "-U" flag. I don't know how to do this from NetBeans, but you only need to do it once from the CLI -- then you can return to NetBeans and it should work.
>>>> 
>>>> Regards,
>>>> Curtis
>>>> 
>>>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>> I have followed the advice offered by Curtis regarding adding the io.scif: scifio dependency to my POM
>>>> 
>>>> The dependency part of my POM looks like this:
>>>> 
>>>>     <dependencies>
>>>>         <dependency>
>>>>             <groupId>net.imglib2</groupId>
>>>>             <artifactId>imglib2</artifactId>
>>>>             <version>2.2.1-SNAPSHOT</version>
>>>>             <type>jar</type>
>>>>         </dependency>
>>>>         <dependency>
>>>>             <groupId>io.scif</groupId>
>>>>             <artifactId>scifio</artifactId>
>>>>             <version>0.17.1</version>
>>>>             <type>jar</type>
>>>>         </dependency>
>>>>     </dependencies>
>>>> 
>>>> I am using NetBeans IDE, configured for use with maven project (I am slo using Java 8 and JavaFX)
>>>> 
>>>> However when I attempt to Build (or Build with Dependencies)  within NetBeans, I get the following error message:
>>>> ============================================================
>>>> 
>>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home "/Applications/NetBeans/NetBeans 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>>> Scanning for projects...
>>>>                                                                         
>>>> ------------------------------------------------------------------------
>>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>>> ------------------------------------------------------------------------
>>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency information available
>>>> ------------------------------------------------------------------------
>>>> BUILD FAILURE
>>>> ------------------------------------------------------------------------
>>>> Total time: 0.341s
>>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>>> Final Memory: 7M/245M
>>>> ------------------------------------------------------------------------
>>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]
>>>> 
>>>> To see the full stack trace of the errors, re-run Maven with the -e switch.
>>>> Re-run Maven using the -X switch to enable full debug logging.
>>>> 
>>>> For more information about the errors and possible solutions, please read the following articles:
>>>> [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>> 
>>>> ============================================================
>>>> 
>>>> If I open a terminal window and cd into the project directory and:
>>>> 
>>>> 	mvn clean package
>>>> 
>>>> It succeeds.
>>>> 
>>>> However, when I then attempt to run the project with:
>>>> 
>>>> 	java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>>>> 
>>>> The application starts to execute but throws ?No compatible service: io.scif.SCIFIOService? exception.
>>>> ============================================================
>>>> 
>>>> img1=CellImg [20x30]
>>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha = false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1 dataOff[0] = 0
>>>> Loading image...
>>>> Exception in Application start method
>>>> java.lang.reflect.InvocationTargetException
>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>>>> 	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>>> Caused by: java.lang.RuntimeException: Exception in Application start method
>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown Source)
>>>> 	at java.lang.Thread.run(Thread.java:745)
>>>> Caused by: java.lang.IllegalArgumentException: No compatible service: io.scif.SCIFIOService
>>>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>>> 	at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>>> 	at org.scijava.Context.<init>(Context.java:244)
>>>> 	at org.scijava.Context.<init>(Context.java:203)
>>>> 	at org.scijava.Context.<init>(Context.java:142)
>>>> 	at org.scijava.Context.<init>(Context.java:128)
>>>> 	at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>>> 	at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown Source)
>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown Source)
>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown Source)
>>>> 	at java.security.AccessController.doPrivileged(Native Method)
>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown Source)
>>>> 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>>> ============================================================
>>>> 
>>>> If I remove the calls to the SCIO code and build and run from the command line, all works well.
>>>> 
>>>> The SCIO source code that I am using is lifted/amended from one of the tutorials and is as follows:
>>>> 
>>>> ============================================================
>>>>             imagePath = "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>             System.out.println("Loading image... '" + imagePath + "'");
>>>>             SCIFIO scifio = new SCIFIO();
>>>>             final Reader reader = scifio.initializer().initializeReader(imagePath);
>>>> ============================================================
>>>> 
>>>> This source code works file in the SCIFIO tutorial.
>>>> 
>>>> Any help gratefully appreciated!!!!!
>>>> 
>>>> ? Michael Ellis
>>>> 
>>>> 
>>>> 
>>>> 
>>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>> 
>>>>> Hi Michael,
>>>>> 
>>>>> > How do I establish what Maven projects I need to include? 
>>>>> 
>>>>> One way to check is using the dependency-maven-plugin like so:
>>>>> 
>>>>>     mvn dependency:analyze
>>>>> 
>>>>> This will tell you:
>>>>> 
>>>>> A) Dependencies you declared but do not actually use; and
>>>>> B) Dependencies you did not declare directly, but actually need.
>>>>> 
>>>>> Note that this will only work if your project compiles successfully. In other words, it is easier to start with "too many" dependencies and pare down, rather than trying to "build up" from zero.
>>>>> 
>>>>> So in your case, you can start with the ImgLib2 Examples dependencies block, run dependency:analyze, and adjust the POM according to its recommendations.
>>>>> 
>>>>> > When I go to my NetBeans project dependence, select Add dependency,
>>>>> > then type SCIF to the query text box, I get a huge list of
>>>>> > possibilities.
>>>>> 
>>>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of io.scif, and an artifactId of scifio). Presumably at the latest version. You can search for that here:
>>>>> 
>>>>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>>> 
>>>>> So your dependency block in this case would be:
>>>>> 
>>>>>     <dependency>
>>>>>       <groupId>io.scif</groupId>
>>>>>       <artifactId>scifio</artifactId>
>>>>>       <version>0.17.1</version>
>>>>>     </dependency>
>>>>> 
>>>>> Note that that block of XML is available for copy-pasting from the link above.
>>>>> 
>>>>> > I am completely new to maven
>>>>> 
>>>>> For more information, see:
>>>>>     http://imagej.net/Maven
>>>>> 
>>>>> Regards,
>>>>> Curtis
>>>>> 
>>>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>>> I am investigating the using ImgLib2 for a project.
>>>>> 
>>>>> I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.
>>>>> 
>>>>> I now want to add the least possible requirements for the purpose of opening some image files.
>>>>> 
>>>>> How do I establish what Maven projects I need to include? 
>>>>> 
>>>>> I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.
>>>>> 
>>>>> When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.
>>>>> 
>>>>> I am completely new to maven and so do not know what I am doing with it!
>>>>> 
>>>>> ? Michael Ellis
>>>>> Digital Scientific UK Ltd.
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>> 
>>>>> 
>>>> 
>>>> 
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>> 
>>>> 
>>> 
>>> 
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>> 
>>> 
>> 
>> 
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>> 
>> 
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141210/4dd9652f/attachment-0001.html>

From bnorthan at gmail.com  Wed Dec 10 13:39:22 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 10 Dec 2014 14:39:22 -0500
Subject: [ImageJ-devel] How do I Perform an Image Convolution?
In-Reply-To: <00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
	<CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>
	<D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
	<CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>
	<00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>
Message-ID: <CAMWa8i2DRVGqVr13sni82q=X6zEdinjn3MQkVpcZXZnd2pEFvg@mail.gmail.com>

Hi Michael

I believe that the imglib team replaced the FourierConvolution class with
FFTConvolution some time ago.

https://github.com/imglib/imglib2-algorithm-gpl/blob/master/src/main/java/net/imglib2/algorithm/fft2/FFTConvolution.java

The current implementation in ops uses FFTConvolution

https://github.com/imagej/imagej-ops/blob/master/src/main/java/net/imagej/ops/convolve/ConvolveFourier.java

You may want to take a look at the 'compute' function of ConvolveFourier to
see an example of using the FFTConvolution class.

Brian





On Wed, Dec 10, 2014 at 2:09 PM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:

> Curtis,
>
> Thanks for this reply and I am now turning my attention to use of the FFT.
>
> It seems the FFT was moved from imglib2-algorithm to imglib2-algorithm-fft
> (due I think to licensing issues).
>
> I need to achieve what is done in imglib2-tutorials/Example6c.java at
> master ? imglib/imglib2-tutorials
> <https://github.com/imglib/imglib2-tutorials/blob/master/src/main/java/Example6c.java>
>
> The Example6c has not been updated to reflect the new way of doing things.
> If I clone the imglib/imglib2-tutorials
> <https://github.com/imglib/imglib2-tutorials> project I see the following
> are all deprecated.
>
> import net.imglib2.algorithm.fft.FourierConvolution;
> import net.imglib2.algorithm.fft.FourierTransform;
> import net.imglib2.algorithm.fft.InverseFourierTransform;
>
> I have managed to make progress and think I have got fourier and inverse
> fourier transforms working. So that just leaves the convolution.
>
> You previously pointed me at the ImageJ OPS library. Is that th best way
> of achieving the convolution?
>
> The ImageJ OPS example however depends on ImageJ. The ImageJ OPS test
> programs don?t help me either since the test classes do some magic wizardry
> that I do not understand at all i.e. with Contexts, Java annotations and
> some injection stuff.
>
> So what are the minimal hoops I need to jump though to setup ops such that
> the code below will compile? (I want to avoid dragging in any ImageJ 1
> legacy code)
>
> Img<FloatType> result = image.copy(); Op op = ops.op("convolve", result,
> image, templateInverse);
>
> Also in downloading the ImageJ-Ops project and running maven compile, I
> get the following. I realise that I am at Java8 and that might be jumping
> the gun a bit, but Java 6 is well past its sell by date and if you are on
> a new Apple Mac, Java 6 is not a comfortable option.
>
> [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system contains
> com/sun/codemodel/internal/ClassType.class targeted to JDK 1.8
> [WARNING] Rule 1: org.apache.maven.plugins.enforcer.EnforceBytecodeVersion
> failed with message:
> Found Banned Dependency: com.sun:tools:jar:1.4.2
>
> For the record, I am suspicious about Java annotations! *For me at least*
> They fro not help with trying to understand code as I cannot make out how
> to call the code in question. The feel rather like something layered on top
> of a language rather than an intrinsic built in.  They give me that
> uncomfortable feeling that C++ Standard Template Library did - and that
> gave me nightmares when it came time to debug code.
>
> Thanks in anticipation of any light you can throw into my darkness!
>
> ? Michael Ellis
>
>
>
>
>
>
>
> On 5 Dec 2014, at 18:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>
> Hi Michael,
>
> > It looks like there is a new FFT but the tutorials use the older
> > version.
> >
> > What should I go with?
>
> The library for doing FFT is imglib2-algorithm-fft:
>     https://github.com/imglib/imglib2-algorithm-fft
>
> Regarding the "new FFT", perhaps you refer to this?
>     https://github.com/imglib/imglib2-algorithm-fft/pull/1
>
> At the moment there are licensing issues with imglib2-algorithm-fft (it
> depends on the Mines JTK library which has a license incompatible with
> GPL). That PR addresses the issues by using the JTransforms library instead.
>
> You also might want to consider using the higher level ImageJ OPS library:
>     https://github.com/imagej/imagej-ops
>
> Thanks to the efforts of Brian Northan, we are about to merge an OP
> wrapper for FFT:
>     https://github.com/imagej/imagej-ops/pull/76
>
> Note that these components are still in the 0.x incubation phase, meaning
> they do not have stable APIs. That said, we would really appreciate early
> adopters who can try out the code and help drive things in the right
> direction.
>
> We will be reviewing and merging these improvements over the next few
> days, then cutting new releases of imglib2-algorithm-fft and imagej-ops. At
> that point, it should be easier for you to try them out.
>
> The relevant tutorials are based on imglib2-algorithm-fft:
>
> https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6b.java
>
> https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6c.java
>
> And IIUC the changes above are internal so the tutorial code should not
> requiring updating (beyond an update to the version of
> imglib2-algorithm-fft in the POM, of course).
>
> Regards,
> Curtis
>
> On Fri, Dec 5, 2014 at 12:21 PM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>
>> Once again, Curtis
>>
>> I really appreciate your help with this.
>>
>> Next questions on the horizon will involve the ImgLib2 algorithm FFT
>> classes. It looks like there is a new FFT but the tutorials use the older
>> version.
>>
>> What should I go with?
>>
>> My aim is build an application, which as part of it will be doing image
>> alignment using FFT phase correlation.
>>
>> Regards ? Michael Ellis
>>
>>
>> On 5 Dec 2014, at 18:13, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>
>> Hi Michael,
>>
>> > gives me a self contained runnable jar. Progress! I?m learning.
>> >
>> > BUT as before when I run the jar, I get the Exception: No compatible
>> > service: org.scijava.service.SciJavaService
>>
>> Self contained runnable JARs (i.e., uber-jars) are convenient in some
>> ways, but come with a host of problems.
>>
>> 1) If you do not shade your dependencies (i.e., rename their packages),
>> then you may ship duplicate and/or incompatible classes with other
>> libraries. This makes your library much harder to reuse in a shared system
>> such as an ImageJ installation.
>>
>> 2) You cannot ship piecemeal updates to individual dependencies -- i.e.,
>> every time your code changes, you must ship a new (possibly very large) new
>> JAR file to your users.
>>
>> 3) The SciJava annotation processor, responsible for indexing the @Plugin
>> annotations that drive SciJava/ImageJ2/etc. plugins, writes the metadata
>> into a resource file at META-INF/json/org.scijava.plugin.Plugin within the
>> JAR. If you try to create an uber-jar via the assembly or shade plugin, the
>> default combination algorithm will overwrite those files, stomping the
>> annotations.
>>
>> We wrote some code which offers one way around this:
>>
>> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631
>>
>> For more on uber-jars, see also:
>>
>> http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F
>>
>> The gist is: avoid using an uber-jar unless you really need it.
>>
>> > I?ve got it working with your help!
>>
>> Awesome, congratulations. Let us know if you encounter any more
>> roadblocks.
>>
>> Regards,
>> Curtis
>>
>> On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz>
>> wrote:
>>
>>> Adding a build section to the POM:
>>>
>>>   <build>
>>>     <plugins>
>>>       <plugin>
>>>         <groupId>org.apache.maven.plugins</groupId>
>>>         <artifactId>maven-shade-plugin</artifactId>
>>>         <version>2.3</version>
>>>         <executions>
>>>           <execution>
>>>             <phase>package</phase>
>>>             <goals>
>>>               <goal>shade</goal>
>>>             </goals>
>>>             <configuration>
>>>               <transformers>
>>>                 <transformer
>>> implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>>>                   <manifestEntries>
>>>                     <Main-Class>com.mycompany.app.App</Main-Class>
>>>                     <Build-Number>123</Build-Number>
>>>                   </manifestEntries>
>>>                 </transformer>
>>>               </transformers>
>>>             </configuration>
>>>           </execution>
>>>         </executions>
>>>       </plugin>
>>>     </plugins>
>>>   </build>
>>>
>>> To the POM gives me a self contained runnable jar. Progress! I?m
>>> learning.
>>>
>>> BUT as before when I run the jar, I get the Exception: No compatible
>>> service: org.scijava.service.SciJavaService
>>> =================================================================
>>>
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar
>>> target/my-app-1.0-SNAPSHOT.jar
>>> Hello World!
>>> Exception: No compatible service: org.scijava.service.SciJavaService
>>> =================================================================
>>>
>>> Still vexed!
>>>
>>>
>>> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>>
>>> Hi Michael,
>>>
>>> > mvn claims to build everything OK
>>>
>>> Yep, it did build successfully.
>>>
>>> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>> > Error: A JNI error has occurred, please check your installation and
>>> try again
>>> > Exception in thread "main" java.lang.NoClassDefFoundError:
>>> io/scif/SCIFIO
>>>
>>> Maven is primarily a build tool. It puts the correct JARs on your
>>> classpath at compile time. In your case, that is scifio-0.17.1.jar and its
>>> dependencies.
>>>
>>> However, the way you are launching your program is not putting the
>>> required dependencies on the classpath. You put only
>>> my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing.
>>> So of course Java cannot find the needed classes.
>>>
>>> The gist is: it is your responsibility to assemble the dependencies and
>>> ensure they are on the classpath somehow when you launch your application.
>>>
>>> There are several ways to accomplish this. Here is one generally useful
>>> way using Maven, which does not assume you are doing anything
>>> ImageJ-related:
>>>
>>>     $ mvn dependency:copy-dependencies
>>>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*'
>>> com.mycompany.app.App
>>>
>>> The "copy-dependencies" goal copies all the JAR files needed by your
>>> program into the target/dependency folder, for easy subsequent consumption.
>>>
>>> Alternately, the "ImageJ way" of dealing with deployment is to ship all
>>> needed dependencies in the "jars" folder of your ImageJ application. We
>>> created a Maven goal for this too, which you can use as follows:
>>>
>>>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app
>>> -Ddelete.other.versions=true
>>>
>>> Which will copy your JAR and its dependencies into your ImageJ
>>> installation at /Applications/ImageJ.app. But note that in order for this
>>> goal to work, you must extend the pom-imagej parent (see
>>> https://github.com/imagej/minimal-ij1-plugin for an example).
>>>
>>> A third solution is to use the exec-maven-plugin to launch your
>>> application directly using Maven. E.g.:
>>> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>>>
>>> Regards,
>>> Curtis
>>>
>>> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz>
>>> wrote:
>>>
>>>> Curtis,
>>>>
>>>> Thanks but it is still not working.
>>>>
>>>> I have cut out using NetBeans and am now just using the CLI and a text
>>>> editor.
>>>>
>>>> POM as follows:
>>>>
>>>> ========================================================
>>>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="
>>>> http://www.w3.org/2001/XMLSchema-instance"
>>>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
>>>> http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>>>   <modelVersion>4.0.0</modelVersion>
>>>>
>>>>   <groupId>com.mycompany.app</groupId>
>>>>   <artifactId>my-app</artifactId>
>>>>   <version>1.0-SNAPSHOT</version>
>>>>   <packaging>jar</packaging>
>>>>
>>>>   <name>my-app</name>
>>>>   <url>http://maven.apache.org</url>
>>>>
>>>>   <properties>
>>>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>>>   </properties>
>>>>
>>>> <repositories>
>>>> <repository>
>>>> <id>imagej.public</id>
>>>> <url>http://maven.imagej.net/content/groups/public</url>
>>>> </repository>
>>>> </repositories>
>>>>
>>>>   <dependencies>
>>>>     <dependency>
>>>>       <groupId>junit</groupId>
>>>>       <artifactId>junit</artifactId>
>>>>       <version>3.8.1</version>
>>>>       <scope>test</scope>
>>>>     </dependency>
>>>>
>>>> <dependency>
>>>>   <groupId>io.scif</groupId>
>>>>   <artifactId>scifio</artifactId>
>>>>   <version>0.17.1</version>
>>>> </dependency>
>>>>
>>>>   </dependencies>
>>>> </project>
>>>> ========================================================
>>>>
>>>> File hierarchy:
>>>>
>>>> .
>>>> ./.DS_Store
>>>> ./pom.xml
>>>> ./src
>>>> ./src/main
>>>> ./src/main/java
>>>> ./src/main/java/com
>>>> ./src/main/java/com/mycompany
>>>> ./src/main/java/com/mycompany/app
>>>> ./src/main/java/com/mycompany/app/App.java
>>>> ./src/test
>>>> ./src/test/java
>>>> ./src/test/java/com
>>>> ./src/test/java/com/mycompany
>>>> ./src/test/java/com/mycompany/app
>>>> ./src/test/java/com/mycompany/app/AppTest.java
>>>> ========================================================
>>>>
>>>> App.java as follows:
>>>>
>>>> package com.mycompany.app;
>>>>
>>>> import io.scif.FormatException;
>>>> import io.scif.ImageMetadata;
>>>> import io.scif.Plane;
>>>> import io.scif.Reader;
>>>> import io.scif.SCIFIO;
>>>>
>>>> public class App
>>>> {
>>>>     public static void main( String[] args )
>>>>     {
>>>> try {
>>>>         System.out.println( "Hello World!" );
>>>> SCIFIO scifio = new SCIFIO();
>>>> String sampleImage
>>>> =
>>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>> final Reader reader =
>>>> scifio.initializer().initializeReader(sampleImage);
>>>> System.out.printf("reader=%s%n", reader );
>>>>         } catch (Exception e) {
>>>>         System.out.printf("Exception: %s%n", e.getMessage() );
>>>>         }
>>>>     }
>>>> }
>>>>
>>>> ========================================================
>>>>
>>>> mvm -U install
>>>>
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>>>> [INFO] Scanning for projects...
>>>> [INFO]
>>>>
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO] Building my-app 1.0-SNAPSHOT
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO]
>>>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
>>>> my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory
>>>> /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>>>> [INFO]
>>>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app
>>>> ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to
>>>> /Users/michaelellis/temp/deleteme/my-app/target/classes
>>>> [INFO]
>>>> [INFO] --- maven-resources-plugin:2.6:testResources
>>>> (default-testResources) @ my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory
>>>> /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>>>> [INFO]
>>>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile)
>>>> @ my-app ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to
>>>> /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>>>> [INFO]
>>>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
>>>> [INFO] Surefire report directory:
>>>> /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>>>
>>>> -------------------------------------------------------
>>>>  T E S T S
>>>> -------------------------------------------------------
>>>> Running com.mycompany.app.AppTest
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005
>>>> sec
>>>>
>>>> Results :
>>>>
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>>>
>>>> [INFO]
>>>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>>>> [INFO] Building jar:
>>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>>>> [INFO]
>>>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app
>>>> ---
>>>> [INFO] Installing
>>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to
>>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to
>>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO] BUILD SUCCESS
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO] Total time: 1.962 s
>>>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>>>> [INFO] Final Memory: 18M/242M
>>>> [INFO] ????????????????????????????????????
>>>>
>>>> ========================================================
>>>>
>>>> mvn claims to build everything OK there seems to be no inclusion of any
>>>> scif libraries or class files.
>>>>
>>>>
>>>> When I run it I get:
>>>>
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp
>>>> target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>> Error: A JNI error has occurred, please check your installation and try
>>>> again
>>>> Exception in thread "main" java.lang.NoClassDefFoundError:
>>>> io/scif/SCIFIO
>>>> at java.lang.Class.getDeclaredMethods0(Native Method)
>>>> at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>>>> at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>>>> at java.lang.Class.getMethod0(Class.java:3016)
>>>> at java.lang.Class.getMethod(Class.java:1782)
>>>> at
>>>> sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>>>> at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>>>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>>>> at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>>>> at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>>>> ... 7 more
>>>>
>>>>
>>>> ========================================================
>>>>
>>>> I?ve been banging my head against this for two days now.
>>>>
>>>> So any help appreciated
>>>>
>>>>
>>>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>
>>>> Hi Michael,
>>>>
>>>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>> > information available
>>>>
>>>> Make sure you have the following <repositories> block in your POM:
>>>>
>>>> <repositories>
>>>> <repository>
>>>> <id>imagej.public</id>
>>>> <url>http://maven.imagej.net/content/groups/public</url>
>>>> </repository>
>>>> </repositories>
>>>>
>>>> Then rebuild with the "-U" flag. I don't know how to do this from
>>>> NetBeans, but you only need to do it once from the CLI -- then you can
>>>> return to NetBeans and it should work.
>>>>
>>>> Regards,
>>>> Curtis
>>>>
>>>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz>
>>>> wrote:
>>>>
>>>>> I have followed the advice offered by Curtis regarding adding
>>>>> the io.scif: scifio dependency to my POM
>>>>>
>>>>> The dependency part of my POM looks like this:
>>>>>
>>>>>     <dependencies>
>>>>>         <dependency>
>>>>>             <groupId>net.imglib2</groupId>
>>>>>             <artifactId>imglib2</artifactId>
>>>>>             <version>2.2.1-SNAPSHOT</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>         <dependency>
>>>>>             <groupId>io.scif</groupId>
>>>>>             <artifactId>scifio</artifactId>
>>>>>             <version>0.17.1</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>     </dependencies>
>>>>>
>>>>> I am using NetBeans IDE, configured for use with maven project (I am
>>>>> slo using Java 8 and JavaFX)
>>>>>
>>>>> However when I attempt to Build (or Build with Dependencies)  within
>>>>> NetBeans, I get the following error message:
>>>>> ============================================================
>>>>>
>>>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX;
>>>>> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
>>>>> "/Applications/NetBeans/NetBeans
>>>>> 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>>>> Scanning for projects...
>>>>>
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>>> information available
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> BUILD FAILURE
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> Total time: 0.341s
>>>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>>>> Final Memory: 7M/245M
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve
>>>>> dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure
>>>>> to find io.scif:scifio:jar:0.17.1 in
>>>>> http://repo.maven.apache.org/maven2 was cached in the local
>>>>> repository, resolution will not be reattempted until the update interval of
>>>>> central has elapsed or updates are forced -> [Help 1]
>>>>>
>>>>> To see the full stack trace of the errors, re-run Maven with the -e
>>>>> switch.
>>>>> Re-run Maven using the -X switch to enable full debug logging.
>>>>>
>>>>> For more information about the errors and possible solutions, please
>>>>> read the following articles:
>>>>> [Help 1]
>>>>> http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>>>
>>>>> ============================================================
>>>>>
>>>>> If I open a terminal window and cd into the project directory and:
>>>>>
>>>>> mvn clean package
>>>>>
>>>>> It succeeds.
>>>>>
>>>>> However, when I then attempt to run the project with:
>>>>>
>>>>> java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar
>>>>> biz.dsuk.mavenimglib2fx.MainApp
>>>>>
>>>>> The application starts to execute but throws ?No compatible service:
>>>>> io.scif.SCIFIOService? exception.
>>>>> ============================================================
>>>>>
>>>>> img1=CellImg [20x30]
>>>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel:
>>>>> #pixelBits = 8 numComponents = 1 color space =
>>>>> java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha =
>>>>> false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699
>>>>> #numDataElements 1 dataOff[0] = 0
>>>>> Loading image...
>>>>> Exception in Application start method
>>>>> java.lang.reflect.InvocationTargetException
>>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> at
>>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> at
>>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> at
>>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> at
>>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>>>> Caused by: java.lang.RuntimeException: Exception in Application start
>>>>> method
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown
>>>>> Source)
>>>>> at java.lang.Thread.run(Thread.java:745)
>>>>> Caused by: java.lang.IllegalArgumentException: No compatible service:
>>>>> io.scif.SCIFIOService
>>>>> at
>>>>> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>>>> at
>>>>> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>>>> at
>>>>> org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>>>> at org.scijava.Context.<init>(Context.java:244)
>>>>> at org.scijava.Context.<init>(Context.java:203)
>>>>> at org.scijava.Context.<init>(Context.java:142)
>>>>> at org.scijava.Context.<init>(Context.java:128)
>>>>> at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>>>> at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown
>>>>> Source)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown
>>>>> Source)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown
>>>>> Source)
>>>>> at java.security.AccessController.doPrivileged(Native Method)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown
>>>>> Source)
>>>>> at
>>>>> com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>>>> ============================================================
>>>>>
>>>>> If I remove the calls to the SCIO code and build and run from the
>>>>> command line, all works well.
>>>>>
>>>>> The SCIO source code that I am using is lifted/amended from one of the
>>>>> tutorials and is as follows:
>>>>>
>>>>> ============================================================
>>>>>             imagePath =
>>>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>>             System.out.println("Loading image... '" + imagePath + "'");
>>>>>             SCIFIO scifio = new SCIFIO();
>>>>>             final Reader reader =
>>>>> scifio.initializer().initializeReader(imagePath);
>>>>> ============================================================
>>>>>
>>>>> This source code works file in the SCIFIO tutorial.
>>>>>
>>>>> Any help gratefully appreciated!!!!!
>>>>>
>>>>> ? Michael Ellis
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>>
>>>>> Hi Michael,
>>>>>
>>>>> > How do I establish what Maven projects I need to include?
>>>>>
>>>>> One way to check is using the dependency-maven-plugin like so:
>>>>>
>>>>>     mvn dependency:analyze
>>>>>
>>>>> This will tell you:
>>>>>
>>>>> A) Dependencies you declared but do not actually use; and
>>>>> B) Dependencies you did not declare directly, but actually need.
>>>>>
>>>>> Note that this will only work if your project compiles successfully.
>>>>> In other words, it is easier to start with "too many" dependencies and pare
>>>>> down, rather than trying to "build up" from zero.
>>>>>
>>>>> So in your case, you can start with the ImgLib2 Examples dependencies
>>>>> block, run dependency:analyze, and adjust the POM according to its
>>>>> recommendations.
>>>>>
>>>>> > When I go to my NetBeans project dependence, select Add dependency,
>>>>> > then type SCIF to the query text box, I get a huge list of
>>>>> > possibilities.
>>>>>
>>>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of
>>>>> io.scif, and an artifactId of scifio). Presumably at the latest version.
>>>>> You can search for that here:
>>>>>
>>>>>
>>>>> http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>>>
>>>>> So your dependency block in this case would be:
>>>>>
>>>>>     <dependency>
>>>>>       <groupId>io.scif</groupId>
>>>>>       <artifactId>scifio</artifactId>
>>>>>       <version>0.17.1</version>
>>>>>     </dependency>
>>>>>
>>>>> Note that that block of XML is available for copy-pasting from the
>>>>> link above.
>>>>>
>>>>> > I am completely new to maven
>>>>>
>>>>> For more information, see:
>>>>>     http://imagej.net/Maven
>>>>>
>>>>> Regards,
>>>>> Curtis
>>>>>
>>>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz>
>>>>> wrote:
>>>>>
>>>>>> I am investigating the using ImgLib2 for a project.
>>>>>>
>>>>>> I am using NetBeans and have managed to create a NetBeans Mavern
>>>>>> project and have  added a dependency for ImgLib2 Core Library and that
>>>>>> seems to be working OK.
>>>>>>
>>>>>> I now want to add the least possible requirements for the purpose of
>>>>>> opening some image files.
>>>>>>
>>>>>> How do I establish what Maven projects I need to include?
>>>>>>
>>>>>> I have cloned  the ImgLib2 Examples project and got that working but
>>>>>> that seems to include all manner of things that I suspect I do not need.
>>>>>>
>>>>>> When I go to my NetBeans project dependence, select Add dependency,
>>>>>> then type SCIF to the query text box, I get a huge list of possibilities.
>>>>>>
>>>>>> I am completely new to maven and so do not know what I am doing with
>>>>>> it!
>>>>>>
>>>>>> ? Michael Ellis
>>>>>> Digital Scientific UK Ltd.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> ImageJ-devel mailing list
>>>>>> ImageJ-devel at imagej.net
>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141210/f55f6917/attachment-0001.html>

From nico.stuurman at ucsf.edu  Mon Dec 15 00:35:31 2014
From: nico.stuurman at ucsf.edu (Nico Stuurman)
Date: Sun, 14 Dec 2014 22:35:31 -0800
Subject: [ImageJ-devel] Multiview Reconstruction plugin fails because of
	missing class in imglib2
In-Reply-To: <D02A3D03-D202-42F7-989A-EE6D145D9734@mpi-cbg.de>
References: <8BE4A3EB-C3FD-428F-B71B-E7FF372ADEAD@ucsf.edu>
	<D02A3D03-D202-42F7-989A-EE6D145D9734@mpi-cbg.de>
Message-ID: <2299F977-9424-4BA6-896F-4F2C6D56A62E@ucsf.edu>

Hi Stephan,

Moving this thread to the imagej-devel list since Wayne indicated that is the place for imglib2 related issues.  Please see below, and please continue this discussion on the imagej-devel list rather than the image list (sorry for starting it there!):

> I am a bit confused why that happens. In ImgLib2, the Pair class was moved from net.imglib2 to net.imglib2.util for the release version. To the best of my knowledge, Fiji currently still comes with imglib2-2.0.0-beta-26.jar - so that?s why it doesn?t find the class. But the multi-view reconstruction plugin (http://fiji.sc/Multiview-Reconstruction <http://fiji.sc/Multiview-Reconstruction>) that comes with the bigdataviewer update site is still build for the imglib2-2.0.0-beta-26.jar. If you build it yourself, please use the branch ?compatibility? as ?master? works with the release version of imglib2.

This is with the binary distribution of the Multiview Reconstruction plugin, i.e. the version of the plugin that is installed through the Fiji updater.   Is it possible that the code on the BigDatatViewer update site is build from the master branch rather than the ?compatibility? branch?

Best,

Nico

> 
> Cheers,
> Stephan
> 
>> On Dec 12, 2014, at 20:52 , Nico Stuurman <nico.stuurman at ucsf.edu> wrote:
>> 
>> Using an up-to-date Fiji installation, the Multiview Registration plugin fails because it can not find the class net.imglib2.util.Pair.  Indeed, the same error can be triggered with the following Beanshell script:
>> 
>> import net.imglib2.util.*;
>> t = new Pair();
>> 
>> It is a bit unclear to me whether the function has just been removed or was just added, but clearly, the plugin code and Fiji itself use different version of the imglib2. Is there any way to get this to work (I would love to try out the plugin with my data)?  
>> 
>> I did try the lifeline version, but not sure if that autoupdates to the latest when I add the BigDataViewer update site, in any case, that version gives me the same problem.  
>> 
>> B.t.w., I am not sure how the developers would like to be contacted, but I did file a bug report (#975). Also happy to try fix this myself, but this seems to be a higher level packaging problem that is not easily penetrable.
>> 
>> Best,
>> 
>> Nico
>> 
>> --
>> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
> 
> 
> --
> ImageJ mailing list: http://imagej.nih.gov/ij/list.html

Nico Stuurman

Vale Lab
HHMI / Dept. of Cellular and Molecular Pharmacology
University of California, San Francisco
Genentech Hall, Room N316
600 16th street
San Francisco, CA 94158-2517

email: nico.stuurman at ucsf.edu
phone: (415) 514-3927
fax: (415) 476-5233






-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141214/6e039b05/attachment.html>

From ctrueden at wisc.edu  Mon Dec 15 10:42:15 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Mon, 15 Dec 2014 10:42:15 -0600
Subject: [ImageJ-devel] Multiview Reconstruction plugin fails because of
	missing class in imglib2
In-Reply-To: <8BE4A3EB-C3FD-428F-B71B-E7FF372ADEAD@ucsf.edu>
References: <8BE4A3EB-C3FD-428F-B71B-E7FF372ADEAD@ucsf.edu>
Message-ID: <CADN69y=C1s_SoYNoUetiS32xzbSh1ub9Woyj1x+7qfGOm_b_NQ@mail.gmail.com>

Hi Nico,

> I am not sure how the developers would like to be contacted, but I did
> file a bug report (#975). Also happy to try fix this myself, but this
> seems to be a higher level packaging problem that is not easily
> penetrable.

The bug report is great -- let's use that for any further discussion.

http://fiji.sc/bugzilla/show_bug.cgi?id=975

Regards,
Curtis

On Fri, Dec 12, 2014 at 1:52 PM, Nico Stuurman <nico.stuurman at ucsf.edu>
wrote:

> Using an up-to-date Fiji installation, the Multiview Registration plugin
> fails because it can not find the class net.imglib2.util.Pair.  Indeed, the
> same error can be triggered with the following Beanshell script:
>
> import net.imglib2.util.*;
> t = new Pair();
>
> It is a bit unclear to me whether the function has just been removed or
> was just added, but clearly, the plugin code and Fiji itself use different
> version of the imglib2. Is there any way to get this to work (I would love
> to try out the plugin with my data)?
>
> I did try the lifeline version, but not sure if that autoupdates to the
> latest when I add the BigDataViewer update site, in any case, that version
> gives me the same problem.
>
> B.t.w., I am not sure how the developers would like to be contacted, but I
> did file a bug report (#975). Also happy to try fix this myself, but this
> seems to be a higher level packaging problem that is not easily penetrable.
>
> Best,
>
> Nico
>
> --
> ImageJ mailing list: http://imagej.nih.gov/ij/list.html
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141215/b5303e9b/attachment.html>

From preibisch at mpi-cbg.de  Tue Dec 16 03:49:12 2014
From: preibisch at mpi-cbg.de (Stephan Preibisch)
Date: Tue, 16 Dec 2014 10:49:12 +0100
Subject: [ImageJ-devel] Multiview Reconstruction plugin fails because of
	missing class in imglib2
In-Reply-To: <CADN69y=C1s_SoYNoUetiS32xzbSh1ub9Woyj1x+7qfGOm_b_NQ@mail.gmail.com>
References: <8BE4A3EB-C3FD-428F-B71B-E7FF372ADEAD@ucsf.edu>
	<CADN69y=C1s_SoYNoUetiS32xzbSh1ub9Woyj1x+7qfGOm_b_NQ@mail.gmail.com>
Message-ID: <BB4ACF8E-65DE-4BFF-9BD0-53CF8F36210B@mpi-cbg.de>

I uploaded a new version from the compatibility branch (which builds against imglib-2.0.0-beta26), should work now. The master branch still builds against the first stable release of imglib-2.0.0, as far as this is in Fiji, these problems should be gone.

Thanks everyone!

Cheers, Steffi

> On Dec 15, 2014, at 17:42 , Curtis Rueden <ctrueden at wisc.edu> wrote:
> 
> Hi Nico,
> 
> > I am not sure how the developers would like to be contacted, but I did
> > file a bug report (#975). Also happy to try fix this myself, but this
> > seems to be a higher level packaging problem that is not easily
> > penetrable.
> 
> The bug report is great -- let's use that for any further discussion.
> 
> http://fiji.sc/bugzilla/show_bug.cgi?id=975 <http://fiji.sc/bugzilla/show_bug.cgi?id=975>
> 
> Regards,
> Curtis
> 
> On Fri, Dec 12, 2014 at 1:52 PM, Nico Stuurman <nico.stuurman at ucsf.edu <mailto:nico.stuurman at ucsf.edu>> wrote:
> Using an up-to-date Fiji installation, the Multiview Registration plugin fails because it can not find the class net.imglib2.util.Pair.  Indeed, the same error can be triggered with the following Beanshell script:
> 
> import net.imglib2.util.*;
> t = new Pair();
> 
> It is a bit unclear to me whether the function has just been removed or was just added, but clearly, the plugin code and Fiji itself use different version of the imglib2. Is there any way to get this to work (I would love to try out the plugin with my data)?
> 
> I did try the lifeline version, but not sure if that autoupdates to the latest when I add the BigDataViewer update site, in any case, that version gives me the same problem.
> 
> B.t.w., I am not sure how the developers would like to be contacted, but I did file a bug report (#975). Also happy to try fix this myself, but this seems to be a higher level packaging problem that is not easily penetrable.
> 
> Best,
> 
> Nico
> 
> --
> ImageJ mailing list: http://imagej.nih.gov/ij/list.html <http://imagej.nih.gov/ij/list.html>
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/33fcf376/attachment.html>

From pietzsch at mpi-cbg.de  Tue Dec 16 07:54:57 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Tue, 16 Dec 2014 14:54:57 +0100
Subject: [ImageJ-devel] releaseVersion.sh script failed -- how to recover
Message-ID: <A905789A-685A-4D3E-AD8E-61164C6754F3@mpi-cbg.de>

Hi,

I just tried to releaseVersion.sh for https://github.com/bigdataviewer/spimdata project.
It failed in the middle of the release:
In the imagej maven repository http://maven.imagej.net/index.html#nexus-search;quick~spim_data the 
spim_data-1.0.0-beta-4.jar and
spim_data-1.0.0-beta-4-sources.jar are there.
The upload of the spim_data-1.0.0-beta-4-javadoc.jar is missing.
That?s where the script failed:
?
Dec 16, 2014 2:36:40 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:40 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Uploaded: http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/maven-metadata.xml (772 B at 0.4 KB/sec)
Uploading: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
Dec 16, 2014 2:36:41 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:41 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:43 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Uploaded: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar (114 KB at 44.1 KB/sec)
Uploading: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
Dec 16, 2014 2:36:43 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:44 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 22.047 s
[INFO] Finished at: 2014-12-16T14:36:44+01:00
[INFO] Final Memory: 33M/447M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.8.1:deploy (default-deploy) on project spim_data: Failed to deploy artifacts: Could not transfer artifact sc.fiji:spim_data:jar:sources:1.0.0-beta-4 from/to imagej.releases (dav:http://maven.imagej.net/content/repositories/releases): Failed to transfer file: http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar. Return code is: 400 -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
pietzsch at tomancak-mac-17:~/workspace/BigDataViewer/SpimData ((spim_data-1.0.0-beta-4))$


Now, I don?t know how to proceed...
In git I?m in a detached HEAD state at spim_data-1.0.0-beta-4.
Can I somehow manually try to upload the spim_data-1.0.0-beta-4-javadoc.jar?
And then just checkout master branch again?
Or, can I git reset HEAD^ and re-run the releaseVersion.sh (Is it even possible to re-deploy the already deployed jars?)?

thanks for any help,
Tobias
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/27fec6e7/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/27fec6e7/attachment.pgp>

From pietzsch at mpi-cbg.de  Tue Dec 16 08:12:39 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Tue, 16 Dec 2014 15:12:39 +0100
Subject: [ImageJ-devel] ImgLib2 Release Announcement
Message-ID: <C235AB53-6BFB-4C24-ADA5-D904CA332109@mpi-cbg.de>

Hi everyone,

We are happy to announce the first stable release version of the ImgLib2 core library!

This release was a central goal of the recent hackathon at LOCI in Madison, during the week of October 13 - 17.

The ImgLib2 core library is now available on Maven Central [1], and the source code for all ImgLib2 projects is accessible on GitHub [2].

Like the SciJava and ImageJ2 projects, ImgLib2 releases now follow the ?semantic versioning? scheme [3]. Also, the project and git repository structure has changed. The main imglib repository has been split into multiple repositories, named consistently with the artifact names and java package prefixes [4]. Projects are now coupled using non-SNAPSHOT versions, in order to achieve reproducible builds [5].

For further technical details on project structure, see http://imagej.net/Architecture

Before coming out of beta, we have made several last-minute changes to the
code:
  ? All @Deprecated methods and classes have been removed.
  ? All metadata handling (formerly imglib2-meta subproject) is being moved
    into imagej-common. From ImgLib2 core, the classes AnnotatedSpace,
    AbstractAnnotatedSpace, and Axis where moved to imagej-common.
  ? The current ROI representation wss not considered stable enough to be
    included in a release. The net.imglib2.roi and net.imglib2.labeling
    packages where moved to the new imglib2-roi subproject which will remain
    in beta for now.
  ? The net.imglib2.multithreading package was moved to imglib2-algorithm and
    deprecated.
  ? We merged work by Albert Cardona and Stephan Preibisch on "fractional"
    types. ImgLib2 NativeTypes map pixels into primitive arrays, where often
    the mapping is one-to-one. For example, a UnsignedByteType pixel maps into
    one byte of a primitive byte[] array. With fractional types this mapping
    maybe non-integral, for example Unsigned12BitType maps pixels into a long[]
    array, where each pixel occupies 12/64 longs.
  ? Superfluous generic parameters were removed from Projector<A,B> interface
    which is now only Projector. Projector implementations were fixed
    accordingly.
  ? Several classes were renamed or moved to more suitable places:
     ? Extended[Real]RandomAccessibleInterval moved to the net.imglib2.view
       package.
     ? RandomAccessibleOnRealRandomAccessible moved to the net.imglib2.view
       package.
     ? Binning moved to the net.imglib2.util package.
     ? The contents of package net.imglib2.collection (KDTree etc) moved to the
       net.imglib2 package.
     ? net.imglib2.concatenate.Util was renamed to
       net.imglib2.concatenate.ConcatenateUtils.
     ? Bounded moved to the net.imglib2.outofbounds package.
     ? The class NearestNeighborInterpolator from package
       net.imglib2.interpolation.neighborsearch was renamed to
       NearestNeighborSearchInterpolator (to avoid confusion with the
       net.imglib2.interpolation.randomaccess.NearestNeighborInterpolator
       class).
     ? The Pair interface moved to the net.imglib2.util package.
  ? The net.imglib2.util.Util class was cleaned up:
     ? Methods getTypeFromRandomAccess() and getTypeFromRealRandomAccess() were
       removed. We considered them too dangerous because the RandomAccess may
       be pointing to invalid position.
     ? Unused methods setCoordinateRecursive() and getRecursiveCoordinates()
       were removed.
     ? Some variants of computeLength() and computeDistance() were removed. Use
       methods distance() and length() from net.imglib2.util.LinAlgHelpers
       instead.
     ? Methods computeMedian(), computeAverage(), etc. were renamed to
       median(), average(), etc.
  ? These unused classes were removed:
     ? IterableIntervalSubsetT
     ? Triple
     ? RealPositionableFloorPositionable
     ? RealPositionableRoundPositionable
     ? ImgTranslationAdapter
  ? Packages net.imglib2.img.constant and net.imglib2.sampler.special were
    removed (ConstantImg, ConstantRandomAccessible, etc). Similar functionality
    can now be achieved through the net.imglib2.util.ConstantUtils class and
    Views.

All ImgLib2 subprojects have been adapted to these changes and released (in some cases as new beta versions).

One thing still pending is to upload these new ImgLib2 releases to the ImageJ and Fiji update sites, making them available to users of ImageJ and Fiji. This change has been rather involved, since there is a lot of downstream code affected by the API changes. But we expect to make the new ImgLib2 available to users before the end of the calendar year. Stay tuned for further announcements!

Best regards from the ImgLib2 release team,
Tobias Pietzsch
Stephan Saalfeld
Stephan Preibisch
Curtis Rueden
Johannes Schindelin
Mark Hiner

[1] http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22net.imglib2%22
[2] https://github.com/imglib
[3] http://imagej.net/Architecture#Versioning
[4] http://imagej.net/Architecture#Git_repositories
[5] http://imagej.net/Architecture#Reproducible_builds



From pietzsch at mpi-cbg.de  Tue Dec 16 08:18:50 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Tue, 16 Dec 2014 15:18:50 +0100
Subject: [ImageJ-devel] releaseVersion.sh script failed -- how to recover
In-Reply-To: <A905789A-685A-4D3E-AD8E-61164C6754F3@mpi-cbg.de>
References: <A905789A-685A-4D3E-AD8E-61164C6754F3@mpi-cbg.de>
Message-ID: <DA0E1178-AF0A-4418-96E1-0436BDC53393@mpi-cbg.de>

Ok, and the same thing happened with bigdataviewer-core. Failed on releasing the javadoc and is now stuck?

I don?t really understand what goes on in the release-version.sh script. From the git history of that script it does not look like there have been recent changes that could explain why it fails now and didn?t a few weeks back. Is there something changed in the maven.imagej.net that could cause it?

best regards,
Tobias

On 16 Dec 2014, at 14:54, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:

> Hi,
> 
> I just tried to releaseVersion.sh for https://github.com/bigdataviewer/spimdata project.
> It failed in the middle of the release:
> In the imagej maven repository http://maven.imagej.net/index.html#nexus-search;quick~spim_data the 
> spim_data-1.0.0-beta-4.jar and
> spim_data-1.0.0-beta-4-sources.jar are there.
> The upload of the spim_data-1.0.0-beta-4-javadoc.jar is missing.
> That?s where the script failed:
> ?
> Dec 16, 2014 2:36:40 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:40 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Uploaded: http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/maven-metadata.xml (772 B at 0.4 KB/sec)
> Uploading: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
> Dec 16, 2014 2:36:41 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:41 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:43 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Uploaded: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar (114 KB at 44.1 KB/sec)
> Uploading: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
> Dec 16, 2014 2:36:43 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:44 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> [INFO] ------------------------------------------------------------------------
> [INFO] BUILD FAILURE
> [INFO] ------------------------------------------------------------------------
> [INFO] Total time: 22.047 s
> [INFO] Finished at: 2014-12-16T14:36:44+01:00
> [INFO] Final Memory: 33M/447M
> [INFO] ------------------------------------------------------------------------
> [ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.8.1:deploy (default-deploy) on project spim_data: Failed to deploy artifacts: Could not transfer artifact sc.fiji:spim_data:jar:sources:1.0.0-beta-4 from/to imagej.releases (dav:http://maven.imagej.net/content/repositories/releases): Failed to transfer file: http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar. Return code is: 400 -> [Help 1]
> [ERROR]
> [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
> [ERROR]
> [ERROR] For more information about the errors and possible solutions, please read the following articles:
> [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
> pietzsch at tomancak-mac-17:~/workspace/BigDataViewer/SpimData ((spim_data-1.0.0-beta-4))$
> 
> 
> Now, I don?t know how to proceed...
> In git I?m in a detached HEAD state at spim_data-1.0.0-beta-4.
> Can I somehow manually try to upload the spim_data-1.0.0-beta-4-javadoc.jar?
> And then just checkout master branch again?
> Or, can I git reset HEAD^ and re-run the releaseVersion.sh (Is it even possible to re-deploy the already deployed jars?)?
> 
> thanks for any help,
> Tobias
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/51a76069/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/51a76069/attachment.pgp>

From bnorthan at gmail.com  Tue Dec 16 09:10:00 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Tue, 16 Dec 2014 10:10:00 -0500
Subject: [ImageJ-devel] latest LoadAndDisplayDataset()
Message-ID: <CAMWa8i0BB2hKVdnZyyeNnAgNhJp2rMAyzJPc-3twZwKJANA5dQ@mail.gmail.com>

Hi developers

I was having trouble with some previously functional ij-ops related jython
scripts.  So I grabbed a fresh copy of imagej-tutorials to double check
some things.

I noticed that in the 'LoadAndDisplayDataSet' project
ij.dataset().open(...) is deprecated.  When running the tutorial I get a
'No such class: io.scif.config.SCIFIOConfig' exception.

Do I need to be using a different call to open a dataset??  If so can
anyone point me to info on this?

Sorry if I missed an announcement or other thread about this, I looked
around a bit and couldn't find anything.

Thanks a lot

Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/4e556608/attachment.html>

From ctrueden at wisc.edu  Tue Dec 16 09:55:21 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 16 Dec 2014 09:55:21 -0600
Subject: [ImageJ-devel] releaseVersion.sh script failed -- how to recover
In-Reply-To: <DA0E1178-AF0A-4418-96E1-0436BDC53393@mpi-cbg.de>
References: <A905789A-685A-4D3E-AD8E-61164C6754F3@mpi-cbg.de>
	<DA0E1178-AF0A-4418-96E1-0436BDC53393@mpi-cbg.de>
Message-ID: <CADN69ynoRSSacYH3K0GiOyPQZ3Y4VXPcqfioT_qmoxmmpXxj_g@mail.gmail.com>

Hi Tobias,

> Failed on releasing the javadoc and is now stuck?

It is probably a network error. This has happened to me several times when
I try to release from a remote machine, even one on the same subnet as the
ImageJ Maven server. So to avoid that, I always run release-version.sh from
the dev server itself. Or use the Release-Version Jenkins job to release
when possible.

> I don?t really understand what goes on in the release-version.sh
> script.

The script mostly just leans on the maven-release-plugin. The actual deploy
happens with a Maven wagon plugin: the wagon-webdav-jackrabbit [1]. The
version we used was chosen for cross-compatibility with both Maven 2 and
Maven 3 -- newer webdav wagon plugins I looked at stopped working with
Maven 2. But now that we have migrated fully to requiring Maven 3 anyway,
we should probably upgrade the wagon plugin to the latest, to see whether
it helps with these connectivity issues.

In the meantime, let's add the BDV projects to the Jenkins Release-Version
job. See you on IRC.

Regards,
Curtis

[1]
https://github.com/scijava/pom-scijava/blob/pom-scijava-5.2.3/pom.xml#L919-L927

On Tue, Dec 16, 2014 at 8:18 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
wrote:
>
> Ok, and the same thing happened with bigdataviewer-core. Failed on
> releasing the javadoc and is now stuck?
>
> I don?t really understand what goes on in the release-version.sh script.
> From the git history of that script it does not look like there have been
> recent changes that could explain why it fails now and didn?t a few weeks
> back. Is there something changed in the maven.imagej.net that could cause
> it?
>
> best regards,
> Tobias
>
> On 16 Dec 2014, at 14:54, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
>
> Hi,
>
> I just tried to releaseVersion.sh for
> https://github.com/bigdataviewer/spimdata project.
> It failed in the middle of the release:
> In the imagej maven repository
> http://maven.imagej.net/index.html#nexus-search;quick~spim_data the
> spim_data-1.0.0-beta-4.jar and
> spim_data-1.0.0-beta-4-sources.jar are there.
> The upload of the spim_data-1.0.0-beta-4-javadoc.jar is missing.
> That?s where the script failed:
> ?
> Dec 16, 2014 2:36:40 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:40 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Uploaded:
> http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/maven-metadata.xml
> (772 B at 0.4 KB/sec)
> Uploading: dav:http://
> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
> Dec 16, 2014 2:36:41 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:41 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:42 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:42 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:42 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:43 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Uploaded: dav:http://
> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
> (114 KB at 44.1 KB/sec)
> Uploading: dav:http://
> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
> Dec 16, 2014 2:36:43 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:44 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> [INFO]
> ------------------------------------------------------------------------
> [INFO] BUILD FAILURE
> [INFO]
> ------------------------------------------------------------------------
> [INFO] Total time: 22.047 s
> [INFO] Finished at: 2014-12-16T14:36:44+01:00
> [INFO] Final Memory: 33M/447M
> [INFO]
> ------------------------------------------------------------------------
> [ERROR] Failed to execute goal
> org.apache.maven.plugins:maven-deploy-plugin:2.8.1:deploy (default-deploy)
> on project spim_data: Failed to deploy artifacts: Could not transfer
> artifact sc.fiji:spim_data:jar:sources:1.0.0-beta-4 from/to imagej.releases
> (dav:http://maven.imagej.net/content/repositories/releases): Failed to
> transfer file:
> http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar.
> Return code is: 400 -> [Help 1]
> [ERROR]
> [ERROR] To see the full stack trace of the errors, re-run Maven with the
> -e switch.
> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
> [ERROR]
> [ERROR] For more information about the errors and possible solutions,
> please read the following articles:
> [ERROR] [Help 1]
> http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
> pietzsch at tomancak-mac-17:~/workspace/BigDataViewer/SpimData
> ((spim_data-1.0.0-beta-4))$
>
>
> Now, I don?t know how to proceed...
> In git I?m in a detached HEAD state at spim_data-1.0.0-beta-4.
> Can I somehow manually try to upload the
> spim_data-1.0.0-beta-4-javadoc.jar?
> And then just checkout master branch again?
> Or, can I git reset HEAD^ and re-run the releaseVersion.sh (Is it even
> possible to re-deploy the already deployed jars?)?
>
> thanks for any help,
> Tobias
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/2b200980/attachment-0001.html>

From hiner at wisc.edu  Tue Dec 16 10:24:17 2014
From: hiner at wisc.edu (Mark Hiner)
Date: Tue, 16 Dec 2014 10:24:17 -0600
Subject: [ImageJ-devel] latest LoadAndDisplayDataset()
In-Reply-To: <CAMWa8i0BB2hKVdnZyyeNnAgNhJp2rMAyzJPc-3twZwKJANA5dQ@mail.gmail.com>
References: <CAMWa8i0BB2hKVdnZyyeNnAgNhJp2rMAyzJPc-3twZwKJANA5dQ@mail.gmail.com>
Message-ID: <CA+B=mGo6UfTids_HVwkx0i0e8XfX0EFKxNumKOfG3m1HJE-4XA@mail.gmail.com>

Hi Brian,

 This was a known issue <https://github.com/imagej/imagej-common/issues/34>.
The original error was fixed
<https://github.com/imagej/imagej-common/compare/055005ff59b8df637a1b1bfb403af0da9e4f3bdc...e11b7728408c7982939e075bba389378f5354398>,
but hasn't been propagated up to imagej-tutorials. This issue
<https://github.com/imagej/imagej-tutorials/issues/11> has more info.

 Sorry for the trouble... we hope to have the tutorials fixed in the next
day or so.

Thanks!
- Mark

On Tue, Dec 16, 2014 at 9:10 AM, Brian Northan <bnorthan at gmail.com> wrote:

>
> Hi developers
>
> I was having trouble with some previously functional ij-ops related jython
> scripts.  So I grabbed a fresh copy of imagej-tutorials to double check
> some things.
>
> I noticed that in the 'LoadAndDisplayDataSet' project
> ij.dataset().open(...) is deprecated.  When running the tutorial I get a
> 'No such class: io.scif.config.SCIFIOConfig' exception.
>
> Do I need to be using a different call to open a dataset??  If so can
> anyone point me to info on this?
>
> Sorry if I missed an announcement or other thread about this, I looked
> around a bit and couldn't find anything.
>
> Thanks a lot
>
> Brian
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/c36640a4/attachment.html>

From bnorthan at gmail.com  Tue Dec 16 10:56:35 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Tue, 16 Dec 2014 11:56:35 -0500
Subject: [ImageJ-devel] latest LoadAndDisplayDataset()
In-Reply-To: <CA+B=mGo6UfTids_HVwkx0i0e8XfX0EFKxNumKOfG3m1HJE-4XA@mail.gmail.com>
References: <CAMWa8i0BB2hKVdnZyyeNnAgNhJp2rMAyzJPc-3twZwKJANA5dQ@mail.gmail.com>
	<CA+B=mGo6UfTids_HVwkx0i0e8XfX0EFKxNumKOfG3m1HJE-4XA@mail.gmail.com>
Message-ID: <CAMWa8i1JZuF6smLB9OE0fJc1jzx89ZAmZxaABNEmMObtABHFDA@mail.gmail.com>

Hi Mark

Thanks a lot.   Things are working now.  Looks like I just had to specify
that my development project use the latest imagej-common.

Brian

On Tue, Dec 16, 2014 at 11:24 AM, Mark Hiner <hiner at wisc.edu> wrote:
>
> Hi Brian,
>
>  This was a known issue
> <https://github.com/imagej/imagej-common/issues/34>. The original error
> was fixed
> <https://github.com/imagej/imagej-common/compare/055005ff59b8df637a1b1bfb403af0da9e4f3bdc...e11b7728408c7982939e075bba389378f5354398>,
> but hasn't been propagated up to imagej-tutorials. This issue
> <https://github.com/imagej/imagej-tutorials/issues/11> has more info.
>
>  Sorry for the trouble... we hope to have the tutorials fixed in the next
> day or so.
>
> Thanks!
> - Mark
>
> On Tue, Dec 16, 2014 at 9:10 AM, Brian Northan <bnorthan at gmail.com> wrote:
>
>>
>> Hi developers
>>
>> I was having trouble with some previously functional ij-ops related
>> jython scripts.  So I grabbed a fresh copy of imagej-tutorials to double
>> check some things.
>>
>> I noticed that in the 'LoadAndDisplayDataSet' project
>> ij.dataset().open(...) is deprecated.  When running the tutorial I get a
>> 'No such class: io.scif.config.SCIFIOConfig' exception.
>>
>> Do I need to be using a different call to open a dataset??  If so can
>> anyone point me to info on this?
>>
>> Sorry if I missed an announcement or other thread about this, I looked
>> around a bit and couldn't find anything.
>>
>> Thanks a lot
>>
>> Brian
>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/0ac6d440/attachment.html>

From ctrueden at wisc.edu  Tue Dec 16 14:29:21 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 16 Dec 2014 14:29:21 -0600
Subject: [ImageJ-devel] Disruptive ImageJ updates this Friday
Message-ID: <CADN69ynLSTUuN4CTVmhr=7Rxu68s8Vbm-LUw1nVbABETJqDrnA@mail.gmail.com>

Hi everyone,

In the wake of the recent ImgLib2 release [1], the new ImgLib2 components
will be uploaded to the core ImageJ and Fiji update sites this Friday,
December 19.

While we have made a concerted effort to update all core ImageJ and Fiji
components to the new version of ImgLib2, there are still consequences to
this upgrade:

- ImageJ users: **plugins on third party update sites may break** if they
use an outdated version of ImgLib2. If you use a lot of update sites, be
cautious about updating during this transitional period. There is a new
2014-Nov-25 Life-Line version of Fiji available for download [2], in case
you need to roll back.

- Plugin developers: **you should update your plugins** which use ImgLib2
to depend on the latest version [3]. Then after Friday's upload, please
upload your updated versions. If you need any assistance, send a mail to
imagej-devel and/or fiji-devel.

Now that the library is out of beta, the ImgLib2 developers will make every
effort to maintain backward compatibility.

Regards,
Curtis

[1] http://imagej.net/2014-12-10_-_ImgLib2_released

[2] http://fiji.sc/Downloads#Fiji

[3] One easy way to do this is to extend pom-imagej 5.2.1, or pom-fiji
6.1.1 if your plugin is a Fiji component. If in doubt, check your
dependency hierarchy to make sure you are depending on imglib2 2.0.1 or
newer (you can run "mvn dependency:tree" or check the Dependency Hierarchy
in Eclipse). Further reading: http://imagej.net/Architecture
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141216/f5898d7c/attachment.html>

From michael.ellis at dsuk.biz  Wed Dec 17 02:54:13 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Wed, 17 Dec 2014 08:54:13 +0000
Subject: [ImageJ-devel] Differences between .fft.FourierTransform and
	.fft2.FFT
In-Reply-To: <CADN69ynLSTUuN4CTVmhr=7Rxu68s8Vbm-LUw1nVbABETJqDrnA@mail.gmail.com>
References: <CADN69ynLSTUuN4CTVmhr=7Rxu68s8Vbm-LUw1nVbABETJqDrnA@mail.gmail.com>
Message-ID: <334BAF73-798D-45B6-A9E2-D28951F40E97@dsuk.biz>

I am trying to reproduce example 

imglib2-tutorials Example6c

https://github.com/imglib/imglib2-tutorials/blob/master/src/main/java/Example6c.java

using the new net.imglib2.algorithm.fft2.FFT rather than the old deprecated net.imglib2.algorithm.fft.FourierTransform

The original example code does:

        // compute fourier transform of the template
        final FourierTransform< FloatType, ComplexFloatType> fft
                = new FourierTransform< FloatType, ComplexFloatType>(
                        template, new ComplexFloatType());
        fft.process();
        Img< ComplexFloatType> templateFFT = fft.getResult();

Which produces an image of size templateFFT minX=0 minY=0 maxX=40 maxY=79

My new code looks like this:

            ImgFactory<ComplexFloatType> fftImgFactory = null;
            try {
                fftImgFactory = template.factory().imgFactory(new ComplexFloatType());
            } catch (IncompatibleTypeException ex) {
                fftImgFactory = null;
            }

            // compute fourier transform of the template
            Img< ComplexFloatType> templateFFT2 = FFT.realToComplex(template, fftImgFactory);

Which produces an image of size templateFFT2 minX=0 minY=0 maxX=36 maxY=71

Also it looks like the image produced by the old FourierTransform and new FFT differ in that the results are shifted in X and Y.

Can anyone help?

In particular I want to achieve the image alignment functionality that is done in Example6c.java without using deprecated code.

Many thanks ? Michael Ellis





From bnorthan at gmail.com  Wed Dec 17 08:42:42 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 17 Dec 2014 09:42:42 -0500
Subject: [ImageJ-devel] Differences between .fft.FourierTransform and
	.fft2.FFT
In-Reply-To: <334BAF73-798D-45B6-A9E2-D28951F40E97@dsuk.biz>
References: <CADN69ynLSTUuN4CTVmhr=7Rxu68s8Vbm-LUw1nVbABETJqDrnA@mail.gmail.com>
	<334BAF73-798D-45B6-A9E2-D28951F40E97@dsuk.biz>
Message-ID: <CAMWa8i2HeyXzoXyAu=d7+k7hSk+3b4TB7qSYmupZx7bhisaGRg@mail.gmail.com>

Hi Micheal

I am not entirely familiar with 'FourierTransform' because I've been using
the newer FFT.java class but I think the differences you are seeing are
because 'FourierTransform' has different preprocessing and extension
related settings.

If you look at FourierTransform.java you can see that the constructor you
used in turn calls another constructor

https://github.com/imglib/imglib2-algorithm-gpl/blob/master/src/main/java/net/imglib2/algorithm/fft/FourierTransform.java

It looks like the 'preprocessing' option defaults to
"relativeExtensionFade' and 'relativeImageExtension' is set to 0.25.

In contrast FFT.java only extends to the nearest 'fast' FFT size and uses a
constant padding strategy.

Keep us up to date on how things are going.  If you manage to get the
tutorial working with the new FFT I think that would be a great addition to
the tutorial.

Brian



On Wed, Dec 17, 2014 at 3:54 AM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:
>
> I am trying to reproduce example
>
> imglib2-tutorials Example6c
>
>
> https://github.com/imglib/imglib2-tutorials/blob/master/src/main/java/Example6c.java
>
> using the new net.imglib2.algorithm.fft2.FFT rather than the old
> deprecated net.imglib2.algorithm.fft.FourierTransform
>
> The original example code does:
>
>         // compute fourier transform of the template
>         final FourierTransform< FloatType, ComplexFloatType> fft
>                 = new FourierTransform< FloatType, ComplexFloatType>(
>                         template, new ComplexFloatType());
>         fft.process();
>         Img< ComplexFloatType> templateFFT = fft.getResult();
>
> Which produces an image of size templateFFT minX=0 minY=0 maxX=40 maxY=79
>
> My new code looks like this:
>
>             ImgFactory<ComplexFloatType> fftImgFactory = null;
>             try {
>                 fftImgFactory = template.factory().imgFactory(new
> ComplexFloatType());
>             } catch (IncompatibleTypeException ex) {
>                 fftImgFactory = null;
>             }
>
>             // compute fourier transform of the template
>             Img< ComplexFloatType> templateFFT2 =
> FFT.realToComplex(template, fftImgFactory);
>
> Which produces an image of size templateFFT2 minX=0 minY=0 maxX=36 maxY=71
>
> Also it looks like the image produced by the old FourierTransform and new
> FFT differ in that the results are shifted in X and Y.
>
> Can anyone help?
>
> In particular I want to achieve the image alignment functionality that is
> done in Example6c.java without using deprecated code.
>
> Many thanks ? Michael Ellis
>
>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141217/c399b3e5/attachment.html>

From preibisch at mpi-cbg.de  Wed Dec 17 08:48:58 2014
From: preibisch at mpi-cbg.de (Stephan Preibisch)
Date: Wed, 17 Dec 2014 15:48:58 +0100
Subject: [ImageJ-devel] ImgLib1/2 Wrappers broken in Fiji
Message-ID: <46222F28-E589-44E2-A5CD-B463B78CD929@mpi-cbg.de>

Hi guys,

in the current version of Fiji the ImgLib1/2 wrappers are broken. This is caused by the fact that the Wrappers in ImgLib1 are already updated to use the Fraction class of the "ImgLib2 Release Version?, while this is not in Fiji yet, it still has the ?Imglib2-beta-26?.

There are two ways to fix it.

1) We upload an older/fixed version of ImgLib1
2) We update ImgLib2 to the Release Version

This is the same problems as with my SPIM-Reconstruction pipeline we encountered during the last days.

What do you guys think?

Cheers,
Steffi

From ctrueden at wisc.edu  Wed Dec 17 10:42:12 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 17 Dec 2014 10:42:12 -0600
Subject: [ImageJ-devel] [fiji-devel] ImgLib1/2 Wrappers broken in Fiji
In-Reply-To: <46222F28-E589-44E2-A5CD-B463B78CD929@mpi-cbg.de>
References: <46222F28-E589-44E2-A5CD-B463B78CD929@mpi-cbg.de>
Message-ID: <CADN69ymE-nHA-YnV5AYP+fC_VsUrVeSeUR4eMqS4NVe6-YhmYg@mail.gmail.com>

Hi everyone,

> There are two ways to fix it.
>
> 1) We upload an older/fixed version of ImgLib1
> 2) We update ImgLib2 to the Release Version

Just to follow up on this thread: we settled on option 1 to tide things
over until Friday's big ImgLib2 upload.

Regards,
Curtis

On Wed, Dec 17, 2014 at 8:48 AM, Stephan Preibisch <preibisch at mpi-cbg.de>
wrote:
>
> Hi guys,
>
> in the current version of Fiji the ImgLib1/2 wrappers are broken. This is
> caused by the fact that the Wrappers in ImgLib1 are already updated to use
> the Fraction class of the "ImgLib2 Release Version?, while this is not in
> Fiji yet, it still has the ?Imglib2-beta-26?.
>
> There are two ways to fix it.
>
> 1) We upload an older/fixed version of ImgLib1
> 2) We update ImgLib2 to the Release Version
>
> This is the same problems as with my SPIM-Reconstruction pipeline we
> encountered during the last days.
>
> What do you guys think?
>
> Cheers,
> Steffi
>
> --
> --
> Please avoid top-posting, and please make sure to reply-to-all!
>
> Mailing list web interface: http://groups.google.com/group/fiji-devel
>
> ---
> You received this message because you are subscribed to the Google Groups
> "Fiji-devel" group.
> To unsubscribe from this group and stop receiving emails from it, send an
> email to fiji-devel+unsubscribe at googlegroups.com.
> For more options, visit https://groups.google.com/d/optout.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141217/e7143aa0/attachment.html>

From pietzsch at mpi-cbg.de  Thu Dec 18 08:39:44 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Thu, 18 Dec 2014 15:39:44 +0100
Subject: [ImageJ-devel] releaseVersion.sh script failed -- how to recover
In-Reply-To: <CADN69ynoRSSacYH3K0GiOyPQZ3Y4VXPcqfioT_qmoxmmpXxj_g@mail.gmail.com>
References: <A905789A-685A-4D3E-AD8E-61164C6754F3@mpi-cbg.de>
	<DA0E1178-AF0A-4418-96E1-0436BDC53393@mpi-cbg.de>
	<CADN69ynoRSSacYH3K0GiOyPQZ3Y4VXPcqfioT_qmoxmmpXxj_g@mail.gmail.com>
Message-ID: <B39472BA-B9DD-432A-80D5-D3E6202C5098@mpi-cbg.de>

Hi Curtis,

The Jenkins Release-Version job doesn?t currently work for me because
/tmp/hudson4570292381982454361.sh: 43: .: Can't open /var/lib/jenkins/.mvn.gnupg/tobias.pietzsch at jenkins.imagej.net.settings
Build step 'Execute shell' marked build as failure
Finished: FAILURE
Mark is helping me with this (thanks a lot Mark!), so hopefully it will work soon.


For the release-version.sh I doubt that it is a network issue because the error occured at exactly the same point for two different projects.
I noticed that the mvn outpu for the uploads of the jars follows this pattern:

[INFO] --- maven-deploy-plugin:2.8.1:deploy (default-deploy) @ spim_data ---
Uploading: dav:http:// maven.imagej.net/ content/ repositories/ releases/ sc/ fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.jar
?
Uploaded: dav:http:// maven.imagej.net/ content/ repositories/ releases/ sc/ fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.jar (171 KB at 60.0 KB/sec)
Uploading: http:// maven.imagej.net/ content/ repositories/ releases/ sc/ fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.pom
?
Uploaded: http:// maven.imagej.net/ content/ repositories/ releases/ sc/ fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.pom (5 KB at 2.4 KB/sec)

So always Uploading:<something> followed by Uploaded:<something>
For the failing projects, I get Uploaded:<something> for X.jar, X.pom, maven-metadata.xml, X-sources.jar
After that, I think it should try to upload the X-javadoc.jar
However, apparently, it tries to upload X-sources.jar again

Uploaded: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar (114 KB at 44.1 KB/sec)
Uploading: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
Dec 16, 2014 2:36:43 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
Dec 16, 2014 2:36:44 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
INFO: basic authentication scheme selected
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------

That seems odd. Could this be related to the Maven wagon plugin that you mentioned?


best regards,
Tobias

On 16 Dec 2014, at 16:55, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Tobias,
> 
> > Failed on releasing the javadoc and is now stuck?
> 
> It is probably a network error. This has happened to me several times when I try to release from a remote machine, even one on the same subnet as the ImageJ Maven server. So to avoid that, I always run release-version.sh from the dev server itself. Or use the Release-Version Jenkins job to release when possible.
> 
> > I don?t really understand what goes on in the release-version.sh
> > script.
> 
> The script mostly just leans on the maven-release-plugin. The actual deploy happens with a Maven wagon plugin: the wagon-webdav-jackrabbit [1]. The version we used was chosen for cross-compatibility with both Maven 2 and Maven 3 -- newer webdav wagon plugins I looked at stopped working with Maven 2. But now that we have migrated fully to requiring Maven 3 anyway, we should probably upgrade the wagon plugin to the latest, to see whether it helps with these connectivity issues.
> 
> In the meantime, let's add the BDV projects to the Jenkins Release-Version job. See you on IRC.
> 
> Regards,
> Curtis
> 
> [1] https://github.com/scijava/pom-scijava/blob/pom-scijava-5.2.3/pom.xml#L919-L927
> 
> On Tue, Dec 16, 2014 at 8:18 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
> Ok, and the same thing happened with bigdataviewer-core. Failed on releasing the javadoc and is now stuck?
> 
> I don?t really understand what goes on in the release-version.sh script. From the git history of that script it does not look like there have been recent changes that could explain why it fails now and didn?t a few weeks back. Is there something changed in the maven.imagej.net that could cause it?
> 
> best regards,
> Tobias
> 
> On 16 Dec 2014, at 14:54, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
> 
>> Hi,
>> 
>> I just tried to releaseVersion.sh for https://github.com/bigdataviewer/spimdata project.
>> It failed in the middle of the release:
>> In the imagej maven repository http://maven.imagej.net/index.html#nexus-search;quick~spim_data the 
>> spim_data-1.0.0-beta-4.jar and
>> spim_data-1.0.0-beta-4-sources.jar are there.
>> The upload of the spim_data-1.0.0-beta-4-javadoc.jar is missing.
>> That?s where the script failed:
>> ?
>> Dec 16, 2014 2:36:40 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:40 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Uploaded: http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/maven-metadata.xml (772 B at 0.4 KB/sec)
>> Uploading: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
>> Dec 16, 2014 2:36:41 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:41 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:42 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:43 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Uploaded: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar (114 KB at 44.1 KB/sec)
>> Uploading: dav:http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
>> Dec 16, 2014 2:36:43 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:44 PM org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> [INFO] ------------------------------------------------------------------------
>> [INFO] BUILD FAILURE
>> [INFO] ------------------------------------------------------------------------
>> [INFO] Total time: 22.047 s
>> [INFO] Finished at: 2014-12-16T14:36:44+01:00
>> [INFO] Final Memory: 33M/447M
>> [INFO] ------------------------------------------------------------------------
>> [ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.8.1:deploy (default-deploy) on project spim_data: Failed to deploy artifacts: Could not transfer artifact sc.fiji:spim_data:jar:sources:1.0.0-beta-4 from/to imagej.releases (dav:http://maven.imagej.net/content/repositories/releases): Failed to transfer file: http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar. Return code is: 400 -> [Help 1]
>> [ERROR]
>> [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
>> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
>> [ERROR]
>> [ERROR] For more information about the errors and possible solutions, please read the following articles:
>> [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
>> pietzsch at tomancak-mac-17:~/workspace/BigDataViewer/SpimData ((spim_data-1.0.0-beta-4))$
>> 
>> 
>> Now, I don?t know how to proceed...
>> In git I?m in a detached HEAD state at spim_data-1.0.0-beta-4.
>> Can I somehow manually try to upload the spim_data-1.0.0-beta-4-javadoc.jar?
>> And then just checkout master branch again?
>> Or, can I git reset HEAD^ and re-run the releaseVersion.sh (Is it even possible to re-deploy the already deployed jars?)?
>> 
>> thanks for any help,
>> Tobias
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141218/a255c806/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141218/a255c806/attachment.pgp>

From ctrueden at wisc.edu  Thu Dec 18 13:16:07 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 18 Dec 2014 13:16:07 -0600
Subject: [ImageJ-devel] releaseVersion.sh script failed -- how to recover
In-Reply-To: <B39472BA-B9DD-432A-80D5-D3E6202C5098@mpi-cbg.de>
References: <A905789A-685A-4D3E-AD8E-61164C6754F3@mpi-cbg.de>
	<DA0E1178-AF0A-4418-96E1-0436BDC53393@mpi-cbg.de>
	<CADN69ynoRSSacYH3K0GiOyPQZ3Y4VXPcqfioT_qmoxmmpXxj_g@mail.gmail.com>
	<B39472BA-B9DD-432A-80D5-D3E6202C5098@mpi-cbg.de>
Message-ID: <CADN69y=QGh-1CUajJChxYw-a_dqEP30Eb=zy6TZ5xgXUALOOWA@mail.gmail.com>

Hi Tobias & everyone,

Just to close out this thread: Tobias switched to doing releases using the
ImageJ Jenkins.

As for why it wasn't working from the CLI: maybe an issue with the version
of Maven being used? The problem looks vaguely familiar in my mind -- I
might have stumbled over it too a while back.

But since we have a working solution, we can worry about it later.

Regards,
Curtis

On Thu, Dec 18, 2014 at 8:39 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
wrote:
>
> Hi Curtis,
>
> The Jenkins Release-Version job doesn?t currently work for me because
>
> /tmp/hudson4570292381982454361.sh: 43: .: Can't open /var/lib/jenkins/.mvn.gnupg/tobias.pietzsch at jenkins.imagej.net.settings
> Build step 'Execute shell' marked build as failure
> Finished: FAILURE
>
> Mark is helping me with this (thanks a lot Mark!), so hopefully it will
> work soon.
>
>
> For the release-version.sh I doubt that it is a network issue because the
> error occured at exactly the same point for two different projects.
> I noticed that the mvn outpu for the uploads of the jars follows this
> pattern:
>
> [INFO] --- maven-deploy-plugin:2.8.1:deploy (default-deploy) @ spim_data
> ---
> Uploading: dav:http:// maven.imagej.net/ content/ repositories/ releases/
> sc/ fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.jar
> ?
> Uploaded: dav:http:// maven.imagej.net/ content/ repositories/ releases/
> sc/ fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.jar (171 KB at
> 60.0 KB/sec)
> Uploading: http:// maven.imagej.net/ content/ repositories/ releases/ sc/
> fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.pom
> ?
> Uploaded: http:// maven.imagej.net/ content/ repositories/ releases/ sc/
> fiji/ spim_data/ 1.0.0-beta-4/ spim_data-1.0.0-beta-4.pom (5 KB at 2.4
> KB/sec)
>
> So always Uploading:<something> followed by Uploaded:<something>
> For the failing projects, I get Uploaded:<something> for X.jar, X.pom,
> maven-metadata.xml, X-sources.jar
> After that, I think it should try to upload the X-javadoc.jar
> However, apparently, it tries to upload X-sources.jar again
>
> Uploaded: dav:http://
> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
> (114 KB at 44.1 KB/sec)
> Uploading: dav:http://
> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
> Dec 16, 2014 2:36:43 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> Dec 16, 2014 2:36:44 PM
> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
> INFO: basic authentication scheme selected
> [INFO]
> ------------------------------------------------------------------------
> [INFO] BUILD FAILURE
> [INFO]
> ------------------------------------------------------------------------
>
> That seems odd. Could this be related to the Maven wagon plugin that you
> mentioned?
>
>
> best regards,
> Tobias
>
> On 16 Dec 2014, at 16:55, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi Tobias,
>
> > Failed on releasing the javadoc and is now stuck?
>
> It is probably a network error. This has happened to me several times when
> I try to release from a remote machine, even one on the same subnet as the
> ImageJ Maven server. So to avoid that, I always run release-version.sh from
> the dev server itself. Or use the Release-Version Jenkins job to release
> when possible.
>
> > I don?t really understand what goes on in the release-version.sh
> > script.
>
> The script mostly just leans on the maven-release-plugin. The actual
> deploy happens with a Maven wagon plugin: the wagon-webdav-jackrabbit [1].
> The version we used was chosen for cross-compatibility with both Maven 2
> and Maven 3 -- newer webdav wagon plugins I looked at stopped working with
> Maven 2. But now that we have migrated fully to requiring Maven 3 anyway,
> we should probably upgrade the wagon plugin to the latest, to see whether
> it helps with these connectivity issues.
>
> In the meantime, let's add the BDV projects to the Jenkins Release-Version
> job. See you on IRC.
>
> Regards,
> Curtis
>
> [1]
> https://github.com/scijava/pom-scijava/blob/pom-scijava-5.2.3/pom.xml#L919-L927
>
> On Tue, Dec 16, 2014 at 8:18 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>
> wrote:
>>
>> Ok, and the same thing happened with bigdataviewer-core. Failed on
>> releasing the javadoc and is now stuck?
>>
>> I don?t really understand what goes on in the release-version.sh script.
>> From the git history of that script it does not look like there have been
>> recent changes that could explain why it fails now and didn?t a few weeks
>> back. Is there something changed in the maven.imagej.net that could
>> cause it?
>>
>> best regards,
>> Tobias
>>
>> On 16 Dec 2014, at 14:54, Tobias Pietzsch <pietzsch at mpi-cbg.de> wrote:
>>
>> Hi,
>>
>> I just tried to releaseVersion.sh for
>> https://github.com/bigdataviewer/spimdata project.
>> It failed in the middle of the release:
>> In the imagej maven repository
>> http://maven.imagej.net/index.html#nexus-search;quick~spim_data the
>> spim_data-1.0.0-beta-4.jar and
>> spim_data-1.0.0-beta-4-sources.jar are there.
>> The upload of the spim_data-1.0.0-beta-4-javadoc.jar is missing.
>> That?s where the script failed:
>> ?
>> Dec 16, 2014 2:36:40 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:40 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Uploaded:
>> http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/maven-metadata.xml
>> (772 B at 0.4 KB/sec)
>> Uploading: dav:http://
>> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
>> Dec 16, 2014 2:36:41 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:41 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:42 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:42 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:42 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:43 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Uploaded: dav:http://
>> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
>> (114 KB at 44.1 KB/sec)
>> Uploading: dav:http://
>> maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar
>> Dec 16, 2014 2:36:43 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> Dec 16, 2014 2:36:44 PM
>> org.apache.commons.httpclient.auth.AuthChallengeProcessor selectAuthScheme
>> INFO: basic authentication scheme selected
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO] BUILD FAILURE
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO] Total time: 22.047 s
>> [INFO] Finished at: 2014-12-16T14:36:44+01:00
>> [INFO] Final Memory: 33M/447M
>> [INFO]
>> ------------------------------------------------------------------------
>> [ERROR] Failed to execute goal
>> org.apache.maven.plugins:maven-deploy-plugin:2.8.1:deploy (default-deploy)
>> on project spim_data: Failed to deploy artifacts: Could not transfer
>> artifact sc.fiji:spim_data:jar:sources:1.0.0-beta-4 from/to imagej.releases
>> (dav:http://maven.imagej.net/content/repositories/releases): Failed to
>> transfer file:
>> http://maven.imagej.net/content/repositories/releases/sc/fiji/spim_data/1.0.0-beta-4/spim_data-1.0.0-beta-4-sources.jar.
>> Return code is: 400 -> [Help 1]
>> [ERROR]
>> [ERROR] To see the full stack trace of the errors, re-run Maven with the
>> -e switch.
>> [ERROR] Re-run Maven using the -X switch to enable full debug logging.
>> [ERROR]
>> [ERROR] For more information about the errors and possible solutions,
>> please read the following articles:
>> [ERROR] [Help 1]
>> http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
>> pietzsch at tomancak-mac-17:~/workspace/BigDataViewer/SpimData
>> ((spim_data-1.0.0-beta-4))$
>>
>>
>> Now, I don?t know how to proceed...
>> In git I?m in a detached HEAD state at spim_data-1.0.0-beta-4.
>> Can I somehow manually try to upload the
>> spim_data-1.0.0-beta-4-javadoc.jar?
>> And then just checkout master branch again?
>> Or, can I git reset HEAD^ and re-run the releaseVersion.sh (Is it even
>> possible to re-deploy the already deployed jars?)?
>>
>> thanks for any help,
>> Tobias
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141218/fba24fab/attachment.html>

From ctrueden at wisc.edu  Thu Dec 18 16:28:18 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 18 Dec 2014 16:28:18 -0600
Subject: [ImageJ-devel] How do I Perform an Image Convolution?
In-Reply-To: <00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
	<CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>
	<D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
	<CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>
	<00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>
Message-ID: <CADN69y=Bd+vmpukzGR+G9ZvXpVSGWOcr4t7fEVe4qDqMC5hQtQ@mail.gmail.com>

Hi Michael,

> The Example6c has not been updated to reflect the new way of doing
> things.

Indeed. If you end up updating it, a pull request to that effect would be
most welcome!

> You previously pointed me at the ImageJ OPS library. Is that th best
> way of achieving the convolution?

The most future-proof, in that OPS is the direction we are going. However,
at this point in time it won't be the smoothest ride, since the OPS library
is still in incubation.

Furthermore, the main OPS convolve routine leans on the ImgLib2
FFTConvolution implementation, so if all you need is the low-level
function, then OPS is probably not necessary for you.

> [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system
> contains com/sun/codemodel/internal/ClassType.class targeted to JDK
> 1.8

This was a bug in the Maven build configuration, addressed earlier this
week. Should work with the latest master.

> So what are the minimal hoops I need to jump though to setup ops such
> that the code below will compile? (I want to avoid dragging in any
> ImageJ 1 legacy code)
>
>         Img<FloatType> result = image.copy();
>         Op op = ops.op("convolve", result, image, templateInverse);

OPS does not depend on ImageJ1. (The only ImageJ2 component that does is
called imagej-legacy, and is expressly for the purpose of backwards
compatibility.)

Easiest would be to start with the "using-ops" tutorial project, and edit
the code from there.

https://github.com/imagej/imagej-tutorials/tree/31a5771277682e5f1ef45112094d147539dc4bc7/using-ops

FTR, you can invoke the routine with something like:

    Object result = ops.convolve(image, templateInverse);

However, in attempting a quick test of the convolve routine, I ran into
some obstacles with the current code. My advice at the moment is to just
use FFTConvolution directly for your needs.

> For the record, I am suspicious about Java annotations!

I agree with your concerns: they do unfortunately obfuscate the execution
flow. However, they also bring many advantages. In particular, the way we
are using them provides: 1) a dependency injection mechanism without the
need for any external configuration files; and 2) a very succinct syntax
for parameterized commands. We are shooting for DRY ("Don't Repeat
Yourself") code here [1], not just in the core, but particularly for plugin
developers [2].

I think the best way to counter the mystery surrounding the inner workings
is to thoroughly document how things work.

Regards,
Curtis

P.S. Related to FFTConvolution, see also these issues:
* https://github.com/imglib/imglib2-algorithm-fft/pull/1
* https://github.com/imglib/imglib2/issues/61
* https://github.com/imagej/imagej-ops/issues/12

[1] http://imagej.net/Philosophy#Convention_over_configuration
[2] Example:
http://curtis.imagej.net/2013-03-15-imagej-research-paper/plugin-comparison.png

On Wed, Dec 10, 2014 at 1:09 PM, Michael Ellis <michael.ellis at dsuk.biz>
wrote:
>
> Curtis,
>
> Thanks for this reply and I am now turning my attention to use of the FFT.
>
> It seems the FFT was moved from imglib2-algorithm to imglib2-algorithm-fft
> (due I think to licensing issues).
>
> I need to achieve what is done in imglib2-tutorials/Example6c.java at
> master ? imglib/imglib2-tutorials
> <https://github.com/imglib/imglib2-tutorials/blob/master/src/main/java/Example6c.java>
>
> The Example6c has not been updated to reflect the new way of doing things.
> If I clone the imglib/imglib2-tutorials
> <https://github.com/imglib/imglib2-tutorials> project I see the following
> are all deprecated.
>
> import net.imglib2.algorithm.fft.FourierConvolution;
> import net.imglib2.algorithm.fft.FourierTransform;
> import net.imglib2.algorithm.fft.InverseFourierTransform;
>
> I have managed to make progress and think I have got fourier and inverse
> fourier transforms working. So that just leaves the convolution.
>
> You previously pointed me at the ImageJ OPS library. Is that th best way
> of achieving the convolution?
>
> The ImageJ OPS example however depends on ImageJ. The ImageJ OPS test
> programs don?t help me either since the test classes do some magic wizardry
> that I do not understand at all i.e. with Contexts, Java annotations and
> some injection stuff.
>
> So what are the minimal hoops I need to jump though to setup ops such that
> the code below will compile? (I want to avoid dragging in any ImageJ 1
> legacy code)
>
> Img<FloatType> result = image.copy(); Op op = ops.op("convolve", result,
> image, templateInverse);
>
> Also in downloading the ImageJ-Ops project and running maven compile, I
> get the following. I realise that I am at Java8 and that might be jumping
> the gun a bit, but Java 6 is well past its sell by date and if you are on
> a new Apple Mac, Java 6 is not a comfortable option.
>
> [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system contains
> com/sun/codemodel/internal/ClassType.class targeted to JDK 1.8
> [WARNING] Rule 1: org.apache.maven.plugins.enforcer.EnforceBytecodeVersion
> failed with message:
> Found Banned Dependency: com.sun:tools:jar:1.4.2
>
> For the record, I am suspicious about Java annotations! *For me at least*
> They fro not help with trying to understand code as I cannot make out how
> to call the code in question. The feel rather like something layered on top
> of a language rather than an intrinsic built in.  They give me that
> uncomfortable feeling that C++ Standard Template Library did - and that
> gave me nightmares when it came time to debug code.
>
> Thanks in anticipation of any light you can throw into my darkness!
>
> ? Michael Ellis
>
>
>
>
>
>
>
> On 5 Dec 2014, at 18:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>
> Hi Michael,
>
> > It looks like there is a new FFT but the tutorials use the older
> > version.
> >
> > What should I go with?
>
> The library for doing FFT is imglib2-algorithm-fft:
>     https://github.com/imglib/imglib2-algorithm-fft
>
> Regarding the "new FFT", perhaps you refer to this?
>     https://github.com/imglib/imglib2-algorithm-fft/pull/1
>
> At the moment there are licensing issues with imglib2-algorithm-fft (it
> depends on the Mines JTK library which has a license incompatible with
> GPL). That PR addresses the issues by using the JTransforms library instead.
>
> You also might want to consider using the higher level ImageJ OPS library:
>     https://github.com/imagej/imagej-ops
>
> Thanks to the efforts of Brian Northan, we are about to merge an OP
> wrapper for FFT:
>     https://github.com/imagej/imagej-ops/pull/76
>
> Note that these components are still in the 0.x incubation phase, meaning
> they do not have stable APIs. That said, we would really appreciate early
> adopters who can try out the code and help drive things in the right
> direction.
>
> We will be reviewing and merging these improvements over the next few
> days, then cutting new releases of imglib2-algorithm-fft and imagej-ops. At
> that point, it should be easier for you to try them out.
>
> The relevant tutorials are based on imglib2-algorithm-fft:
>
> https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6b.java
>
> https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6c.java
>
> And IIUC the changes above are internal so the tutorial code should not
> requiring updating (beyond an update to the version of
> imglib2-algorithm-fft in the POM, of course).
>
> Regards,
> Curtis
>
> On Fri, Dec 5, 2014 at 12:21 PM, Michael Ellis <michael.ellis at dsuk.biz>
> wrote:
>
>> Once again, Curtis
>>
>> I really appreciate your help with this.
>>
>> Next questions on the horizon will involve the ImgLib2 algorithm FFT
>> classes. It looks like there is a new FFT but the tutorials use the older
>> version.
>>
>> What should I go with?
>>
>> My aim is build an application, which as part of it will be doing image
>> alignment using FFT phase correlation.
>>
>> Regards ? Michael Ellis
>>
>>
>> On 5 Dec 2014, at 18:13, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>
>> Hi Michael,
>>
>> > gives me a self contained runnable jar. Progress! I?m learning.
>> >
>> > BUT as before when I run the jar, I get the Exception: No compatible
>> > service: org.scijava.service.SciJavaService
>>
>> Self contained runnable JARs (i.e., uber-jars) are convenient in some
>> ways, but come with a host of problems.
>>
>> 1) If you do not shade your dependencies (i.e., rename their packages),
>> then you may ship duplicate and/or incompatible classes with other
>> libraries. This makes your library much harder to reuse in a shared system
>> such as an ImageJ installation.
>>
>> 2) You cannot ship piecemeal updates to individual dependencies -- i.e.,
>> every time your code changes, you must ship a new (possibly very large) new
>> JAR file to your users.
>>
>> 3) The SciJava annotation processor, responsible for indexing the @Plugin
>> annotations that drive SciJava/ImageJ2/etc. plugins, writes the metadata
>> into a resource file at META-INF/json/org.scijava.plugin.Plugin within the
>> JAR. If you try to create an uber-jar via the assembly or shade plugin, the
>> default combination algorithm will overwrite those files, stomping the
>> annotations.
>>
>> We wrote some code which offers one way around this:
>>
>> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631
>>
>> For more on uber-jars, see also:
>>
>> http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F
>>
>> The gist is: avoid using an uber-jar unless you really need it.
>>
>> > I?ve got it working with your help!
>>
>> Awesome, congratulations. Let us know if you encounter any more
>> roadblocks.
>>
>> Regards,
>> Curtis
>>
>> On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz>
>> wrote:
>>
>>> Adding a build section to the POM:
>>>
>>>   <build>
>>>     <plugins>
>>>       <plugin>
>>>         <groupId>org.apache.maven.plugins</groupId>
>>>         <artifactId>maven-shade-plugin</artifactId>
>>>         <version>2.3</version>
>>>         <executions>
>>>           <execution>
>>>             <phase>package</phase>
>>>             <goals>
>>>               <goal>shade</goal>
>>>             </goals>
>>>             <configuration>
>>>               <transformers>
>>>                 <transformer
>>> implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>>>                   <manifestEntries>
>>>                     <Main-Class>com.mycompany.app.App</Main-Class>
>>>                     <Build-Number>123</Build-Number>
>>>                   </manifestEntries>
>>>                 </transformer>
>>>               </transformers>
>>>             </configuration>
>>>           </execution>
>>>         </executions>
>>>       </plugin>
>>>     </plugins>
>>>   </build>
>>>
>>> To the POM gives me a self contained runnable jar. Progress! I?m
>>> learning.
>>>
>>> BUT as before when I run the jar, I get the Exception: No compatible
>>> service: org.scijava.service.SciJavaService
>>> =================================================================
>>>
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar
>>> target/my-app-1.0-SNAPSHOT.jar
>>> Hello World!
>>> Exception: No compatible service: org.scijava.service.SciJavaService
>>> =================================================================
>>>
>>> Still vexed!
>>>
>>>
>>> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>>
>>> Hi Michael,
>>>
>>> > mvn claims to build everything OK
>>>
>>> Yep, it did build successfully.
>>>
>>> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>> > Error: A JNI error has occurred, please check your installation and
>>> try again
>>> > Exception in thread "main" java.lang.NoClassDefFoundError:
>>> io/scif/SCIFIO
>>>
>>> Maven is primarily a build tool. It puts the correct JARs on your
>>> classpath at compile time. In your case, that is scifio-0.17.1.jar and its
>>> dependencies.
>>>
>>> However, the way you are launching your program is not putting the
>>> required dependencies on the classpath. You put only
>>> my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing.
>>> So of course Java cannot find the needed classes.
>>>
>>> The gist is: it is your responsibility to assemble the dependencies and
>>> ensure they are on the classpath somehow when you launch your application.
>>>
>>> There are several ways to accomplish this. Here is one generally useful
>>> way using Maven, which does not assume you are doing anything
>>> ImageJ-related:
>>>
>>>     $ mvn dependency:copy-dependencies
>>>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*'
>>> com.mycompany.app.App
>>>
>>> The "copy-dependencies" goal copies all the JAR files needed by your
>>> program into the target/dependency folder, for easy subsequent consumption.
>>>
>>> Alternately, the "ImageJ way" of dealing with deployment is to ship all
>>> needed dependencies in the "jars" folder of your ImageJ application. We
>>> created a Maven goal for this too, which you can use as follows:
>>>
>>>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app
>>> -Ddelete.other.versions=true
>>>
>>> Which will copy your JAR and its dependencies into your ImageJ
>>> installation at /Applications/ImageJ.app. But note that in order for this
>>> goal to work, you must extend the pom-imagej parent (see
>>> https://github.com/imagej/minimal-ij1-plugin for an example).
>>>
>>> A third solution is to use the exec-maven-plugin to launch your
>>> application directly using Maven. E.g.:
>>> https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>>>
>>> Regards,
>>> Curtis
>>>
>>> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz>
>>> wrote:
>>>
>>>> Curtis,
>>>>
>>>> Thanks but it is still not working.
>>>>
>>>> I have cut out using NetBeans and am now just using the CLI and a text
>>>> editor.
>>>>
>>>> POM as follows:
>>>>
>>>> ========================================================
>>>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="
>>>> http://www.w3.org/2001/XMLSchema-instance"
>>>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
>>>> http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>>>   <modelVersion>4.0.0</modelVersion>
>>>>
>>>>   <groupId>com.mycompany.app</groupId>
>>>>   <artifactId>my-app</artifactId>
>>>>   <version>1.0-SNAPSHOT</version>
>>>>   <packaging>jar</packaging>
>>>>
>>>>   <name>my-app</name>
>>>>   <url>http://maven.apache.org</url>
>>>>
>>>>   <properties>
>>>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>>>   </properties>
>>>>
>>>> <repositories>
>>>> <repository>
>>>> <id>imagej.public</id>
>>>> <url>http://maven.imagej.net/content/groups/public</url>
>>>> </repository>
>>>> </repositories>
>>>>
>>>>   <dependencies>
>>>>     <dependency>
>>>>       <groupId>junit</groupId>
>>>>       <artifactId>junit</artifactId>
>>>>       <version>3.8.1</version>
>>>>       <scope>test</scope>
>>>>     </dependency>
>>>>
>>>> <dependency>
>>>>   <groupId>io.scif</groupId>
>>>>   <artifactId>scifio</artifactId>
>>>>   <version>0.17.1</version>
>>>> </dependency>
>>>>
>>>>   </dependencies>
>>>> </project>
>>>> ========================================================
>>>>
>>>> File hierarchy:
>>>>
>>>> .
>>>> ./.DS_Store
>>>> ./pom.xml
>>>> ./src
>>>> ./src/main
>>>> ./src/main/java
>>>> ./src/main/java/com
>>>> ./src/main/java/com/mycompany
>>>> ./src/main/java/com/mycompany/app
>>>> ./src/main/java/com/mycompany/app/App.java
>>>> ./src/test
>>>> ./src/test/java
>>>> ./src/test/java/com
>>>> ./src/test/java/com/mycompany
>>>> ./src/test/java/com/mycompany/app
>>>> ./src/test/java/com/mycompany/app/AppTest.java
>>>> ========================================================
>>>>
>>>> App.java as follows:
>>>>
>>>> package com.mycompany.app;
>>>>
>>>> import io.scif.FormatException;
>>>> import io.scif.ImageMetadata;
>>>> import io.scif.Plane;
>>>> import io.scif.Reader;
>>>> import io.scif.SCIFIO;
>>>>
>>>> public class App
>>>> {
>>>>     public static void main( String[] args )
>>>>     {
>>>> try {
>>>>         System.out.println( "Hello World!" );
>>>> SCIFIO scifio = new SCIFIO();
>>>> String sampleImage
>>>> =
>>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>> final Reader reader =
>>>> scifio.initializer().initializeReader(sampleImage);
>>>> System.out.printf("reader=%s%n", reader );
>>>>         } catch (Exception e) {
>>>>         System.out.printf("Exception: %s%n", e.getMessage() );
>>>>         }
>>>>     }
>>>> }
>>>>
>>>> ========================================================
>>>>
>>>> mvm -U install
>>>>
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>>>> [INFO] Scanning for projects...
>>>> [INFO]
>>>>
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO] Building my-app 1.0-SNAPSHOT
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO]
>>>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
>>>> my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory
>>>> /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>>>> [INFO]
>>>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app
>>>> ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to
>>>> /Users/michaelellis/temp/deleteme/my-app/target/classes
>>>> [INFO]
>>>> [INFO] --- maven-resources-plugin:2.6:testResources
>>>> (default-testResources) @ my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory
>>>> /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>>>> [INFO]
>>>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile)
>>>> @ my-app ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to
>>>> /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>>>> [INFO]
>>>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
>>>> [INFO] Surefire report directory:
>>>> /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>>>
>>>> -------------------------------------------------------
>>>>  T E S T S
>>>> -------------------------------------------------------
>>>> Running com.mycompany.app.AppTest
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005
>>>> sec
>>>>
>>>> Results :
>>>>
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>>>
>>>> [INFO]
>>>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>>>> [INFO] Building jar:
>>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>>>> [INFO]
>>>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app
>>>> ---
>>>> [INFO] Installing
>>>> /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to
>>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to
>>>> /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO] BUILD SUCCESS
>>>> [INFO]
>>>> ------------------------------------------------------------------------
>>>> [INFO] Total time: 1.962 s
>>>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>>>> [INFO] Final Memory: 18M/242M
>>>> [INFO] ????????????????????????????????????
>>>>
>>>> ========================================================
>>>>
>>>> mvn claims to build everything OK there seems to be no inclusion of any
>>>> scif libraries or class files.
>>>>
>>>>
>>>> When I run it I get:
>>>>
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp
>>>> target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>> Error: A JNI error has occurred, please check your installation and try
>>>> again
>>>> Exception in thread "main" java.lang.NoClassDefFoundError:
>>>> io/scif/SCIFIO
>>>> at java.lang.Class.getDeclaredMethods0(Native Method)
>>>> at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>>>> at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>>>> at java.lang.Class.getMethod0(Class.java:3016)
>>>> at java.lang.Class.getMethod(Class.java:1782)
>>>> at
>>>> sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>>>> at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>>>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>>>> at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>>>> at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>>>> at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>>>> ... 7 more
>>>>
>>>>
>>>> ========================================================
>>>>
>>>> I?ve been banging my head against this for two days now.
>>>>
>>>> So any help appreciated
>>>>
>>>>
>>>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>
>>>> Hi Michael,
>>>>
>>>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>> > information available
>>>>
>>>> Make sure you have the following <repositories> block in your POM:
>>>>
>>>> <repositories>
>>>> <repository>
>>>> <id>imagej.public</id>
>>>> <url>http://maven.imagej.net/content/groups/public</url>
>>>> </repository>
>>>> </repositories>
>>>>
>>>> Then rebuild with the "-U" flag. I don't know how to do this from
>>>> NetBeans, but you only need to do it once from the CLI -- then you can
>>>> return to NetBeans and it should work.
>>>>
>>>> Regards,
>>>> Curtis
>>>>
>>>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz>
>>>> wrote:
>>>>
>>>>> I have followed the advice offered by Curtis regarding adding
>>>>> the io.scif: scifio dependency to my POM
>>>>>
>>>>> The dependency part of my POM looks like this:
>>>>>
>>>>>     <dependencies>
>>>>>         <dependency>
>>>>>             <groupId>net.imglib2</groupId>
>>>>>             <artifactId>imglib2</artifactId>
>>>>>             <version>2.2.1-SNAPSHOT</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>         <dependency>
>>>>>             <groupId>io.scif</groupId>
>>>>>             <artifactId>scifio</artifactId>
>>>>>             <version>0.17.1</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>     </dependencies>
>>>>>
>>>>> I am using NetBeans IDE, configured for use with maven project (I am
>>>>> slo using Java 8 and JavaFX)
>>>>>
>>>>> However when I attempt to Build (or Build with Dependencies)  within
>>>>> NetBeans, I get the following error message:
>>>>> ============================================================
>>>>>
>>>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX;
>>>>> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home
>>>>> "/Applications/NetBeans/NetBeans
>>>>> 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>>>> Scanning for projects...
>>>>>
>>>>>
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>>> information available
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> BUILD FAILURE
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> Total time: 0.341s
>>>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>>>> Final Memory: 7M/245M
>>>>>
>>>>> ------------------------------------------------------------------------
>>>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve
>>>>> dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure
>>>>> to find io.scif:scifio:jar:0.17.1 in
>>>>> http://repo.maven.apache.org/maven2 was cached in the local
>>>>> repository, resolution will not be reattempted until the update interval of
>>>>> central has elapsed or updates are forced -> [Help 1]
>>>>>
>>>>> To see the full stack trace of the errors, re-run Maven with the -e
>>>>> switch.
>>>>> Re-run Maven using the -X switch to enable full debug logging.
>>>>>
>>>>> For more information about the errors and possible solutions, please
>>>>> read the following articles:
>>>>> [Help 1]
>>>>> http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>>>
>>>>> ============================================================
>>>>>
>>>>> If I open a terminal window and cd into the project directory and:
>>>>>
>>>>> mvn clean package
>>>>>
>>>>> It succeeds.
>>>>>
>>>>> However, when I then attempt to run the project with:
>>>>>
>>>>> java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar
>>>>> biz.dsuk.mavenimglib2fx.MainApp
>>>>>
>>>>> The application starts to execute but throws ?No compatible service:
>>>>> io.scif.SCIFIOService? exception.
>>>>> ============================================================
>>>>>
>>>>> img1=CellImg [20x30]
>>>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel:
>>>>> #pixelBits = 8 numComponents = 1 color space =
>>>>> java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha =
>>>>> false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699
>>>>> #numDataElements 1 dataOff[0] = 0
>>>>> Loading image...
>>>>> Exception in Application start method
>>>>> java.lang.reflect.InvocationTargetException
>>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> at
>>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> at
>>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>>>> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> at
>>>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> at
>>>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>>>> Caused by: java.lang.RuntimeException: Exception in Application start
>>>>> method
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown
>>>>> Source)
>>>>> at java.lang.Thread.run(Thread.java:745)
>>>>> Caused by: java.lang.IllegalArgumentException: No compatible service:
>>>>> io.scif.SCIFIOService
>>>>> at
>>>>> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>>>> at
>>>>> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>>>> at
>>>>> org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>>>> at org.scijava.Context.<init>(Context.java:244)
>>>>> at org.scijava.Context.<init>(Context.java:203)
>>>>> at org.scijava.Context.<init>(Context.java:142)
>>>>> at org.scijava.Context.<init>(Context.java:128)
>>>>> at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>>>> at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>>>> at
>>>>> com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown
>>>>> Source)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown
>>>>> Source)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown
>>>>> Source)
>>>>> at java.security.AccessController.doPrivileged(Native Method)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>>>> at
>>>>> com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown
>>>>> Source)
>>>>> at
>>>>> com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>>>> ============================================================
>>>>>
>>>>> If I remove the calls to the SCIO code and build and run from the
>>>>> command line, all works well.
>>>>>
>>>>> The SCIO source code that I am using is lifted/amended from one of the
>>>>> tutorials and is as follows:
>>>>>
>>>>> ============================================================
>>>>>             imagePath =
>>>>> "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>>             System.out.println("Loading image... '" + imagePath + "'");
>>>>>             SCIFIO scifio = new SCIFIO();
>>>>>             final Reader reader =
>>>>> scifio.initializer().initializeReader(imagePath);
>>>>> ============================================================
>>>>>
>>>>> This source code works file in the SCIFIO tutorial.
>>>>>
>>>>> Any help gratefully appreciated!!!!!
>>>>>
>>>>> ? Michael Ellis
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>>
>>>>> Hi Michael,
>>>>>
>>>>> > How do I establish what Maven projects I need to include?
>>>>>
>>>>> One way to check is using the dependency-maven-plugin like so:
>>>>>
>>>>>     mvn dependency:analyze
>>>>>
>>>>> This will tell you:
>>>>>
>>>>> A) Dependencies you declared but do not actually use; and
>>>>> B) Dependencies you did not declare directly, but actually need.
>>>>>
>>>>> Note that this will only work if your project compiles successfully.
>>>>> In other words, it is easier to start with "too many" dependencies and pare
>>>>> down, rather than trying to "build up" from zero.
>>>>>
>>>>> So in your case, you can start with the ImgLib2 Examples dependencies
>>>>> block, run dependency:analyze, and adjust the POM according to its
>>>>> recommendations.
>>>>>
>>>>> > When I go to my NetBeans project dependence, select Add dependency,
>>>>> > then type SCIF to the query text box, I get a huge list of
>>>>> > possibilities.
>>>>>
>>>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of
>>>>> io.scif, and an artifactId of scifio). Presumably at the latest version.
>>>>> You can search for that here:
>>>>>
>>>>>
>>>>> http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>>>
>>>>> So your dependency block in this case would be:
>>>>>
>>>>>     <dependency>
>>>>>       <groupId>io.scif</groupId>
>>>>>       <artifactId>scifio</artifactId>
>>>>>       <version>0.17.1</version>
>>>>>     </dependency>
>>>>>
>>>>> Note that that block of XML is available for copy-pasting from the
>>>>> link above.
>>>>>
>>>>> > I am completely new to maven
>>>>>
>>>>> For more information, see:
>>>>>     http://imagej.net/Maven
>>>>>
>>>>> Regards,
>>>>> Curtis
>>>>>
>>>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz>
>>>>> wrote:
>>>>>
>>>>>> I am investigating the using ImgLib2 for a project.
>>>>>>
>>>>>> I am using NetBeans and have managed to create a NetBeans Mavern
>>>>>> project and have  added a dependency for ImgLib2 Core Library and that
>>>>>> seems to be working OK.
>>>>>>
>>>>>> I now want to add the least possible requirements for the purpose of
>>>>>> opening some image files.
>>>>>>
>>>>>> How do I establish what Maven projects I need to include?
>>>>>>
>>>>>> I have cloned  the ImgLib2 Examples project and got that working but
>>>>>> that seems to include all manner of things that I suspect I do not need.
>>>>>>
>>>>>> When I go to my NetBeans project dependence, select Add dependency,
>>>>>> then type SCIF to the query text box, I get a huge list of possibilities.
>>>>>>
>>>>>> I am completely new to maven and so do not know what I am doing with
>>>>>> it!
>>>>>>
>>>>>> ? Michael Ellis
>>>>>> Digital Scientific UK Ltd.
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> ImageJ-devel mailing list
>>>>>> ImageJ-devel at imagej.net
>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>
>>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
>>
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141218/ff239d80/attachment-0001.html>

From michael.ellis at dsuk.biz  Fri Dec 19 02:45:05 2014
From: michael.ellis at dsuk.biz (Michael Ellis)
Date: Fri, 19 Dec 2014 08:45:05 +0000
Subject: [ImageJ-devel] How do I Perform an Image Convolution?
In-Reply-To: <CADN69y=Bd+vmpukzGR+G9ZvXpVSGWOcr4t7fEVe4qDqMC5hQtQ@mail.gmail.com>
References: <BCF5FE94-7D4C-40CB-8ABA-333C63CE36EF@dsuk.biz>
	<43743BEC-655D-41D4-B051-5A8602D6617A@mpi-cbg.de>
	<9A059E76-7239-4695-AD70-EA5550BD3407@dsuk.biz>
	<CADN69ykNX3BvBH1iSbUzAGbgbPdeuJVedD3TSs_2YC5a-Ssm9Q@mail.gmail.com>
	<5736CE7F-98EF-463B-BD5D-A50361067EF2@dsuk.biz>
	<CADN69ykzmQzDpRCFX3Q9Bn40ddc_uZub=qaN9EsKNufFvcRtWQ@mail.gmail.com>
	<6E40FD73-3DDF-472C-B0D5-5C1DBB21687A@dsuk.biz>
	<CADN69y=jEQH6jyBvCThB+gX7_24N2Yj07JebhJTZx=m36=ds0A@mail.gmail.com>
	<86009DB9-7986-46F4-ADF5-F408F92F6F25@dsuk.biz>
	<CADN69y=cvLuDrz-B0TKazpzHsbivxATfYRPXkjxmxM-kzTLmZg@mail.gmail.com>
	<D9E15893-FC04-4831-8F4B-8345F987DCF3@dsuk.biz>
	<CADN69ymGiDwRH2LkdWG-OU86rCOCiNGe9xXD6mY=4VYGXD8aoA@mail.gmail.com>
	<00A1D345-E9FB-4EB5-B9CE-28DB42FC62AD@dsuk.biz>
	<CADN69y=Bd+vmpukzGR+G9ZvXpVSGWOcr4t7fEVe4qDqMC5hQtQ@mail.gmail.com>
Message-ID: <5E32D968-723A-4750-8E53-ABB75E6CCEE1@dsuk.biz>

Dear Curtis,

Thank you for your reply. It will be a couple of days before I am working on this again but thanks for the pointers.

? Michael Ellis
On 18 Dec 2014, at 22:28, Curtis Rueden <ctrueden at WISC.EDU> wrote:

> Hi Michael,
> 
> > The Example6c has not been updated to reflect the new way of doing
> > things.
> 
> Indeed. If you end up updating it, a pull request to that effect would be most welcome!
> 
> > You previously pointed me at the ImageJ OPS library. Is that th best
> > way of achieving the convolution?
> 
> The most future-proof, in that OPS is the direction we are going. However, at this point in time it won't be the smoothest ride, since the OPS library is still in incubation.
> 
> Furthermore, the main OPS convolve routine leans on the ImgLib2 FFTConvolution implementation, so if all you need is the low-level function, then OPS is probably not necessary for you.
> 
> > [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system
> > contains com/sun/codemodel/internal/ClassType.class targeted to JDK
> > 1.8
> 
> This was a bug in the Maven build configuration, addressed earlier this week. Should work with the latest master.
> 
> > So what are the minimal hoops I need to jump though to setup ops such
> > that the code below will compile? (I want to avoid dragging in any
> > ImageJ 1 legacy code)
> > 
> >         Img<FloatType> result = image.copy();
> >         Op op = ops.op("convolve", result, image, templateInverse);
> 
> OPS does not depend on ImageJ1. (The only ImageJ2 component that does is called imagej-legacy, and is expressly for the purpose of backwards compatibility.)
> 
> Easiest would be to start with the "using-ops" tutorial project, and edit the code from there.
> 
> https://github.com/imagej/imagej-tutorials/tree/31a5771277682e5f1ef45112094d147539dc4bc7/using-ops
> 
> FTR, you can invoke the routine with something like:
> 
>     Object result = ops.convolve(image, templateInverse);
> 
> However, in attempting a quick test of the convolve routine, I ran into some obstacles with the current code. My advice at the moment is to just use FFTConvolution directly for your needs.
> 
> > For the record, I am suspicious about Java annotations!
> 
> I agree with your concerns: they do unfortunately obfuscate the execution flow. However, they also bring many advantages. In particular, the way we are using them provides: 1) a dependency injection mechanism without the need for any external configuration files; and 2) a very succinct syntax for parameterized commands. We are shooting for DRY ("Don't Repeat Yourself") code here [1], not just in the core, but particularly for plugin developers [2].
> 
> I think the best way to counter the mystery surrounding the inner workings is to thoroughly document how things work.
> 
> Regards,
> Curtis
> 
> P.S. Related to FFTConvolution, see also these issues:
> * https://github.com/imglib/imglib2-algorithm-fft/pull/1
> * https://github.com/imglib/imglib2/issues/61
> * https://github.com/imagej/imagej-ops/issues/12
> 
> [1] http://imagej.net/Philosophy#Convention_over_configuration
> [2] Example: http://curtis.imagej.net/2013-03-15-imagej-research-paper/plugin-comparison.png
> 
> On Wed, Dec 10, 2014 at 1:09 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
> Curtis,
> 
> Thanks for this reply and I am now turning my attention to use of the FFT. 
> 
> It seems the FFT was moved from imglib2-algorithm to imglib2-algorithm-fft (due I think to licensing issues).
> 
> I need to achieve what is done in imglib2-tutorials/Example6c.java at master ? imglib/imglib2-tutorials
> 
> The Example6c has not been updated to reflect the new way of doing things. If I clone the imglib/imglib2-tutorials project I see the following are all deprecated.
> 
> import net.imglib2.algorithm.fft.FourierConvolution;
> import net.imglib2.algorithm.fft.FourierTransform;
> import net.imglib2.algorithm.fft.InverseFourierTransform;
> 
> I have managed to make progress and think I have got fourier and inverse fourier transforms working. So that just leaves the convolution.
> 
> You previously pointed me at the ImageJ OPS library. Is that th best way of achieving the convolution?
> 
> The ImageJ OPS example however depends on ImageJ. The ImageJ OPS test programs don?t help me either since the test classes do some magic wizardry that I do not understand at all i.e. with Contexts, Java annotations and some injection stuff.
> 
> So what are the minimal hoops I need to jump though to setup ops such that the code below will compile? (I want to avoid dragging in any ImageJ 1 legacy code)
> 
>         Img<FloatType> result = image.copy(); 
>         Op op = ops.op("convolve", result, image, templateInverse);
> 
> Also in downloading the ImageJ-Ops project and running maven compile, I get the following. I realise that I am at Java8 and that might be jumping the gun a bit, but Java 6 is well past its sell by date and if you are on a new Apple Mac, Java 6 is not a comfortable option.
> 
> [INFO] Restricted to JDK 1.6 yet com.sun:tools:jar:1.4.2:system contains com/sun/codemodel/internal/ClassType.class targeted to JDK 1.8
> [WARNING] Rule 1: org.apache.maven.plugins.enforcer.EnforceBytecodeVersion failed with message:
> Found Banned Dependency: com.sun:tools:jar:1.4.2
> 
> For the record, I am suspicious about Java annotations! *For me at least* They fro not help with trying to understand code as I cannot make out how to call the code in question. The feel rather like something layered on top of a language rather than an intrinsic built in.  They give me that uncomfortable feeling that C++ Standard Template Library did - and that gave me nightmares when it came time to debug code.
> 
> Thanks in anticipation of any light you can throw into my darkness!
> 
> ? Michael Ellis
> 
> 
>  
> 
> 
> 
> 
> On 5 Dec 2014, at 18:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
> 
>> Hi Michael,
>> 
>> > It looks like there is a new FFT but the tutorials use the older
>> > version. 
>> > 
>> > What should I go with?
>> 
>> The library for doing FFT is imglib2-algorithm-fft:
>>     https://github.com/imglib/imglib2-algorithm-fft
>> 
>> Regarding the "new FFT", perhaps you refer to this?
>>     https://github.com/imglib/imglib2-algorithm-fft/pull/1
>> 
>> At the moment there are licensing issues with imglib2-algorithm-fft (it depends on the Mines JTK library which has a license incompatible with GPL). That PR addresses the issues by using the JTransforms library instead.
>> 
>> You also might want to consider using the higher level ImageJ OPS library:
>>     https://github.com/imagej/imagej-ops
>> 
>> Thanks to the efforts of Brian Northan, we are about to merge an OP wrapper for FFT:
>>     https://github.com/imagej/imagej-ops/pull/76
>> 
>> Note that these components are still in the 0.x incubation phase, meaning they do not have stable APIs. That said, we would really appreciate early adopters who can try out the code and help drive things in the right direction.
>> 
>> We will be reviewing and merging these improvements over the next few days, then cutting new releases of imglib2-algorithm-fft and imagej-ops. At that point, it should be easier for you to try them out.
>> 
>> The relevant tutorials are based on imglib2-algorithm-fft:
>>     https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6b.java
>>     https://github.com/imglib/imglib2-tutorials/blob/929de9b7482c312ff9c51ab52aa632779ef058f3/src/main/java/Example6c.java
>> 
>> And IIUC the changes above are internal so the tutorial code should not requiring updating (beyond an update to the version of imglib2-algorithm-fft in the POM, of course).
>> 
>> Regards,
>> Curtis
>> 
>> On Fri, Dec 5, 2014 at 12:21 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>> Once again, Curtis
>> 
>> I really appreciate your help with this.
>> 
>> Next questions on the horizon will involve the ImgLib2 algorithm FFT classes. It looks like there is a new FFT but the tutorials use the older version. 
>> 
>> What should I go with?
>> 
>> My aim is build an application, which as part of it will be doing image alignment using FFT phase correlation.
>> 
>> Regards ? Michael Ellis
>> 
>> 
>> On 5 Dec 2014, at 18:13, Curtis Rueden <ctrueden at wisc.edu> wrote:
>> 
>>> Hi Michael,
>>> 
>>> > gives me a self contained runnable jar. Progress! I?m learning.
>>> > 
>>> > BUT as before when I run the jar, I get the Exception: No compatible
>>> > service: org.scijava.service.SciJavaService
>>> 
>>> Self contained runnable JARs (i.e., uber-jars) are convenient in some ways, but come with a host of problems.
>>> 
>>> 1) If you do not shade your dependencies (i.e., rename their packages), then you may ship duplicate and/or incompatible classes with other libraries. This makes your library much harder to reuse in a shared system such as an ImageJ installation.
>>> 
>>> 2) You cannot ship piecemeal updates to individual dependencies -- i.e., every time your code changes, you must ship a new (possibly very large) new JAR file to your users.
>>> 
>>> 3) The SciJava annotation processor, responsible for indexing the @Plugin annotations that drive SciJava/ImageJ2/etc. plugins, writes the metadata into a resource file at META-INF/json/org.scijava.plugin.Plugin within the JAR. If you try to create an uber-jar via the assembly or shade plugin, the default combination algorithm will overwrite those files, stomping the annotations.
>>> 
>>> We wrote some code which offers one way around this:
>>>    https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L614-L631
>>> 
>>> For more on uber-jars, see also:
>>>    http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_my_software.3F
>>> 
>>> The gist is: avoid using an uber-jar unless you really need it.
>>> 
>>> > I?ve got it working with your help!
>>> 
>>> Awesome, congratulations. Let us know if you encounter any more roadblocks.
>>> 
>>> Regards,
>>> Curtis
>>> 
>>> On Fri, Dec 5, 2014 at 12:03 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>> Adding a build section to the POM:
>>> 
>>>   <build>
>>>     <plugins>
>>>       <plugin>
>>>         <groupId>org.apache.maven.plugins</groupId>
>>>         <artifactId>maven-shade-plugin</artifactId>
>>>         <version>2.3</version>
>>>         <executions>
>>>           <execution>
>>>             <phase>package</phase>
>>>             <goals>
>>>               <goal>shade</goal>
>>>             </goals>
>>>             <configuration>
>>>               <transformers>
>>>                 <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
>>>                   <manifestEntries>
>>>                     <Main-Class>com.mycompany.app.App</Main-Class>
>>>                     <Build-Number>123</Build-Number>
>>>                   </manifestEntries>
>>>                 </transformer>
>>>               </transformers>
>>>             </configuration>
>>>           </execution>
>>>         </executions>
>>>       </plugin>
>>>     </plugins>
>>>   </build>
>>> 
>>> To the POM gives me a self contained runnable jar. Progress! I?m learning.
>>> 
>>> BUT as before when I run the jar, I get the Exception: No compatible service: org.scijava.service.SciJavaService
>>> =================================================================
>>> 
>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -jar target/my-app-1.0-SNAPSHOT.jar 
>>> Hello World!
>>> Exception: No compatible service: org.scijava.service.SciJavaService
>>> =================================================================
>>> 
>>> Still vexed!
>>> 
>>> 
>>> On 5 Dec 2014, at 17:17, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>> 
>>>> Hi Michael,
>>>> 
>>>> > mvn claims to build everything OK
>>>> 
>>>> Yep, it did build successfully.
>>>> 
>>>> > % java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>> > Error: A JNI error has occurred, please check your installation and try again
>>>> > Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>>>> 
>>>> Maven is primarily a build tool. It puts the correct JARs on your classpath at compile time. In your case, that is scifio-0.17.1.jar and its dependencies.
>>>> 
>>>> However, the way you are launching your program is not putting the required dependencies on the classpath. You put only my-app-1.0-SNAPSHOT.jar on the classpath, and its dependencies are missing. So of course Java cannot find the needed classes.
>>>> 
>>>> The gist is: it is your responsibility to assemble the dependencies and ensure they are on the classpath somehow when you launch your application.
>>>> 
>>>> There are several ways to accomplish this. Here is one generally useful way using Maven, which does not assume you are doing anything ImageJ-related:
>>>> 
>>>>     $ mvn dependency:copy-dependencies
>>>>     $ java -cp 'target/my-app-1.0-SNAPSHOT.jar:target/dependency/*' com.mycompany.app.App
>>>> 
>>>> The "copy-dependencies" goal copies all the JAR files needed by your program into the target/dependency folder, for easy subsequent consumption.
>>>> 
>>>> Alternately, the "ImageJ way" of dealing with deployment is to ship all needed dependencies in the "jars" folder of your ImageJ application. We created a Maven goal for this too, which you can use as follows:
>>>> 
>>>>     $ mvn -Dimagej.app.directory=/Applications/ImageJ.app -Ddelete.other.versions=true
>>>> 
>>>> Which will copy your JAR and its dependencies into your ImageJ installation at /Applications/ImageJ.app. But note that in order for this goal to work, you must extend the pom-imagej parent (see https://github.com/imagej/minimal-ij1-plugin for an example).
>>>> 
>>>> A third solution is to use the exec-maven-plugin to launch your application directly using Maven. E.g.: https://github.com/imagej/imagej/blob/imagej-2.0.0-rc-17/pom.xml#L255-L278
>>>> 
>>>> Regards,
>>>> Curtis
>>>> 
>>>> On Fri, Dec 5, 2014 at 11:03 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>> Curtis,
>>>> 
>>>> Thanks but it is still not working.
>>>> 
>>>> I have cut out using NetBeans and am now just using the CLI and a text editor. 
>>>> 
>>>> POM as follows:
>>>> 
>>>> ========================================================
>>>> <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>>>>   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
>>>>   <modelVersion>4.0.0</modelVersion>
>>>> 
>>>>   <groupId>com.mycompany.app</groupId>
>>>>   <artifactId>my-app</artifactId>
>>>>   <version>1.0-SNAPSHOT</version>
>>>>   <packaging>jar</packaging>
>>>> 
>>>>   <name>my-app</name>
>>>>   <url>http://maven.apache.org</url>
>>>> 
>>>>   <properties>
>>>>     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
>>>>   </properties>
>>>>   
>>>> 	<repositories>
>>>> 		<repository>
>>>> 			<id>imagej.public</id>
>>>> 			<url>http://maven.imagej.net/content/groups/public</url>
>>>> 		</repository>
>>>> 	</repositories>
>>>> 
>>>>   <dependencies>
>>>>     <dependency>
>>>>       <groupId>junit</groupId>
>>>>       <artifactId>junit</artifactId>
>>>>       <version>3.8.1</version>
>>>>       <scope>test</scope>
>>>>     </dependency>
>>>>     
>>>> 	<dependency>
>>>> 	  <groupId>io.scif</groupId>
>>>> 	  <artifactId>scifio</artifactId>
>>>> 	  <version>0.17.1</version>
>>>> 	</dependency>
>>>>     
>>>>   </dependencies>
>>>> </project>
>>>> ========================================================
>>>> 
>>>> File hierarchy:
>>>> 
>>>> .
>>>> ./.DS_Store
>>>> ./pom.xml
>>>> ./src
>>>> ./src/main
>>>> ./src/main/java
>>>> ./src/main/java/com
>>>> ./src/main/java/com/mycompany
>>>> ./src/main/java/com/mycompany/app
>>>> ./src/main/java/com/mycompany/app/App.java
>>>> ./src/test
>>>> ./src/test/java
>>>> ./src/test/java/com
>>>> ./src/test/java/com/mycompany
>>>> ./src/test/java/com/mycompany/app
>>>> ./src/test/java/com/mycompany/app/AppTest.java
>>>> ========================================================
>>>> 
>>>> App.java as follows:
>>>> 
>>>> package com.mycompany.app;
>>>> 
>>>> import io.scif.FormatException;
>>>> import io.scif.ImageMetadata;
>>>> import io.scif.Plane;
>>>> import io.scif.Reader;
>>>> import io.scif.SCIFIO;
>>>> 
>>>> public class App 
>>>> {
>>>>     public static void main( String[] args )
>>>>     {
>>>> 		try {
>>>>     	    System.out.println( "Hello World!" );
>>>> 			SCIFIO scifio = new SCIFIO();
>>>> 			String sampleImage
>>>> 					= "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>> 			final Reader reader = scifio.initializer().initializeReader(sampleImage);
>>>> 			System.out.printf("reader=%s%n", reader );
>>>>         } catch (Exception e) {
>>>> 	        System.out.printf("Exception: %s%n", e.getMessage() );
>>>>         }
>>>>     }
>>>> }
>>>> 
>>>> ========================================================
>>>> 
>>>> mvm -U install
>>>> 
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% mvn -U install
>>>> [INFO] Scanning for projects...
>>>> [INFO]                                                                         
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] Building my-app 1.0-SNAPSHOT
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] 
>>>> [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/main/resources
>>>> [INFO] 
>>>> [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/classes
>>>> [INFO] 
>>>> [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ my-app ---
>>>> [INFO] Using 'UTF-8' encoding to copy filtered resources.
>>>> [INFO] skip non existing resourceDirectory /Users/michaelellis/temp/deleteme/my-app/src/test/resources
>>>> [INFO] 
>>>> [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ my-app ---
>>>> [INFO] Changes detected - recompiling the module!
>>>> [INFO] Compiling 1 source file to /Users/michaelellis/temp/deleteme/my-app/target/test-classes
>>>> [INFO] 
>>>> [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---
>>>> [INFO] Surefire report directory: /Users/michaelellis/temp/deleteme/my-app/target/surefire-reports
>>>> 
>>>> -------------------------------------------------------
>>>>  T E S T S
>>>> -------------------------------------------------------
>>>> Running com.mycompany.app.AppTest
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec
>>>> 
>>>> Results :
>>>> 
>>>> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
>>>> 
>>>> [INFO] 
>>>> [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ my-app ---
>>>> [INFO] Building jar: /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar
>>>> [INFO] 
>>>> [INFO] --- maven-install-plugin:2.4:install (default-install) @ my-app ---
>>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/target/my-app-1.0-SNAPSHOT.jar to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.jar
>>>> [INFO] Installing /Users/michaelellis/temp/deleteme/my-app/pom.xml to /Users/michaelellis/.m2/repository/com/mycompany/app/my-app/1.0-SNAPSHOT/my-app-1.0-SNAPSHOT.pom
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] BUILD SUCCESS
>>>> [INFO] ------------------------------------------------------------------------
>>>> [INFO] Total time: 1.962 s
>>>> [INFO] Finished at: 2014-12-05T16:59:50+00:00
>>>> [INFO] Final Memory: 18M/242M
>>>> [INFO] ????????????????????????????????????
>>>> 
>>>> ========================================================
>>>> 
>>>> mvn claims to build everything OK there seems to be no inclusion of any scif libraries or class files.
>>>> 
>>>> 
>>>> When I run it I get:
>>>> 
>>>> [Michaels-Retina:~/temp/deleteme/my-app] michaelellis% java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
>>>> Error: A JNI error has occurred, please check your installation and try again
>>>> Exception in thread "main" java.lang.NoClassDefFoundError: io/scif/SCIFIO
>>>> 	at java.lang.Class.getDeclaredMethods0(Native Method)
>>>> 	at java.lang.Class.privateGetDeclaredMethods(Class.java:2699)
>>>> 	at java.lang.Class.privateGetMethodRecursive(Class.java:3046)
>>>> 	at java.lang.Class.getMethod0(Class.java:3016)
>>>> 	at java.lang.Class.getMethod(Class.java:1782)
>>>> 	at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)
>>>> 	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526)
>>>> Caused by: java.lang.ClassNotFoundException: io.scif.SCIFIO
>>>> 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
>>>> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
>>>> 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
>>>> 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
>>>> 	... 7 more
>>>> 
>>>> 
>>>> ========================================================
>>>> 
>>>> I?ve been banging my head against this for two days now. 
>>>> 
>>>> So any help appreciated
>>>> 
>>>> 
>>>> On 5 Dec 2014, at 16:35, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>> 
>>>>> Hi Michael,
>>>>> 
>>>>> > The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency
>>>>> > information available
>>>>> 
>>>>> Make sure you have the following <repositories> block in your POM:
>>>>> 
>>>>> 	<repositories>
>>>>> 		<repository>
>>>>> 			<id>imagej.public</id>
>>>>> 			<url>http://maven.imagej.net/content/groups/public</url>
>>>>> 		</repository>
>>>>> 	</repositories>
>>>>> 
>>>>> Then rebuild with the "-U" flag. I don't know how to do this from NetBeans, but you only need to do it once from the CLI -- then you can return to NetBeans and it should work.
>>>>> 
>>>>> Regards,
>>>>> Curtis
>>>>> 
>>>>> On Fri, Dec 5, 2014 at 6:07 AM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>>> I have followed the advice offered by Curtis regarding adding the io.scif: scifio dependency to my POM
>>>>> 
>>>>> The dependency part of my POM looks like this:
>>>>> 
>>>>>     <dependencies>
>>>>>         <dependency>
>>>>>             <groupId>net.imglib2</groupId>
>>>>>             <artifactId>imglib2</artifactId>
>>>>>             <version>2.2.1-SNAPSHOT</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>         <dependency>
>>>>>             <groupId>io.scif</groupId>
>>>>>             <artifactId>scifio</artifactId>
>>>>>             <version>0.17.1</version>
>>>>>             <type>jar</type>
>>>>>         </dependency>
>>>>>     </dependencies>
>>>>> 
>>>>> I am using NetBeans IDE, configured for use with maven project (I am slo using Java 8 and JavaFX)
>>>>> 
>>>>> However when I attempt to Build (or Build with Dependencies)  within NetBeans, I get the following error message:
>>>>> ============================================================
>>>>> 
>>>>> cd /Users/michaelellis/Documents/Development/MavenImgLib2FX; JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home "/Applications/NetBeans/NetBeans 8.0.app/Contents/Resources/NetBeans/java/maven/bin/mvn" install
>>>>> Scanning for projects...
>>>>>                                                                         
>>>>> ------------------------------------------------------------------------
>>>>> Building MavenImgLib2FX 1.0-SNAPSHOT
>>>>> ------------------------------------------------------------------------
>>>>> The POM for io.scif:scifio:jar:0.17.1 is missing, no dependency information available
>>>>> ------------------------------------------------------------------------
>>>>> BUILD FAILURE
>>>>> ------------------------------------------------------------------------
>>>>> Total time: 0.341s
>>>>> Finished at: Fri Dec 05 10:34:41 GMT 2014
>>>>> Final Memory: 7M/245M
>>>>> ------------------------------------------------------------------------
>>>>> Failed to execute goal on project MavenImgLib2FX: Could not resolve dependencies for project biz.dsuk:MavenImgLib2FX:jar:1.0-SNAPSHOT: Failure to find io.scif:scifio:jar:0.17.1 in http://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]
>>>>> 
>>>>> To see the full stack trace of the errors, re-run Maven with the -e switch.
>>>>> Re-run Maven using the -X switch to enable full debug logging.
>>>>> 
>>>>> For more information about the errors and possible solutions, please read the following articles:
>>>>> [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException
>>>>> 
>>>>> ============================================================
>>>>> 
>>>>> If I open a terminal window and cd into the project directory and:
>>>>> 
>>>>> 	mvn clean package
>>>>> 
>>>>> It succeeds.
>>>>> 
>>>>> However, when I then attempt to run the project with:
>>>>> 
>>>>> 	java -cp MavenImgLib2FX-1.0-SNAPSHOT.jar biz.dsuk.mavenimglib2fx.MainApp
>>>>> 
>>>>> The application starts to execute but throws ?No compatible service: io.scif.SCIFIOService? exception.
>>>>> ============================================================
>>>>> 
>>>>> img1=CellImg [20x30]
>>>>> BufferedImage=BufferedImage at 3137c585: type = 10 ColorModel: #pixelBits = 8 numComponents = 1 color space = java.awt.color.ICC_ColorSpace at 134d9d5f transparency = 1 has alpha = false isAlphaPre = false ByteInterleavedRaster: width = 707 height = 699 #numDataElements 1 dataOff[0] = 0
>>>>> Loading image...
>>>>> Exception in Application start method
>>>>> java.lang.reflect.InvocationTargetException
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:363)
>>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:303)
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>>> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
>>>>> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
>>>>> 	at java.lang.reflect.Method.invoke(Method.java:497)
>>>>> 	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
>>>>> Caused by: java.lang.RuntimeException: Exception in Application start method
>>>>> 	at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:875)
>>>>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$150(LauncherImpl.java:157)
>>>>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$50/553264065.run(Unknown Source)
>>>>> 	at java.lang.Thread.run(Thread.java:745)
>>>>> Caused by: java.lang.IllegalArgumentException: No compatible service: io.scif.SCIFIOService
>>>>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:243)
>>>>> 	at org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:194)
>>>>> 	at org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:170)
>>>>> 	at org.scijava.Context.<init>(Context.java:244)
>>>>> 	at org.scijava.Context.<init>(Context.java:203)
>>>>> 	at org.scijava.Context.<init>(Context.java:142)
>>>>> 	at org.scijava.Context.<init>(Context.java:128)
>>>>> 	at io.scif.SCIFIO.<init>(SCIFIO.java:81)
>>>>> 	at biz.dsuk.mavenimglib2fx.MainApp.start(MainApp.java:38)
>>>>> 	at com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$156(LauncherImpl.java:821)
>>>>> 	at com.sun.javafx.application.LauncherImpl$$Lambda$53/681110827.run(Unknown Source)
>>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$runAndWait$169(PlatformImpl.java:326)
>>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$47/693632176.run(Unknown Source)
>>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$null$167(PlatformImpl.java:295)
>>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$49/1260282780.run(Unknown Source)
>>>>> 	at java.security.AccessController.doPrivileged(Native Method)
>>>>> 	at com.sun.javafx.application.PlatformImpl.lambda$runLater$168(PlatformImpl.java:294)
>>>>> 	at com.sun.javafx.application.PlatformImpl$$Lambda$48/1364335809.run(Unknown Source)
>>>>> 	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
>>>>> Exception running application biz.dsuk.mavenimglib2fx.MainApp
>>>>> ============================================================
>>>>> 
>>>>> If I remove the calls to the SCIO code and build and run from the command line, all works well.
>>>>> 
>>>>> The SCIO source code that I am using is lifted/amended from one of the tutorials and is as follows:
>>>>> 
>>>>> ============================================================
>>>>>             imagePath = "8bit-signed&pixelType=int8&lengths=50,50,3,5,7&axes=X,Y,Z,Channel,Time.fake";
>>>>>             System.out.println("Loading image... '" + imagePath + "'");
>>>>>             SCIFIO scifio = new SCIFIO();
>>>>>             final Reader reader = scifio.initializer().initializeReader(imagePath);
>>>>> ============================================================
>>>>> 
>>>>> This source code works file in the SCIFIO tutorial.
>>>>> 
>>>>> Any help gratefully appreciated!!!!!
>>>>> 
>>>>> ? Michael Ellis
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> On 3 Dec 2014, at 19:31, Curtis Rueden <ctrueden at WISC.EDU> wrote:
>>>>> 
>>>>>> Hi Michael,
>>>>>> 
>>>>>> > How do I establish what Maven projects I need to include? 
>>>>>> 
>>>>>> One way to check is using the dependency-maven-plugin like so:
>>>>>> 
>>>>>>     mvn dependency:analyze
>>>>>> 
>>>>>> This will tell you:
>>>>>> 
>>>>>> A) Dependencies you declared but do not actually use; and
>>>>>> B) Dependencies you did not declare directly, but actually need.
>>>>>> 
>>>>>> Note that this will only work if your project compiles successfully. In other words, it is easier to start with "too many" dependencies and pare down, rather than trying to "build up" from zero.
>>>>>> 
>>>>>> So in your case, you can start with the ImgLib2 Examples dependencies block, run dependency:analyze, and adjust the POM according to its recommendations.
>>>>>> 
>>>>>> > When I go to my NetBeans project dependence, select Add dependency,
>>>>>> > then type SCIF to the query text box, I get a huge list of
>>>>>> > possibilities.
>>>>>> 
>>>>>> The dependency you probably want is io.scif:scifio (i.e.: a groupId of io.scif, and an artifactId of scifio). Presumably at the latest version. You can search for that here:
>>>>>> 
>>>>>>    http://maven.imagej.net/index.html#nexus-search;gav~io.scif~scifio~~~
>>>>>> 
>>>>>> So your dependency block in this case would be:
>>>>>> 
>>>>>>     <dependency>
>>>>>>       <groupId>io.scif</groupId>
>>>>>>       <artifactId>scifio</artifactId>
>>>>>>       <version>0.17.1</version>
>>>>>>     </dependency>
>>>>>> 
>>>>>> Note that that block of XML is available for copy-pasting from the link above.
>>>>>> 
>>>>>> > I am completely new to maven
>>>>>> 
>>>>>> For more information, see:
>>>>>>     http://imagej.net/Maven
>>>>>> 
>>>>>> Regards,
>>>>>> Curtis
>>>>>> 
>>>>>> On Tue, Dec 2, 2014 at 6:05 PM, Michael Ellis <michael.ellis at dsuk.biz> wrote:
>>>>>> I am investigating the using ImgLib2 for a project.
>>>>>> 
>>>>>> I am using NetBeans and have managed to create a NetBeans Mavern project and have  added a dependency for ImgLib2 Core Library and that seems to be working OK.
>>>>>> 
>>>>>> I now want to add the least possible requirements for the purpose of opening some image files.
>>>>>> 
>>>>>> How do I establish what Maven projects I need to include? 
>>>>>> 
>>>>>> I have cloned  the ImgLib2 Examples project and got that working but that seems to include all manner of things that I suspect I do not need.
>>>>>> 
>>>>>> When I go to my NetBeans project dependence, select Add dependency, then type SCIF to the query text box, I get a huge list of possibilities.
>>>>>> 
>>>>>> I am completely new to maven and so do not know what I am doing with it!
>>>>>> 
>>>>>> ? Michael Ellis
>>>>>> Digital Scientific UK Ltd.
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> _______________________________________________
>>>>>> ImageJ-devel mailing list
>>>>>> ImageJ-devel at imagej.net
>>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>>> 
>>>>>> 
>>>>> 
>>>>> 
>>>>> _______________________________________________
>>>>> ImageJ-devel mailing list
>>>>> ImageJ-devel at imagej.net
>>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>>> 
>>>>> 
>>>> 
>>>> 
>>>> _______________________________________________
>>>> ImageJ-devel mailing list
>>>> ImageJ-devel at imagej.net
>>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>> 
>>>> 
>>> 
>>> 
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>> 
>>> 
>> 
>> 
> 
> 
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141219/b4516945/attachment-0001.html>

From ctrueden at wisc.edu  Fri Dec 19 16:07:34 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 19 Dec 2014 16:07:34 -0600
Subject: [ImageJ-devel] latest LoadAndDisplayDataset()
In-Reply-To: <CAMWa8i1JZuF6smLB9OE0fJc1jzx89ZAmZxaABNEmMObtABHFDA@mail.gmail.com>
References: <CAMWa8i0BB2hKVdnZyyeNnAgNhJp2rMAyzJPc-3twZwKJANA5dQ@mail.gmail.com>
	<CA+B=mGo6UfTids_HVwkx0i0e8XfX0EFKxNumKOfG3m1HJE-4XA@mail.gmail.com>
	<CAMWa8i1JZuF6smLB9OE0fJc1jzx89ZAmZxaABNEmMObtABHFDA@mail.gmail.com>
Message-ID: <CADN69yn2xfeXGZ22eTTF1QXq+M=7H-kT7hBp0H4A401sB=zdDQ@mail.gmail.com>

Hi Brian,

Just a quick follow-up to let you know that Mark & I addressed some
problems with the tutorials today. For the most part, they should now be
working as intended if you update to the latest master.

However, a couple of minor issues remain:

* SCIFIO is a little aggressive about emitting things at INFO and WARN
levels, so you'll probably see some log messages. We will cut back on those.

* The ij1-patcher fails to patch something in ImageJ1 ("cannot find
ij.macro: ij.Macro found in ij/macro.class"). We'll have to investigate
that further later.

Regards,
Curtis

On Tue, Dec 16, 2014 at 10:56 AM, Brian Northan <bnorthan at gmail.com> wrote:
>
> Hi Mark
>
> Thanks a lot.   Things are working now.  Looks like I just had to specify
> that my development project use the latest imagej-common.
>
> Brian
>
> On Tue, Dec 16, 2014 at 11:24 AM, Mark Hiner <hiner at wisc.edu> wrote:
>>
>> Hi Brian,
>>
>>  This was a known issue
>> <https://github.com/imagej/imagej-common/issues/34>. The original error
>> was fixed
>> <https://github.com/imagej/imagej-common/compare/055005ff59b8df637a1b1bfb403af0da9e4f3bdc...e11b7728408c7982939e075bba389378f5354398>,
>> but hasn't been propagated up to imagej-tutorials. This issue
>> <https://github.com/imagej/imagej-tutorials/issues/11> has more info.
>>
>>  Sorry for the trouble... we hope to have the tutorials fixed in the next
>> day or so.
>>
>> Thanks!
>> - Mark
>>
>> On Tue, Dec 16, 2014 at 9:10 AM, Brian Northan <bnorthan at gmail.com>
>> wrote:
>>
>>>
>>> Hi developers
>>>
>>> I was having trouble with some previously functional ij-ops related
>>> jython scripts.  So I grabbed a fresh copy of imagej-tutorials to double
>>> check some things.
>>>
>>> I noticed that in the 'LoadAndDisplayDataSet' project
>>> ij.dataset().open(...) is deprecated.  When running the tutorial I get a
>>> 'No such class: io.scif.config.SCIFIOConfig' exception.
>>>
>>> Do I need to be using a different call to open a dataset??  If so can
>>> anyone point me to info on this?
>>>
>>> Sorry if I missed an announcement or other thread about this, I looked
>>> around a bit and couldn't find anything.
>>>
>>> Thanks a lot
>>>
>>> Brian
>>>
>>>
>>>
>>> _______________________________________________
>>> ImageJ-devel mailing list
>>> ImageJ-devel at imagej.net
>>> http://imagej.net/mailman/listinfo/imagej-devel
>>>
>>>
>>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141219/5f00d458/attachment.html>

From ctrueden at wisc.edu  Fri Dec 19 16:19:46 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 19 Dec 2014 16:19:46 -0600
Subject: [ImageJ-devel] Disruptive ImageJ updates this Friday
In-Reply-To: <CADN69ynLSTUuN4CTVmhr=7Rxu68s8Vbm-LUw1nVbABETJqDrnA@mail.gmail.com>
References: <CADN69ynLSTUuN4CTVmhr=7Rxu68s8Vbm-LUw1nVbABETJqDrnA@mail.gmail.com>
Message-ID: <CADN69ykSEBa8OpD2aWeemECD3zTbfU8XwxQpGv8d-bCY+f1q-A@mail.gmail.com>

Hi everyone,

> The new ImgLib2 components will be uploaded to the core
> ImageJ and Fiji update sites this Friday, December 19.

The update is complete: the release version of ImgLib2 is now distributed
with ImageJ. All libraries and plugins on the ImageJ and Fiji update sites
have been updated accordingly, and should continue working as before. As
always, please report any issues you encounter.

This update also includes the BigDataViewer libraries and plugin suite on
the core Fiji update site. If you have the BigDataViewer update site
enabled, you should disable it in favor of the BigDataViewer that ships
with Fiji.

Thanks to everyone who helped make this update possible!

Cheers,
Curtis

P.S. If you have any other update sites enabled and they are not working
correctly (especially if you see errors containing "ClassNotFoundException"
or "NoSuchMethodError" with "net.imglib2"), chances are that the author of
those plugins needs to update them to work with the release version of
ImgLib2. Please report such issues via Help > Report a Bug.

On Tue, Dec 16, 2014 at 2:29 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
> Hi everyone,
>
> In the wake of the recent ImgLib2 release [1], the new ImgLib2 components
> will be uploaded to the core ImageJ and Fiji update sites this Friday,
> December 19.
>
> While we have made a concerted effort to update all core ImageJ and Fiji
> components to the new version of ImgLib2, there are still consequences to
> this upgrade:
>
> - ImageJ users: **plugins on third party update sites may break** if they
> use an outdated version of ImgLib2. If you use a lot of update sites, be
> cautious about updating during this transitional period. There is a new
> 2014-Nov-25 Life-Line version of Fiji available for download [2], in case
> you need to roll back.
>
> - Plugin developers: **you should update your plugins** which use ImgLib2
> to depend on the latest version [3]. Then after Friday's upload, please
> upload your updated versions. If you need any assistance, send a mail to
> imagej-devel and/or fiji-devel.
>
> Now that the library is out of beta, the ImgLib2 developers will make
> every effort to maintain backward compatibility.
>
> Regards,
> Curtis
>
> [1] http://imagej.net/2014-12-10_-_ImgLib2_released
>
> [2] http://fiji.sc/Downloads#Fiji
>
> [3] One easy way to do this is to extend pom-imagej 5.2.1, or pom-fiji
> 6.1.1 if your plugin is a Fiji component. If in doubt, check your
> dependency hierarchy to make sure you are depending on imglib2 2.0.1 or
> newer (you can run "mvn dependency:tree" or check the Dependency Hierarchy
> in Eclipse). Further reading: http://imagej.net/Architecture
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20141219/cd7c3c66/attachment.html>

