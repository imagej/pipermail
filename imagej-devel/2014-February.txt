From bugzilla at fiji.sc  Sun Feb  2 20:26:28 2014
From: bugzilla at fiji.sc (bugzilla at fiji.sc)
Date: Mon, 03 Feb 2014 02:26:28 +0000
Subject: [ImageJ-devel] [Bug 691] Modern Mode (IJ2) fails to load DICOM
In-Reply-To: <bug-691-194@http.fiji.sc/bugzilla/>
References: <bug-691-194@http.fiji.sc/bugzilla/>
Message-ID: <bug-691-194-ysdWFO49Qj@http.fiji.sc/bugzilla/>

http://fiji.sc/bugzilla/show_bug.cgi?id=691

Alexa <alexa.gerancho at hushmail.com> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
                 CC|                            |alexa.gerancho at hushmail.com

--- Comment #6 from Alexa <alexa.gerancho at hushmail.com> ---
*** Bug 260998 has been marked as a duplicate of this bug. ***
Seen live from the domain http://volichat.com/adult-chat-rooms
Marked for reference. Resolved as fixed @bugzilla.

-- 
You are receiving this mail because:
You are the assignee for the bug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140203/394793e3/attachment.html>

From ctrueden at wisc.edu  Tue Feb  4 15:52:43 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 4 Feb 2014 15:52:43 -0600
Subject: [ImageJ-devel] Developing a Plugin, Should I use ImageJ 1 or 2?
In-Reply-To: <BAY407-EAS138486F1B256F7C1BC629D8ADA80@phx.gbl>
References: <BAY407-EAS138486F1B256F7C1BC629D8ADA80@phx.gbl>
Message-ID: <CADN69yk_H+_g2Mk1avnFyqMqKSquVb-kxCkXPJK_EjZQenyJ0g@mail.gmail.com>

Hi Calem,

> I'm looking at converting a denoiser so that it can be used in ImageJ.
> Should I make a plugin for ImageJ 1 or ImageJ 2?
>
> ImageJ 2 looks potentially nicer to work with, but since it's in
> development I'm not sure I should jump to it. I've never made an
> ImageJ plugin before (and it'll be interesting going back to Java), so
> I'm not sure which is easier to work with from a plugin development
> perspective.

The short answer is that ImageJ1's API is simpler, while ImageJ2 is more
powerful. (This is an overgeneralization of course -- personally I find
ImageJ2's typed plugin mechanism to be more elegant, for example, but the
ImgLib2 API for working with images has a higher learning curve than the
ImageJ1 API.)

If all you want is a denoiser plugin that people can get started using
ASAP, I suggest you code it as an ImageJ1 plugin and serve it via a Fiji
update site [1]. If you take care to use ImageJ1's built in input
harvesting mechanism (the GenericDialog) then ImageJ2 should be able to run
your plugin as-is via its legacy compatibility layer.

Regards,
Curtis

[1] http://fiji.sc/Update_Sites


On Sun, Feb 2, 2014 at 11:23 AM, Calem J Bendell <calembendell at live.com>wrote:

> Hey Curtis,
>
>
>
> I'm looking at converting a denoiser so that it can be used in ImageJ.
> Should I make a plugin for ImageJ 1 or ImageJ 2?
>
> ImageJ 2 looks potentially nicer to work with, but since it's in
> development I'm not sure I should jump to it.
> I've never made an ImageJ plugin before (and it'll be interesting going
> back to Java), so I'm not sure which is easier to work with from a plugin
> development perspective.
> Any insight would be much appreciated!
>
>
>
> Thanks!
>
> Calem
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140204/4c5bd7d3/attachment.html>

From ctrueden at wisc.edu  Tue Feb  4 16:00:43 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 4 Feb 2014 16:00:43 -0600
Subject: [ImageJ-devel] R scripting integration in ImageJ2
In-Reply-To: <CACupdpVXs-m6_+zq_4TRFwzJRwKXXh_GE3QfdHzaDNJ2teU+Bg@mail.gmail.com>
References: <CALPC6DOguS9201AQoiPdtNNmCUhNdCJSKeNenF974Mm6TGX6tA@mail.gmail.com>
	<CACupdpVXs-m6_+zq_4TRFwzJRwKXXh_GE3QfdHzaDNJ2teU+Bg@mail.gmail.com>
Message-ID: <CADN69ynvzG6KYm_ArwqJGJp6RcJV3BgWbRuLL_Uqu+EJxqZ14w@mail.gmail.com>

Hi Agustin,

Apologies for the long delay in reply.

> I'm contacting you regarding your comment "For what it's worth, we are
> also working on R scripting integration in ImageJ2." in
>
http://stackoverflow.com/questions/18989725/how-can-i-call-execute-an-imagej-macro-with-r
>
> I'm very interested on this issue. What is the stage of this
> integration?

For the past couple of months I have been working on improving the ImageJ
scripting framework in general, paving the way for parameterized scripts.
That branch adding R support has not yet been updated to take advantage of
the improvements, but needs to be.

> Is it something that I could try?

Unless you want to actually help complete the work, I suggest waiting until
it is merged to master and/or split into its own repository (not sure which
route we will go yet). The current status should be considered "alpha" in
that it fundamentally works, but has many remaining loose ends.

> I normally use the raster package in R, but I often find some
> operations to too slow and have done some naive scripting in ImageJ in
> these cases. Being able to call ImageJ commands from within R would be
> very useful for me.

To clarify, the branch in question uses RServe [1] to support running R
scripts from *within ImageJ*. Calling ImageJ from the R environment would
be the other direction; most popular package to do that is called rJava [2]
(by the same developer). See this blog post for examples:

    http://darrenjw.wordpress.com/2011/01/01/calling-java-code-from-r/

Regards,
Curtis

[1] http://rforge.net/Rserve/
[2] http://rforge.net/rJava/


On Wed, Dec 18, 2013 at 4:21 PM, Curtis Rueden <ctrueden at gmail.com> wrote:

> ---------- Forwarded message ----------
> From: Agustin Lobo <Agustin.Lobo at ictja.csic.es>
> Date: Wed, Dec 18, 2013 at 11:40 AM
> Subject: R scripting integration in ImageJ2
> To: ctrueden at gmail.com
>
>
> Dear Curtis Rueden,
>
> I'm contacting you regarding your comment
> "For what it's worth, we are also working on R scripting integration
> in ImageJ2."
> in
>
> http://stackoverflow.com/questions/18989725/how-can-i-call-execute-an-imagej-macro-with-r
>
> I'm very interested on this issue. What is the stage of this integration?
> Is it something that I could try? I normally use the raster package in R,
> but
> I often find some operations to too slow and have done some naive
> scripting in ImageJ in these cases. Being able to call ImageJ commands from
> within R would be very useful for me.
>
> Thanks,
>
> Agus
>
> --
> --
> Dr. Agustin Lobo
> Institut de Ciencies de la Terra "Jaume Almera" (CSIC)
> Lluis Sole Sabaris s/n
> 08028 Barcelona
> Spain
> Tel. 34 934095410
> Fax. 34 934110012
> e-mail Agustin.Lobo at ictja.csic.es
> https://sites.google.com/site/aloboaleu/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140204/35477347/attachment.html>

From Johannes.Schindelin at gmx.de  Tue Feb 11 19:44:34 2014
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Wed, 12 Feb 2014 02:44:34 +0100 (CET)
Subject: [ImageJ-devel] Splitting out some projects from imglib.git?
Message-ID: <alpine.DEB.1.00.1402120240270.14982@s15462909.onlinehome-server.info>

Hi Tobias,

if you're okay with it, Curtis and I would like to split out some projects
from imglib.git, namely imglib2-ij, -examples, -test and -scripting (the
latter as a consequence of -ij to avoid circular dependencies between
repositories.

As soon as you give us the go flag, we're on our way.

Thanks,
Johannes

P.S.: we will of course take care of the Jenkins jobs that need adjusting,
the release management and the changes to the Maven configuration.


From tinevez at pasteur.fr  Wed Feb 12 01:19:09 2014
From: tinevez at pasteur.fr (Jean-Yves Tinevez)
Date: Wed, 12 Feb 2014 08:19:09 +0100
Subject: [ImageJ-devel] Splitting out some projects from imglib.git?
In-Reply-To: <alpine.DEB.1.00.1402120240270.14982@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1402120240270.14982@s15462909.onlinehome-server.info>
Message-ID: <52FB206D.2000005@pasteur.fr>

On 12-Feb-14 02:44, Johannes Schindelin wrote:
> Hi Tobias,
>
> if you're okay with it, Curtis and I would like to split out some projects
> from imglib.git, namely imglib2-ij, -examples, -test and -scripting (the
> latter as a consequence of -ij to avoid circular dependencies between
> repositories.
>
> As soon as you give us the go flag, we're on our way.

Hi all

On a related note, could it be the right moment to create the -sandbox 
package that was discussed just before Tobias was elected?

Best
jy


From pietzsch at mpi-cbg.de  Wed Feb 12 03:01:53 2014
From: pietzsch at mpi-cbg.de (Tobias Pietzsch)
Date: Wed, 12 Feb 2014 10:01:53 +0100
Subject: [ImageJ-devel] Splitting out some projects from imglib.git?
In-Reply-To: <alpine.DEB.1.00.1402120240270.14982@s15462909.onlinehome-server.info>
References: <alpine.DEB.1.00.1402120240270.14982@s15462909.onlinehome-server.info>
Message-ID: <EBCBBB24-E915-4998-BBFC-C86CC64DA303@mpi-cbg.de>

Hi Johannes,
sure, go ahead!
Tobias

On Feb 12, 2014, at 2:44 AM, Johannes Schindelin <Johannes.Schindelin at gmx.de> wrote:

> Hi Tobias,
> 
> if you're okay with it, Curtis and I would like to split out some projects
> from imglib.git, namely imglib2-ij, -examples, -test and -scripting (the
> latter as a consequence of -ij to avoid circular dependencies between
> repositories.
> 
> As soon as you give us the go flag, we're on our way.
> 
> Thanks,
> Johannes
> 
> P.S.: we will of course take care of the Jenkins jobs that need adjusting,
> the release management and the changes to the Maven configuration.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140212/eeadd5bf/attachment.pgp>

From Johannes.Schindelin at gmx.de  Wed Feb 12 19:38:50 2014
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 13 Feb 2014 02:38:50 +0100 (CET)
Subject: [ImageJ-devel] Cool find: Maven plugin to attach files to GitHub
	releases
Message-ID: <alpine.DEB.1.00.1402130235490.14982@s15462909.onlinehome-server.info>

Hi Curtis,

I just found (and modified) a Maven plugin I just found to attach files to
GitHub releases:

https://jutzig.wordpress.com/2014/01/30/github-release-maven-plugin/

Maybe something for us?

Ciao,
Dscho


From panovr at gmail.com  Thu Feb 13 08:19:39 2014
From: panovr at gmail.com (Yili Zhao)
Date: Thu, 13 Feb 2014 22:19:39 +0800
Subject: [ImageJ-devel] ImageJ2 plugin thread question
Message-ID: <CAHC=qdCjgULWwy6isyiLn0=sySThjQDpRUoNuYYG4nTFhR6YVQ@mail.gmail.com>

Hi,
  if I want to develop a plugin for ImageJ2, there are basically two kinds
of plugin:

  1. first kind plugin does not need GUI;

  2. second kind plugin does need GUI.

  Suppose this plugin will perform a long time-consumed task, so I want to
ask that:

  1. will ImageJ2 run its plugin in a new thread? Because in Swing toolkit,
all UI events should be processed in UI thread or the main thread, and
there is only One UI thread, so it is a single thread model.
Running a plugin in a new thread can guarantee the plugin will not block
ImageJ2's GUI.

  2. If this plugin need its own GUI, but this plugin is running in a
thread which is not the UI thread (event dispatch thread), and this
plugin's GUI should be created in UI thread for thread safe, how can this
be done?

  In order to avoid blocking the ImageJ2' user interface, I plan to do like
this:

  1. execute the "long time-consumed task" in a separate worker thread;

  2. In the task running process, I want to report the running progress to
the ImageJ2 main frame, so that the main frame can display a progress
information to let user know the current status;

  3. When the task completed, it can notify the main frame, and the main
frame can response to this event.

  How can I implement this asynchronous task model in ImageJ2? (I think
maybe I need some helper classes like  "SwingWorker" in JDK 6)

  Thanks!


-- 
Yili Zhao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140213/34bbbf12/attachment.html>

From Johannes.Schindelin at gmx.de  Thu Feb 13 09:43:45 2014
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Thu, 13 Feb 2014 16:43:45 +0100 (CET)
Subject: [ImageJ-devel] ImageJ2 plugin thread question
In-Reply-To: <CAHC=qdCjgULWwy6isyiLn0=sySThjQDpRUoNuYYG4nTFhR6YVQ@mail.gmail.com>
References: <CAHC=qdCjgULWwy6isyiLn0=sySThjQDpRUoNuYYG4nTFhR6YVQ@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1402131635001.14982@s15462909.onlinehome-server.info>

Hi Yili,

On Thu, 13 Feb 2014, Yili Zhao wrote:

>   if I want to develop a plugin for ImageJ2, there are basically two kinds
> of plugin:
> 
>   1. first kind plugin does not need GUI;
> 
>   2. second kind plugin does need GUI.

There are many more, in particular, you need to separate 2) into at least
3 subcategories: plugins that need a simple GUI enquiring parameters,
plugins that need a simple GUI with minor interactivity (such as
interpreting a "maintain aspect-ratio" checkbox to adjust the width if the
user edits the height, and vice versa) and fully interactive GUIs (think
Trainable Segmentation).

In general, all of these mentioned plugins are actually *commands*: they
*run*.

There are other plugins (even in ImageJ 1.x, where the term "plugin" gets
really, really blurred): tools, file formats for I/O, scripting languages,
complete user interfaces, etc.

>   Suppose this plugin will perform a long time-consumed task, so I want to
> ask that:
> 
>   1. will ImageJ2 run its plugin in a new thread? Because in Swing toolkit,
> all UI events should be processed in UI thread or the main thread, and
> there is only One UI thread, so it is a single thread model.
> Running a plugin in a new thread can guarantee the plugin will not block
> ImageJ2's GUI.

The idea in ImageJ2 is to avoid Swing-specific stuff (otherwise you doom
yourself to a very limited, narrow mindset: one user, one machine, one
desktop, something that is already not true at all).

So what you would do is subscribe to the event service and react to those
events.

>   2. If this plugin need its own GUI, but this plugin is running in a
> thread which is not the UI thread (event dispatch thread), and this
> plugin's GUI should be created in UI thread for thread safe, how can this
> be done?

The same way as it is done with Swing: you subscribe to events and react
on them. If the reaction takes a long time, you will have to spawn off a
new thread to avoid blocking the main event thread.

>   In order to avoid blocking the ImageJ2' user interface, I plan to do like
> this:
> 
>   1. execute the "long time-consumed task" in a separate worker thread;

Good idea.

>   2. In the task running process, I want to report the running progress to
> the ImageJ2 main frame, so that the main frame can display a progress
> information to let user know the current status;

Good. You will need to add a @Parameter field of type StatusService to do
that.

>   3. When the task completed, it can notify the main frame, and the main
> frame can response to this event.

If you refer to the main window as the main frame, there is no need. If
you refer to your plugin's main frame, you'll just have to dispose() of
it.

>   How can I implement this asynchronous task model in ImageJ2? (I think
> maybe I need some helper classes like  "SwingWorker" in JDK 6)

As I mentioned earlier, restricting yourself to Swing is bound to get you
into such a lot of trouble it is simply not worth it.

Better look at the ThreadService:

	http://jenkins.imagej.net/view/SciJava/job/SciJava-common-javadoc/javadoc/org/scijava/thread/ThreadService.html

Ciao,
Johannes


From ctrueden at wisc.edu  Thu Feb 13 16:53:09 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Thu, 13 Feb 2014 16:53:09 -0600
Subject: [ImageJ-devel] ImageJ2 plugin thread question
In-Reply-To: <CAHC=qdCjgULWwy6isyiLn0=sySThjQDpRUoNuYYG4nTFhR6YVQ@mail.gmail.com>
References: <CAHC=qdCjgULWwy6isyiLn0=sySThjQDpRUoNuYYG4nTFhR6YVQ@mail.gmail.com>
Message-ID: <CADN69ykjx_QuB37sa+eLL7Yu0VJqcP5gxa=d8UfB1odv=QFc5Q@mail.gmail.com>

Hi Yili,

> will ImageJ2 run its plugin in a new thread?

Yes, ImageJ2 launches plugins in their thread. See:
http://jenkins.imagej.net/job/ImageJ-daily/javadoc/imagej/module/ModuleService.html#run(imagej.module.ModuleInfo,
boolean, java.lang.Object...)

ImageJ modules are typically fired using these run methods, which spawn a
new thread using the ThreadService -- well, it's out of a ThreadPool, so in
theory you could hit a limit if you run tons of modules at the same time.

Note that the methods return a Future, so that you can block till execution
is complete *if you want* but you are not forced to do so.

> Suppose this plugin will perform a long time-consumed task

If you write a command whose sole job is to perform some long-running task,
just implement the task in the run method. You do not have to worry about
threading unless you want the execution itself to be done using multiple
threads. (In the future we plan to provide more transparent
multi-threading, but right now modules execute on a single new thread.)

> If this plugin need its own GUI, but this plugin is running in a
> thread which is not the UI thread (event dispatch thread), and this
> plugin's GUI should be created in UI thread for thread safe, how can
> this be done?

You do not need to create Swing UI component on the EDT. You can do it in
any thread. It is only *after* you pack() and setVisible(true) that you
need to be concerned about the EDT, and even then, if all you are doing is
listening for GUI events (e.g., actionPerformed callbacks) then those
already happen on the EDT so you don't need to worry.

In short, in 99% of cases, you actually do not need to use
EventQueue.invokeLater and similar. So even if you write an ImageJ command
that spawns a Swing UI, you may not need this method.

As Johannes says, if you want to stay general, look at the ImageJ
ThreadService. It has UI-agnostic entry points into concepts like the EDT,
without explicitly tying them to AWT/Swing in particular.

> In the task running process, I want to report the running progress to
> the ImageJ2 main frame

http://jenkins.imagej.net/job/SciJava-common-javadoc/javadoc/org/scijava/app/StatusService.html

The ImageJ UI (be it a Swing one, or other one) will take care of rendering
your status messages and progress updates to the status bar or however it
sees fit.

Regards,
Curtis


On Thu, Feb 13, 2014 at 8:19 AM, Yili Zhao <panovr at gmail.com> wrote:

> Hi,
>   if I want to develop a plugin for ImageJ2, there are basically two kinds
> of plugin:
>
>   1. first kind plugin does not need GUI;
>
>   2. second kind plugin does need GUI.
>
>   Suppose this plugin will perform a long time-consumed task, so I want to
> ask that:
>
>   1. will ImageJ2 run its plugin in a new thread? Because in Swing
> toolkit, all UI events should be processed in UI thread or the main thread,
> and there is only One UI thread, so it is a single thread model.
> Running a plugin in a new thread can guarantee the plugin will not block
> ImageJ2's GUI.
>
>   2. If this plugin need its own GUI, but this plugin is running in a
> thread which is not the UI thread (event dispatch thread), and this
> plugin's GUI should be created in UI thread for thread safe, how can this
> be done?
>
>   In order to avoid blocking the ImageJ2' user interface, I plan to do
> like this:
>
>   1. execute the "long time-consumed task" in a separate worker thread;
>
>   2. In the task running process, I want to report the running progress to
> the ImageJ2 main frame, so that the main frame can display a progress
> information to let user know the current status;
>
>   3. When the task completed, it can notify the main frame, and the main
> frame can response to this event.
>
>   How can I implement this asynchronous task model in ImageJ2? (I think
> maybe I need some helper classes like  "SwingWorker" in JDK 6)
>
>   Thanks!
>
>
> --
> Yili Zhao
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140213/63d81f6f/attachment.html>

From ctrueden at wisc.edu  Fri Feb 14 17:11:44 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Fri, 14 Feb 2014 17:11:44 -0600
Subject: [ImageJ-devel] Splitting out some projects from imglib.git?
In-Reply-To: <EBCBBB24-E915-4998-BBFC-C86CC64DA303@mpi-cbg.de>
References: <alpine.DEB.1.00.1402120240270.14982@s15462909.onlinehome-server.info>
	<EBCBBB24-E915-4998-BBFC-C86CC64DA303@mpi-cbg.de>
Message-ID: <CADN69y=wwwAkomptTNTqi25gK8D_XrndBQYXzSeSLe0aJGgW-A@mail.gmail.com>

Hi Tobias et. al,

> Curtis and I would like to split out some projects from imglib.git,
> namely imglib2-ij, -examples, -test and -scripting

Johannes "The Finisher" Schindelin finished splitting out these
repositories. There are still some Jenkins jobs to update; we will take
care of that probably early next week.

There are also some unit tests in imglib2-tests that need to get migrated
back to their appropriate component:
- net.imglib2.view.TranslationTransformConcatenateTest
- net.imglib2.view.MixedTransformConcatenateTest
- net.imglib2.view.SlicingTransformConcatenateTest

And possibly others; need to investigate further. Rule of thumb is:
imglib2-tests is for manual "behavior" type tests (and possibly also
automated integration tests in the future, should we ever need that), so
should not depend on JUnit at all.

We are planning to hack more on imglib2-ij, so that it can contribute more
to the backbone of the ij-legacy component, which handles ImageJ2<->ImageJ1
data structure translation.

Regards,
Curtis


On Wed, Feb 12, 2014 at 3:01 AM, Tobias Pietzsch <pietzsch at mpi-cbg.de>wrote:

> Hi Johannes,
> sure, go ahead!
> Tobias
>
> On Feb 12, 2014, at 2:44 AM, Johannes Schindelin <
> Johannes.Schindelin at gmx.de> wrote:
>
> > Hi Tobias,
> >
> > if you're okay with it, Curtis and I would like to split out some
> projects
> > from imglib.git, namely imglib2-ij, -examples, -test and -scripting (the
> > latter as a consequence of -ij to avoid circular dependencies between
> > repositories.
> >
> > As soon as you give us the go flag, we're on our way.
> >
> > Thanks,
> > Johannes
> >
> > P.S.: we will of course take care of the Jenkins jobs that need
> adjusting,
> > the release management and the changes to the Maven configuration.
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140214/ebd5a618/attachment.html>

From panovr at gmail.com  Sat Feb 15 07:36:56 2014
From: panovr at gmail.com (Yili Zhao)
Date: Sat, 15 Feb 2014 21:36:56 +0800
Subject: [ImageJ-devel] ImageJ2 plugin thread question
In-Reply-To: <CADN69ykjx_QuB37sa+eLL7Yu0VJqcP5gxa=d8UfB1odv=QFc5Q@mail.gmail.com>
References: <CAHC=qdCjgULWwy6isyiLn0=sySThjQDpRUoNuYYG4nTFhR6YVQ@mail.gmail.com>
	<CADN69ykjx_QuB37sa+eLL7Yu0VJqcP5gxa=d8UfB1odv=QFc5Q@mail.gmail.com>
Message-ID: <CAHC=qdDGC8em+NvoywVhpS-2LB74KGytbF+iNergy-pWtO=w0A@mail.gmail.com>

Hi Curtis and Johannes,
  thanks for the "ThreadService" and "StatusService" tip, and I think
ImageJ2 developers have already considered this issue!

  By the way, it seems that there is a "event bus" framework in ImageJ2. I
just did a quick search, and found two "EventBus" frameworks: one is from
http://eventbus.org/, another one is from Google's Guava
https://code.google.com/p/guava-libraries/wiki/EventBusExplained.

  It seems that ImageJ2 uses EventBus from http://eventbus.org/, why?


2014-02-14 6:53 GMT+08:00 Curtis Rueden <ctrueden at wisc.edu>:

> Hi Yili,
>
> > will ImageJ2 run its plugin in a new thread?
>
> Yes, ImageJ2 launches plugins in their thread. See:
>
> http://jenkins.imagej.net/job/ImageJ-daily/javadoc/imagej/module/ModuleService.html#run(imagej.module.ModuleInfo,
> boolean, java.lang.Object...)
>
> ImageJ modules are typically fired using these run methods, which spawn a
> new thread using the ThreadService -- well, it's out of a ThreadPool, so in
> theory you could hit a limit if you run tons of modules at the same time.
>
> Note that the methods return a Future, so that you can block till
> execution is complete *if you want* but you are not forced to do so.
>
> > Suppose this plugin will perform a long time-consumed task
>
> If you write a command whose sole job is to perform some long-running
> task, just implement the task in the run method. You do not have to worry
> about threading unless you want the execution itself to be done using
> multiple threads. (In the future we plan to provide more transparent
> multi-threading, but right now modules execute on a single new thread.)
>
> > If this plugin need its own GUI, but this plugin is running in a
> > thread which is not the UI thread (event dispatch thread), and this
> > plugin's GUI should be created in UI thread for thread safe, how can
> > this be done?
>
> You do not need to create Swing UI component on the EDT. You can do it in
> any thread. It is only *after* you pack() and setVisible(true) that you
> need to be concerned about the EDT, and even then, if all you are doing is
> listening for GUI events (e.g., actionPerformed callbacks) then those
> already happen on the EDT so you don't need to worry.
>
> In short, in 99% of cases, you actually do not need to use
> EventQueue.invokeLater and similar. So even if you write an ImageJ command
> that spawns a Swing UI, you may not need this method.
>
> As Johannes says, if you want to stay general, look at the ImageJ
> ThreadService. It has UI-agnostic entry points into concepts like the EDT,
> without explicitly tying them to AWT/Swing in particular.
>
> > In the task running process, I want to report the running progress to
> > the ImageJ2 main frame
>
>
> http://jenkins.imagej.net/job/SciJava-common-javadoc/javadoc/org/scijava/app/StatusService.html
>
> The ImageJ UI (be it a Swing one, or other one) will take care of
> rendering your status messages and progress updates to the status bar or
> however it sees fit.
>
> Regards,
> Curtis
>
>
> On Thu, Feb 13, 2014 at 8:19 AM, Yili Zhao <panovr at gmail.com> wrote:
>
>> Hi,
>>   if I want to develop a plugin for ImageJ2, there are basically two
>> kinds of plugin:
>>
>>   1. first kind plugin does not need GUI;
>>
>>   2. second kind plugin does need GUI.
>>
>>   Suppose this plugin will perform a long time-consumed task, so I want
>> to ask that:
>>
>>   1. will ImageJ2 run its plugin in a new thread? Because in Swing
>> toolkit, all UI events should be processed in UI thread or the main thread,
>> and there is only One UI thread, so it is a single thread model.
>> Running a plugin in a new thread can guarantee the plugin will not block
>> ImageJ2's GUI.
>>
>>   2. If this plugin need its own GUI, but this plugin is running in a
>> thread which is not the UI thread (event dispatch thread), and this
>> plugin's GUI should be created in UI thread for thread safe, how can this
>> be done?
>>
>>   In order to avoid blocking the ImageJ2' user interface, I plan to do
>> like this:
>>
>>   1. execute the "long time-consumed task" in a separate worker thread;
>>
>>   2. In the task running process, I want to report the running progress
>> to the ImageJ2 main frame, so that the main frame can display a progress
>> information to let user know the current status;
>>
>>   3. When the task completed, it can notify the main frame, and the main
>> frame can response to this event.
>>
>>   How can I implement this asynchronous task model in ImageJ2? (I think
>> maybe I need some helper classes like  "SwingWorker" in JDK 6)
>>
>>   Thanks!
>>
>>
>> --
>> Yili Zhao
>>
>> _______________________________________________
>> ImageJ-devel mailing list
>> ImageJ-devel at imagej.net
>> http://imagej.net/mailman/listinfo/imagej-devel
>>
>>
>


-- 
Yili Zhao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140215/e63f3fb1/attachment.html>

From Johannes.Schindelin at gmx.de  Sat Feb 15 10:27:46 2014
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Sat, 15 Feb 2014 17:27:46 +0100 (CET)
Subject: [ImageJ-devel] ImageJ2 plugin thread question
In-Reply-To: <CAHC=qdDGC8em+NvoywVhpS-2LB74KGytbF+iNergy-pWtO=w0A@mail.gmail.com>
References: <CAHC=qdCjgULWwy6isyiLn0=sySThjQDpRUoNuYYG4nTFhR6YVQ@mail.gmail.com>
	<CADN69ykjx_QuB37sa+eLL7Yu0VJqcP5gxa=d8UfB1odv=QFc5Q@mail.gmail.com>
	<CAHC=qdDGC8em+NvoywVhpS-2LB74KGytbF+iNergy-pWtO=w0A@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1402151726070.14982@s15462909.onlinehome-server.info>

Hi Yili,

On Sat, 15 Feb 2014, Yili Zhao wrote:

>   By the way, it seems that there is a "event bus" framework in ImageJ2. I
> just did a quick search, and found two "EventBus" frameworks: one is from
> http://eventbus.org/, another one is from Google's Guava
> https://code.google.com/p/guava-libraries/wiki/EventBusExplained.
> 
>   It seems that ImageJ2 uses EventBus from http://eventbus.org/, why?

It was stable and available from Maven Central at the time we had to pick
one.

Please also note that the abstraction of the EventService does not leak
the implementation detail of what event service exactly is used. So we are
free to change the backend when -- and if! -- appropriate.

Ciao,
Johannes


From bnorthan at gmail.com  Tue Feb 18 11:10:53 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Tue, 18 Feb 2014 12:10:53 -0500
Subject: [ImageJ-devel] Scripting examples
Message-ID: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>

Hi Curtis

Thank you for your last update on the scripting.  I got a chance to play
around with it and have been running some simple Jython scripts.

Now I am trying to understand how one should be accessing ImageJ2
functionality from the scripts.  In ImageJ1 I use the static functions in
the IJ class, IJ.run, IJ.openImage etc.

So far in ImageJ2 I have been writing java applications that start by
instantiating an ImageJ app and then use that to access services and run
commands. Basically following the tutorials.

So how are things intended to work in a script??  Is there a simpler api
somewhere like the IJ API??  Or does one still need to use the service APIs
in a script??

Thanks

Brian


On Thu, Dec 19, 2013 at 6:17 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Brian,
>
> > You mentioned that it is getting closer with the merger of a
> > 'script-parameters' branch.
>
> Yep, the current master branch supports running parameterized scripts in
> any supported scripting language. But what doesn't work yet is running them
> from the Script Editor. That work is pending on the 'script-editor-cleanup'
> branch, which unfortunately I doubt will be finished before year's end.
>
> > Are there any particular classes or example code that would be useful
> > to look at right now??
>
> No real examples yet, sorry. The closest thing ATM is the unit tests:
>
> Beanshell: http://git.io/ozG67g
> Clojure: http://git.io/XXjbwg
> JavaScript: http://git.io/YNMdMQ
> JRuby: http://git.io/S72JqQ (but broken, unfortunately)
> Jython: http://git.io/wa4SQw
>
> > Or would it be best to wait a few weeks for more updates.
>
> Well, in a few more weeks, parameterized scripts will be working from the
> Script Editor, and we will also have a tutorial in imagej-tutorials. But
> fundamentally it is working now, if you are feeling impatient. :-)
>
> Regards,
> Curtis
>
>
> On Mon, Dec 9, 2013 at 10:27 AM, Brian Northan <bnorthan at gmail.com> wrote:
>
>> Hi Curtis (and list)
>>
>> Thanks for the continued updates on the status of the scripting.  You
>> mentioned that it is getting closer with the merger of a
>> 'script-parameters' branch.  Are there any particular classes or example
>> code that would be useful to look at right now??  Or would it be best to
>> wait a few weeks for more updates.
>>
>> Thanks
>>
>> Brian
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140218/a49abc7d/attachment.html>

From Johannes.Schindelin at gmx.de  Tue Feb 18 12:06:12 2014
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Tue, 18 Feb 2014 19:06:12 +0100 (CET)
Subject: [ImageJ-devel] Scripting examples
In-Reply-To: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>
References: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1402181853250.14982@s15462909.onlinehome-server.info>

Hi Brian,

On Tue, 18 Feb 2014, Brian Northan wrote:

> Now I am trying to understand how one should be accessing ImageJ2
> functionality from the scripts.  In ImageJ1 I use the static functions in
> the IJ class, IJ.run, IJ.openImage etc.

Yeah, in IJ2 you have to use a context. The static functions of ImageJ 1.x
do not allow you to insulate separate processes from each other. That
leads to surprising results, e.g. when you try to put more than one
ImageJ 1.x applet into the same web page: it simply won't work, ever.

> So far in ImageJ2 I have been writing java applications that start by
> instantiating an ImageJ app and then use that to access services and run
> commands. Basically following the tutorials.
> 
> So how are things intended to work in a script??  Is there a simpler api
> somewhere like the IJ API??  Or does one still need to use the service APIs
> in a script??

This is a work in progress right now, under heavy construction.
Eventually, something like this will work:

-- snip --
# @StatusService status
# @OUTPUT String greeting

status.showStatus(1, 2, "In progress...")
status.warn("This is a gentle warning")
status.showStatus(2, 2)

greeting = "Hello, world!"
-- snap --

In other words, your input and output parameters will be specified using a
syntax similar to ImageJ2 commands' at the top of the script.

Ciao,
Johannes


From ctrueden at wisc.edu  Tue Feb 18 13:26:43 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Tue, 18 Feb 2014 13:26:43 -0600
Subject: [ImageJ-devel] Scripting examples
In-Reply-To: <alpine.DEB.1.00.1402181853250.14982@s15462909.onlinehome-server.info>
References: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>
	<alpine.DEB.1.00.1402181853250.14982@s15462909.onlinehome-server.info>
Message-ID: <CADN69y=G1BDkmYUK6JqanNw6_ZDKDbMxMe5GgmU8U5cgxu=YFA@mail.gmail.com>

Hi Brian,

I am out of the office today, and will reply in more detail later, but just
wanted to quickly add: the example Johannes wrote should work with the
current master branch as well as the recent 2.0.0-beta-7.7 release.
Specifically, it will work if you "Run Script" since the parameter parsing
mechanism etc. is all already in place. It just doesn't work from the
Script Editor yet since that tool needs some TLC still. As Johannes says, I
am still actively hacking on scripting support.

Also note that you can inject a Context parameter then make a new ImageJ
gateway object wrapping it to easily access services the same way the
tutorials do. (I forget whether ImageJ gateways are injectable ATM but if
not, they will be.)

Anyway, please let us know if you are unable to run such scripts.

Regards,
Curtis
On Feb 18, 2014 12:41 PM, "Johannes Schindelin" <Johannes.Schindelin at gmx.de>
wrote:

> Hi Brian,
>
> On Tue, 18 Feb 2014, Brian Northan wrote:
>
> > Now I am trying to understand how one should be accessing ImageJ2
> > functionality from the scripts.  In ImageJ1 I use the static functions in
> > the IJ class, IJ.run, IJ.openImage etc.
>
> Yeah, in IJ2 you have to use a context. The static functions of ImageJ 1.x
> do not allow you to insulate separate processes from each other. That
> leads to surprising results, e.g. when you try to put more than one
> ImageJ 1.x applet into the same web page: it simply won't work, ever.
>
> > So far in ImageJ2 I have been writing java applications that start by
> > instantiating an ImageJ app and then use that to access services and run
> > commands. Basically following the tutorials.
> >
> > So how are things intended to work in a script??  Is there a simpler api
> > somewhere like the IJ API??  Or does one still need to use the service
> APIs
> > in a script??
>
> This is a work in progress right now, under heavy construction.
> Eventually, something like this will work:
>
> -- snip --
> # @StatusService status
> # @OUTPUT String greeting
>
> status.showStatus(1, 2, "In progress...")
> status.warn("This is a gentle warning")
> status.showStatus(2, 2)
>
> greeting = "Hello, world!"
> -- snap --
>
> In other words, your input and output parameters will be specified using a
> syntax similar to ImageJ2 commands' at the top of the script.
>
> Ciao,
> Johannes
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140218/89375ba6/attachment.html>

From bnorthan at gmail.com  Tue Feb 18 15:14:52 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Tue, 18 Feb 2014 16:14:52 -0500
Subject: [ImageJ-devel] Scripting examples
In-Reply-To: <CADN69y=G1BDkmYUK6JqanNw6_ZDKDbMxMe5GgmU8U5cgxu=YFA@mail.gmail.com>
References: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>
	<alpine.DEB.1.00.1402181853250.14982@s15462909.onlinehome-server.info>
	<CADN69y=G1BDkmYUK6JqanNw6_ZDKDbMxMe5GgmU8U5cgxu=YFA@mail.gmail.com>
Message-ID: <CAMWa8i0i7LZ7e5ScpFi=yZ9T9Z7zzeRaXNN8cYrHAnCf_=0RNQ@mail.gmail.com>

Thanks very much Johannes and Curtis

Johannes' code snippet works perfectly.  That's exactly what I needed to
know.  How to access the services from a script.  Now that I know how to do
that I can try some more complicated stuff (use the datasetservice and
commandservice to open images and perform operations).  I will let you know
if any questions come up.  Please let me know any additional information or
tips that will be helpful.

Thanks again

Brian


On Tue, Feb 18, 2014 at 2:26 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:

> Hi Brian,
>
> I am out of the office today, and will reply in more detail later, but
> just wanted to quickly add: the example Johannes wrote should work with the
> current master branch as well as the recent 2.0.0-beta-7.7 release.
> Specifically, it will work if you "Run Script" since the parameter parsing
> mechanism etc. is all already in place. It just doesn't work from the
> Script Editor yet since that tool needs some TLC still. As Johannes says, I
> am still actively hacking on scripting support.
>
> Also note that you can inject a Context parameter then make a new ImageJ
> gateway object wrapping it to easily access services the same way the
> tutorials do. (I forget whether ImageJ gateways are injectable ATM but if
> not, they will be.)
>
> Anyway, please let us know if you are unable to run such scripts.
>
> Regards,
> Curtis
> On Feb 18, 2014 12:41 PM, "Johannes Schindelin" <
> Johannes.Schindelin at gmx.de> wrote:
>
>> Hi Brian,
>>
>> On Tue, 18 Feb 2014, Brian Northan wrote:
>>
>> > Now I am trying to understand how one should be accessing ImageJ2
>> > functionality from the scripts.  In ImageJ1 I use the static functions
>> in
>> > the IJ class, IJ.run, IJ.openImage etc.
>>
>> Yeah, in IJ2 you have to use a context. The static functions of ImageJ 1.x
>> do not allow you to insulate separate processes from each other. That
>> leads to surprising results, e.g. when you try to put more than one
>> ImageJ 1.x applet into the same web page: it simply won't work, ever.
>>
>> > So far in ImageJ2 I have been writing java applications that start by
>> > instantiating an ImageJ app and then use that to access services and run
>> > commands. Basically following the tutorials.
>> >
>> > So how are things intended to work in a script??  Is there a simpler api
>> > somewhere like the IJ API??  Or does one still need to use the service
>> APIs
>> > in a script??
>>
>> This is a work in progress right now, under heavy construction.
>> Eventually, something like this will work:
>>
>> -- snip --
>> # @StatusService status
>> # @OUTPUT String greeting
>>
>> status.showStatus(1, 2, "In progress...")
>> status.warn("This is a gentle warning")
>> status.showStatus(2, 2)
>>
>> greeting = "Hello, world!"
>> -- snap --
>>
>> In other words, your input and output parameters will be specified using a
>> syntax similar to ImageJ2 commands' at the top of the script.
>>
>> Ciao,
>> Johannes
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140218/3fe18259/attachment.html>

From bnorthan at gmail.com  Wed Feb 19 11:22:36 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Wed, 19 Feb 2014 12:22:36 -0500
Subject: [ImageJ-devel] Scripting examples
In-Reply-To: <CAMWa8i0i7LZ7e5ScpFi=yZ9T9Z7zzeRaXNN8cYrHAnCf_=0RNQ@mail.gmail.com>
References: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>
	<alpine.DEB.1.00.1402181853250.14982@s15462909.onlinehome-server.info>
	<CADN69y=G1BDkmYUK6JqanNw6_ZDKDbMxMe5GgmU8U5cgxu=YFA@mail.gmail.com>
	<CAMWa8i0i7LZ7e5ScpFi=yZ9T9Z7zzeRaXNN8cYrHAnCf_=0RNQ@mail.gmail.com>
Message-ID: <CAMWa8i0qTOxkFo+Y1Sa_XdoL3VXitsPzRNpr9etvmVnNzciHBA@mail.gmail.com>

Hi Curtis, Johannes and list

The scripting is working well.

One quick question.  To run a command and retrieve the output I basically
have this

--snip--
# @CommandService command

module=command.run("somecommand").get();
output=module.getOutputs().get("output");

(or)
output = module.getOutputs().values().toArray()[0];
--snap--

I'm wondering if there is a more concise way to run the command and get the
output?? Something more like this....

output=command.run("somecommand");

Basically a way to run the command, have it automatically block, and return
the output(s) (if they exist).  I could write a wrapper but first I want to
make sure I know what all ready exists.


On Tue, Feb 18, 2014 at 4:14 PM, Brian Northan <bnorthan at gmail.com> wrote:

> Thanks very much Johannes and Curtis
>
> Johannes' code snippet works perfectly.  That's exactly what I needed to
> know.  How to access the services from a script.  Now that I know how to do
> that I can try some more complicated stuff (use the datasetservice and
> commandservice to open images and perform operations).  I will let you know
> if any questions come up.  Please let me know any additional information or
> tips that will be helpful.
>
> Thanks again
>
> Brian
>
>
> On Tue, Feb 18, 2014 at 2:26 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>
>> Hi Brian,
>>
>> I am out of the office today, and will reply in more detail later, but
>> just wanted to quickly add: the example Johannes wrote should work with the
>> current master branch as well as the recent 2.0.0-beta-7.7 release.
>> Specifically, it will work if you "Run Script" since the parameter parsing
>> mechanism etc. is all already in place. It just doesn't work from the
>> Script Editor yet since that tool needs some TLC still. As Johannes says, I
>> am still actively hacking on scripting support.
>>
>> Also note that you can inject a Context parameter then make a new ImageJ
>> gateway object wrapping it to easily access services the same way the
>> tutorials do. (I forget whether ImageJ gateways are injectable ATM but if
>> not, they will be.)
>>
>> Anyway, please let us know if you are unable to run such scripts.
>>
>> Regards,
>> Curtis
>> On Feb 18, 2014 12:41 PM, "Johannes Schindelin" <
>> Johannes.Schindelin at gmx.de> wrote:
>>
>>> Hi Brian,
>>>
>>> On Tue, 18 Feb 2014, Brian Northan wrote:
>>>
>>> > Now I am trying to understand how one should be accessing ImageJ2
>>> > functionality from the scripts.  In ImageJ1 I use the static functions
>>> in
>>> > the IJ class, IJ.run, IJ.openImage etc.
>>>
>>> Yeah, in IJ2 you have to use a context. The static functions of ImageJ
>>> 1.x
>>> do not allow you to insulate separate processes from each other. That
>>> leads to surprising results, e.g. when you try to put more than one
>>> ImageJ 1.x applet into the same web page: it simply won't work, ever.
>>>
>>> > So far in ImageJ2 I have been writing java applications that start by
>>> > instantiating an ImageJ app and then use that to access services and
>>> run
>>> > commands. Basically following the tutorials.
>>> >
>>> > So how are things intended to work in a script??  Is there a simpler
>>> api
>>> > somewhere like the IJ API??  Or does one still need to use the service
>>> APIs
>>> > in a script??
>>>
>>> This is a work in progress right now, under heavy construction.
>>> Eventually, something like this will work:
>>>
>>> -- snip --
>>> # @StatusService status
>>> # @OUTPUT String greeting
>>>
>>> status.showStatus(1, 2, "In progress...")
>>> status.warn("This is a gentle warning")
>>> status.showStatus(2, 2)
>>>
>>> greeting = "Hello, world!"
>>> -- snap --
>>>
>>> In other words, your input and output parameters will be specified using
>>> a
>>> syntax similar to ImageJ2 commands' at the top of the script.
>>>
>>> Ciao,
>>> Johannes
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140219/c0274d6a/attachment-0001.html>

From ctrueden at wisc.edu  Wed Feb 19 16:48:15 2014
From: ctrueden at wisc.edu (Curtis Rueden)
Date: Wed, 19 Feb 2014 16:48:15 -0600
Subject: [ImageJ-devel] Scripting examples
In-Reply-To: <CAMWa8i0qTOxkFo+Y1Sa_XdoL3VXitsPzRNpr9etvmVnNzciHBA@mail.gmail.com>
References: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>
	<alpine.DEB.1.00.1402181853250.14982@s15462909.onlinehome-server.info>
	<CADN69y=G1BDkmYUK6JqanNw6_ZDKDbMxMe5GgmU8U5cgxu=YFA@mail.gmail.com>
	<CAMWa8i0i7LZ7e5ScpFi=yZ9T9Z7zzeRaXNN8cYrHAnCf_=0RNQ@mail.gmail.com>
	<CAMWa8i0qTOxkFo+Y1Sa_XdoL3VXitsPzRNpr9etvmVnNzciHBA@mail.gmail.com>
Message-ID: <CADN69ymv1OqeKTJMYXMR8-kseRa817Gn9fnao7c9NwTjXC-ezw@mail.gmail.com>

Hi Brian,

> So far in ImageJ2 I have been writing java applications that start by
> instantiating an ImageJ app and then use that to access services and
> run commands. Basically following the tutorials.
>
> So how are things intended to work in a script??  Is there a simpler
> api somewhere like the IJ API??  Or does one still need to use the
> service APIs in a script??

The intent is to use the ImageJ gateway in your scripts (but see my P.S.
below). So that way, what you've learned in the tutorials is equally
applicable to scripting. From my perspective, writing:

  ij.ui().showDialog("Hello world!");

is just as easy to read and write as:

  IJ.showDialog("Hello world!");

The advantages of IJ2's service-based approach are many:

1) Routines are naturally grouped according to which service they are in,
so you can use IDE autocompletion to first browse the available services,
and then browse the methods available for a particular service. Whereas if
you browse IJ.<ctrl+space> you get one massive list of methods that I
personally find somewhat overwhelming.

2) The ImageJ application context can be extended with additional services,
which are also available via compile-safe ij.get(...).fooBar() calls.

3) Core service implementations can be overridden to behave differently,
unlike the static IJ.* methods which can never be overridden (unless you
use byte-code manipulation, which is serious voodoo).

4) All scripting languages use one unified API. There is no separate list
of "macro language functions" in IJ2.

> I'm wondering if there is a more concise way to run the command and
> get the output?? Something more like this....
>
> output=command.run("somecommand");
>
> Basically a way to run the command, have it automatically block, and
> return the output(s) (if they exist).  I could write a wrapper but
> first I want to make sure I know what all ready exists.

Nope, we don't have that. I think the ambiguity of returning an Object[] in
some unspecified order is not very friendly. I guess we could return the
output map, but then it's hardly shorter than:

outputs = command.run("somecommand").get().getOutputs();

There is already an unfortunate proliferation of run method signatures in
ModuleService and CommandService, so I am honestly loath to add any more.
But if you have an idea for a method to make the API more convenient, let
us know!

Regards,
Curtis

P.S. ImageJ master now has a working Script Editor with parameter
annotations, thanks to Johannes's efforts. I also made a branch to support
"@ImageJ" auto-filling [1], although it won't merge to master until after
the next release of SciJava Common.

[1] https://github.com/imagej/imagej/compare/gateway-autofill


On Wed, Feb 19, 2014 at 11:22 AM, Brian Northan <bnorthan at gmail.com> wrote:

> Hi Curtis, Johannes and list
>
> The scripting is working well.
>
> One quick question.  To run a command and retrieve the output I basically
> have this
>
> --snip--
> # @CommandService command
>
> module=command.run("somecommand").get();
> output=module.getOutputs().get("output");
>
> (or)
> output = module.getOutputs().values().toArray()[0];
> --snap--
>
> I'm wondering if there is a more concise way to run the command and get
> the output?? Something more like this....
>
> output=command.run("somecommand");
>
> Basically a way to run the command, have it automatically block, and
> return the output(s) (if they exist).  I could write a wrapper but first I
> want to make sure I know what all ready exists.
>
>
> On Tue, Feb 18, 2014 at 4:14 PM, Brian Northan <bnorthan at gmail.com> wrote:
>
>> Thanks very much Johannes and Curtis
>>
>> Johannes' code snippet works perfectly.  That's exactly what I needed to
>> know.  How to access the services from a script.  Now that I know how to do
>> that I can try some more complicated stuff (use the datasetservice and
>> commandservice to open images and perform operations).  I will let you know
>> if any questions come up.  Please let me know any additional information or
>> tips that will be helpful.
>>
>> Thanks again
>>
>> Brian
>>
>>
>> On Tue, Feb 18, 2014 at 2:26 PM, Curtis Rueden <ctrueden at wisc.edu> wrote:
>>
>>> Hi Brian,
>>>
>>> I am out of the office today, and will reply in more detail later, but
>>> just wanted to quickly add: the example Johannes wrote should work with the
>>> current master branch as well as the recent 2.0.0-beta-7.7 release.
>>> Specifically, it will work if you "Run Script" since the parameter parsing
>>> mechanism etc. is all already in place. It just doesn't work from the
>>> Script Editor yet since that tool needs some TLC still. As Johannes says, I
>>> am still actively hacking on scripting support.
>>>
>>> Also note that you can inject a Context parameter then make a new ImageJ
>>> gateway object wrapping it to easily access services the same way the
>>> tutorials do. (I forget whether ImageJ gateways are injectable ATM but if
>>> not, they will be.)
>>>
>>> Anyway, please let us know if you are unable to run such scripts.
>>>
>>> Regards,
>>> Curtis
>>> On Feb 18, 2014 12:41 PM, "Johannes Schindelin" <
>>> Johannes.Schindelin at gmx.de> wrote:
>>>
>>>> Hi Brian,
>>>>
>>>> On Tue, 18 Feb 2014, Brian Northan wrote:
>>>>
>>>> > Now I am trying to understand how one should be accessing ImageJ2
>>>> > functionality from the scripts.  In ImageJ1 I use the static
>>>> functions in
>>>> > the IJ class, IJ.run, IJ.openImage etc.
>>>>
>>>> Yeah, in IJ2 you have to use a context. The static functions of ImageJ
>>>> 1.x
>>>> do not allow you to insulate separate processes from each other. That
>>>> leads to surprising results, e.g. when you try to put more than one
>>>> ImageJ 1.x applet into the same web page: it simply won't work, ever.
>>>>
>>>> > So far in ImageJ2 I have been writing java applications that start by
>>>> > instantiating an ImageJ app and then use that to access services and
>>>> run
>>>> > commands. Basically following the tutorials.
>>>> >
>>>> > So how are things intended to work in a script??  Is there a simpler
>>>> api
>>>> > somewhere like the IJ API??  Or does one still need to use the
>>>> service APIs
>>>> > in a script??
>>>>
>>>> This is a work in progress right now, under heavy construction.
>>>> Eventually, something like this will work:
>>>>
>>>> -- snip --
>>>> # @StatusService status
>>>> # @OUTPUT String greeting
>>>>
>>>> status.showStatus(1, 2, "In progress...")
>>>> status.warn("This is a gentle warning")
>>>> status.showStatus(2, 2)
>>>>
>>>> greeting = "Hello, world!"
>>>> -- snap --
>>>>
>>>> In other words, your input and output parameters will be specified
>>>> using a
>>>> syntax similar to ImageJ2 commands' at the top of the script.
>>>>
>>>> Ciao,
>>>> Johannes
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140219/d5284aaf/attachment.html>

From bnorthan at gmail.com  Thu Feb 20 10:31:24 2014
From: bnorthan at gmail.com (Brian Northan)
Date: Thu, 20 Feb 2014 11:31:24 -0500
Subject: [ImageJ-devel] Scripting examples
In-Reply-To: <CADN69ymv1OqeKTJMYXMR8-kseRa817Gn9fnao7c9NwTjXC-ezw@mail.gmail.com>
References: <CAMWa8i0075TpwNgbR6-kaA8YQehR3MoinKJsRA1_0Zk8qMpNfg@mail.gmail.com>
	<alpine.DEB.1.00.1402181853250.14982@s15462909.onlinehome-server.info>
	<CADN69y=G1BDkmYUK6JqanNw6_ZDKDbMxMe5GgmU8U5cgxu=YFA@mail.gmail.com>
	<CAMWa8i0i7LZ7e5ScpFi=yZ9T9Z7zzeRaXNN8cYrHAnCf_=0RNQ@mail.gmail.com>
	<CAMWa8i0qTOxkFo+Y1Sa_XdoL3VXitsPzRNpr9etvmVnNzciHBA@mail.gmail.com>
	<CADN69ymv1OqeKTJMYXMR8-kseRa817Gn9fnao7c9NwTjXC-ezw@mail.gmail.com>
Message-ID: <CAMWa8i3AeMMLxrLkEvWskkjgJUHu5AcfN8JgLAEj4rZ4HYQTDg@mail.gmail.com>

Hi Curtis

There is already an unfortunate proliferation of run method signatures in
> ModuleService and CommandService, so I am honestly loath to add any more.
> But if you have an idea for a method to make the API more convenient, let
> us know!
>

At this point I just wanted to make sure I wasn't missing any alternative
APIs or conventions.  I can understand why you would not want to add more
"run" methods.

On first impression I could see a few things that would seemingly make the
API more convenient for relatively simple scenarios (for example only one
output, it is desired the command block until finished), but as you mention
an extra 'get' is probably just as simple as an addition to the API.

Thanks again for the information

Brian


> There is already an unfortunate proliferation of run method signatures in
> ModuleService and CommandService, so I am honestly loath to add any more.
> But if you have an idea for a method to make the API more convenient, let
> us know!
>
>
>
> On Wed, Feb 19, 2014 at 11:22 AM, Brian Northan <bnorthan at gmail.com>wrote:
>
>> Hi Curtis, Johannes and list
>>
>> The scripting is working well.
>>
>> One quick question.  To run a command and retrieve the output I basically
>> have this
>>
>> --snip--
>> # @CommandService command
>>
>> module=command.run("somecommand").get();
>> output=module.getOutputs().get("output");
>>
>> (or)
>> output = module.getOutputs().values().toArray()[0];
>> --snap--
>>
>> I'm wondering if there is a more concise way to run the command and get
>> the output?? Something more like this....
>>
>> output=command.run("somecommand");
>>
>> Basically a way to run the command, have it automatically block, and
>> return the output(s) (if they exist).  I could write a wrapper but first I
>> want to make sure I know what all ready exists.
>>
>>
>> On Tue, Feb 18, 2014 at 4:14 PM, Brian Northan <bnorthan at gmail.com>wrote:
>>
>>> Thanks very much Johannes and Curtis
>>>
>>> Johannes' code snippet works perfectly.  That's exactly what I needed to
>>> know.  How to access the services from a script.  Now that I know how to do
>>> that I can try some more complicated stuff (use the datasetservice and
>>> commandservice to open images and perform operations).  I will let you know
>>> if any questions come up.  Please let me know any additional information or
>>> tips that will be helpful.
>>>
>>> Thanks again
>>>
>>> Brian
>>>
>>>
>>> On Tue, Feb 18, 2014 at 2:26 PM, Curtis Rueden <ctrueden at wisc.edu>wrote:
>>>
>>>> Hi Brian,
>>>>
>>>> I am out of the office today, and will reply in more detail later, but
>>>> just wanted to quickly add: the example Johannes wrote should work with the
>>>> current master branch as well as the recent 2.0.0-beta-7.7 release.
>>>> Specifically, it will work if you "Run Script" since the parameter parsing
>>>> mechanism etc. is all already in place. It just doesn't work from the
>>>> Script Editor yet since that tool needs some TLC still. As Johannes says, I
>>>> am still actively hacking on scripting support.
>>>>
>>>> Also note that you can inject a Context parameter then make a new
>>>> ImageJ gateway object wrapping it to easily access services the same way
>>>> the tutorials do. (I forget whether ImageJ gateways are injectable ATM but
>>>> if not, they will be.)
>>>>
>>>> Anyway, please let us know if you are unable to run such scripts.
>>>>
>>>> Regards,
>>>> Curtis
>>>> On Feb 18, 2014 12:41 PM, "Johannes Schindelin" <
>>>> Johannes.Schindelin at gmx.de> wrote:
>>>>
>>>>> Hi Brian,
>>>>>
>>>>> On Tue, 18 Feb 2014, Brian Northan wrote:
>>>>>
>>>>> > Now I am trying to understand how one should be accessing ImageJ2
>>>>> > functionality from the scripts.  In ImageJ1 I use the static
>>>>> functions in
>>>>> > the IJ class, IJ.run, IJ.openImage etc.
>>>>>
>>>>> Yeah, in IJ2 you have to use a context. The static functions of ImageJ
>>>>> 1.x
>>>>> do not allow you to insulate separate processes from each other. That
>>>>> leads to surprising results, e.g. when you try to put more than one
>>>>> ImageJ 1.x applet into the same web page: it simply won't work, ever.
>>>>>
>>>>> > So far in ImageJ2 I have been writing java applications that start by
>>>>> > instantiating an ImageJ app and then use that to access services and
>>>>> run
>>>>> > commands. Basically following the tutorials.
>>>>> >
>>>>> > So how are things intended to work in a script??  Is there a simpler
>>>>> api
>>>>> > somewhere like the IJ API??  Or does one still need to use the
>>>>> service APIs
>>>>> > in a script??
>>>>>
>>>>> This is a work in progress right now, under heavy construction.
>>>>> Eventually, something like this will work:
>>>>>
>>>>> -- snip --
>>>>> # @StatusService status
>>>>> # @OUTPUT String greeting
>>>>>
>>>>> status.showStatus(1, 2, "In progress...")
>>>>> status.warn("This is a gentle warning")
>>>>> status.showStatus(2, 2)
>>>>>
>>>>> greeting = "Hello, world!"
>>>>> -- snap --
>>>>>
>>>>> In other words, your input and output parameters will be specified
>>>>> using a
>>>>> syntax similar to ImageJ2 commands' at the top of the script.
>>>>>
>>>>> Ciao,
>>>>> Johannes
>>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140220/1b3aafef/attachment-0001.html>

From harri.jaalinoja at helsinki.fi  Fri Feb 21 05:25:14 2014
From: harri.jaalinoja at helsinki.fi (=?ISO-8859-1?Q?Harri_J=E4=E4linoja?=)
Date: Fri, 21 Feb 2014 13:25:14 +0200
Subject: [ImageJ-devel] jython scripting,
	No compatible service: io.scif.SCIFIOService
Message-ID: <5307379A.4030505@helsinki.fi>

Hi,

I started to learn about ImgLib2 for the purpose of creating scripts I 
can run headlessly. I would like to use jython since I already used that 
with ImageJ1. First I downloaded a recent Fiji version. My idea was that 
this would be the easiest way to get the dependencies (scifio, imglib2 
etc.) right.

mkdir fiji-20140219
cd fiji-20140219/
wget 
http://jenkins.imagej.net/job/Stable-Fiji/lastSuccessfulBuild/artifact/fiji-linux64.tar.gz
tar xf fiji-linux64.tar.gz


Then I just put all the jar files in the Fiji distribution in one long 
variable and gave that as the classpath for Jython
CP=`find /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name 
'*.jar' |sed ':a;N;$!ba;s/\n/:/g'`

Here's my test script:

----- imglib0.py ------
import sys

#from io.scif.config import SCIFIOConfig
from io.scif.config import *
from io.scif.img import ImgIOException,ImgOpener

from java.io import File

from net.imglib2.img import Img
from net.imglib2.img.display.imagej import ImageJFunctions
from net.imglib2.type import NativeType
from net.imglib2.type.numeric import RealType

filename = sys.argv[1]

io = ImgOpener()
config = SCIFIOConfig()
config.imgOpenerSetImgModes( SCIFIOConfig.ImgMode.CELL )
img = io.openImg(filename)

ImageJFunctions.show( img )
---------------------------


When I run it, I get an error I've seen on the list before:

hajaalin at biotek973:~/Software/fiji-20140219/Fiji.app$ jython 
-Dpython.path=$CP macros/imglib0.py 
/home/hajaalin/Data/Misha/composite1.ome.tif
[WARNING] Class pool is empty: forgot to call Thread#setClassLoader?
Traceback (most recent call last):
   File "macros/imglib0.py", line 16, in <module>
     io = ImgOpener()
     at 
org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:218)
     at 
org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:172)
     at 
org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:149)
     at org.scijava.Context.<init>(Context.java:179)
     at org.scijava.Context.<init>(Context.java:121)
     at org.scijava.Context.<init>(Context.java:109)
     at 
io.scif.img.AbstractImgIOComponent.<init>(AbstractImgIOComponent.java:59)
     at io.scif.img.ImgOpener.<init>(ImgOpener.java:94)
     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native 
Method)
     at 
sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
     at 
sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
     at 
org.python.core.PyReflectedConstructor.constructProxy(PyReflectedConstructor.java:163)

java.lang.IllegalArgumentException: java.lang.IllegalArgumentException: 
No compatible service: io.scif.SCIFIOService


If I try to run the script via Fiji, I don't get even that far:

hajaalin at biotek973:~/Software/fiji-20140219/Fiji.app$ ./ImageJ-linux64 
macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
Traceback (most recent call last):
   File "macros/imglib0.py", line 4, in <module>
     from io.scif.config import *
ImportError: No module named io


So now my questions are:
1. Is there a better way to get all the dependency jars?
2. Is there something wrong with my general setup (jython + script + 
required jars)?


Thanks, best regards,
Harri

-- 
__________________________________________________
Harri J??linoja
Light Microscopy Unit
Institute of Biotechnology, University of Helsinki
http://www.biocenter.helsinki.fi/bi/lmu/
+358 9 191 59370 fax +358 9 191 59366



From harri.jaalinoja at helsinki.fi  Mon Feb 24 04:34:12 2014
From: harri.jaalinoja at helsinki.fi (=?ISO-8859-1?Q?Harri_J=E4=E4linoja?=)
Date: Mon, 24 Feb 2014 12:34:12 +0200
Subject: [ImageJ-devel] jython scripting,
	No compatible service: io.scif.SCIFIOService
In-Reply-To: <5307379A.4030505@helsinki.fi>
References: <5307379A.4030505@helsinki.fi>
Message-ID: <530B2024.9030307@helsinki.fi>

Hi again,

here's my second try: I made a pom.xml (attached) and retrieved 
dependency jar files with:

mvn dependency:copy-dependencies


But I still get the same error as before:

CP=`find /home/hajaalin/Software/mvn-IJ2/target/dependency -name '*.jar' 
|sed ':a;N;$!ba;s/\n/:/g'`
jython -Dpython.path=$CP 
/home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib0.py 
/home/hajaalin/Data/Misha/composite1.ome.tif
[WARNING] Class pool is empty: forgot to call Thread#setClassLoader?
Traceback (most recent call last):
   File 
"/home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib0.py", line 
16, in <module>
     io = ImgOpener()
     at 
org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:218)
...
java.lang.IllegalArgumentException: java.lang.IllegalArgumentException: 
No compatible service: io.scif.SCIFIOService


Now it's maybe only a matter of getting the versions for pom-scijava and 
ij-app right. How can I find out which version to use?

Thanks,
Harri


On 21/02/14 13:25, Harri J??linoja wrote:
> Hi,
>
> I started to learn about ImgLib2 for the purpose of creating scripts I 
> can run headlessly. I would like to use jython since I already used 
> that with ImageJ1. First I downloaded a recent Fiji version. My idea 
> was that this would be the easiest way to get the dependencies 
> (scifio, imglib2 etc.) right.
>
> mkdir fiji-20140219
> cd fiji-20140219/
> wget 
> http://jenkins.imagej.net/job/Stable-Fiji/lastSuccessfulBuild/artifact/fiji-linux64.tar.gz
> tar xf fiji-linux64.tar.gz
>
>
> Then I just put all the jar files in the Fiji distribution in one long 
> variable and gave that as the classpath for Jython
> CP=`find /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name 
> '*.jar' |sed ':a;N;$!ba;s/\n/:/g'`
>
> Here's my test script:
>
> ----- imglib0.py ------
> import sys
>
> #from io.scif.config import SCIFIOConfig
> from io.scif.config import *
> from io.scif.img import ImgIOException,ImgOpener
>
> from java.io import File
>
> from net.imglib2.img import Img
> from net.imglib2.img.display.imagej import ImageJFunctions
> from net.imglib2.type import NativeType
> from net.imglib2.type.numeric import RealType
>
> filename = sys.argv[1]
>
> io = ImgOpener()
> config = SCIFIOConfig()
> config.imgOpenerSetImgModes( SCIFIOConfig.ImgMode.CELL )
> img = io.openImg(filename)
>
> ImageJFunctions.show( img )
> ---------------------------
>
>
> When I run it, I get an error I've seen on the list before:
>
> hajaalin at biotek973:~/Software/fiji-20140219/Fiji.app$ jython 
> -Dpython.path=$CP macros/imglib0.py 
> /home/hajaalin/Data/Misha/composite1.ome.tif
> [WARNING] Class pool is empty: forgot to call Thread#setClassLoader?
> Traceback (most recent call last):
>   File "macros/imglib0.py", line 16, in <module>
>     io = ImgOpener()
>     at 
> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:218)
>     at 
> org.scijava.service.ServiceHelper.loadService(ServiceHelper.java:172)
>     at 
> org.scijava.service.ServiceHelper.loadServices(ServiceHelper.java:149)
>     at org.scijava.Context.<init>(Context.java:179)
>     at org.scijava.Context.<init>(Context.java:121)
>     at org.scijava.Context.<init>(Context.java:109)
>     at 
> io.scif.img.AbstractImgIOComponent.<init>(AbstractImgIOComponent.java:59)
>     at io.scif.img.ImgOpener.<init>(ImgOpener.java:94)
>     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native 
> Method)
>     at 
> sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
>     at 
> sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
>     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
>     at 
> org.python.core.PyReflectedConstructor.constructProxy(PyReflectedConstructor.java:163)
>
> java.lang.IllegalArgumentException: 
> java.lang.IllegalArgumentException: No compatible service: 
> io.scif.SCIFIOService
>
>
> If I try to run the script via Fiji, I don't get even that far:
>
> hajaalin at biotek973:~/Software/fiji-20140219/Fiji.app$ ./ImageJ-linux64 
> macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
> Traceback (most recent call last):
>   File "macros/imglib0.py", line 4, in <module>
>     from io.scif.config import *
> ImportError: No module named io
>
>
> So now my questions are:
> 1. Is there a better way to get all the dependency jars?
> 2. Is there something wrong with my general setup (jython + script + 
> required jars)?
>
>
> Thanks, best regards,
> Harri
>


-- 
__________________________________________________
Harri J??linoja
Light Microscopy Unit
Institute of Biotechnology, University of Helsinki
http://www.biocenter.helsinki.fi/bi/lmu/
+358 9 191 59370 fax +358 9 191 59366

-------------- next part --------------
A non-text attachment was scrubbed...
Name: pom.xml
Type: text/xml
Size: 940 bytes
Desc: not available
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140224/d7831e01/attachment.xml>

From hinerm at gmail.com  Tue Feb 25 11:42:34 2014
From: hinerm at gmail.com (Mark Hiner)
Date: Tue, 25 Feb 2014 11:42:34 -0600
Subject: [ImageJ-devel] jython scripting,
	No compatible service: io.scif.SCIFIOService
In-Reply-To: <530B2024.9030307@helsinki.fi>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
Message-ID: <CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>

Hi Harri,

 First of all, I think it's awesome that you're doing this. It's great to
see someone testing things from the scripting side, and it's definitely
revealing some weaknesses. So thank you for that!

 Anyway, when running from the command line:

CP=`find /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name '*.jar'
> |sed ':a;N;$!ba;s/\n/:/g'`
>

You have the right idea here, but your find command prints each jar on its
own line. For use in a Java classpath, you need a single line with each jar
separated by the path separator appropriate for your system (';' for
Windows, ':' for Linux/OSX).

 I used this stack
overflow<http://stackoverflow.com/questions/4729863/using-bash-how-do-you-make-a-classpath-out-of-all-files-in-a-directory>question
to find a good way to format the jar list for the classpath. Note
that they talk about Java 6 supporting jars/* notation, but I couldn't get
that to work with jython. Also, according to this SO
post<http://stackoverflow.com/questions/537682/how-can-i-add-jars-to-the-classpath-when-i-invoke-jython-without-adding-them-t>,
there is a convenient jython flag for passing the java classpath directly
(without having to set environment variables).

 My end result was the following command:

jython -J-cp "$(find find
/home/hajaalin/Software/fiji-20140219/Fiji.app/jars -print0 -name '*.jar' |
tr '\0' ':')blub" macros/imglib0.py
/home/hajaalin/Data/Misha/composite1.ome.tif

Note the "blub" at the end is meaningless, but the tr call has a
terminating ':' character which we probably shouldn't leave open on the
classpath. (e.g. JAR:JAR:JAR:JAR:blub is preferable to JAR:JAR:JAR:JAR: )

So, this ran for me and mostly worked! However, even though the image
opened I did get some errors along the way, I believe related to the error
you saw when trying to run your script from Fiji - SCIFIO 0.9.2 has some
breaking API changes in it, and it looks like some downstream jars weren't
updated as part of Fiji.

If you run this using the pom.xml dependency trick that you came up with in
your second e-mail, I didn't get any exceptions when running from the
command line. But I will work on getting the Fiji dependencies straightened
out so that you can use them, or run using Fiji directly.

Thanks again for working on scripts like this. Let us know if you run into
any more problems.

- Mark


On Mon, Feb 24, 2014 at 4:34 AM, Harri J??linoja <
harri.jaalinoja at helsinki.fi> wrote:

> Hi again,
>
> here's my second try: I made a pom.xml (attached) and retrieved dependency
> jar files with:
>
> mvn dependency:copy-dependencies
>
>
> But I still get the same error as before:
>
> CP=`find /home/hajaalin/Software/mvn-IJ2/target/dependency -name '*.jar'
> |sed ':a;N;$!ba;s/\n/:/g'`
> jython -Dpython.path=$CP /home/hajaalin/Software/fiji-
> 20140219/Fiji.app/macros/imglib0.py /home/hajaalin/Data/Misha/
> composite1.ome.tif
>
> [WARNING] Class pool is empty: forgot to call Thread#setClassLoader?
> Traceback (most recent call last):
>   File "/home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib0.py",
> line 16, in <module>
>
>     io = ImgOpener()
>     at org.scijava.service.ServiceHelper.loadService(
> ServiceHelper.java:218)
> ...
>
> java.lang.IllegalArgumentException: java.lang.IllegalArgumentException:
> No compatible service: io.scif.SCIFIOService
>
>
> Now it's maybe only a matter of getting the versions for pom-scijava and
> ij-app right. How can I find out which version to use?
>
> Thanks,
> Harri
>
>
>
> On 21/02/14 13:25, Harri J??linoja wrote:
>
>> Hi,
>>
>> I started to learn about ImgLib2 for the purpose of creating scripts I
>> can run headlessly. I would like to use jython since I already used that
>> with ImageJ1. First I downloaded a recent Fiji version. My idea was that
>> this would be the easiest way to get the dependencies (scifio, imglib2
>> etc.) right.
>>
>> mkdir fiji-20140219
>> cd fiji-20140219/
>> wget http://jenkins.imagej.net/job/Stable-Fiji/
>> lastSuccessfulBuild/artifact/fiji-linux64.tar.gz
>> tar xf fiji-linux64.tar.gz
>>
>>
>> Then I just put all the jar files in the Fiji distribution in one long
>> variable and gave that as the classpath for Jython
>> CP=`find /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name
>> '*.jar' |sed ':a;N;$!ba;s/\n/:/g'`
>>
>> Here's my test script:
>>
>> ----- imglib0.py ------
>> import sys
>>
>> #from io.scif.config import SCIFIOConfig
>> from io.scif.config import *
>> from io.scif.img import ImgIOException,ImgOpener
>>
>> from java.io import File
>>
>> from net.imglib2.img import Img
>> from net.imglib2.img.display.imagej import ImageJFunctions
>> from net.imglib2.type import NativeType
>> from net.imglib2.type.numeric import RealType
>>
>> filename = sys.argv[1]
>>
>> io = ImgOpener()
>> config = SCIFIOConfig()
>> config.imgOpenerSetImgModes( SCIFIOConfig.ImgMode.CELL )
>> img = io.openImg(filename)
>>
>> ImageJFunctions.show( img )
>> ---------------------------
>>
>>
>> When I run it, I get an error I've seen on the list before:
>>
>> hajaalin at biotek973:~/Software/fiji-20140219/Fiji.app$ jython
>> -Dpython.path=$CP macros/imglib0.py /home/hajaalin/Data/Misha/
>> composite1.ome.tif
>> [WARNING] Class pool is empty: forgot to call Thread#setClassLoader?
>> Traceback (most recent call last):
>>   File "macros/imglib0.py", line 16, in <module>
>>     io = ImgOpener()
>>     at org.scijava.service.ServiceHelper.loadService(
>> ServiceHelper.java:218)
>>     at org.scijava.service.ServiceHelper.loadService(
>> ServiceHelper.java:172)
>>     at org.scijava.service.ServiceHelper.loadServices(
>> ServiceHelper.java:149)
>>     at org.scijava.Context.<init>(Context.java:179)
>>     at org.scijava.Context.<init>(Context.java:121)
>>     at org.scijava.Context.<init>(Context.java:109)
>>     at io.scif.img.AbstractImgIOComponent.<init>(
>> AbstractImgIOComponent.java:59)
>>     at io.scif.img.ImgOpener.<init>(ImgOpener.java:94)
>>     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native
>> Method)
>>     at sun.reflect.NativeConstructorAccessorImpl.newInstance(
>> NativeConstructorAccessorImpl.java:57)
>>     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(
>> DelegatingConstructorAccessorImpl.java:45)
>>     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
>>     at org.python.core.PyReflectedConstructor.constructProxy(
>> PyReflectedConstructor.java:163)
>>
>> java.lang.IllegalArgumentException: java.lang.IllegalArgumentException:
>> No compatible service: io.scif.SCIFIOService
>>
>>
>> If I try to run the script via Fiji, I don't get even that far:
>>
>> hajaalin at biotek973:~/Software/fiji-20140219/Fiji.app$ ./ImageJ-linux64
>> macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
>> Traceback (most recent call last):
>>   File "macros/imglib0.py", line 4, in <module>
>>     from io.scif.config import *
>> ImportError: No module named io
>>
>>
>> So now my questions are:
>> 1. Is there a better way to get all the dependency jars?
>> 2. Is there something wrong with my general setup (jython + script +
>> required jars)?
>>
>>
>> Thanks, best regards,
>> Harri
>>
>>
>
> --
> __________________________________________________
> Harri J??linoja
> Light Microscopy Unit
> Institute of Biotechnology, University of Helsinki
> http://www.biocenter.helsinki.fi/bi/lmu/
> +358 9 191 59370 fax +358 9 191 59366
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140225/de09ebc5/attachment.html>

From Johannes.Schindelin at gmx.de  Tue Feb 25 12:57:24 2014
From: Johannes.Schindelin at gmx.de (Johannes Schindelin)
Date: Tue, 25 Feb 2014 19:57:24 +0100 (CET)
Subject: [ImageJ-devel] jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
Message-ID: <alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>

Hi Mark,

On Tue, 25 Feb 2014, Mark Hiner wrote:

>  First of all, I think it's awesome that you're doing this. It's great to
> see someone testing things from the scripting side, and it's definitely
> revealing some weaknesses. So thank you for that!
> 
>  Anyway, when running from the command line:
> 
> CP=`find /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name '*.jar'
> > |sed ':a;N;$!ba;s/\n/:/g'`

Please note that calling the ImageJ launcher with a .py script will
magically do the right thing:

	~/Software/fiji-*/Fiji.app/ImageJ-linux64 my-script.py

If you want to know what command-line would correspond to this invocation,
just add --dry-run.

Ciao,
Dscho


From hinerm at gmail.com  Tue Feb 25 13:07:44 2014
From: hinerm at gmail.com (Mark Hiner)
Date: Tue, 25 Feb 2014 13:07:44 -0600
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
Message-ID: <CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>

Hi Johannes,

On Tue, Feb 25, 2014 at 12:57 PM, Johannes Schindelin <
Johannes.Schindelin at gmx.de> wrote:

> Please note that calling the ImageJ launcher with a .py script will
> magically do the right thing:
>
>         ~/Software/fiji-*/Fiji.app/ImageJ-linux64 my-script.py
>

Thanks! Do note though that this is similarly not working right now for
Harri's use case, as it is not properly interpreting
SCIFIOConfig.ImgMode.CELL. The only way I could get it to work was running
jython directly.

- Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140225/892b107f/attachment.html>

From hinerm at gmail.com  Tue Feb 25 14:00:35 2014
From: hinerm at gmail.com (Mark Hiner)
Date: Tue, 25 Feb 2014 14:00:35 -0600
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
Message-ID: <CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>

P.S. Harri I wanted to apologize if your original script did properly
format the classpath.. I tested it on OSX and becase of sed differences it
didn't appear to work to me. When I booted up a linux vm and ran it there
though, the output did look correct, so I am not sure why it wasn't working
for you - as the exception you saw definitely looked like a classpath
error. If the -J-cp + subshell command I posted in my original reply
doesn't work though, please let me know.


On Tue, Feb 25, 2014 at 1:07 PM, Mark Hiner <hinerm at gmail.com> wrote:

> Hi Johannes,
>
> On Tue, Feb 25, 2014 at 12:57 PM, Johannes Schindelin <
> Johannes.Schindelin at gmx.de> wrote:
>
>> Please note that calling the ImageJ launcher with a .py script will
>> magically do the right thing:
>>
>>         ~/Software/fiji-*/Fiji.app/ImageJ-linux64 my-script.py
>>
>
> Thanks! Do note though that this is similarly not working right now for
> Harri's use case, as it is not properly interpreting
> SCIFIOConfig.ImgMode.CELL. The only way I could get it to work was running
> jython directly.
>
> - Mark
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140225/3e9b625c/attachment.html>

From harri.jaalinoja at helsinki.fi  Wed Feb 26 04:28:18 2014
From: harri.jaalinoja at helsinki.fi (=?ISO-8859-1?Q?Harri_J=E4=E4linoja?=)
Date: Wed, 26 Feb 2014 12:28:18 +0200
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
Message-ID: <530DC1C2.6070304@helsinki.fi>

Hi Mark and Johannes,

thanks for your replies, good to know I'm on the right track :)

The classpath variable does look correct:
hajaalin at biotek973:~/Software/mvn-IJ2$ echo $CP
/home/hajaalin/Software/mvn-IJ2/target/dependency/ij-core-2.0.0-beta-7.7.jar:/home/hajaalin/Software/mvn-IJ2/target/dependency/base64-2.3.8.jar:/home/hajaalin/S 
...

I have Ubuntu 12.04 and Jython 2.5.1+, there is no -J-cp option. I was 
wondering if I maybe specified a wrong property with -D, so I tried also 
python.jythonc.classpath 
(http://manpages.ubuntu.com/manpages/precise/man5/jython.conf.5.html), 
but then the io classes were not found at all. So jython 
-Dpython.path=$JARLIST seems correct. I picked it up from the same SO 
post you also found.

Just to be sure, the SCIFIOService class is in a jar that's on the list:
java.lang.IllegalArgumentException: java.lang.IllegalArgumentException: 
No compatible service: io.scif.SCIFIOService
hajaalin at biotek973:~/Software/mvn-IJ2$ jar tvf 
target/dependency/scifio-0.9.2.jar |grep SCIFIOService
    150 Fri Feb 14 16:24:24 EET 2014 io/scif/SCIFIOService.class


Which linux vm and Jython version did you use? Did you get the image to 
open also there? I'll try and install Jython 2.5.3.

Harri


On 25/02/14 22:00, Mark Hiner wrote:
> P.S. Harri I wanted to apologize if your original script did properly 
> format the classpath.. I tested it on OSX and becase of sed 
> differences it didn't appear to work to me. When I booted up a linux 
> vm and ran it there though, the output did look correct, so I am not 
> sure why it wasn't working for you - as the exception you saw 
> definitely looked like a classpath error. If the -J-cp + subshell 
> command I posted in my original reply doesn't work though, please let 
> me know.
>
>
> On Tue, Feb 25, 2014 at 1:07 PM, Mark Hiner <hinerm at gmail.com 
> <mailto:hinerm at gmail.com>> wrote:
>
>     Hi Johannes,
>
>     On Tue, Feb 25, 2014 at 12:57 PM, Johannes Schindelin
>     <Johannes.Schindelin at gmx.de <mailto:Johannes.Schindelin at gmx.de>>
>     wrote:
>
>         Please note that calling the ImageJ launcher with a .py script
>         will
>         magically do the right thing:
>
>         ~/Software/fiji-*/Fiji.app/ImageJ-linux64 my-script.py
>
>
>     Thanks! Do note though that this is similarly not working right
>     now for Harri's use case, as it is not properly interpreting
>     SCIFIOConfig.ImgMode.CELL. The only way I could get it to work was
>     running jython directly.
>
>     - Mark
>
>


-- 
__________________________________________________
Harri J??linoja
Light Microscopy Unit
Institute of Biotechnology, University of Helsinki
http://www.biocenter.helsinki.fi/bi/lmu/
+358 9 191 59370 fax +358 9 191 59366

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140226/762d1b8b/attachment.html>

From hinerm at gmail.com  Wed Feb 26 08:41:33 2014
From: hinerm at gmail.com (Mark Hiner)
Date: Wed, 26 Feb 2014 08:41:33 -0600
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <530DC1C2.6070304@helsinki.fi>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
	<530DC1C2.6070304@helsinki.fi>
Message-ID: <CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>

Hi Harri,

java.lang.
> IllegalArgumentException: java.lang.IllegalArgumentException: No
> compatible service: io.scif.SCIFIOService
> hajaalin at biotek973:~/Software/
> mvn-IJ2$ jar tvf target/dependency/scifio-0.9.2.jar |grep SCIFIOService
>    150 Fri Feb 14 16:24:24 EET 2014 io/scif/SCIFIOService.class
>

So this exception may be slightly misleading. SCIFIOService is a marker
interface for all the services that are part of SCIFIO. When an
org.scijava.Context is initialized as it is here, it's typically given a
set of base service interfaces and then loads all implementations of that
service. So it seems like the Context knows about the SCIFIOService
interface, but didn't discover any implementations (things like
DefaultFormatService, DefaultImgUtilityService).

 So this brings me to my next point: I think there is either a) a bug in
jython where annotations are not preserved or b) a bug with the class
loading logic used by Fiji/IJ2. I am leaning towards a) right now.

 I am using an Ubuntu 12.04 64-bit VM. I installed Jython 2.5.3, but I
suspect you can get this working with 2.5.1.

 Anyway, I went back to OSX and tested jython with the -Dpython.path
option, and got the same missing service exception. But! If I set
$CLASSPATH (java automatically picks up the $CLASSPATH environment
variable) and run the equivalent of:

jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif

it works! Thus I believe that python.path has a bug and although jython
supports discovery of classes on python.path, it does not preserve their
annotations (or some similar metadata is being lost).

So instead of setting CP and passing it via -Dpython.path, just use:

export CLASSPATH=`find /home/hajaalin/Software/fiji-20140219/Fiji.app/jars
-name '*.jar' |sed ':a;N;$!ba;s/\n/:/g'`

A simple rule of thumb is, try running a random SCIFIO class like "java
io.scif.SCIFIOService" from the command line. If you get a NoClassDef
error, your CLASSPATH is not configured correctly. If you get a
"NoSuchMethodError: main", your CLASSPATH is correct and your jython will
pick up all the desired classes.

Moving on...

jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif

^ That then works a bit better with my CLASSPATH set, except I get a
different runtime error about how ImgMode.CELL can't be coerced to ImgMode.
(same error I get when running using Fiji).

I notice that you aren't actually using the SCIFIOConfig you construct, so
if you delete those lines and I'm finally able to open an image. The
SCIFIOConfig isn't strictly necessary either - SCIFIO will open it as a
CellImg automatically if it needs to. I will try to investigate further as
to how to get the types working for a nested enum in jython..

You may see yet another error message about io.scif.bf.BioFormatsFormat
failing. This is because some jars in Fiji are out of date, but that
shouldn't cause catastrophic failure (it just means that some proprietary
formats won't be supported right now). These jars should be updated this
week.

I hope this helps. Let me know if you can't get this working on your end.

- Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140226/499ccce4/attachment-0001.html>

From harri.jaalinoja at helsinki.fi  Wed Feb 26 09:19:49 2014
From: harri.jaalinoja at helsinki.fi (=?ISO-8859-1?Q?Harri_J=E4=E4linoja?=)
Date: Wed, 26 Feb 2014 17:19:49 +0200
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
	<530DC1C2.6070304@helsinki.fi>
	<CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>
Message-ID: <530E0615.3010507@helsinki.fi>

Hi Mark,

thanks a lot, setting CLASSPATH did the trick, after I removed the 
unnecessary lines. I didn't understand them anyway, I was just parroting 
http://fiji.sc/ImgLib2_Examples.

Now it sort of works, but I still don't see the image. I get an icon 
with the Java guy on the launcher bar, with the image name and "(V) 
(3.1%)". If I click that, all other windows disappear and there a small 
stick-like artefact on the top of the screen, but nothing more.

Good progress anyway, more tomorrow.

Harri

On 26/02/14 16:41, Mark Hiner wrote:
> Hi Harri,
>
>     java.lang.
>     IllegalArgumentException: java.lang.IllegalArgumentException: No
>     compatible service: io.scif.SCIFIOService
>     hajaalin at biotek973:~/Software/
>     mvn-IJ2$ jar tvf target/dependency/scifio-0.9.2.jar |grep
>     SCIFIOService
>        150 Fri Feb 14 16:24:24 EET 2014 io/scif/SCIFIOService.class
>
>
> So this exception may be slightly misleading. SCIFIOService is a 
> marker interface for all the services that are part of SCIFIO. When an 
> org.scijava.Context is initialized as it is here, it's typically given 
> a set of base service interfaces and then loads all implementations of 
> that service. So it seems like the Context knows about the 
> SCIFIOService interface, but didn't discover any implementations 
> (things like DefaultFormatService, DefaultImgUtilityService).
>
>  So this brings me to my next point: I think there is either a) a bug 
> in jython where annotations are not preserved or b) a bug with the 
> class loading logic used by Fiji/IJ2. I am leaning towards a) right now.
>
>  I am using an Ubuntu 12.04 64-bit VM. I installed Jython 2.5.3, but I 
> suspect you can get this working with 2.5.1.
>
>  Anyway, I went back to OSX and tested jython with the -Dpython.path 
> option, and got the same missing service exception. But! If I set 
> $CLASSPATH (java automatically picks up the $CLASSPATH environment 
> variable) and run the equivalent of:
>
> jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
>
> it works! Thus I believe that python.path has a bug and although 
> jython supports discovery of classes on python.path, it does not 
> preserve their annotations (or some similar metadata is being lost).
>
> So instead of setting CP and passing it via -Dpython.path, just use:
>
> export CLASSPATH=`find 
> /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name '*.jar' |sed 
> ':a;N;$!ba;s/\n/:/g'`
>
> A simple rule of thumb is, try running a random SCIFIO class like 
> "java io.scif.SCIFIOService" from the command line. If you get a 
> NoClassDef error, your CLASSPATH is not configured correctly. If you 
> get a "NoSuchMethodError: main", your CLASSPATH is correct and your 
> jython will pick up all the desired classes.
>
> Moving on...
>
> jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
>
> ^ That then works a bit better with my CLASSPATH set, except I get a 
> different runtime error about how ImgMode.CELL can't be coerced to 
> ImgMode. (same error I get when running using Fiji).
>
> I notice that you aren't actually using the SCIFIOConfig you 
> construct, so if you delete those lines and I'm finally able to open 
> an image. The SCIFIOConfig isn't strictly necessary either - SCIFIO 
> will open it as a CellImg automatically if it needs to. I will try to 
> investigate further as to how to get the types working for a nested 
> enum in jython..
>
> You may see yet another error message about 
> io.scif.bf.BioFormatsFormat failing. This is because some jars in Fiji 
> are out of date, but that shouldn't cause catastrophic failure (it 
> just means that some proprietary formats won't be supported right 
> now). These jars should be updated this week.
>
> I hope this helps. Let me know if you can't get this working on your end.
>
> - Mark


-- 
__________________________________________________
Harri J??linoja
Light Microscopy Unit
Institute of Biotechnology, University of Helsinki
http://www.biocenter.helsinki.fi/bi/lmu/
+358 9 191 59370 fax +358 9 191 59366

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140226/96ace526/attachment.html>

From hinerm at gmail.com  Wed Feb 26 09:53:59 2014
From: hinerm at gmail.com (Mark Hiner)
Date: Wed, 26 Feb 2014 09:53:59 -0600
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <530E0615.3010507@helsinki.fi>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
	<530DC1C2.6070304@helsinki.fi>
	<CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>
	<530E0615.3010507@helsinki.fi>
Message-ID: <CA+B=mGpYhgm9b5cj+4D2MMsbiAqDHr-uY3cTb-v_c2NnhXURfQ@mail.gmail.com>

Hi Harri,

thanks a lot, setting CLASSPATH did the trick, after I removed the
> unnecessary lines. I didn't understand them anyway, I was just parroting
> http://fiji.sc/ImgLib2_Examples.
>

The SCIFIOConfig<https://github.com/scifio/scifio/blob/master/scifio/src/main/java/io/scif/config/SCIFIOConfig.java>class
allows control over various aspects of the I/O behavior. In the
example you were copying, it was encouraging images to be opened using the
SCIFIOCell class, which allows for dynamic caching of planes, which is
useful if your dataset won't fit in memory. It's basically a writeable
virtual image. SCIFIO uses a heuristic to check image size vs. available
memory though, and will automatically select CELL mode if the image won't
reasonably be expected to fit.

Anyway, I did a little more experimentation and realized two things:
1) apparently you need to import the fully qualified nested enum path
2) jython seems to not support Java varargs, and always converts them to
array arguments

This is the script that is working for me right now:

import sys

from io.scif.config import SCIFIOConfig
import io.scif.config.SCIFIOConfig.ImgMode
from io.scif.img import ImgIOException,ImgOpener

from java.io import File

from net.imglib2.img import Img
from net.imglib2.img.display.imagej import ImageJFunctions
from net.imglib2.type import NativeType
from net.imglib2.type.numeric import RealType

filename = sys.argv[1]

mode = [io.scif.config.SCIFIOConfig.ImgMode.CELL]
opener = ImgOpener()
config = SCIFIOConfig()
config.imgOpenerSetImgModes( mode )
img = opener.openImg( filename, config )

ImageJFunctions.show( img )

But if you don't want to use the config, like I said, it is not required
unless you find the default behavior to be insufficient. Just wanted to
share my discoveries :)

Now it sort of works, but I still don't see the image. I get an icon with
> the Java guy on the launcher bar, with the image name and "(V) (3.1%)". If
> I click that, all other windows disappear and there a small stick-like
> artefact on the top of the screen, but nothing more.
>

A good litmus test here would be to open your Fiji installation that you're
harvesting your dependencies from, run Help > Switch to Modern Mode, and
try using File > Open on your dataset. That should go through the same/very
similar SCIFIO API you're testing in your jython script.

I mentioned that proprietary formats aren't currently supported by SCIFIO
because of outdated jars in Fiji, but additionally the OME-TIFF support is
probably similarly outdated (since it's not core SCIFIO). The TIFF reader
should still be capable of rendering an ome.tiff correctly, but it's
entirely possible you're running into a bug here.

If the dataset looks OK in Fiji's modern mode, then we at least know
there's something else going on at the jython level. If it looks the same
as when running your script, we know it's just an outdated dependency issue.

Also, feel free to upload your dataset <http://fiji.sc/Upload_Sample_Image>.
I can then take a closer look at what's going on, and see if I can
reproduce the display error you saw.

- Mark


On Wed, Feb 26, 2014 at 9:19 AM, Harri J??linoja <
harri.jaalinoja at helsinki.fi> wrote:

>  Hi Mark,
>
> thanks a lot, setting CLASSPATH did the trick, after I removed the
> unnecessary lines. I didn't understand them anyway, I was just parroting
> http://fiji.sc/ImgLib2_Examples.
>
> Now it sort of works, but I still don't see the image. I get an icon with
> the Java guy on the launcher bar, with the image name and "(V) (3.1%)". If
> I click that, all other windows disappear and there a small stick-like
> artefact on the top of the screen, but nothing more.
>
> Good progress anyway, more tomorrow.
>
> Harri
>
>
> On 26/02/14 16:41, Mark Hiner wrote:
>
>  Hi Harri,
>
> java.lang.
>> IllegalArgumentException: java.lang.IllegalArgumentException: No
>> compatible service: io.scif.SCIFIOService
>>  hajaalin at biotek973:~/Software/
>> mvn-IJ2$ jar tvf target/dependency/scifio-0.9.2.jar |grep SCIFIOService
>>    150 Fri Feb 14 16:24:24 EET 2014 io/scif/SCIFIOService.class
>>
>
>  So this exception may be slightly misleading. SCIFIOService is a marker
> interface for all the services that are part of SCIFIO. When an
> org.scijava.Context is initialized as it is here, it's typically given a
> set of base service interfaces and then loads all implementations of that
> service. So it seems like the Context knows about the SCIFIOService
> interface, but didn't discover any implementations (things like
> DefaultFormatService, DefaultImgUtilityService).
>
>  So this brings me to my next point: I think there is either a) a bug in
> jython where annotations are not preserved or b) a bug with the class
> loading logic used by Fiji/IJ2. I am leaning towards a) right now.
>
>   I am using an Ubuntu 12.04 64-bit VM. I installed Jython 2.5.3, but I
> suspect you can get this working with 2.5.1.
>
>   Anyway, I went back to OSX and tested jython with the -Dpython.path
> option, and got the same missing service exception. But! If I set
> $CLASSPATH (java automatically picks up the $CLASSPATH environment
> variable) and run the equivalent of:
>
>  jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
>
>  it works! Thus I believe that python.path has a bug and although jython
> supports discovery of classes on python.path, it does not preserve their
> annotations (or some similar metadata is being lost).
>
>  So instead of setting CP and passing it via -Dpython.path, just use:
>
>  export CLASSPATH=`find
> /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name '*.jar' |sed
> ':a;N;$!ba;s/\n/:/g'`
>
>  A simple rule of thumb is, try running a random SCIFIO class like "java
> io.scif.SCIFIOService" from the command line. If you get a NoClassDef
> error, your CLASSPATH is not configured correctly. If you get a
> "NoSuchMethodError: main", your CLASSPATH is correct and your jython will
> pick up all the desired classes.
>
>  Moving on...
>
> jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
>
>  ^ That then works a bit better with my CLASSPATH set, except I get a
> different runtime error about how ImgMode.CELL can't be coerced to ImgMode.
> (same error I get when running using Fiji).
>
>  I notice that you aren't actually using the SCIFIOConfig you construct,
> so if you delete those lines and I'm finally able to open an image. The
> SCIFIOConfig isn't strictly necessary either - SCIFIO will open it as a
> CellImg automatically if it needs to. I will try to investigate further as
> to how to get the types working for a nested enum in jython..
>
>  You may see yet another error message about io.scif.bf.BioFormatsFormat
> failing. This is because some jars in Fiji are out of date, but that
> shouldn't cause catastrophic failure (it just means that some proprietary
> formats won't be supported right now). These jars should be updated this
> week.
>
>  I hope this helps. Let me know if you can't get this working on your end.
>
>  - Mark
>
>
>
> --
> __________________________________________________
> Harri J??linoja
> Light Microscopy Unit
> Institute of Biotechnology, University of Helsinkihttp://www.biocenter.helsinki.fi/bi/lmu/+358 9 191 59370 fax +358 9 191 59366
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140226/16b5372b/attachment-0001.html>

From panovr at gmail.com  Thu Feb 27 01:09:53 2014
From: panovr at gmail.com (Yili Zhao)
Date: Thu, 27 Feb 2014 15:09:53 +0800
Subject: [ImageJ-devel] [OT] Visiting Scholar application
Message-ID: <CAHC=qdDw9zJHkiHK7zWxd=73iuaFmhV8qHc=rrq7mnUQYTmNyA@mail.gmail.com>

Dear ImageJ2 Developers,

  my name is Yili Zhao, and I'm from China. I am a common
ImageJ1/ImageJ2/Fiji user and plugin writer.

  Now there is a visiting scholar project which is funded by my country's
department of Education, and the time is one year.

  I want to ask are there developers of ImageJ2 team willing to accept a
visiting scholar for one year (visiting costs will be funded by  the
project), and if someone is willing, I can contribute to ImageJ2/Fiji
development under your instruction like:
  o documents writing
  o test writing
  o tutorial writing

  If you need more information, please contact me by this mail (panovr at
gmail dot com).

  Thanks!

-- 
Yili Zhao
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140227/d28e63a8/attachment.html>

From harri.jaalinoja at helsinki.fi  Thu Feb 27 04:50:14 2014
From: harri.jaalinoja at helsinki.fi (=?ISO-8859-1?Q?Harri_J=E4=E4linoja?=)
Date: Thu, 27 Feb 2014 12:50:14 +0200
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <CA+B=mGpYhgm9b5cj+4D2MMsbiAqDHr-uY3cTb-v_c2NnhXURfQ@mail.gmail.com>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
	<530DC1C2.6070304@helsinki.fi>
	<CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>
	<530E0615.3010507@helsinki.fi>
	<CA+B=mGpYhgm9b5cj+4D2MMsbiAqDHr-uY3cTb-v_c2NnhXURfQ@mail.gmail.com>
Message-ID: <530F1866.6040609@helsinki.fi>

On 26/02/14 17:53, Mark Hiner wrote:
>
> But if you don't want to use the config, like I said, it is not 
> required unless you find the default behavior to be insufficient. Just 
> wanted to share my discoveries :)
>
Hi Mark,

thanks, good to know, also the importing tricks.

>     Now it sort of works, but I still don't see the image. I get an
>     icon with the Java guy on the launcher bar, with the image name
>     and "(V) (3.1%)". If I click that, all other windows disappear and
>     there a small stick-like artefact on the top of the screen, but
>     nothing more.
>
>
> A good litmus test here would be to open your Fiji installation that 
> you're harvesting your dependencies from, run Help > Switch to Modern 
> Mode, and try using File > Open on your dataset. That should go 
> through the same/very similar SCIFIO API you're testing in your jython 
> script.

I downloaded a fresh Fiji today. The image opens with File > Open, but 
all channels and slices end up in one time-series. With the LOCI 
Bio-Formats importer plugin the image opens correctly as a stack of four 
colors.

Then I used the jars from the new Fiji and the script that works for you:

hajaalin at biotek973:~/Software/fiji-20140226$ md5sum fiji-linux64.tar.gz
36e4373297a5a8c0919a7be094b70a30  fiji-linux64.tar.gz
hajaalin at biotek973:~/Software/fiji-20140226$ export CLASSPATH=`find 
/home/hajaalin/Software/fiji-20140226/Fiji.app/jars -name '*.jar' |sed 
':a;N;$!ba;s/\n/:/g'`

With the stack the script crashes:
hajaalin at biotek973:~/Software/fiji-20140226$ jython 
/home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py 
/home/hajaalin/Data/Misha/composite1.ome.tif

First there is one error:
[ERROR] Cannot create plugin: class='io.scif.bf.BioFormatsFormat', 
priority=10000.0, enabled=true, pluginType=Format
java.lang.IllegalAccessError: tried to access field 
io.scif.AbstractFormat.suffixes from class io.scif.bf.BioFormatsFormat
     at io.scif.bf.BioFormatsFormat.<init>(BioFormatsFormat.java:107)
     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native 
Method)
     at 
sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
     at 
sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
     at java.lang.Class.newInstance(Class.java:374)
     at org.scijava.plugin.PluginInfo.createInstance(PluginInfo.java:308)
     at 
org.scijava.plugin.DefaultPluginService.createInstance(DefaultPluginService.java:236)
     at 
org.scijava.plugin.DefaultPluginService.createInstances(DefaultPluginService.java:225)
     at 
org.scijava.plugin.DefaultPluginService.createInstancesOfType(DefaultPluginService.java:216)
     at 
io.scif.services.DefaultFormatService.initializeSingletons(DefaultFormatService.java:369)
     at 
io.scif.services.DefaultFormatService.formats(DefaultFormatService.java:322)
     at 
io.scif.services.DefaultFormatService.getFormatList(DefaultFormatService.java:287)
     at 
io.scif.services.DefaultFormatService.getFormat(DefaultFormatService.java:270)
     at 
io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:91)
     at io.scif.img.ImgOpener.createReader(ImgOpener.java:377)
     at io.scif.img.ImgOpener.openImg(ImgOpener.java:141)
     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
     at 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
     at 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
     at java.lang.reflect.Method.invoke(Method.java:606)
     at 
org.python.core.PyReflectedFunction.__call__(PyReflectedFunction.java:175)
     at org.python.core.PyObject.__call__(PyObject.java:355)
     at org.python.core.PyMethod.__call__(PyMethod.java:215)
     at org.python.core.PyMethod.instancemethod___call__(PyMethod.java:221)
     at org.python.core.PyMethod.__call__(PyMethod.java:206)
     at org.python.core.PyObject.__call__(PyObject.java:414)
     at org.python.core.PyObject.__call__(PyObject.java:418)
     at 
org.python.pycode._pyx0.f$0(/home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py:22)
     at 
org.python.pycode._pyx0.call_function(/home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py)
     at org.python.core.PyTableCode.call(PyTableCode.java:165)
     at org.python.core.PyCode.call(PyCode.java:18)
     at org.python.core.Py.runCode(Py.java:1204)
     at 
org.python.util.PythonInterpreter.execfile(PythonInterpreter.java:200)
     at org.python.util.jython.run(jython.java:246)
     at org.python.util.jython.main(jython.java:129)


And the a problem in the script:
Traceback (most recent call last):
   File 
"/home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py", line 
20, in <module>
     img = opener.openImg( filename, config )
     at 
io.scif.ome.xml.meta.OMEXMLFormat$Checker.<init>(OMEXMLFormat.java:244)
     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native 
Method)
     at 
sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
     at 
sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
     at java.lang.Class.newInstance(Class.java:374)
     at io.scif.AbstractFormat.createObject(AbstractFormat.java:209)
     at 
io.scif.AbstractFormat.createContextualObject(AbstractFormat.java:170)
     at io.scif.AbstractFormat.createChecker(AbstractFormat.java:118)
     at 
io.scif.services.DefaultFormatService.getFormatList(DefaultFormatService.java:288)
     at 
io.scif.services.DefaultFormatService.getFormat(DefaultFormatService.java:270)
     at 
io.scif.services.DefaultInitializeService.initializeReader(DefaultInitializeService.java:91)
     at io.scif.img.ImgOpener.createReader(ImgOpener.java:377)
     at io.scif.img.ImgOpener.openImg(ImgOpener.java:141)
     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
     at 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
     at 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
     at java.lang.reflect.Method.invoke(Method.java:606)

java.lang.NoSuchFieldError: java.lang.NoSuchFieldError: suffixNecessary


With a simple test image I get again the first error, but the script 
runs without problem.

jython /home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py 
/home/hajaalin/Downloads/joo.jpg

At this point there is the Java elf on the toolbar, but no image.



>
> Also, feel free to upload your dataset 
> <http://fiji.sc/Upload_Sample_Image>. I can then take a closer look at 
> what's going on, and see if I can reproduce the display error you saw.
>
I will send the test images and the screenshot.

Harri


> - Mark
>
>
> On Wed, Feb 26, 2014 at 9:19 AM, Harri J??linoja 
> <harri.jaalinoja at helsinki.fi <mailto:harri.jaalinoja at helsinki.fi>> wrote:
>
>     Hi Mark,
>
>     thanks a lot, setting CLASSPATH did the trick, after I removed the
>     unnecessary lines. I didn't understand them anyway, I was just
>     parroting http://fiji.sc/ImgLib2_Examples.
>
>     Now it sort of works, but I still don't see the image. I get an
>     icon with the Java guy on the launcher bar, with the image name
>     and "(V) (3.1%)". If I click that, all other windows disappear and
>     there a small stick-like artefact on the top of the screen, but
>     nothing more.
>
>     Good progress anyway, more tomorrow.
>
>     Harri
>
>
>     On 26/02/14 16:41, Mark Hiner wrote:
>>     Hi Harri,
>>
>>         java.lang.
>>         IllegalArgumentException: java.lang.IllegalArgumentException:
>>         No compatible service: io.scif.SCIFIOService
>>         hajaalin at biotek973:~/Software/
>>         mvn-IJ2$ jar tvf target/dependency/scifio-0.9.2.jar |grep
>>         SCIFIOService
>>            150 Fri Feb 14 16:24:24 EET 2014 io/scif/SCIFIOService.class
>>
>>
>>     So this exception may be slightly misleading. SCIFIOService is a
>>     marker interface for all the services that are part of SCIFIO.
>>     When an org.scijava.Context is initialized as it is here, it's
>>     typically given a set of base service interfaces and then loads
>>     all implementations of that service. So it seems like the Context
>>     knows about the SCIFIOService interface, but didn't discover any
>>     implementations (things like DefaultFormatService,
>>     DefaultImgUtilityService).
>>
>>      So this brings me to my next point: I think there is either a) a
>>     bug in jython where annotations are not preserved or b) a bug
>>     with the class loading logic used by Fiji/IJ2. I am leaning
>>     towards a) right now.
>>
>>      I am using an Ubuntu 12.04 64-bit VM. I installed Jython 2.5.3,
>>     but I suspect you can get this working with 2.5.1.
>>
>>      Anyway, I went back to OSX and tested jython with the
>>     -Dpython.path option, and got the same missing service exception.
>>     But! If I set $CLASSPATH (java automatically picks up the
>>     $CLASSPATH environment variable) and run the equivalent of:
>>
>>     jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
>>
>>     it works! Thus I believe that python.path has a bug and although
>>     jython supports discovery of classes on python.path, it does not
>>     preserve their annotations (or some similar metadata is being lost).
>>
>>     So instead of setting CP and passing it via -Dpython.path, just use:
>>
>>     export CLASSPATH=`find
>>     /home/hajaalin/Software/fiji-20140219/Fiji.app/jars -name '*.jar'
>>     |sed ':a;N;$!ba;s/\n/:/g'`
>>
>>     A simple rule of thumb is, try running a random SCIFIO class like
>>     "java io.scif.SCIFIOService" from the command line. If you get a
>>     NoClassDef error, your CLASSPATH is not configured correctly. If
>>     you get a "NoSuchMethodError: main", your CLASSPATH is correct
>>     and your jython will pick up all the desired classes.
>>
>>     Moving on...
>>
>>     jython macros/imglib0.py /home/hajaalin/Data/Misha/composite1.ome.tif
>>
>>     ^ That then works a bit better with my CLASSPATH set, except I
>>     get a different runtime error about how ImgMode.CELL can't be
>>     coerced to ImgMode. (same error I get when running using Fiji).
>>
>>     I notice that you aren't actually using the SCIFIOConfig you
>>     construct, so if you delete those lines and I'm finally able to
>>     open an image. The SCIFIOConfig isn't strictly necessary either -
>>     SCIFIO will open it as a CellImg automatically if it needs to. I
>>     will try to investigate further as to how to get the types
>>     working for a nested enum in jython..
>>
>>     You may see yet another error message about
>>     io.scif.bf.BioFormatsFormat failing. This is because some jars in
>>     Fiji are out of date, but that shouldn't cause catastrophic
>>     failure (it just means that some proprietary formats won't be
>>     supported right now). These jars should be updated this week.
>>
>>     I hope this helps. Let me know if you can't get this working on
>>     your end.
>>
>>     - Mark
>
>
>     -- 
>     __________________________________________________
>     Harri J??linoja
>     Light Microscopy Unit
>     Institute of Biotechnology, University of Helsinki
>     http://www.biocenter.helsinki.fi/bi/lmu/
>     +358 9 191 59370  <tel:%2B358%209%20191%2059370>  fax+358 9 191 59366  <tel:%2B358%209%20191%2059366>
>
>


-- 
__________________________________________________
Harri J??linoja
Light Microscopy Unit
Institute of Biotechnology, University of Helsinki
http://www.biocenter.helsinki.fi/bi/lmu/
+358 9 191 59370 fax +358 9 191 59366

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140227/d12ef9fd/attachment-0001.html>

From harri.jaalinoja at helsinki.fi  Thu Feb 27 05:04:55 2014
From: harri.jaalinoja at helsinki.fi (=?ISO-8859-1?Q?Harri_J=E4=E4linoja?=)
Date: Thu, 27 Feb 2014 13:04:55 +0200
Subject: [ImageJ-devel] [fiji-devel] Re:  jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <530F1866.6040609@helsinki.fi>
References: <5307379A.4030505@helsinki.fi>
	<530B2024.9030307@helsinki.fi>	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>	<530DC1C2.6070304@helsinki.fi>	<CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>	<530E0615.3010507@helsinki.fi>	<CA+B=mGpYhgm9b5cj+4D2MMsbiAqDHr-uY3cTb-v_c2NnhXURfQ@mail.gmail.com>
	<530F1866.6040609@helsinki.fi>
Message-ID: <530F1BD7.7020607@helsinki.fi>

Hi again,

I tried also with the set of jars I got with the maven and the pom.xml I 
sent earlier:

export CLASSPATH=`find /home/hajaalin/Software/mvn-IJ2/target/dependency 
-name '*.jar' |sed ':a;N;$!ba;s/\n/:/g'`
jython /home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py 
/home/hajaalin/Data/Misha/composite1.ome.tif

Now there are no errors and I get directly the Java elf, but still no image.

Harri

-- 
__________________________________________________
Harri J??linoja
Light Microscopy Unit
Institute of Biotechnology, University of Helsinki
http://www.biocenter.helsinki.fi/bi/lmu/
+358 9 191 59370 fax +358 9 191 59366



From eliceiri at wisc.edu  Thu Feb 27 06:24:22 2014
From: eliceiri at wisc.edu (Kevin W Eliceiri)
Date: Thu, 27 Feb 2014 06:24:22 -0600
Subject: [ImageJ-devel] [OT] Visiting Scholar application
In-Reply-To: <77009a2ac1729.530f2e72@wiscmail.wisc.edu>
References: <CAHC=qdDw9zJHkiHK7zWxd=73iuaFmhV8qHc=rrq7mnUQYTmNyA@mail.gmail.com>
	<7680b3c4c3ee1.530f2df9@wiscmail.wisc.edu>
	<732082f5c0eb9.530f2e36@wiscmail.wisc.edu>
	<77009a2ac1729.530f2e72@wiscmail.wisc.edu>
Message-ID: <770092d5c38be.530eda16@wiscmail.wisc.edu>

Dear Yili,

Thank you for your interest. This is Kevin Eliceiri, Director of LOCI which is lead on the ImageJ project. We do accept visiting scholars if they can provide their own funding. I would be very interested in discussing further. To proceed please send me directly (eliceiri at wisc.edu) your resume, two contacts for references (email addresses is fine) and your statement of interest. As well please include some links to code you have written.


all the best
kevin

On 02/27/14, Yili Zhao 
 wrote:
> Dear ImageJ2 Developers,
> my name is Yili Zhao, and I&#39;m from China. I am a common ImageJ1/ImageJ2/Fiji user and plugin writer.
> 
> 
> Now there is a visiting scholar project which is funded by my country&#39;s department of Education, and the time is one year.
> 
> 
> I want to ask are there developers of ImageJ2 team willing to accept a visiting scholar for one year (visiting costs will be funded by the project), and if someone is willing, I can contribute to ImageJ2/Fiji development under your instruction like:
> o documents writing
> o test writing
> o tutorial writing
> 
> 
> If you need more information, please contact me by this mail (panovr at gmail dot com).
> 
> 
> Thanks! 
> 
> 
> -- 
> Yili Zhao

--
Kevin W. Eliceiri
Director,?Laboratory for Optical and Computational Instrumentation (LOCI)
Departments Cell and Molecular Biology and Biomedical Engineering
Affiliate Principal Investigator, Morgridge Institute for Research (MIR)
Room 271 Animal Sciences,?1675 Observatory Drive,?Madison, WI 53706
Phone: 608-263-6288


From hinerm at gmail.com  Thu Feb 27 12:01:28 2014
From: hinerm at gmail.com (Mark Hiner)
Date: Thu, 27 Feb 2014 12:01:28 -0600
Subject: [ImageJ-devel] [fiji-devel] Re: jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <530F1BD7.7020607@helsinki.fi>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
	<530DC1C2.6070304@helsinki.fi>
	<CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>
	<530E0615.3010507@helsinki.fi>
	<CA+B=mGpYhgm9b5cj+4D2MMsbiAqDHr-uY3cTb-v_c2NnhXURfQ@mail.gmail.com>
	<530F1866.6040609@helsinki.fi> <530F1BD7.7020607@helsinki.fi>
Message-ID: <CA+B=mGoJOTLzj+8J=z9efHh+HynpowXmC72hwz3V16JrcRcezQ@mail.gmail.com>

Hi Harri,

[ERROR] Cannot create plugin: class='io.scif.bf.
> BioFormatsFormat', priority=10000.0, enabled=true, pluginType=Format
> java.lang.IllegalAccessError: tried to access field
> io.scif.AbstractFormat.suffixes from class io.scif.bf.BioFormatsFormat
>

This ugly stack trace comes up from the jar containing BioFormatsFormat,
part of the SCIFIO-BF-Compat
<https://github.com/scifio/scifio-bf-compat>layer, being out of date.
In and of itself, that is not a critical problem
as long as there are other formats that can open your dataset. But
something that should still be fixed, certainly.

at io.scif.ome.xml.meta.OMEXMLFormat$Checker.<init>(OMEXMLFormat.java:244)
> ...
> java.lang.NoSuchFieldError: java.lang.NoSuchFieldError: suffixNecessary
>

Similarly, the OME-Formats
<https://github.com/scifio/ome-formats>component was out of date and
did not adhere to the latest SCIFIO API.
Ideally it would be great to get this working properly as it adds better
support for ome.tiffs.

export CLASSPATH=`find /home/hajaalin/Software/mvn-IJ2/target/dependency
> -name '*.jar' |sed ':a;N;$!ba;s/\n/:/g'`
>
jython /home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py
> /home/hajaalin/Data/Misha/composite1.ome.tif
>

This is tangential, but I feel like I am doing a disservice by using the
command line invocations as examples in my e-mails. You were doing the
exact correct thing by using Fiji.app/ImageJ-linux64 to execute your
script, and that is something I would like to encourage (additionally
because if there are problems using fiji to run your script, I want to
ensure they are fixed).

I will still test with both Fiji and jython directly on my end to ensure
they behave equivalently, but I would encourage you to just stick with
using Fiji for general use, as it takes care of bookkeeping for you and
really should be both simpler and superior.

Now there are no errors and I get directly the Java elf, but still no image.
>

OK, so I uploaded several new components to Fiji this morning to at least
fix the jar skew errors you were seeing (although we won't have perfect
ome.tif support until this
ticket<https://github.com/imagej/imagej/issues/21>is complete -
hopefully soon). I tested on my Linux VM by downloading a
fresh Fiji, and got your datasets (thank you for that!). On my end, I was
able to open both composite1.ome.tif and joo.jpg from all of:

* Fiji (legacy mode)
* IJ2 (Fiji -> Switch to modern mode)
* your script via Fiji
* your script via jython

These datasets definitely look worse from the script than Fiji/IJ2, which
is reasonable since they aren't composited or autoscaled or anything... but
they do look correct to me and opened without error.

Anyway, I hope the latest Fiji works for you. Give it a try and let me know
if you run into any more problems.

Thank you for your persistence!

- Mark


On Thu, Feb 27, 2014 at 5:04 AM, Harri J??linoja <
harri.jaalinoja at helsinki.fi> wrote:

> Hi again,
>
> I tried also with the set of jars I got with the maven and the pom.xml I
> sent earlier:
>
> export CLASSPATH=`find /home/hajaalin/Software/mvn-IJ2/target/dependency
> -name '*.jar' |sed ':a;N;$!ba;s/\n/:/g'`
> jython /home/hajaalin/Software/fiji-20140219/Fiji.app/macros/imglib1.py
> /home/hajaalin/Data/Misha/composite1.ome.tif
>
> Now there are no errors and I get directly the Java elf, but still no
> image.
>
> Harri
>
>
> --
> __________________________________________________
> Harri J??linoja
> Light Microscopy Unit
> Institute of Biotechnology, University of Helsinki
> http://www.biocenter.helsinki.fi/bi/lmu/
> +358 9 191 59370 fax +358 9 191 59366
>
>
> _______________________________________________
> ImageJ-devel mailing list
> ImageJ-devel at imagej.net
> http://imagej.net/mailman/listinfo/imagej-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140227/1f482f40/attachment.html>

From harri.jaalinoja at helsinki.fi  Fri Feb 28 04:24:51 2014
From: harri.jaalinoja at helsinki.fi (=?ISO-8859-1?Q?Harri_J=E4=E4linoja?=)
Date: Fri, 28 Feb 2014 12:24:51 +0200
Subject: [ImageJ-devel] [fiji-devel] Re: jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <CA+B=mGoJOTLzj+8J=z9efHh+HynpowXmC72hwz3V16JrcRcezQ@mail.gmail.com>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
	<530DC1C2.6070304@helsinki.fi>
	<CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>
	<530E0615.3010507@helsinki.fi>
	<CA+B=mGpYhgm9b5cj+4D2MMsbiAqDHr-uY3cTb-v_c2NnhXURfQ@mail.gmail.com>
	<530F1866.6040609@helsinki.fi> <530F1BD7.7020607@helsinki.fi>
	<CA+B=mGoJOTLzj+8J=z9efHh+HynpowXmC72hwz3V16JrcRcezQ@mail.gmail.com>
Message-ID: <531063F3.1050102@helsinki.fi>

On 27/02/14 20:01, Mark Hiner wrote:
> These datasets definitely look worse from the script than Fiji/IJ2, 
> which is reasonable since they aren't composited or autoscaled or 
> anything... but they do look correct to me and opened without error.
>
> Anyway, I hope the latest Fiji works for you. Give it a try and let me 
> know if you run into any more problems.
>
> Thank you for your persistence!

Hi Mark,

thank you, the latest Fiji works! The composite image is completely 
black, but that could be just a scaling issue. Or did it look better for 
you?

  I'll keep using Fiji for running the scripts from now on, I don't see 
any benefit in managing the dependencies myself now that you got it 
working.

So now I should get to the real work and learn the ImgLib2 API and 
convert my existing script :)

Best,
Harri

-- 
__________________________________________________
Harri J??linoja
Light Microscopy Unit
Institute of Biotechnology, University of Helsinki
http://www.biocenter.helsinki.fi/bi/lmu/
+358 9 191 59370 fax +358 9 191 59366



From hinerm at gmail.com  Fri Feb 28 06:42:19 2014
From: hinerm at gmail.com (Mark Hiner)
Date: Fri, 28 Feb 2014 06:42:19 -0600
Subject: [ImageJ-devel] [fiji-devel] Re: jython scripting,
 No compatible service: io.scif.SCIFIOService
In-Reply-To: <531063F3.1050102@helsinki.fi>
References: <5307379A.4030505@helsinki.fi> <530B2024.9030307@helsinki.fi>
	<CA+B=mGpO-BYDGo47hKHFNka+JD27dDenMGZBMVe64quaRqAjiw@mail.gmail.com>
	<alpine.DEB.1.00.1402251955480.14982@s15462909.onlinehome-server.info>
	<CA+B=mGp2wuFtB_Ke39eChJEAfFDHXA0jE-NuagUJ8HD1Sj=Bjw@mail.gmail.com>
	<CA+B=mGrsTKrj2eyDuwguWhu2xoUcgVUdD8LBa9YqkcppAFjxbA@mail.gmail.com>
	<530DC1C2.6070304@helsinki.fi>
	<CA+B=mGqTdmpvrC5CLj67pbbnbjWqGn+G4VBhncFpHvBZj_0H4A@mail.gmail.com>
	<530E0615.3010507@helsinki.fi>
	<CA+B=mGpYhgm9b5cj+4D2MMsbiAqDHr-uY3cTb-v_c2NnhXURfQ@mail.gmail.com>
	<530F1866.6040609@helsinki.fi> <530F1BD7.7020607@helsinki.fi>
	<CA+B=mGoJOTLzj+8J=z9efHh+HynpowXmC72hwz3V16JrcRcezQ@mail.gmail.com>
	<531063F3.1050102@helsinki.fi>
Message-ID: <CA+B=mGo8ypd=Bd4k8j56eKe+TBD98HBj9S-t=NcDX5TDT74uOg@mail.gmail.com>

Hi Harri,

 thank you, the latest Fiji works! The composite image is completely black,
> but that could be just a scaling issue. Or did it look better for you?


Yeah it looked the same for me.. but the number of planes looks accurate.
:) I suspect it is just a scaling issue.

So now I should get to the real work and learn the ImgLib2 API and convert
> my existing script :)
>

Good luck! Let us know if you have any more troubles!

Thanks again for the feedback,
- Mark


On Fri, Feb 28, 2014 at 4:24 AM, Harri J??linoja <
harri.jaalinoja at helsinki.fi> wrote:

> On 27/02/14 20:01, Mark Hiner wrote:
>
>> These datasets definitely look worse from the script than Fiji/IJ2, which
>> is reasonable since they aren't composited or autoscaled or anything... but
>> they do look correct to me and opened without error.
>>
>> Anyway, I hope the latest Fiji works for you. Give it a try and let me
>> know if you run into any more problems.
>>
>> Thank you for your persistence!
>>
>
> Hi Mark,
>
> thank you, the latest Fiji works! The composite image is completely black,
> but that could be just a scaling issue. Or did it look better for you?
>
>  I'll keep using Fiji for running the scripts from now on, I don't see any
> benefit in managing the dependencies myself now that you got it working.
>
> So now I should get to the real work and learn the ImgLib2 API and convert
> my existing script :)
>
> Best,
>
> Harri
>
> --
> __________________________________________________
> Harri J??linoja
> Light Microscopy Unit
> Institute of Biotechnology, University of Helsinki
> http://www.biocenter.helsinki.fi/bi/lmu/
> +358 9 191 59370 fax +358 9 191 59366
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://imagej.net/pipermail/imagej-devel/attachments/20140228/de8fd3f2/attachment.html>

